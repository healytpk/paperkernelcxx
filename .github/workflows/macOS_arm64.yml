name: macOS_arm64

on:
  push:
    branches: '*'
  pull_request:
    branches: '*'
  workflow_dispatch:
    branches: '*'

jobs:
  build:

    runs-on: macos-15

    steps:
    - name: Install newer version of compiler
      run: |
        brew update
        brew install llvm
        echo "PATH=$(brew --prefix llvm)/bin:$PATH" >> $GITHUB_ENV
        echo "LDFLAGS=-L$(brew --prefix llvm)/lib" >> $GITHUB_ENV
        echo "CPPFLAGS=-I$(brew --prefix llvm)/include" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        brew update
        brew install libarchive xapian

    - name: Install boost
      uses: MarkusJx/install-boost@main
      id: install-boost
      with:
      # REQUIRED: Specify the required boost version
      # A list of supported versions can be found here:
      # https://github.com/MarkusJx/prebuilt-boost/blob/main/versions-manifest.json
          boost_version: 1.88.0
          boost_install_dir: /tmp/paperkernelcxx/boost/

    - uses: actions/checkout@v4
    - name: Install wxWidgets
      run: |
        curl -L https://download.osgeo.org/libtiff/tiff-4.6.0.tar.gz --output tiff-4.6.0.tar.gz
        tar xzf tiff-4.6.0.tar.gz
        cd tiff-4.6.0
        ./configure
        make -j$(getconf _NPROCESSORS_ONLN)
        sudo make install
        cd ..
        curl -L https://github.com/wxWidgets/wxWidgets/releases/download/v3.2.8.1/wxWidgets-3.2.8.1.tar.bz2 --output wxWidgets-3.2.8.1.tar.bz2
        tar xjf wxWidgets-3.2.8.1.tar.bz2
        cd wxwidgets-3.2.8.1
        mkdir buildOSX
        cd buildOSX
        ../configure
        make -j$(getconf _NPROCESSORS_ONLN)
        sudo make install
        cd ../..
        wx-config --list
        wx-config --cxxflags
        wx-config --libs

    - name: Run CMake
      run: |
        cd build
        chmod +x ./cmAppleMac.sh
        ./cmAppleMac.sh
        cd ..
      env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}

    - name: Run GNU Make with GNU compiler
      run: |
        cd build
        mkdir -p bin
        mkdir -p bin/Release
        cd Mac
        make VERBOSE=1 -j$(getconf _NPROCESSORS_ONLN)
        cd ../..
        cp wxWidgets-3.2.8.1/buildOSX/lib/*.dylib build/bin/main_program.app/Contents/MacOS
        cp all_cxx_papers_individual_zst.tar build/bin/main_program.app/Contents/MacOS
        cp database_xapian_for_all_cxx_papers build/bin/main_program.app/Contents/MacOS
        mv build/bin/main_program.app/Contents/MacOS/main_program build/bin/main_program.app/Contents/MacOS/paperkernelcxx.bin
        cp licenses/* build/bin/main_program.app/Contents/MacOS/

    - uses: actions/upload-artifact@v4
      with:
        name: artifacts_macOS_arm64
        path: build/bin/main_program.app/Contents/MacOS
