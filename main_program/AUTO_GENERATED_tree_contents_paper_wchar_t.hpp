{
    {    1u, { { 0u, L"Remove Deprecated Use of the register Keyword", L"Author1903" }, { 1u, L"Remove Deprecated Use of the register Keyword", L"Author2074" }, } },
    {    2u, { { 0u, L"Remove Deprecated operator++(bool)", L"Author632" }, { 1u, L"Remove Deprecated operator++(bool)", L"Author1450" }, } },
    {    3u, { { 0u, L"Removing Deprecated Exception Specifications from C++17", L"Author1811" }, { 1u, L"Removing Deprecated Exception Specifications from C++17", L"Author1513" }, { 2u, L"Removing Deprecated Exception Specifications from C++17", L"Author217" }, { 3u, L"Removing Deprecated Exception Specifications from C++17", L"Author112" }, { 4u, L"Removing Deprecated Exception Specifications from C++17", L"Author496" }, { 5u, L"Removing Deprecated Exception Specifications from C++17", L"Author1429" }, } },
    {    4u, { { 0u, L"Remove Deprecated iostreams aliases", L"Author1167" }, { 1u, L"Remove Deprecated iostreams aliases", L"Author1592" }, } },
    {    5u, { { 0u, L"Adopt 'not_fn' from Library Fundamentals 2 for C++17", L"Author520" }, { 1u, L"Adopt 'not_fn' from Library Fundamentals 2 for C++17", L"Author387" }, { 2u, L"Adopt 'not_fn' from Library Fundamentals 2 for C++17", L"Author310" }, { 3u, L"Adopt 'not_fn' from Library Fundamentals 2 for C++17", L"Author143" }, { 4u, L"Adopt 'not_fn' from Library Fundamentals 2 for C++17", L"Author539" }, } },
    {    6u, { { 0u, L"Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17", L"Author638" }, } },
    {    7u, { { 0u, L"Constant View: A proposal for a 'std::as_const' helper function template", L"Author1149" }, { 1u, L"Constant View: A proposal for a 'std::as_const' helper function template", L"Author935" }, } },
    {    8u, { { 0u, L"Title1622", L"Author2091" }, } },
    {    9u, { { 0u, L"P0009r00 : Polymorphic Multidimensional Array View", L"H. Carter" }, { 1u, L"P0009r1 : Polymorphic Multidimensional Array Reference", L"H. Carter" }, { 2u, L"P0009r2 : Polymorphic Multidimensional Array Reference", L"H. Carter" }, { 3u, L"P0009r3 : Polymorphic Multidimensional Array Reference", L"H. Carter" }, { 4u, L"P0009r4 : Polymorphic Multidimensional Array Reference", L"H. Carter" }, { 5u, L"P0009r5 : Polymorphic Multidimensional Array Reference", L"H. Carter" }, { 8u, L"<code>mdspan</code>: A Non-Owning Multidimensional Array Reference", L"H. Carter" }, { 9u, L"<code>mdspan</code>: A Non-Owning Multidimensional Array Reference", L"H. Carter" }, { 10u, L"MDSPAN", L"Christian Trott" }, { 11u, L"MDSPAN", L"Christian Trott" }, { 12u, L"MDSPAN", L"Christian Trott" }, { 13u, L"MDSPAN", L"1 [presumably" }, { 14u, L"MDSPAN", L"1 [presumably" }, { 15u, L"MDSPAN", L"1 [presumably" }, { 16u, L"MDSPAN", L"1 [presumably" }, { 17u, L"MDSPAN", L"1 [presumably" }, { 18u, L"MDSPAN", L"1 [presumably" }, } },
    {   10u, { { 0u, L"concurrent random number", L"Author975" }, } },
    {   11u, { { 0u, L"papers/P0011R0.md - Grip", L"Jamie Allsop" }, } },
    {   12u, { { 0u, L"Make exception-specifications be part of the type system, version 4", L"Author21" }, { 1u, L"Make exception-specifications be part of the type system, version 5", L"Author655" }, } },
    {   13u, { { 0u, L"Logical Operator Type Traits", L"Jonathan Wakely" }, { 1u, L"Logical Operator Type Traits (revision 1)", L"Jonathan Wakely" }, } },
    {   14u, { { 0u, L"Multiline Optiion", L"Nozomu KatM" }, { 1u, L"Proposal to add the multiline option to std::regex for its ECMAScript engine", L"Author650" }, } },
    {   15u, { { 0u, L"ISO/IEC JTC1/SC22/WG21p0015r0", L"David Stone" }, } },
    {   17u, { { 0u, L"Extension to aggregate initialization", L"Oleg Smolsky" }, { 1u, L"Extension to aggregate initialization", L"Oleg Smolsky" }, } },
    {   18u, { { 0u, L"P0018r00 : Lambda Capture of *this by Value", L"H. Carter" }, { 1u, L"P0018r1 : Lambda Capture of *this by Value", L"H. Carter" }, { 2u, L"Capturing <tt>*this</tt>", L"H. Carter" }, { 3u, L"Capturing <tt>*this</tt>", L"H. Carter" }, } },
    {   19u, { { 0u, L"P0019r00 : Atomic View", L"H. Carter" }, { 1u, L"P0019R1 : Atomic View", L"H. Carter" }, { 2u, L"P0019r2 : Atomic View", L"H. Carter" }, { 3u, L"P0019r3 : Atomic View", L"H. Carter" }, { 4u, L"P0019r4 : Atomic View", L"H. Carter" }, { 5u, L"P0019r5 : Atomic View", L"H. Carter" }, } },
    {   20u, { { 0u, L"P0020r00 : Floating Point Atomic View", L"H. Carter" }, { 1u, L"P0020r1 : Floating Point Atomic", L"H. Carter" }, { 2u, L"P0020r2 : Floating Point Atomic", L"H. Carter" }, { 3u, L"P0020r3 : Floating Point Atomic", L"H. Carter" }, { 4u, L"P0020r4 : Floating Point Atomic", L"H. Carter" }, { 5u, L"P0020r5 : Floating Point Atomic", L"H. Carter" }, } },
    {   21u, { { 0u, L"C++ Technical Specification", L"Author1538" }, } },
    {   22u, { { 0u, L"Proxy Iterators for the Ranges Extensions", L"Eric Niebler" }, { 1u, L"Proxy Iterators for the Ranges Extensions", L"Eric Niebler" }, { 2u, L"Proxy Iterators for the Ranges Extensions", L"Eric Niebler" }, } },
    {   23u, { { 0u, L"Title1510", L"Author1948" }, } },
    {   24u, { { 0u, L"Title115", L"Author134" }, { 1u, L"Title1616", L"Author2083" }, { 2u, L"Title1701", L"Author2224" }, } },
    {   25u, { { 0u, L"clamp: An algorithm to 'clamp' a value between a pair of boundary values (Draft) -", L"Author1524" }, { 1u, L"clamp: An algorithm to 'clamp' a value between a pair of boundary values -", L"Author1572" }, } },
    {   26u, { { 0u, L"P0026 - MultiRange-Based For Loop Proposal - v1.1.0", L"Matthew McAtamney-Greenwood" }, } },
    {   27u, { { 0u, L"named_template", L"Troy Korjuslommi" }, } },
    {   28u, { { 0u, L"Title421", L"Author513" }, { 1u, L"Title43", L"Author43" }, { 2u, L"Title1588", L"Author2046" }, { 3u, L"Using scoped attributes", L"Author906" }, { 4u, L"Using attribute namespaces without repetition", L"Author2147" }, } },
    {   29u, { { 0u, L"A Unified Proposal for Composable Hashing", L"Author1943" }, } },
    {   30u, { { 0u, L"Microsoft Word - P0030R0.docx", L"Benson Ma" }, { 1u, L"Title128", L"Benson Ma" }, } },
    {   31u, { { 0u, L"A Proposal to Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access", L"Author1165" }, } },
    {   32u, { { 0u, L"Title1411", L"Vicente J" }, { 1u, L"Title1548", L"Vicente J" }, { 2u, L"P0032R2", L"Vicente J" }, { 3u, L"Title1571", L"Vicente J" }, } },
    {   33u, { { 0u, L"Re-enabling shared_from_this", L"Jonathan Wakely" }, { 1u, L"Re-enabling shared_from_this", L"Jonathan Wakely" }, } },
    {   34u, { { 0u, L"P0034 Civil Time", L"Author1128" }, } },
    {   35u, { { 0u, L"Dynamic memory allocation for over-aligned data", L"Author12" }, { 1u, L"Dynamic memory allocation for over-aligned data", L"Author656" }, { 2u, L"Dynamic memory allocation for over-aligned data", L"Author98" }, { 3u, L"Dynamic memory allocation for over-aligned data", L"Author1039" }, { 4u, L"Dynamic memory allocation for over-aligned data", L"Author1665" }, } },
    {   36u, { { 0u, L"Title119", L"Thibaut Le" }, } },
    {   37u, { { 0u, L"Fixed_Point_Library_Proposal", L"Author1232" }, { 1u, L"Title479", L"Author590" }, { 2u, L"Title164", L"Author193" }, { 3u, L"Title7", L"Author7" }, { 4u, L"Title1314", L"Author1694" }, { 5u, L"Title948", L"Author1207" }, { 6u, L"Title969", L"Author1248" }, { 7u, L"p0037r7", L"Author1925" }, } },
    {   38u, { { 0u, L"Untitled Document.md", L"Sean Middleditch" }, } },
    {   39u, { { 0u, L"Untitled Document.md", L"Author2212" }, } },
    {   40u, { { 0u, L"Untitled Document.md", L"Author324" }, { 1u, L"P0040R1", L"Author1315" }, { 2u, L"P0040R2", L"Author1508" }, { 3u, L"P0040R3", L"Author770" }, } },
    {   41u, { { 0u, L"Untitled Document.md", L"Author840" }, } },
    {   42u, { { 0u, L"recover_cast.pages", L"Author898" }, } },
    {   43u, { { 0u, L"function_container.pages", L"Author1595" }, } },
    {   44u, { { 0u, L"unwinding_state.pages", L"Author932" }, } },
    {   45u, { { 0u, L"function.pages", L"Author558" }, { 1u, L"function.pages", L"Author1363" }, } },
    {   46u, { { 0u, L"Change is_transparent to metafunction", L"\u00A0\u00A0" }, { 1u, L"Change is_transparent to metafunction (Revision 1)", L"\u00A0\u00A0" }, } },
    {   47u, { { 0u, L"Title453", L"Michael Wong" }, } },
    {   48u, { { 0u, L"Title646", L"Michael Wong" }, } },
    {   50u, { { 0u, L"Title186", L"Vicente J" }, } },
    {   51u, { { 0u, L"Title1476", L"Vicente J" }, { 1u, L"Title168", L"Vicente J" }, { 2u, L"P0051R2", L"Vicente J" }, { 3u, L"p0051r3", L"Vicente J" }, } },
    {   52u, { { 0u, L"Title1089", L"Author1398" }, { 1u, L"Title835", L"Author1040" }, { 2u, L"Title1002", L"Author1299" }, { 3u, L"C++ International Standard", L"Author820" }, { 4u, L"Title614", L"Author757" }, { 5u, L"Title716", L"Author887" }, { 9u, L"Title452", L"Author559" }, { 10u, L"Title218", L"Author260" }, } },
    {   53u, { { 0u, L"C++ Synchronized Buffered Ostream", L"Author2105" }, { 1u, L"C++ Synchronized Buffered Ostream", L"Author579" }, { 2u, L"C++ Synchronized Buffered Ostream", L"Author1561" }, { 3u, L"DRAFT C++ Synchronized Buffered Ostream", L"Author452" }, { 4u, L"DRAFT C++ Synchronized Buffered Ostream", L"Author1729" }, { 5u, L"Title1445", L"Author1864" }, } },
    {   54u, { { 0u, L"D0054_ReportsFromTheField", L"Author826" }, } },
    {   55u, { { 0u, L"D0055_BetterTogether", L"Author473" }, { 1u, L"D0055_BetterTogether", L"Author1253" }, } },
    {   56u, { { 0u, L"D0056_SoftKeywords", L"Author1519" }, } },
    {   57u, { { 0u, L"C++ Technical Specification", L"Gor Nishanov" }, { 1u, L"C++ Technical Specification", L"Gor Nishanov" }, { 2u, L"C++ Technical Specification", L"Gor Nishanov" }, { 3u, L"C++ Technical Specification", L"Gor Nishanov" }, { 4u, L"C++ Technical Specification", L"Gor Nishanov" }, { 5u, L"C++ Technical Specification", L"Gor Nishanov" }, } },
    {   58u, { { 0u, L"An Interface for Abstracting Execution | P0058R0", L"Author1334" }, { 1u, L"An Interface for Abstracting Execution | P0058R1", L"Author571" }, } },
    {   59u, { { 0u, L"Title598", L"Author742" }, { 1u, L"Title881", L"Author1094" }, { 2u, L"Title1138", L"Author1459" }, { 3u, L"Title928", L"Author1172" }, { 4u, L"Title1156", L"Author1485" }, } },
    {   60u, { { 0u, L"Function Object-Based Overloading of Operator Dot", L"Author2" }, } },
    {   61u, { { 0u, L"Feature-testing preprocessor predicates for C++17", L"Author1996" }, { 1u, L"Feature-testing preprocessor predicates for C++17", L"Author1127" }, } },
    {   62u, { { 0u, L"When should compilers optimize atomics?", L"Author1177" }, { 1u, L"When should compilers optimize atomics?", L"Author1960" }, } },
    {   63u, { { 0u, L"C++17 should refer to C11 instead of C99", L"Hans-J. Boehm" }, { 1u, L"C++17 should refer to C11 instead of C99", L"Author139" }, { 2u, L"C++17 should refer to C11 instead of C99", L"Author855" }, { 3u, L"C++17 should refer to C11 instead of C99", L"Author1931" }, } },
    {   65u, { { 0u, L"movable-il.pages", L"Author664" }, } },
    {   66u, { { 0u, L"values.pages", L"Author1589" }, } },
    {   67u, { { 0u, L"Elementary string conversions", L"Author1337" }, { 1u, L"Elementary string conversions, revision 1", L"Author1540" }, { 2u, L"Elementary string conversions, revision 2", L"Author1035" }, { 3u, L"Elementary string conversions, revision 2", L"Author2214" }, { 4u, L"Elementary string conversions, revision 4", L"Author550" }, { 5u, L"Elementary string conversions, revision 5", L"Author1406" }, } },
    {   68u, { { 0u, L"Title1268", L"Andrew Tomazos" }, } },
    {   69u, { { 0u, L"Title1067", L"Ben Sander" }, } },
    {   70u, { { 0u, L"D0070_ReturnBeforeAwait", L"Author1808" }, } },
    {   71u, { { 0u, L"D0071_KeywordsForCoroutines", L"Author40" }, } },
    {   72u, { { 0u, L"Title1472", L"Torvald Riegel" }, { 1u, L"Title1496", L"Torvald Riegel" }, } },
    {   73u, { { 0u, L"Title675", L"Torvald Riegel" }, { 1u, L"Title973", L"Torvald Riegel" }, { 2u, L"Title937", L"Torvald Riegel" }, } },
    {   74u, { { 0u, L"Making std::owner_less more flexible", L"Author1378" }, } },
    {   75u, { { 0u, L"Title1481", L"Author1915" }, { 1u, L"Template Library for Parallel For Loops", L"Author934" }, { 2u, L"Template Library for Parallel For Loops", L"Arch D" }, } },
    {   76u, { { 0u, L"Title231", L"Author280" }, { 1u, L"Vector and Wavefront Policies", L"Author42" }, { 2u, L"Vector and Wavefront Policies", L"Author1863" }, { 3u, L"Vector and Wavefront Policies", L"Author55" }, { 4u, L"Vector and Wavefront Policies", L"Author783" }, } },
    {   77u, { { 0u, L"is_callable, the missing INVOKE related trait", L"Agust\u00EDn Berg\u00E9" }, { 1u, L"is_callable, the missing INVOKE related trait", L"Agust\u00EDn Berg\u00E9" }, { 2u, L"is_callable, the missing INVOKE related trait", L"Agust\u00EDn Berg\u00E9" }, } },
    {   78u, { { 0u, L"Title338", L"Author398" }, } },
    {   79u, { { 0u, L"Title743", L"Author923" }, } },
    {   80u, { { 0u, L"Title991", L"Michael Park" }, } },
    {   81u, { { 0u, L"Title1051", L"Author1355" }, } },
    {   82u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1993" }, { 1u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1498" }, { 2u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1849" }, } },
    {   83u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author309" }, { 1u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author739" }, { 2u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1664" }, { 3u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author526" }, } },
    {   84u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1229" }, { 1u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1090" }, { 2u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author417" }, } },
    {   85u, { { 0u, L"Oo... adding a coherent character sequence to start octal-literals", L"Author1069" }, } },
    {   86u, { { 0u, L"Variant design review.", L"Author627" }, } },
    {   87u, { { 0u, L"Variant: a type-safe union without undefined behavior (v2).", L"Author1246" }, } },
    {   88u, { { 0u, L"Variant: a type-safe union that is rarely invalid (v5).", L"Author1601" }, { 1u, L"Variant: a type-safe union (v6).", L"Axel Naumann" }, { 2u, L"Variant: a type-safe union for C++17 (v7).", L"Axel Naumann" }, { 3u, L"Variant: a type-safe union for C++17 (v8).", L"Axel Naumann" }, } },
    {   89u, { { 0u, L"On the Effective Use Of Memory Allocators", L"John Lakos" }, { 1u, L"On Quantifying Memory-Allocation Strategies (Revision 2)", L"John Lakos" }, } },
    {   90u, { { 0u, L"ISO/IEC JTC1/SC22/WG21p0090r0", L"Stephan T" }, } },
    {   91u, { { 0u, L"Template parameter deduction for constructors (Rev. 2)", L"Author1156" }, { 1u, L"Template argument deduction for class templates (Rev. 4)", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 2u, L"Template argument deduction for class templates (Rev. 5)", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 3u, L"Template argument deduction for class templates (Rev. 6)", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 4u, L"Template argument deduction for class templates (Rev. 7)", L"\u00A0\u00A0\u00A0Mike Spertus" }, } },
    {   92u, { { 0u, L"Polishing chrono", L"Author406" }, { 1u, L"Polishing chrono", L"Author1901" }, } },
    {   93u, { { 0u, L"Title1251", L"David Sankel" }, } },
    {   94u, { { 0u, L"Title280", L"David Sankel" }, } },
    {   95u, { { 0u, L"Title1591", L"David Sankel" }, { 1u, L"Title1447", L"David Sankel" }, { 2u, L"language_variant", L"David Sankel" }, } },
    {   96u, { { 0u, L"Feature-testing recommendations for C++", L"Author721" }, { 1u, L"Feature-testing recommendations for C++", L"Author1121" }, { 2u, L"Feature-testing recommendations for C++", L"Author712" }, { 3u, L"Feature-testing recommendations for C++", L"Author838" }, { 4u, L"Feature-testing recommendations for C++", L"Author926" }, { 5u, L"Feature-testing recommendations for C++", L"Author2115" }, } },
    {   97u, { { 0u, L"Use Cases for Thread-Local Storage", L"Author936" }, } },
    {   98u, { { 0u, L"Title1079", L"Author1388" }, { 1u, L"Title636", L"Author782" }, } },
    {   99u, { { 0u, L"A low-level API for stackful context switching", L"Oliver Kowalke" }, { 1u, L"A low-level API for stackful context switching", L"Oliver Kowalke" }, } },
    {  100u, { { 0u, L"Comparison in C++", L"Author348" }, { 1u, L"Comparison in C++", L"Author772" }, { 2u, L"Comparison in C++", L"Lawrence Crowl" }, } },
    {  101u, { { 0u, L"An Outline of a C++ Numbers Technical Specification", L"Author592" }, } },
    {  102u, { { 0u, L"C++ Parametric Number Type Aliases", L"Author344" }, } },
    {  103u, { { 0u, L"Overflow-Detecting and Double-Wide Arithmetic Operations", L"Author1838" }, { 1u, L"Overflow-Detecting and Double-Wide Arithmetic Operations", L"Lawrence Crowl" }, } },
    {  104u, { { 0u, L"Multi-Word Integer Operations and Types", L"Author1268" }, { 1u, L"Multi-Word Integer Operations and Types", L"Lawrence Crowl" }, } },
    {  105u, { { 0u, L"Rounding and Overflow in C++", L"Author113" }, { 1u, L"Rounding and Overflow in C++", L"Lawrence Crowl" }, } },
    {  106u, { { 0u, L"C++ Binary Fixed-Point Arithmetic", L"Author1101" }, } },
    {  107u, { { 0u, L"Title926", L"Louis Dionne" }, } },
    {  108u, { { 0u, L"Skeleton Proposal for Thread-Local Storage (TLS)", L"Author537" }, { 1u, L"Skeleton Proposal for Thread-Local Storage (TLS)", L"Author1057" }, } },
    {  109u, { { 0u, L"Function Aliases + Extended Inheritance = Opaque Typedefs", L"Author634" }, } },
    {  110u, { { 0u, L"P0110: Implementing the strong guarantee for variant<> assignment", L"Anthony" }, } },
    {  112u, { { 0u, L"Networking Library (Revision 6)", L"Christopher Kohlhoff" }, { 1u, L"Networking Library (Revision 7)", L"Christopher Kohlhoff" }, } },
    {  113u, { { 0u, L"Executors and Asynchronous Operations, Revision 2", L"Christopher Kohlhoff" }, } },
    {  114u, { { 0u, L"Microsoft Word - Resumable Expressions rev 2.docm", L"Author1464" }, } },
    {  116u, { { 0u, L"Boolean conversion for Standard Library types", L"Robert Kawulak" }, } },
    {  117u, { { 0u, L"Generic to_string/to_wstring functions", L"Robert Kawulak" }, } },
    {  118u, { { 0u, L"Title564", L"Author702" }, } },
    {  119u, { { 0u, L"Title133", L"Author157" }, { 1u, L"Title212", L"Author253" }, { 2u, L"Title1066", L"Author1374" }, } },
    {  120u, { { 0u, L"constexpr unions and common initial sequences", L"Anthony" }, } },
    {  121u, { { 0u, L"C++ Technical Specification", L"Author1604" }, } },
    {  122u, { { 0u, L"Title256", L"Neil MacIntosh" }, { 1u, L"Microsoft Word - P0122R1", L"Neil MacIntosh" }, { 2u, L"Microsoft Word - P0122R2.docx", L"Neil MacIntosh" }, { 3u, L"Microsoft Word - D0122R3.docx", L"Neil MacIntosh" }, { 4u, L"Microsoft Word - P0122R3", L"Neil MacIntosh" }, { 5u, L"Microsoft Word - P0122R3", L"Neil MacIntosh" }, } },
    {  123u, { { 0u, L"Title1230", L"Neil MacIntosh" }, { 1u, L"Microsoft Word - P0123R1", L"Neil MacIntosh" }, { 2u, L"Microsoft Word - P0123R2.docx", L"Neil MacIntosh" }, } },
    {  124u, { { 0u, L"Linux-Kernel Memory Model", L"Author2069" }, { 1u, L"Linux-Kernel Memory Model", L"Author1809" }, { 2u, L"Linux-Kernel Memory Model", L"Author133" }, { 3u, L"Linux-Kernel Memory Model", L"Author2012" }, { 4u, L"Linux-Kernel Memory Model", L"Author986" }, { 5u, L"Linux-Kernel Memory Model", L"Author1004" }, { 6u, L"Linux-Kernel Memory Model", L"Author238" }, { 7u, L"Linux-Kernel Memory Model", L"Author1633" }, { 8u, L"Linux-Kernel Memory Model", L"Author1239" }, } },
    {  125u, { { 0u, L"Untitled Document.md", L"Author1878" }, } },
    {  126u, { { 0u, L"Title288", L"Olivier Giroux" }, { 1u, L"Untitled", L"Olivier Giroux" }, { 2u, L"synchronic", L"Olivier Giroux" }, } },
    {  127u, { { 0u, L"Declaring non-type template arguments with auto", L"James Touton" }, { 1u, L"Declaring non-type template arguments with auto", L"James Touton" }, { 2u, L"Declaring non-type template parameters with auto", L"James Touton" }, } },
    {  128u, { { 0u, L"constexpr_if", L"Author1261" }, { 1u, L"constexpr if", L"Author2203" }, } },
    {  129u, { { 0u, L"We cannot (realistically) get rid of throwing moves", L"Author368" }, } },
    {  130u, { { 0u, L"Title17", L"Author20" }, } },
    {  131u, { { 0u, L"Title819", L"Author1025" }, } },
    {  132u, { { 0u, L"Non-throwing container operations", L"Author1488" }, { 1u, L"Non-throwing container operations", L"Author1331" }, } },
    {  133u, { { 0u, L"Putting noexcept(auto) on hold, again", L"Author1486" }, } },
    {  134u, { { 0u, L"Introducing a name for brace-or-equal-initializers for non-static data members", L"Author1007" }, } },
    {  135u, { { 0u, L"Guaranteed copy elision through simplified value categories", L"Author663" }, { 1u, L"Wording for guaranteed copy elision through simplified value categories", L"Author1247" }, } },
    {  136u, { { 0u, L"N4429: Rewording inheriting constructors (core issue 1941 et al)", L"Author698" }, { 1u, L"Rewording inheriting constructors (core issue 1941 et al)", L"Author289" }, } },
    {  137u, { { 0u, L"Core Issue 1776: Replacement of class objects containing reference members", L"Author154" }, { 1u, L"Core Issue 1776: Replacement of class objects containing reference members (et al)", L"Author2227" }, } },
    {  138u, { { 0u, L"Title717", L"gdr@microsoft.com" }, { 1u, L"Title126", L"gdr@microsoft.com" }, { 2u, L"Title513", L"gdr@microsoft.com" }, } },
    {  141u, { { 0u, L"Title1353", L"gdr@microsoft.com" }, } },
    {  142u, { { 0u, L"Title1244", L"gdr@microsoft.com" }, } },
    {  143u, { { 0u, L"Title455", L"Author562" }, { 1u, L"Title1551", L"Author2011" }, { 2u, L"Title1576", L"Author2037" }, } },
    {  144u, { { 0u, L"Title481", L"Herb Sutter" }, { 1u, L"Title258", L"Herb Sutter" }, { 2u, L"Title533", L"Herb Sutter" }, } },
    {  145u, { { 0u, L"Title1271", L"gdr@microsoft.com" }, { 1u, L"Title84", L"gdr@microsoft.com" }, { 2u, L"Title1052", L"gdr@microsoft.com" }, { 3u, L"Title1515", L"gdr@microsoft.com" }, } },
    {  146u, { { 0u, L"Regular Void", L"Author1742" }, { 1u, L"Regular Void (Revision 1)", L"Author1332" }, } },
    {  147u, { { 0u, L"The Use and Implementation of Contracts", L"Author988" }, } },
    {  148u, { { 0u, L"Title669", L"Pablo Halpern" }, } },
    {  149u, { { 0u, L"Title400", L"Author481" }, { 1u, L"Title1261", L"Jeff Snyder" }, } },
    {  151u, { { 0u, L"Title81", L"Andrew Tomazos" }, } },
    {  152u, { { 0u, L"P0152R0 constexpr atomic<T>::is_always_lock_free", L"Olivier Giroux" }, { 1u, L"P0152R1 constexpr atomic<T>::is_always_lock_free", L"Olivier Giroux" }, } },
    {  153u, { { 0u, L"P0153R0 std::atomic_object_fence(mo, T&&...)", L"Olivier Giroux" }, } },
    {  154u, { { 0u, L"P0154R0 constexpr std::hardware_{constructive,destructive}_interference_size", L"JF Bastien" }, { 1u, L"P0154R1 constexpr std::hardware_{constructive,destructive}_interference_size", L"JF Bastien" }, } },
    {  155u, { { 0u, L"P0155R0 | Task Block R5", L"Author752" }, } },
    {  156u, { { 0u, L"Variadic lock_guard (Rev. 2)", L"Author1939" }, { 1u, L"Variadic lock_guard (Rev. 4)", L"Author1291" }, { 2u, L"Variadic lock_guard (Rev. 5)", L"Author2036" }, } },
    {  157u, { { 0u, L"Handling Disappointment in C++", L"Author2128" }, } },
    {  158u, { { 0u, L"papers/P0158R0.md - Grip", L"Jamie Allsop" }, } },
    {  159u, { { 0u, L"Technical Specification for C++ Extensions for Concurrency, DTS", L"Author797" }, } },
    {  160u, { { 0u, L"Wording for removing defaults for unary folds", L"Author1777" }, } },
    {  161u, { { 0u, L"Title1539", L"Author1986" }, } },
    {  162u, { { 0u, L"Microsoft Word - Response to P0055R0.docm", L"Author995" }, } },
    {  163u, { { 0u, L"shared_ptr::weak_type", L"Author519" }, } },
    {  164u, { { 0u, L"Core Motions", L"Author2119" }, } },
    {  165u, { { 0u, L"C++ Standard Library Issues to be moved in Kona", L"Author1514" }, { 1u, L"C++ Standard Library Issues to be moved in Jacksonville", L"Author1946" }, { 2u, L"C++ Standard Library Issues to be moved in Oulu", L"Author1385" }, { 3u, L"C++ Standard Library Issues to be moved in Issaquah", L"Author1153" }, { 4u, L"C++ Standard Library Issues to be moved in Kona", L"Author1652" }, } },
    {  166u, { { 0u, L"Title144", L"Author167" }, } },
    {  167u, { { 0u, L"Core \"ready\" Issues", L"Author2054" }, { 1u, L"Core \"ready\" Issues", L"Author1328" }, { 2u, L"Core \"ready\" Issues", L"Author1471" }, } },
    {  169u, { { 0u, L"regex with Unicode character types", L"Author1661" }, } },
    {  170u, { { 0u, L"Title822", L"Author1028" }, { 1u, L"Title1343", L"Author1739" }, } },
    {  171u, { { 0u, L"P0171_ResponseToP0114", L"Author1362" }, } },
    {  172u, { { 0u, L"Abominable Function Types", L"Author577" }, } },
    {  174u, { { 0u, L"Deprecating Vestigial Library Parts in C++17", L"Author777" }, { 1u, L"Deprecating Vestigial Library Parts in C++17", L"Author1469" }, { 2u, L"Deprecating Vestigial Library Parts in C++17", L"Author1754" }, } },
    {  175u, { { 0u, L"Synopses for the C library", L"Author88" }, { 1u, L"Synopses for the C library", L"Author1596" }, } },
    {  177u, { { 0u, L"Cleaning up allocator_traits", L"Author1168" }, { 1u, L"Cleaning up allocator_traits", L"Author1619" }, { 2u, L"Cleaning up allocator_traits", L"Author972" }, } },
    {  178u, { { 0u, L"Allocators and swap", L"Author1409" }, { 1u, L"Allocators and swap", L"Alisdair Meredith" }, } },
    {  180u, { { 0u, L"Reserve a New Library Namespace Future Standardization", L"Author1250" }, { 1u, L"Reserve a New Library Namespace Future Standardization", L"Author1839" }, { 2u, L"Reserve a New Library Namespace for Future Standardization", L"Author937" }, } },
    {  181u, { { 0u, L"Ordered By Default", L"Author1930" }, { 1u, L"Ordered By Default", L"Author2197" }, } },
    {  184u, { { 0u, L"Generalizing the Range-Based For Loop", L"Eric Niebler" }, } },
    {  185u, { { 0u, L"Adding [nothrow-]swappable traits (Revision 2)", L"Daniel Kr\u00FCgler" }, { 1u, L"Adding [nothrow-]swappable traits (Revision 3)", L"Daniel Kr\u00FCgler" }, } },
    {  186u, { { 0u, L"Iterator Facade -", L"Author1852" }, } },
    {  187u, { { 0u, L"Title470", L"Andrew Tomazos" }, { 1u, L"Title1024", L"Andrew Tomazos" }, } },
    {  188u, { { 0u, L"Title611", L"Andrew Tomazos" }, { 1u, L"Title1352", L"Andrew Tomazos" }, } },
    {  189u, { { 0u, L"Title1333", L"Andrew Tomazos" }, { 1u, L"Title1690", L"Andrew Tomazos" }, } },
    {  190u, { { 0u, L"Title411", L"Author492" }, { 1u, L"Title107", L"Author120" }, { 2u, L"Title586", L"Author726" }, { 3u, L"Title799", L"Author987" }, { 4u, L"Title521", L"Author639" }, } },
    {  191u, { { 1u, L"VirtualMemberFunctionPointerComparison", L"Daniel Markus" }, } },
    {  192u, { { 0u, L"Title389", L"Author464" }, { 1u, L"Title867", L"Boris Fomitchev" }, { 4u, L"`short float` and fixed-size floating point types", L"Micha\u0142 Dominiak" }, } },
    {  193u, { { 0u, L"P0193R0 Where is Vectorization in C++", L"JF Bastien" }, { 1u, L"P0193R1 Where is Vectorization in C++", L"JF Bastien" }, } },
    {  194u, { { 0u, L"Title1448", L"Matus" }, { 1u, L"P0194R1 Static reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 2u, L"P0194R2 Static reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 3u, L"Static reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 4u, L"Static reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 5u, L"Static reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, } },
    {  195u, { { 0u, L"Title1608", L"Author2076" }, { 1u, L"Title233", L"Author283" }, { 2u, L"Pack expansions in using-declarations", L"Author999" }, } },
    {  196u, { { 0u, L"P0196R0", L"Vicente J" }, { 1u, L"P0196R1", L"Vicente J" }, { 2u, L"P0196R2", L"Vicente J" }, { 3u, L"p0196r3", L"Vicente J" }, { 4u, L"p0196r4", L"Vicente J" }, { 5u, L"p0196r5", L"Vicente J" }, } },
    {  197u, { { 0u, L"P0197R0", L"Vicente J" }, } },
    {  198u, { { 0u, L"P0198R0", L"Vicente J" }, } },
    {  199u, { { 0u, L"P0199R0", L"Vicente J" }, } },
    {  200u, { { 0u, L"A Proposal to Add YCombinator to the Standard Library", L"Author670" }, } },
    {  201u, { { 0u, L"Title1245", L"Author1606" }, { 1u, L"Title461", L"Author569" }, { 2u, L"Title166", L"Author196" }, { 3u, L"Title1498", L"Author1937" }, { 4u, L"Title930", L"Author1182" }, { 5u, L"Title297", L"Author351" }, { 6u, L"<code>polymorphic_value</code>: A Polymorphic Value Type for C++", L"Jonathan B" }, } },
    {  202u, { { 0u, L"A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <cstring> Headers", L"Author1137" }, { 1u, L"A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers", L"Author2149" }, { 2u, L"A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers", L"Author137" }, { 3u, L"A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers", L"Author694" }, } },
    {  203u, { { 0u, L"Considerations for the design of expressive portable SIMD vectors", L"Author1174" }, } },
    {  205u, { { 0u, L"P0205R0 Allow Seeding Random Number Engines with std::random_device", L"Moritz Klammler" }, { 1u, L"P0205R1 Efficient Seeding of Random Number Engines", L"Moritz Klammler" }, } },
    {  206u, { { 0u, L"Discussion about std::thread and RAII", L"Author534" }, { 1u, L"A joining thread", L"Author127" }, } },
    {  207u, { { 0u, L"Ruminations on lambda captures", L"Author57" }, } },
    {  208u, { { 0u, L"Copy-Swap Helper", L"Author706" }, { 1u, L"Copy-Swap Transaction", L"Author806" }, } },
    {  209u, { { 0u, L"P0209r0 | make_from_tuple: apply for construction", L"Author2061" }, { 1u, L"P0209r1 | make_from_tuple: apply for construction", L"Author302" }, { 2u, L"P0209r2 | make_from_tuple: apply for construction", L"Author957" }, } },
    {  210u, { { 0u, L"A light-weight, compact dynamic array", L"Author1625" }, } },
    {  211u, { { 0u, L"Allocator-aware library wrappers for dynamic allocation", L"Author1726" }, { 1u, L"Allocator-aware library wrappers for dynamic allocation", L"Author1826" }, { 2u, L"Allocator-aware library wrappers for dynamic allocation", L"Author461" }, { 3u, L"Allocator-aware library wrappers for dynamic allocation", L"Author725" }, } },
    {  212u, { { 0u, L"Title780", L"Andrew Tomazos" }, { 1u, L"Title385", L"Andrew Tomazos" }, } },
    {  213u, { { 0u, L"On the Effective Use Of Memory Allocators", L"Graham Bleaney" }, } },
    {  214u, { { 0u, L"Data-Parallel Vector Types & Operations [P0214R0]", L"Matthias Kretz" }, { 1u, L"Data-Parallel Vector Types & Operations [P0214R1]", L"Matthias Kretz" }, { 2u, L"Data-Parallel Vector Types & Operations [P0214R2]", L"Matthias Kretz" }, { 3u, L"Data-Parallel Vector Types & Operations [P0214R3]", L"Matthias Kretz" }, { 4u, L"Data-Parallel Vector Types & Operations [P0214R4]", L"Matthias Kretz" }, { 5u, L"Data-Parallel Vector Types & Operations [P0214R5]", L"Matthias Kretz" }, } },
    {  215u, { { 0u, L"Title889", L"Greg Miller" }, } },
    {  216u, { { 0u, L"Title462", L"Greg Miller" }, } },
    {  217u, { { 0u, L"Wording for structured bindings", L"Author652" }, { 1u, L"Wording for structured bindings", L"Author1710" }, { 2u, L"Wording for structured bindings", L"Author866" }, { 3u, L"Wording for structured bindings", L"Author563" }, } },
    {  218u, { { 0u, L"C++17 Filesystem -", L"Author1097" }, { 1u, L"C++17 Filesystem -", L"Author931" }, } },
    {  219u, { { 0u, L"Relative Paths", L"Author2129" }, { 1u, L"Relative Paths", L"Author1190" }, } },
    {  220u, { { 0u, L"C++17 Fundamentals -", L"Author573" }, { 1u, L"C++17 Fundamentals -", L"Author749" }, } },
    {  221u, { { 0u, L"Default comparisons", L"Author2208" }, { 1u, L"Proposed wording for default comparisons, revision 3", L"Author2107" }, { 2u, L"Proposed wording for default comparisons, revision 4", L"Author1086" }, } },
    {  222u, { { 0u, L"Allowing Anonymous Structs as Return Values", L"Matthew Woehlke" }, } },
    {  223u, { { 0u, L"Class Namespace", L"Matthew Woehlke" }, } },
    {  224u, { { 0u, L"Implicit Return Type", L"Matthew Woehlke" }, } },
    {  225u, { { 0u, L"Why I want Concepts, and why I want them sooner rather than later", L"Author1965" }, } },
    {  226u, { { 0u, L"Mathematical Special Functions for C++17, v4", L"Author1704" }, { 1u, L"Mathematical Special Functions for C++17, v5", L"Author33" }, } },
    {  227u, { { 0u, L"Title1440", L"Thibaut Le" }, } },
    {  228u, { { 0u, L"Java Printing.pdf", L"Robert Ramey" }, { 3u, L"unique_function: a move-only std::function", L"Ryan McDougall" }, } },
    {  229u, { { 0u, L"Title426", L"Michael Wong" }, } },
    {  230u, { { 0u, L"Title1272", L"Michael Wong" }, } },
    {  231u, { { 0u, L"Title909", L"Victor Luchangco" }, } },
    {  232u, { { 0u, L"Title1262", L"Paul McKenney" }, } },
    {  233u, { { 0u, L"Title1403", L"Maged M" }, { 1u, L"Title276", L"Maged M" }, { 2u, L"Title306", L"Maged M" }, { 3u, L"Title651", L"Maged M" }, { 4u, L"Title1637", L"Maged M" }, { 5u, L"Title1564", L"Maged M" }, } },
    {  234u, { { 0u, L"Title610", L"Michael Wong" }, } },
    {  235u, { { 0u, L"Title1700", L"Author2223" }, } },
    {  236u, { { 0u, L"Title1538", L"Michael Wong" }, } },
    {  237u, { { 0u, L"Title918", L"Author1155" }, { 1u, L"Wording for fundamental bit manipulation utilities", L"Author1927" }, { 2u, L"Wording for fundamental bit manipulation utilities", L"Author1066" }, { 3u, L"Wording for fundamental bit manipulation utilities", L"Author162" }, { 4u, L"Wording for fundamental bit manipulation utilities", L"Author1317" }, { 5u, L"Wording for fundamental bit manipulation utilities", L"Author476" }, { 9u, L"P0237R9", L"Author2058" }, { 10u, L"P0237R10", L"Author1651" }, } },
    {  238u, { { 0u, L"Return type deduction and SFINAE", L"\u00A0\u00A0" }, { 1u, L"Return type deduction and SFINAE", L"\u00A0\u00A0" }, } },
    {  239u, { { 0u, L"Title1585", L"Tony Van" }, } },
    {  240u, { { 0u, L"Why I want Concepts, but why they should come later rather than sooner", L"Author2163" }, } },
    {  241u, { { 0u, L"Remove Future-Related Explicit Specializations for Void", L"Author1713" }, } },
    {  242u, { { 0u, L"Standard Library Support for Void", L"Author1307" }, } },
    {  244u, { { 0u, L"Text_view: A C++ concepts and range based character encoding and code point enumeration library", L"Tom Honermann" }, { 1u, L"Text_view: A C++ concepts and range based character encoding and code point enumeration library", L"Tom Honermann" }, { 2u, L"Text_view: A C++ concepts and range based character encoding and code point enumeration library", L"Tom Honermann" }, } },
    {  245u, { { 0u, L"Hexadecimal floating literals for C++", L"Author1532" }, { 1u, L"Hexadecimal floating literals for C++", L"Author1806" }, } },
    {  246u, { { 0u, L"Title712", L"John Lakos" }, } },
    {  247u, { { 0u, L"Title1243", L"Author1603" }, } },
    {  248u, { { 0u, L"Untitled", L"Author2201" }, } },
    {  249u, { { 0u, L"Input Devices for 2d GraPhics", L"Michael McLaughlin" }, { 2u, L"Input Devices for 2d GraPhics", L"Michael McLaughlin" }, } },
    {  250u, { { 0u, L"Wording improvements for initialization and thread ids (CWG 2046)", L"Hans-J. Boehm" }, { 1u, L"Wording improvements for initialization and thread ids (CWG 2046)", L"Hans-J. Boehm" }, { 2u, L"Wording improvements for initialization and thread ids (CWG 2046, 1784)", L"Hans-J. Boehm" }, { 3u, L"D0250R3: Wording improvements for initialization and thread ids (CWG 2046, 1784)", L"Hans-J. Boehm" }, } },
    {  251u, { { 0u, L"Title593", L"Author735" }, } },
    {  252u, { { 0u, L"Title189", L"Author229" }, { 1u, L"Title1093", L"Author1403" }, { 2u, L"Title1425", L"Author1834" }, } },
    {  253u, { { 0u, L"BMH Wording", L"Author458" }, { 1u, L"P0253R1", L"Author1945" }, } },
    {  254u, { { 0u, L"Integrating string_view", L"Author2117" }, { 1u, L"Integrating string_viewR1", L"Author1426" }, { 2u, L"Integrating string_viewR2", L"Author2063" }, } },
    {  255u, { { 0u, L"C++ International Standard", L"Cleiton Santoia" }, } },
    {  256u, { { 0u, L"C++ International Standard", L"Cleiton Santoia" }, } },
    {  257u, { { 0u, L"Microsoft Word - P0257R0", L"Neil MacIntosh" }, { 1u, L"Microsoft Word - P0257R1.docx", L"Neil MacIntosh" }, } },
    {  258u, { { 0u, L"is_contiguous_layout", L"Author2021" }, { 1u, L"is_contiguous_layout", L"Author1436" }, { 2u, L"P0258R2 has_unique_object_representations - wording", L"Author2207" }, } },
    {  259u, { { 0u, L"Title1560", L"Michael Price" }, } },
    {  260u, { { 0u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 1u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 2u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 3u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 4u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 5u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 6u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 7u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 8u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 9u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 10u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 11u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 12u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 13u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 14u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 15u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 16u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, { 17u, L"C++ Concurrent Queues", L"Lawrence Crowl" }, } },
    {  261u, { { 0u, L"C++ Distributed Counters", L"Lawrence Crowl" }, { 1u, L"C++ Distributed Counters", L"Lawrence Crowl" }, { 2u, L"C++ Distributed Counters", L"Lawrence Crowl" }, { 3u, L"C++ Distributed Counters", L"Lawrence Crowl" }, { 4u, L"C++ Distributed Counters", L"Lawrence Crowl" }, } },
    {  262u, { { 0u, L"A Class for Status and Optional Value", L"Lawrence Crowl" }, { 1u, L"A Class for Status and Optional Value", L"Lawrence Crowl" }, } },
    {  263u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author1478" }, { 1u, L"Core \"tentatively ready\" Issues", L"Author1205" }, } },
    {  264u, { { 0u, L"auto operator= considered dangerous", L"Author531" }, } },
    {  265u, { { 0u, L"Title821", L"Michael Wong" }, } },
    {  266u, { { 0u, L"Lifting Restrictions on requires-Expressions", L"Author1873" }, { 1u, L"Lifting Restrictions on requires-Expressions", L"Author1130" }, { 2u, L"Lifting Restrictions on requires-Expressions", L"Author1617" }, } },
    {  267u, { { 0u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author1934" }, { 1u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author1602" }, { 2u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author1117" }, { 3u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author1142" }, { 4u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author341" }, { 5u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author892" }, { 8u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author1188" }, { 9u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author1767" }, { 10u, L"A Proposal to Add 2D Graphics Rendering and Display to C++", L"Author801" }, } },
    {  268u, { { 0u, L"Title438", L"Author540" }, } },
    {  269u, { { 0u, L"Title406", L"mike_spertus@symantec.com Authors" }, } },
    {  270u, { { 0u, L"Removing C dependencies from signal handler wording", L"Hans-J. Boehm" }, { 1u, L"Removing C dependencies from signal handler wording", L"Hans-J. Boehm" }, { 2u, L"Removing C dependencies from signal handler wording", L"Hans-J. Boehm" }, { 3u, L"Removing C dependencies from signal handler wording", L"Hans-J. Boehm" }, } },
    {  271u, { { 0u, L"Title949", L"Richard Smith" }, } },
    {  272u, { { 0u, L"Title784", L"David Sankel" }, { 1u, L"Title887", L"David Sankel" }, } },
    {  273u, { { 0u, L"Title1141", L"Author1468" }, { 1u, L"Title861", L"Author1070" }, } },
    {  274u, { { 0u, L"P0274R0 Clump - A Vector-like Contiguous Sequence Container with Embedded Storage.pages", L"Nevin " }, } },
    {  275u, { { 0u, L"A Proposal to add Classes and Functions Required for Dynamic Library Load", L"Author301" }, { 1u, L"A Proposal to add Classes and Functions Required for Dynamic Library Load", L"Author1105" }, { 2u, L"A Proposal to add Classes and Functions Required for Dynamic Library Load", L"Author1659" }, { 3u, L"A Proposal to add Classes and Functions Required for Dynamic Library Load", L"Author2060" }, { 4u, L"A Proposal to add Classes and Functions Required for Dynamic Library Load", L"Author1719" }, } },
    {  276u, { { 0u, L"A Proposal to add Attribute [[visible]]", L"Author1732" }, } },
    {  277u, { { 0u, L"Title252", L"Author298" }, { 1u, L"Title741", L"Author920" }, } },
    {  278u, { { 0u, L"P0278r0 - volatile solutions", L"Jon Kalb" }, } },
    {  279u, { { 0u, L"Read-Copy Update (RCU) for C++", L"Author959" }, { 1u, L"Title578", L"Author716" }, } },
    {  280u, { { 0u, L"Initialize unspecified aggregate members with direct list initialization", L"James Touton" }, } },
    {  281u, { { 0u, L"Remove comma elision in variadic function declarations", L"James Touton" }, } },
    {  282u, { { 0u, L"Const-preserving overloads for the strtox family of functions", L"James Touton" }, } },
    {  283u, { { 0u, L"Title1582", L"Author2043" }, { 1u, L"Title1299", L"Author1670" }, { 2u, L"Standard and non-standard attributes", L"Author1797" }, } },
    {  284u, { { 0u, L"Unqualified enumerators in case labels", L"James Touton" }, } },
    {  285u, { { 0u, L"Using customization points to unify executors", L"Christopher Kohlhoff" }, } },
    {  286u, { { 0u, L"A networking library extension to support co_await-based coroutines", L"Christopher Kohlhoff" }, } },
    {  287u, { { 0u, L"Title1188", L"gdr@microsoft.com" }, } },
    {  288u, { { 0u, L"unique_function.pages", L"Author1220" }, { 1u, L"unique_function.pages", L"Author1376" }, { 4u, L"any_invocable", L"Ryan McDougall" }, { 5u, L"any_invocable", L"Ryan McDougall" }, { 6u, L"any_invocable", L"Matt Calabrese" }, { 7u, L"any_invocable", L"Matt Calabrese" }, { 8u, L"move_only_function", L"Matt Calabrese" }, { 9u, L"move_only_function", L"Matt Calabrese" }, } },
    {  289u, { { 0u, L"Title16", L"Author18" }, } },
    {  290u, { { 0u, L"apply() for synchronized_value<T>", L"Anthony" }, { 1u, L"apply() for synchronized_value<T>", L"Anthony" }, { 2u, L"apply() for synchronized_value<T>", L"Anthony" }, { 3u, L"apply() for synchronized_value<T>", L"Anthony" }, { 4u, L"apply() for synchronized_value<T>", L"Anthony" }, } },
    {  292u, { { 0u, L"constexpr if: A slightly different syntax", L"Author1322" }, { 1u, L"constexpr if: A slightly different syntax", L"Author1407" }, { 2u, L"constexpr if: A slightly different syntax", L"Author165" }, } },
    {  293u, { { 0u, L"Title1077", L"Author1386" }, } },
    {  295u, { { 0u, L"Adopt Selected Library Fundamentals V2 Components for C++17", L"Author418" }, } },
    {  296u, { { 0u, L"Forward progress guarantees: Base definitions", L"Torvald Riegel" }, { 1u, L"Forward progress guarantees: Base definitions", L"Torvald Riegel" }, { 2u, L"Forward progress guarantees: Base definitions", L"Torvald Riegel" }, } },
    {  298u, { { 0u, L"Microsoft Word - P0298R0.docx", L"Neil MacIntosh" }, { 1u, L"Microsoft Word - D0298R1.docx", L"Neil MacIntosh" }, { 2u, L"Microsoft Word - P0298R2.docx", L"Neil MacIntosh" }, { 3u, L"Microsoft Word - D0298R3", L"Neil MacIntosh" }, } },
    {  299u, { { 0u, L"Forward progress guarantees for the Parallelism TS v2", L"Torvald Riegel" }, { 1u, L"Forward progress guarantees for Parallelism TS features", L"Torvald Riegel" }, } },
    {  301u, { { 0u, L"Wording for Unified Call Syntax", L"Author1917" }, { 1u, L"Wording for Unified Call Syntax (revision 1)", L"Author720" }, } },
    {  302u, { { 0u, L"Deprecating Allocator Support in std::function", L"Author1411" }, { 1u, L"Removing Allocator Support in std::function (rev 1)", L"Author1144" }, } },
    {  303u, { { 0u, L"C++ International Standard", L"Boris Fomitchev" }, } },
    {  304u, { { 0u, L"C++ Standard Library Issues Resolved Directly", L"Author904" }, { 1u, L"C++ Standard Library Issues Resolved Directly In Issaquah", L"Author389" }, } },
    {  305u, { { 0u, L"If statement with initializer", L"Author1441" }, { 1u, L"Selection statements with initializer", L"Author1134" }, } },
    {  306u, { { 0u, L"Comma omission and comma deletion", L"Author900" }, { 1u, L"Comma omission and comma deletion", L"Author195" }, { 2u, L"Comma omission and comma deletion", L"Author969" }, { 3u, L"Comma omission and comma deletion", L"Author1064" }, { 4u, L"Comma omission and comma deletion", L"Author1899" }, } },
    {  307u, { { 0u, L"Title713", L"Tony Van" }, { 2u, L"Title856", L"Tony Van" }, } },
    {  308u, { { 0u, L"Title1275", L"Author1646" }, } },
    {  309u, { { 0u, L"Title300", L"Daniele Bordes" }, } },
    {  310u, { { 0u, L"Node allocators", L"Author1245" }, } },
    {  311u, { { 0u, L"A Unified Vision for Manipulating Tuple-like Objects", L"Matthew Woehlke" }, } },
    {  312u, { { 0u, L"Microsoft Word - Pointers to Members.docx", L"Barry Revzin" }, { 1u, L"Make Pointers to Members Callable", L"Barry Revzin" }, } },
    {  313u, { { 0u, L"Comparison operators in fold-expressions", L"Author2002" }, } },
    {  314u, { { 0u, L"Title435", L"Author536" }, } },
    {  315u, { { 0u, L"Title1636", L"Louis Dionne" }, { 1u, L"Title787", L"Louis Dionne" }, { 2u, L"Title55", L"Louis Dionne" }, { 3u, L"Title985", L"Louis Dionne" }, { 4u, L"Title1492", L"Louis Dionne" }, } },
    {  316u, { { 0u, L"allocate_unique and allocator_delete", L"Miro Knejp" }, } },
    {  317u, { { 0u, L"Directory Entry Caching", L"Author1855" }, { 1u, L"Directory Entry Caching", L"Author1076" }, } },
    {  318u, { { 0u, L"p0318r0", L"Vicente J" }, { 1u, L"p0318r1", L"Vicente J" }, } },
    {  319u, { { 0u, L"p0319r0", L"Vicente J" }, { 1u, L"p0319r1", L"Vicente J" }, { 2u, L"p0319r2", L"Vicente J" }, } },
    {  320u, { { 0u, L"p0320r0", L"Vicente J" }, { 1u, L"p0320r1", L"Vicente J" }, } },
    {  322u, { { 0u, L"P0322r0 : exception_list", L"Bryce Adelstein" }, } },
    {  323u, { { 0u, L"p0323r0", L"Vicente J" }, { 1u, L"p0323r1", L"Vicente J" }, { 2u, L"p0323r2", L"Vicente J" }, { 3u, L"p0323r3", L"Make bad_expected_access" }, { 4u, L"p0323r4: std::expected", L"Vicente Botet" }, { 5u, L"p0323r5: std::expected", L"Vicente Botet" }, { 7u, L"std::expected", L"Vicente Botet" }, { 8u, L"std::expected", L"Vicente Botet" }, { 9u, L"std::expected", L"Vicente Botet" }, { 10u, L"std::expected", L"Vicente Botet" }, { 11u, L"std::expected", L"Vicente Botet" }, { 12u, L"std::expected", L"Vicente Botet" }, } },
    {  324u, { { 0u, L"One Concept Definition Syntax", L"Author1183" }, } },
    {  325u, { { 0u, L"Propose to adopt make_array in C++17", L"Zhihao Yuan" }, { 1u, L"Propose to adopt make_array into the IS", L"Zhihao Yuan" }, { 2u, L"to_array from LFTS with updates - HackMD", L"Zhihao Yuan" }, { 3u, L"to_array from LFTS with updates - HackMD", L"Zhihao Yuan" }, { 4u, L"to_array from LFTS with updates - HackMD", L"Zhihao Yuan" }, } },
    {  326u, { { 0u, L"p0326r0", L"Vicente J" }, } },
    {  327u, { { 0u, L"p0327r0", L"Vicente J" }, { 1u, L"p0327r1", L"Vicente J" }, { 2u, L"p0327r2", L"Vicente J" }, { 3u, L"p0327r3", L"Vicente J" }, } },
    {  329u, { { 0u, L"Title1695", L"Author2215" }, { 1u, L"Title1123", L"Author1446" }, { 2u, L"Title947", L"Author1203" }, { 3u, L"Title698", L"Author871" }, { 4u, L"Title26", L"Author31" }, } },
    {  330u, { { 0u, L"Title225", L"Rein Halbersma" }, { 1u, L"Title56", L"Rein Halbersma" }, { 2u, L"Literal Suffixes for ptrdiff_t and size_t", L"JeanHeyd Meneide" }, { 3u, L"Literal Suffixes for ptrdiff_t and size_t", L"JeanHeyd Meneide" }, { 4u, L"Literal Suffixes for ptrdiff_t and size_t", L"JeanHeyd Meneide" }, { 6u, L"Literal Suffixes for ptrdiff_t and size_t", L"JeanHeyd Meneide" }, { 7u, L"Literal Suffixes for ptrdiff_t and size_t", L"JeanHeyd Meneide" }, { 8u, L"Literal Suffix for (signed) size_t", L"JeanHeyd Meneide" }, } },
    {  331u, { { 0u, L"P0331r0 : Motivation and Examples for Multidimensional Array", L"H. Carter" }, } },
    {  332u, { { 0u, L"P0332r0 : Relaxed Incomplete Multidimensional Array Type Declaration", L"H. Carter" }, { 1u, L"P0332r1 : Relaxed Incomplete Multidimensional Array Type Declaration", L"H. Carter" }, { 2u, L"p0332R2: Relaxed Incomplete Multidimensional Array Type Declaration", L"H. Carter" }, } },
    {  333u, { { 0u, L"P0333r0 : Improving Parallel Algorithm Exception Handling", L"Bryce Adelstein" }, } },
    {  334u, { { 0u, L"P0334r0 : Immutable Persistent Containers", L"Bryce Adelstein" }, } },
    {  335u, { { 0u, L"Context Tokens for Parallel Algorithms", L"Pablo Halpern" }, { 1u, L"Context Tokens for Parallel Algorithms", L"Pablo Halpern" }, } },
    {  336u, { { 0u, L"Better Names for Parallel Execution Policies in C++17", L"Pablo Halpern" }, { 1u, L"Better Names for Parallel Execution Policies in C++17", L"Pablo Halpern" }, } },
    {  337u, { { 0u, L"P0337r0 | Delete operator= for polymorphic_allocator", L"Author408" }, } },
    {  338u, { { 0u, L"p0338r0", L"Vicente J" }, { 1u, L"p0338r1", L"Vicente J" }, { 2u, L"p0338r2", L"Vicente J" }, { 3u, L"p0338r3", L"Vicente J" }, } },
    {  339u, { { 0u, L"polymorphic_allocator<void> as a vocabulary type", L"Pablo Halpern" }, { 1u, L"polymorphic_allocator<> as a vocabulary type", L"Pablo Halpern" }, { 2u, L"polymorphic_allocator<> as a vocabulary type", L"Pablo Halpern" }, { 3u, L"polymorphic_allocator<> as a vocabulary type", L"Pablo Halpern" }, { 4u, L"polymorphic_allocator<> as a vocabulary type", L"Pablo Halpern" }, { 5u, L"polymorphic_allocator<> as a vocabulary type", L"Pablo Halpern" }, { 6u, L"polymorphic_allocator<> as a vocabulary type", L"Pablo Halpern" }, } },
    {  340u, { { 0u, L"P0340R0", L"Author4" }, { 1u, L"Making std::underlying_type SFINAE-friendly", L"Author823" }, { 2u, L"D0340R2: Making std::underlying_type SFINAE-friendly", L"Author1506" }, { 3u, L"Making std::underlying_type SFINAE-friendly", L"Author10" }, } },
    {  341u, { { 0u, L"Leveraging parameter packs outside of templates", L"\u00A0\u00A0Mike Spertus" }, } },
    {  342u, { { 0u, L"Timing barriers", L"\u00A0\u00A0Mike Spertus" }, { 1u, L"Title1502", L"Mike Spertus" }, { 2u, L"pessimize_hint", L"Gonzalo Brito" }, } },
    {  343u, { { 0u, L"p0343r0", L"Vicente J" }, { 1u, L"p0343r1", L"Vicente J" }, } },
    {  345u, { { 0u, L"Allowing any unsigned integral type as parameter type for literal operators", L"Micha\u0142 Dominiak" }, } },
    {  346u, { { 0u, L"A <random> Nomenclature Tweak", L"Author91" }, { 1u, L"A <random> Nomenclature Tweak", L"Author2148" }, } },
    {  347u, { { 0u, L"P0347R0", L"R. Tim" }, { 1u, L"Simplifying simple uses of <random>", L"R. Tim" }, } },
    {  348u, { { 0u, L"Validity testing issues", L"Andrzej Krzemienski" }, } },
    {  349u, { { 0u, L"Assumptions about the size of datapar [P0349R0]", L"Matthias Kretz" }, } },
    {  350u, { { 0u, L"Integrating datapar with parallel algorithms and executors [P0350R0]", L"Matthias Kretz" }, { 1u, L"Integrating simd with parallel algorithms [P0350R1]", L"Matthias Kretz" }, { 2u, L"Integrating simd with parallel algorithms [P0350R2]", L"Matthias Kretz" }, { 3u, L"Integrating simd with parallel algorithms [P0350R3]", L"Matthias Kretz" }, { 4u, L"Integrating simd with parallel algorithms [P0350R4]", L"Ma hias" }, } },
    {  352u, { { 0u, L"Title1339", L"Author1733" }, { 1u, L"Title1083", L"Author1394" }, } },
    {  353u, { { 0u, L"Unicode Encoding conversions", L"Author1605" }, { 1u, L"Unicode Encoding conversions", L"Author1189" }, } },
    {  354u, { { 0u, L"Title924", L"Tony Van" }, } },
    {  355u, { { 0u, L"Extending <chrono> to Calendars and Time Zones", L"Author1815" }, { 1u, L"Extending <chrono> to Calendars and Time Zones", L"Author2070" }, { 2u, L"Extending <chrono> to Calendars and Time Zones", L"Author1345" }, { 3u, L"Extending <chrono> to Calendars and Time Zones", L"Author1002" }, { 4u, L"Extending <chrono> to Calendars and Time Zones", L"Author316" }, { 5u, L"Extending <chrono> to Calendars and Time Zones", L"Author1531" }, } },
    {  356u, { { 0u, L"Simplified partial function application", L"\u00A0\u00A0" }, { 1u, L"Simplified partial function application", L"\u00A0\u00A0" }, { 2u, L"Simplified partial function application", L"\u00A0\u00A0" }, { 3u, L"Simplified partial function application", L"\u00A0\u00A0" }, { 4u, L"Simplified partial function application", L"\u00A0\u00A0" }, { 5u, L"Simplified partial function application", L"\u00A0\u00A0" }, } },
    {  357u, { { 0u, L"'reference_wrapper' for incomplete types", L"\u00A0\u00A0" }, { 1u, L"'reference_wrapper' for incomplete types", L"\u00A0\u00A0" }, { 2u, L"'reference_wrapper' for incomplete types", L"\u00A0\u00A0" }, { 3u, L"'reference_wrapper' for incomplete types", L"\u00A0\u00A0" }, } },
    {  358u, { { 0u, L"Fixes for 'not_fn'", L"\u00A0\u00A0" }, { 1u, L"Fixes for 'not_fn'", L"\u00A0\u00A0" }, } },
    {  359u, { { 0u, L"Title588", L"Michael Wong" }, } },
    {  360u, { { 0u, L"Title916", L"Michael Wong" }, } },
    {  361u, { { 0u, L"Title1424", L"Hartmut Kaiser" }, { 1u, L"Title1417", L"Hartmut Kaiser" }, } },
    {  362u, { { 0u, L"Title796", L"Michael Wong" }, } },
    {  363u, { { 0u, L"Title1096", L"Michael Wong" }, } },
    {  364u, { { 0u, L"Title1200", L"Michael Wong" }, } },
    {  365u, { { 0u, L"Title1558", L"Michael Wong" }, } },
    {  366u, { { 0u, L"Title1398", L"Victor Luchangco" }, } },
    {  367u, { { 0u, L"Title1310", L"Author1688" }, } },
    {  369u, { { 0u, L"Title1221", L"Michael Wong" }, } },
    {  370u, { { 0u, L"Ranges TS Design Updates Omnibus", L"Casey Carter" }, { 1u, L"Ranges TS Design Updates Omnibus", L"Casey Carter" }, { 2u, L"Ranges TS Design Updates Omnibus", L"Casey Carter" }, { 3u, L"Ranges TS Design Updates Omnibus", L"Casey Carter" }, } },
    {  371u, { { 0u, L"Temporarily deprecate memory_order_consume", L"Hans-J. Boehm" }, { 1u, L"Temporarily discourage memory_order_consume", L"Hans-J. Boehm" }, } },
    {  372u, { { 0u, L"P0372R0 - A type for utf-8 data", L"Author1224" }, } },
    {  373u, { { 0u, L"Title899", L"Andrew Tomazos" }, } },
    {  374u, { { 0u, L"Title840", L"Author1045" }, } },
    {  375u, { { 0u, L"Title803", L"David Sankel" }, } },
    {  376u, { { 0u, L"A Single Generalization of std::invoke, std::apply, and std::visit", L"Author635" }, } },
    {  377u, { { 0u, L"std::integral_constant with a Deduced Value Type", L"Author1058" }, } },
    {  379u, { { 0u, L"Why a joining thread from P0206 is a Bad Idea", L"Author405" }, } },
    {  380u, { { 0u, L"Title323", L"Author380" }, { 1u, L"Title559", L"Author696" }, } },
    {  381u, { { 0u, L"Title1511", L"Author1949" }, { 1u, L"Title683", L"Author859" }, } },
    {  382u, { { 0u, L"Comments on P0119: Overload sets as function arguments", L"\u00A0\u00A0" }, } },
    {  384u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author1702" }, } },
    {  385u, { { 0u, L"Title1697", L"Matus" }, { 1u, L"Title1378", L"Axel Naumann" }, { 2u, L"Title932", L"Axel Naumann" }, } },
    {  386u, { { 0u, L"Title146", L"Author169" }, { 2u, L"Title541", L"Author669" }, } },
    {  387u, { { 0u, L"Memory Model Issues for Concurrent Data Structures", L"Hans-J. Boehm" }, { 1u, L"Memory Model Issues for Concurrent Data Structures", L"Hans-J. Boehm" }, } },
    {  388u, { { 0u, L"Proposal: conversions to arrays of unknown bound", L"Author2172" }, { 1u, L"Proposal: conversions to arrays of unknown bound", L"Author1622" }, { 2u, L"Proposal: conversions to arrays of unknown bound", L"Author570" }, { 3u, L"Proposal: conversions to arrays of unknown bound", L"Author832" }, { 4u, L"Proposal: conversions to arrays of unknown bound", L"Author2130" }, } },
    {  389u, { { 0u, L"Proposal: template keyword in unqualified-ids", L"Author1554" }, } },
    {  390u, { { 0u, L"ISO/IEC JTC1/SC22/WG21p0390r0", L"Nickolas Pokhylets" }, } },
    {  391u, { { 0u, L"Introducing the term \"templated entity\"", L"Author2182" }, } },
    {  392u, { { 0u, L"Microsoft Word - P0392_stringview4path_160623.docx", L"Author979" }, } },
    {  393u, { { 3u, L"Variant: relational operators.", L"Tony Van" }, } },
    {  394u, { { 4u, L"Hotel Parallelifornia: terminate() for Parallel Algorithms Exception Handling", L"JF Bastien" }, } },
    {  396u, { { 0u, L"C++ Concepts Active Issues List (Snapshot of Revision 4)", L"Author1071" }, } },
    {  397u, { { 0u, L"C++ Standard Library Priority 1 Issues Resolved Directly In Oulu", L"Author1046" }, } },
    {  398u, { { 0u, L"Core issue 1518: Explicit default constructors and copy-list-initialization", L"Author673" }, } },
    {  399u, { { 0u, L"Networking TS & Threadpool", L"Author1558" }, } },
    {  400u, { { 0u, L"P0400R0 2016-06-25", L"Author1330" }, } },
    {  401u, { { 0u, L"Extensions to the Allocator interface", L"Author510" }, { 1u, L"Providing size feedback in the Allocator interface", L"Jonathan Wakely" }, { 2u, L"Providing size feedback in the Allocator interface", L"Jonathan Wakely" }, { 3u, L"Providing size feedback in the Allocator interface", L"Jonathan Wakely" }, { 4u, L"Providing size feedback in the Allocator interface", L"Jonathan Wakely" }, { 5u, L"Providing size feedback in the Allocator interface", L"Jonathan Wakely" }, { 6u, L"Providing size feedback in the Allocator interface", L"Jonathan Wakely" }, } },
    {  403u, { { 0u, L"Literal suffixes for basic_string_view", L"Author1234" }, { 1u, L"Literal suffixes for basic_string_view", L"Author795" }, } },
    {  404u, { { 0u, L"Matching Types: 404 Syntax Not found", L"Hubert Tong" }, } },
    {  405u, { { 0u, L"Wording for Networking TS changes discussed in Kona", L"Author578" }, } },
    {  406u, { { 1u, L"Intrusive Containers", L"Hal Finkel" }, } },
    {  407u, { { 0u, L"Title1022", L"Author1325" }, { 1u, L"Title1106", L"Author1427" }, { 2u, L"Title430", L"Author525" }, } },
    {  408u, { { 0u, L"Title265", L"Author313" }, { 1u, L"Title1431", L"Author1846" }, { 2u, L"Title52", L"Author52" }, { 3u, L"Title742", L"Author922" }, { 4u, L"Title1654", L"Author2146" }, { 5u, L"Title1184", L"Author1522" }, { 6u, L"Title1095", L"Author1408" }, { 7u, L"Title298", L"Author352" }, } },
    {  409u, { { 0u, L"Allow lambda capture [=, this]", L"Author2103" }, { 1u, L"Allow lambda capture [=, this]", L"Author1819" }, { 2u, L"Allow lambda capture [=, this]", L"Author275" }, } },
    {  411u, { { 0u, L"Separating Library Requirements and Preconditions", L"Author1912" }, } },
    {  412u, { { 0u, L"Benchmarking Primitives", L"Mikhail Maltsev" }, } },
    {  413u, { { 0u, L"Updating Parallel Execution Policy Names in the Parallelism TS", L"Pablo Halpern" }, } },
    {  414u, { { 0u, L"Merging shared_ptr changes from Library Fundamentals to C++17", L"Author1272" }, { 1u, L"Merging shared_ptr changes from Library Fundamentals to C++17", L"Author954" }, { 2u, L"Merging shared_ptr changes from Library Fundamentals to C++17", L"Author396" }, } },
    {  415u, { { 0u, L"Constexpr for std::complex", L"Author152" }, { 1u, L"Constexpr for std::complex", L"Author1585" }, } },
    {  416u, { { 0u, L"dot P0416", L"Author2028" }, { 1u, L"Title657", L"Author825" }, } },
    {  417u, { { 0u, L"ISO 10646:2014", L"Author1075" }, { 1u, L"ISO 10646:2014", L"Author339" }, } },
    {  418u, { { 1u, L"P0418r1: Fail or succeed: there is no atomic lattice", L"JF Bastien" }, { 2u, L"P0418r2: Fail or succeed: there is no atomic lattice", L"JF Bastien" }, } },
    {  421u, { { 0u, L"Title401", L"Mariusz Moczala" }, } },
    {  422u, { { 0u, L"Out-of-Thin-Air Execution is Vacuous", L"Author2033" }, } },
    {  423u, { { 0u, L"Variable templates for Networking TS traits", L"Author1711" }, } },
    {  424u, { { 0u, L"Title450", L"Louis Dionne" }, { 1u, L"Title47", L"Louis Dionne" }, { 2u, L"Title527", L"Louis Dionne" }, } },
    {  425u, { { 0u, L"Title1225", L"Louis Dionne" }, } },
    {  426u, { { 0u, L"Constexpr for std::char_traits", L"Author1600" }, { 1u, L"Constexpr for std::char_traits", L"Author1181" }, } },
    {  428u, { { 0u, L"Title567", L"Louis Dionne" }, { 1u, L"Title1150", L"Louis Dionne" }, { 2u, L"Title858", L"Louis Dionne" }, } },
    {  429u, { { 0u, L"Title1232", L"Author1588" }, { 1u, L"Title1300", L"Author1674" }, { 2u, L"Title718", L"Author889" }, { 3u, L"Title580", L"Author718" }, { 4u, L"A Standard flatmap", L"Author1484" }, { 5u, L"A Standard flatmap", L"Author1817" }, { 6u, L"A Standard flatmap", L"Author257" }, { 7u, L"A Standard flatmap", L"Author454" }, { 8u, L"A Standard flatmap", L"Author636" }, { 9u, L"A Standard flatmap", L"Author1983" }, } },
    {  430u, { { 0u, L"Microsoft Word - open LWG issue (Autosaved).docx", L"Jason Liu" }, { 1u, L"Microsoft Word - P0430R1.docx", L"Jason Liu" }, { 2u, L"Title1208", L"Jason Liu" }, } },
    {  431u, { { 0u, L"ISO/IEC JTC1/SC22/WG21p0431r0", L"Hyman Rosen" }, } },
    {  432u, { { 0u, L"Title857", L"David Stone" }, } },
    {  433u, { { 0u, L"Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 1u, L"Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 2u, L"Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 3u, L"Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", L"\u00A0\u00A0\u00A0Mike Spertus" }, } },
    {  434u, { { 0u, L"P0434 Portable Interrupt Library", L"BRETT SEARLES" }, } },
    {  435u, { { 0u, L"Resolving LWG Issues re common_type", L"Author524" }, { 1u, L"Resolving LWG Issues re common_type", L"Author74" }, } },
    {  436u, { { 0u, L"An Extensible Approach to Obtaining Selected Operators", L"Author1941" }, { 1u, L"An Extensible Approach to Obtaining Selected Operators", L"Author992" }, } },
    {  437u, { { 0u, L"Numeric Traits for the Next Standard Library", L"Author17" }, { 1u, L"Numeric Traits for the Standard Library", L"Author151" }, } },
    {  438u, { { 0u, L"Toward a <random> Technical Specification", L"Author1813" }, } },
    {  439u, { { 0u, L"Make std::memory_order a scoped enumeration", L"Author108" }, } },
    {  440u, { { 0u, L"P0440r0 : Floating Point Atomic View", L"H. Carter" }, { 1u, L"P0440r1 : Floating Point Atomic View", L"H. Carter" }, } },
    {  441u, { { 0u, L"Ranges: Merging Writable and MoveWritable", L"Casey Carter" }, { 1u, L"Ranges: Merging Writable and MoveWritable", L"Casey Carter" }, } },
    {  443u, { { 0u, L"Title517", L"Jared Hoberock" }, { 1u, L"Title655", L"Jared Hoberock" }, { 2u, L"Title90", L"Jared Hoberock" }, { 3u, L"Title692", L"Jared Hoberock" }, { 4u, L"Title882", L"Jared Hoberock" }, { 5u, L"Title30", L"Jared Hoberock" }, { 9u, L"Title734", L"Jared Hoberock" }, { 10u, L"Title820", L"Jared Hoberock" }, { 11u, L"A Unified Executors Proposal for C++ | P0443R11", L"Jared Hoberock" }, { 12u, L"A Unified Executors Proposal for C++ | P0443R12", L"Jared Hoberock" }, { 13u, L"A Unified Executors Proposal for C++ | P0443R13", L"Jared Hoberock" }, { 14u, L"A Unified Executors Proposal for C++ | P0443R14", L"Jared Hoberock" }, } },
    {  444u, { { 0u, L"P0444", L"Nat Goodspeed" }, } },
    {  445u, { { 0u, L"Title1355", L"Michael Wong" }, } },
    {  446u, { { 0u, L"Title271", L"Michael Wong" }, } },
    {  447u, { { 0u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 1u, L"Title222", L"Author263" }, { 2u, L"Title800", L"Author989" }, { 3u, L"Title1524", L"Author1959" }, { 4u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 8u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 9u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 10u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 11u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 12u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 13u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 14u, L"Introduction of std::colony to the standard library", L"Matthew Bentley" }, { 15u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 16u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 17u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 18u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 19u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 20u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 21u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 22u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 23u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 24u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 25u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 26u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 27u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, { 28u, L"Introduction of std::hive to the standard library", L"Matthew Bentley" }, } },
    {  448u, { { 0u, L"Title417", L"Author506" }, { 1u, L"Title1578", L"Author2041" }, { 2u, L"Title12", L"Author9" }, { 3u, L"Title617", L"Author760" }, { 4u, L"Title984", L"Author1271" }, } },
    {  451u, { { 0u, L"P0451r0: Future-Proofing Parallel Algorithms Exception Handling", L"Bryce Adelstein" }, } },
    {  452u, { { 0u, L"P0452r0: Binary-Binary transform_reduce(): The Missing Overload", L"Bryce Adelstein" }, { 1u, L"P0452r1: Unifying <numeric> Parallel Algorithms", L"Bryce Adelstein" }, } },
    {  454u, { { 0u, L"P0454r0: Wording for a Minimal mdspan<>", L"H. Carter" }, } },
    {  457u, { { 0u, L"String Prefix and Suffix Checking", L"Mikhail Maltsev" }, { 1u, L"String Prefix and Suffix Checking", L"Mikhail Maltsev" }, { 2u, L"String Prefix and Suffix Checking", L"Mikhail Maltsev" }, } },
    {  458u, { { 0u, L"Checking for Existence of an Element in Associative Containers", L"Mikhail Maltsev" }, { 1u, L"Checking for Existence of an Element in Associative Containers", L"Mikhail Maltsev" }, { 2u, L"Checking for Existence of an Element in Associative Containers", L"Mikhail Maltsev" }, } },
    {  459u, { { 0u, L"Working Draft, C++ Extensions for Ranges", L"Author1432" }, } },
    {  460u, { { 0u, L"Title1240", L"Sean Middleditch" }, } },
    {  461u, { { 0u, L"Title1494", L"Author1933" }, { 1u, L"Title1254", L"Author1618" }, { 2u, L"Title847", L"Author1056" }, } },
    {  462u, { { 0u, L"Title1031", L"Author1340" }, { 1u, L"Title1506", L"Author1944" }, } },
    {  463u, { { 0u, L"endian", L"Author1512" }, { 1u, L"endian", L"Author1477" }, } },
    {  464u, { { 0u, L"Title344", L"Author403" }, { 1u, L"Revisiting the meaning of foo(ConceptName,ConceptName)", L"Tony van" }, { 2u, L"Revisiting the meaning of foo(ConceptName,ConceptName)", L"Tony van" }, } },
    {  465u, { { 0u, L"Title943", L"Lisa Lippincott" }, } },
    {  466u, { { 0u, L"Title23", L"Lisa Lippincott" }, { 1u, L"Title1303", L"Lisa Lippincott" }, { 2u, L"Title656", L"Lisa Lippincott" }, { 3u, L"Title1383", L"Lisa Lippincott" }, { 4u, L"Title198", L"Lisa Lippincott" }, { 5u, L"Title1172", L"Lisa Lippincott" }, } },
    {  467u, { { 0u, L"Iterator Concerns for Parallel Algorithms", L"Author527" }, { 1u, L"Iterator Concerns for Parallel Algorithms", L"Author1701" }, { 2u, L"Iterator Concerns for Parallel Algorithms", L"Author993" }, } },
    {  468u, { { 0u, L"P0468R0 : An Intrusive Smart Pointer", L"Isabella Muerte" }, { 1u, L"An Intrusive Smart Pointer", L"Isabella Muerte" }, } },
    {  469u, { { 0u, L"Sample in place", L"R. Tim" }, } },
    {  471u, { { 0u, L"Title1331", L"David Sankel" }, } },
    {  472u, { { 0u, L"Title1691", L"David Sankel" }, { 1u, L"P0472R1 - Put std::monostate in <utility>", L"David Sankel" }, { 2u, L"P0472R2 - Put std::monostate in <utility>", L"David Sankel" }, { 3u, L"P0472R3 - Put std::monostate in <utility>", L"David Sankel" }, } },
    {  473u, { { 0u, L"Title342", L"David Sankel" }, } },
    {  474u, { { 0u, L"Comparison in C++: Basic Facilities", L"Lawrence Crowl" }, } },
    {  475u, { { 0u, L"LWG 2511: guaranteed copy elision for piecewise construction", L"Author179" }, { 1u, L"LWG 2511: guaranteed copy elision for piecewise construction (rev. 1)", L"Author1038" }, } },
    {  476u, { { 0u, L"P0476r0: Bit-casting object representations", L"JF Bastien" }, { 1u, L"P0476r1: Bit-casting object representations", L"JF Bastien" }, { 2u, L"p0476r2: Bit-casting object representations", L"JF Bastien" }, } },
    {  477u, { { 0u, L"std::monostate_function<>", L"Author1110" }, } },
    {  478u, { { 0u, L"Title1652", L"Bruno Manganelli" }, } },
    {  479u, { { 0u, L"Attributes for Likely and Unlikely Branches", L"Clay Trychta" }, { 1u, L"Attributes for Likely and Unlikely Statements", L"Clay Trychta" }, { 2u, L"Attributes for Likely and Unlikely Statements", L"Clay Trychta" }, { 4u, L"Proposed wording for likely and unlikely attributes (Revision 4)", L"Clay Trychta" }, { 5u, L"Proposed wording for likely and unlikely attributes (Revision 5)", L"Clay Trychta" }, } },
    {  480u, { { 0u, L"Explicit type checking with structured bindings", L"Author1341" }, { 1u, L"Structured bindings with explicit types", L"Author2071" }, } },
    {  481u, { { 0u, L"Title637", L"Tony Van" }, } },
    {  482u, { { 0u, L"char8_t: A type for UTF-8 characters and strings", L"Tom Honermann" }, { 1u, L"char8_t: A type for UTF-8 characters and strings (Revision 1)", L"Tom Honermann" }, { 2u, L"char8_t: A type for UTF-8 characters and strings (Revision 2)", L"Tom Honermann" }, { 3u, L"char8_t: A type for UTF-8 characters and strings (Revision 3)", L"Tom Honermann" }, { 4u, L"char8_t: A type for UTF-8 characters and strings (Revision 4)", L"Tom Honermann" }, { 5u, L"char8_t: A type for UTF-8 characters and strings (Revision 5)", L"Tom Honermann" }, { 6u, L"char8_t: A type for UTF-8 characters and strings (Revision 6)", L"Tom Honermann" }, } },
    {  483u, { { 0u, L"Title1438", L"Patrice Roy" }, } },
    {  484u, { { 0u, L"Title439", L"Patrice Roy" }, { 1u, L"Title1281", L"Patrice Roy" }, } },
    {  485u, { { 0u, L"Title1234", L"Bruno Manganelli" }, } },
    {  486u, { { 0u, L"Title1108", L"Ildus Nezametdinov" }, } },
    {  487u, { { 0u, L"Fixing operator>>(basic_istream&, CharT*) (LWG 2499)", L"Zhihao Yuan" }, { 1u, L"Fixing operator>>(basic_istream&, CharT*) (LWG 2499)", L"Zhihao Yuan" }, } },
    {  488u, { { 0u, L"Title95", L"Author104" }, } },
    {  489u, { { 0u, L"Title1565", L"Author2023" }, } },
    {  490u, { { 0u, L"Core language changes addressing National Body comments for CD C++17", L"Author1308" }, } },
    {  492u, { { 0u, L"Filesystem NB Comments C++17", L"Author2134" }, { 1u, L"Filesystem NB Comments C++17", L"Author651" }, { 2u, L"Filesystem NB Comments C++17", L"Author2188" }, } },
    {  493u, { { 0u, L"Title1231", L"Al Grant" }, { 1u, L"Title1009", L"Al Grant" }, { 2u, L"Title1512", L"Al Grant" }, { 3u, L"Atomic minimum/maximum", L"Al Grant" }, { 4u, L"Atomic minimum/maximum", L"Al Grant" }, { 5u, L"Atomic minimum/maximum", L"Al Grant" }, } },
    {  494u, { { 0u, L"Title27", L"Ildus Nezametdinov" }, } },
    {  495u, { { 0u, L"Concurrency Safety in C++ Data Structures", L"Lawrence Crowl" }, } },
    {  497u, { { 0u, L"Fixes to shared_ptr support for arrays", L"Author1597" }, } },
    {  500u, { { 0u, L"Title545", L"gdr@microsoft.com" }, } },
    {  501u, { { 0u, L"Title896", L"gdr@microsoft.com" }, { 1u, L"Title1159", L"gdr@microsoft.com" }, { 2u, L"Title753", L"gdr@microsoft.com" }, { 3u, L"Title484", L"gdr@microsoft.com" }, } },
    {  502u, { { 0u, L"P0502r0: Throwing out of a parallel algorithm terminatesbut how?", L"JF Bastien" }, } },
    {  503u, { { 0u, L"Correcting library usage of \"literal type\"", L"Author1326" }, } },
    {  504u, { { 0u, L"Revisiting in-place tag types for any/optional/variant", L"Author1460" }, } },
    {  505u, { { 0u, L"Wording for GB 50", L"Author1825" }, } },
    {  506u, { { 0u, L"Title1367", L"Author1761" }, { 1u, L"Title1546", L"Author1999" }, { 2u, L"Title929", L"Author1179" }, } },
    {  507u, { { 0u, L"Core Issue 1343: Sequencing of non-class initialization", L"Author38" }, } },
    {  508u, { { 0u, L"Wording for GB 58", L"Author1885" }, } },
    {  509u, { { 1u, L"P0509R1", L"Author1610" }, } },
    {  510u, { { 0u, L"Disallowing references, incomplete types, arrays, and Empty Variants", L"Author294" }, } },
    {  511u, { { 0u, L"Deduction guide for", L"Zhihao Yuan" }, { 1u, L"Deduction guide for std::array", L"Zhihao Yuan" }, } },
    {  512u, { { 0u, L"Title914", L"Author1150" }, } },
    {  513u, { { 0u, L"Title1277", L"Lisa Lippincott" }, } },
    {  514u, { { 0u, L"D0514R0", L"Olivier Giroux" }, { 1u, L"D0514R1", L"Olivier Giroux" }, { 2u, L"D0514R1", L"Olivier Giroux" }, { 3u, L"D0514R1", L"Olivier Giroux" }, { 4u, L"D0514R1", L"Olivier Giroux" }, } },
    {  515u, { { 0u, L"Title8", L"Herb Sutter" }, { 1u, L"Title1446", L"Herb Sutter" }, { 2u, L"Title571", L"Herb Sutter" }, { 3u, L"Title1012", L"Herb Sutter" }, } },
    {  516u, { { 0u, L"P0516r0: Clarify That shared_futures Copy Operations have Wide Contracts", L"Bryce Adelstein" }, } },
    {  517u, { { 0u, L"P0517r0: Make future_error Constructible", L"Bryce Adelstein" }, } },
    {  518u, { { 0u, L"p0518r0: Allowing copies as arguments to function objects given to parallel algorithms in response to CH11", L"David S" }, { 1u, L"P0518r1: Allowing copies as arguments to function objects given to parallel algorithms in response to CH11", L"David S" }, } },
    {  519u, { { 0u, L"Core \"ready\" Issues", L"Author1502" }, } },
    {  520u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author249" }, } },
    {  521u, { { 0u, L"P0521r0: Proposed Resolution for CA 14 (shared_ptr use_count/unique)", L"Stephan T" }, } },
    {  522u, { { 0u, L"DR: Matching of template template-arguments excludes compatible templates", L"James Touton" }, } },
    {  523u, { { 0u, L"Wording for CH 10: Complexity of parallel algorithms", L"Detlef Vollmann" }, { 1u, L"Wording for CH 10: Complexity of parallel algorithms", L"Detlef Vollmann" }, } },
    {  527u, { { 0u, L"Untitled Document.md", L"David Stone" }, { 1u, L"Title1419", L"David Stone" }, } },
    {  528u, { { 0u, L"P0528r0: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", L"JF Bastien" }, { 1u, L"p0528r1: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", L"JF Bastien" }, { 2u, L"p0528R2: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", L"JF Bastien" }, { 3u, L"The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", L"JF Bastien" }, } },
    {  529u, { { 0u, L"Title615", L"Author758" }, } },
    {  532u, { { 0u, L"Microsoft Word - P0532R0_onlaunder_170114.docx", L"Author86" }, } },
    {  533u, { { 0u, L"Title1020", L"Author1323" }, { 1u, L"Title1115", L"Author1435" }, { 2u, L"Title239", L"Author286" }, { 3u, L"Title1324", L"Author1714" }, { 4u, L"Title706", L"Author879" }, { 5u, L"Title1185", L"Author1523" }, { 6u, L"Title642", L"Author793" }, { 7u, L"Title1540", L"Author1989" }, { 8u, L"Title253", L"Author299" }, { 9u, L"Title736", L"Author915" }, } },
    {  534u, { { 0u, L"call/cc: A low-level API for stackful context switching", L"Oliver Kowalke" }, { 1u, L"call/cc: A low-level API for stackful context switching", L"Oliver Kowalke" }, { 2u, L"call/cc: A low-level API for stackful context switching", L"Oliver Kowalke" }, { 3u, L"call/cc: A low-level API for stackful context switching", L"Oliver Kowalke" }, } },
    {  535u, { { 0u, L"Generalized Unpacking and Parameter Pack Slicing", L"Matthew Woehlke" }, } },
    {  536u, { { 0u, L"Implicit Return Type and Allowing Anonymous Types as Return Values", L"Matthew Woehlke" }, } },
    {  537u, { { 0u, L"Allow Attributes on Template Explicit Instantiations", L"Matthew Woehlke" }, } },
    {  538u, { { 0u, L"A Qualified Replacement for #pragma once", L"Matthew Woehlke" }, } },
    {  539u, { { 0u, L"A Proposal to add wide_int Class", L"Author2082" }, { 1u, L"A Proposal to add wide_int Class", L"Author1620" }, { 2u, L"A Proposal to add wide_int Class", L"Author116" }, { 3u, L"A Proposal to add wide_int Class", L"Author1431" }, { 4u, L"A Proposal to add wide_int Class", L"Author1807" }, { 5u, L"A Proposal to add wideint Template Class", L"Author816" }, } },
    {  540u, { { 0u, L"A Proposal to Add split/join of string/string_view to the Standard Library", L"Author1084" }, { 1u, L"A Proposal to Add split/join of string/string_view to the Standard Library", L"Author2062" }, } },
    {  541u, { { 0u, L"Ranges TS: Post-Increment on Input and Output Iterators", L"Eric Niebler" }, { 1u, L"Ranges TS: Post-Increment on Input and Output Iterators", L"Eric Niebler" }, } },
    {  542u, { { 0u, L"Support for contract based programming in C++", L"Author2006" }, { 1u, L"Support for contract based programming in C++", L"Author544" }, { 2u, L"Support for contract based programming in C++", L"Author600" }, { 3u, L"Support for contract based programming in C++", L"Author1586" }, { 4u, L"Support for contract based programming in C++", L"Author463" }, { 5u, L"Support for contract based programming in C++", L"Author441" }, } },
    {  543u, { { 0u, L"Saturation arithmetic", L"Author779" }, { 1u, L"Saturation arithmetic", L"Author1991" }, { 2u, L"Saturation arithmetic", L"Author1003" }, { 3u, L"Saturation arithmetic", L"Author2015" }, } },
    {  544u, { { 0u, L"User Injection of Filesystems", L"Author416" }, } },
    {  545u, { { 0u, L"Title778", L"Andrey Semashev" }, } },
    {  546u, { { 0u, L"P0546r0 : Span - foundation for the future", L"H. Carter" }, { 1u, L"P0546r1 : Span - foundation for the future", L"H. Carter" }, { 2u, L"P0546r2 : Span - foundation for the future", L"H. Carter" }, } },
    {  547u, { { 0u, L"Ranges TS: Assorted Object Concept Fixes", L"Eric Niebler" }, { 1u, L"Ranges TS: Assorted Object Concept Fixes", L"Eric Niebler" }, { 2u, L"Ranges TS: Assorted Object Concept Fixes", L"Eric Niebler" }, } },
    {  548u, { { 0u, L"commontype and duration", L"Author500" }, { 1u, L"commontype and duration", L"Author102" }, } },
    {  549u, { { 0u, L"Adjuncts to std::hash", L"Author1158" }, { 1u, L"Adjuncts to std::hash", L"Author858" }, { 2u, L"Adjuncts to std::hash", L"Author1026" }, { 3u, L"Adjuncts to std::hash", L"Author883" }, { 4u, L"Adjuncts to std::hash", L"Author1656" }, { 5u, L"Adjuncts to std::hash", L"Author568" }, { 6u, L"Adjuncts to std::hash", L"Author803" }, { 7u, L"Adjuncts to std::hash", L"Author978" }, } },
    {  550u, { { 0u, L"Transformation Trait uncvref", L"Author1449" }, { 1u, L"Transformation Trait uncvref", L"Author753" }, { 2u, L"Transformation Trait removecvref", L"Author1576" }, } },
    {  551u, { { 0u, L"Thou Shalt Not Specialize std Function Templates!", L"Author875" }, { 1u, L"Thou Shalt Not Specialize std Function Templates!", L"Author697" }, { 2u, L"Thou Shalt Not Specialize std Function Templates!", L"Author574" }, { 3u, L"Thou Shalt Not Specialize std Function Templates!", L"Author982" }, } },
    {  552u, { { 0u, L"enableif vs. requires: A Case Study", L"Author145" }, } },
    {  553u, { { 0u, L"Bit operations", L"Author45" }, { 1u, L"Bit operations", L"Author150" }, { 2u, L"Bit operations", L"Author626" }, { 3u, L"Bit operations", L"Author1753" }, { 4u, L"Bit operations", L"Author1942" }, } },
    {  554u, { { 0u, L"Title752", L"Author930" }, { 1u, L"p0554r1", L"Author919" }, } },
    {  555u, { { 0u, L"string_view for source_location", L"Axel Naumann" }, } },
    {  556u, { { 0u, L"Integral power-of-2 operations", L"Author1195" }, { 1u, L"Integral power-of-2 operations", L"Author1793" }, { 2u, L"Integral power-of-2 operations", L"Author1537" }, { 3u, L"Integral power-of-2 operations", L"Author601" }, } },
    {  557u, { { 0u, L"Title535", L"Author661" }, } },
    {  558u, { { 0u, L"Title719", L"Author890" }, { 1u, L"Title303", L"Author359" }, } },
    {  559u, { { 0u, L"Title1192", L"Author1539" }, } },
    {  560u, { { 0u, L"Class template deduction guides for \"diamond operators\"", L"Miro Knejp" }, } },
    {  561u, { { 0u, L"An RAII Interface for Deferred Reclamation", L"Author2039" }, { 1u, L"An RAII Interface for Deferred Reclamation", L"Author2153" }, { 2u, L"An RAII Interface for Deferred Reclamation", L"Author1298" }, { 3u, L"An RAII Interface for Deferred Reclamation", L"Author2232" }, { 4u, L"An RAII Interface for Deferred Reclamation", L"Author176" }, { 5u, L"An RAII Interface for Deferred Reclamation", L"Author47" }, { 6u, L"An RAII Interface for Deferred Reclamation", L"Author708" }, } },
    {  562u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author494" }, { 1u, L"Initialization List Symmetry", L"Author1735" }, { 2u, L"Initialization List Symmetry", L"Author951" }, } },
    {  563u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1947" }, } },
    {  564u, { { 0u, L"Wording for three-way comparisons", L"Author929" }, } },
    {  565u, { { 0u, L"P0565", L"Author373" }, } },
    {  566u, { { 0u, L"Title358", L"Michael Wong" }, { 1u, L"Title1366", L"Michael Wong" }, { 2u, L"Title329", L"Michael Wong" }, { 3u, L"Title361", L"Michael" }, { 4u, L"Title1013", L"Michael Wong" }, { 5u, L"Title1375", L"Michael Wong" }, } },
    {  567u, { { 0u, L"index.html", L"Gordon Brown" }, { 1u, L"P0567r1.html", L"Gordon Brown" }, } },
    {  568u, { { 0u, L"Title866", L"Michael Wong" }, } },
    {  569u, { { 0u, L"Title350", L"Michael Wong" }, } },
    {  570u, { { 0u, L"Title1174", L"Michael Wong" }, } },
    {  571u, { { 0u, L"P0571r0: Type Requirements for <numeric> Algorithms", L"Bryce Adelstein" }, { 1u, L"p0571r1: Type Requirements for <numeric> Algorithms", L"Bryce Adelstein" }, { 2u, L"Type Requirements for `<numeric>` Algorithms", L"Bryce Adelstein" }, } },
    {  572u, { { 0u, L"p0572r0: bit_sizeof and bit_offsetof", L"Alex Christensen" }, { 1u, L"p0572r1: bit_sizeof and bit_offsetof", L"Alex Christensen" }, { 2u, L"p0572R2: Static reflection of bit fields", L"Alex Christensen" }, } },
    {  573u, { { 0u, L"abbreviated lambdas", L"Barry Revzin" }, { 1u, L"Abbreviated Lambdas for Fun and Profit", L"Barry Revzin" }, { 2u, L"Abbreviated Lambdas for Fun and Profit", L"Barry Revzin" }, } },
    {  574u, { { 0u, L"Algorithm Complexity Constraints and Parallel Overloads", L"Anthony" }, { 1u, L"P0574r1: Algorithm Complexity Constraints and Parallel Overloads", L"Anthony" }, } },
    {  575u, { { 0u, L"Core \"ready\" Issues", L"Author456" }, { 1u, L"Core \"ready\" Issues", L"Author205" }, { 2u, L"Core \"ready\" Issues", L"Author2195" }, } },
    {  576u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author767" }, { 1u, L"Core \"tentatively ready\" Issues", L"Author748" }, } },
    {  577u, { { 0u, L"Title483", L"Author593" }, { 1u, L"Title1250", L"Author1613" }, } },
    {  578u, { { 0u, L"Title1703", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 1u, L"Title1070", L"Mat\u00FA\u0161 Chochl\u00EDk" }, } },
    {  579u, { { 0u, L"Constexpr for <experimental/ranges/iterator>", L"Casey Carter" }, { 1u, L"Constexpr for <experimental/ranges/iterator>", L"Casey Carter" }, } },
    {  581u, { { 0u, L"Title1457", L"gdr@microsoft.com" }, { 1u, L"Title1400", L"gdr@microsoft.com" }, } },
    {  582u, { { 0u, L"Title830", L"gdr@microsoft.com" }, } },
    {  583u, { { 0u, L"Title542", L"gdr@microsoft.com" }, } },
    {  584u, { { 0u, L"Title1350", L"gdr@microsoft.com" }, } },
    {  586u, { { 0u, L"Safe integral comparisons", L"Federico Kircheis" }, { 1u, L"Safe integral comparisons", L"Federico Kircheis" }, { 2u, L"Safe integral comparisons", L"Federico Kircheis" }, } },
    {  587u, { { 0u, L"Title395", L"Author470" }, } },
    {  588u, { { 0u, L"Title76", L"Author75" }, { 1u, L"Simplifying implicit lambda capture", L"Author1677" }, } },
    {  589u, { { 0u, L"p0589r0", L"Author1280" }, } },
    {  590u, { { 0u, L"p0590r0", L"Author1014" }, } },
    {  591u, { { 0u, L"P0591r0 | Utility functions to implement uses-allocator construction", L"Author1804" }, { 1u, L"P0591r1 | Utility functions to implement uses-allocator construction", L"Author1770" }, { 2u, L"P0591r2 | Utility functions to implement uses-allocator construction", L"Author44" }, { 3u, L"P0591r3 | Utility functions to implement uses-allocator construction", L"Author123" }, { 4u, L"P0591r4 | Utility functions to implement uses-allocator construction", L"Author668" }, } },
    {  592u, { { 0u, L"To boldly suggest an overall plan for C++20", L"Author1077" }, { 1u, L"To boldly suggest an overall plan for C++23", L"Author966" }, { 2u, L"To boldly suggest an overall plan for C++23", L"Author1836" }, { 3u, L"To boldly suggest an overall plan for C++23", L"Author2184" }, { 4u, L"To boldly suggest an overall plan for C++23", L"Author1499" }, { 5u, L"To boldly suggest an overall plan for C++26", L"Author2174" }, } },
    {  593u, { { 0u, L"What to do with buffers that are not arrays, and undefined behavior thereof?", L"Author1283" }, { 1u, L"p0593r1: Implicit creation of objects for low-level object manipulation", L"Richard Smith" }, { 2u, L"p0593r2: Implicit creation of objects for low-level object manipulation", L"Richard Smith" }, { 3u, L"Implicit creation of objects for low-level object manipulation", L"Richard Smith" }, { 4u, L"Implicit creation of objects for low-level object manipulation", L"Richard Smith" }, { 5u, L"Implicit creation of objects for low-level object manipulation", L"Richard Smith" }, { 6u, L"Implicit creation of objects for low-level object manipulation", L"Richard Smith" }, } },
    {  594u, { { 0u, L"Relative comparisons and std::less<T*>", L"Author1641" }, } },
    {  595u, { { 0u, L"Title994", L"Author1281" }, { 1u, L"std::is_constant_evaluated", L"Author1313" }, { 2u, L"std::is_constant_evaluated", L"Author450" }, } },
    {  596u, { { 0u, L"Title478", L"Author587" }, { 1u, L"Title772", L"Daveed Vandevoorde" }, } },
    {  597u, { { 0u, L"Title77", L"Author76" }, } },
    {  598u, { { 0u, L"Title1702", L"Author2226" }, } },
    {  599u, { { 0u, L"Microsoft Word - P0599R0_hash_noexcept_170206.docx", L"Author291" }, { 1u, L"P0599R1 noexcept for hash functions (US140)", L"Author786" }, } },
    {  600u, { { 0u, L"Microsoft Word - P0600R0_nodiscard_in_the_library_170206.docx", L"Author918" }, { 1u, L"P0600R1 [[nodiscard]] in the library", L"Author1243" }, } },
    {  601u, { { 0u, L"Establishing a direction for SIMD-enabled functions", L"Author1389" }, } },
    {  602u, { { 0u, L"variant and optional should propagate copy/move triviality", L"Zhihao Yuan" }, { 1u, L"variant and optional should propagate copy/move triviality", L"Zhihao Yuan" }, { 2u, L"variant and optional should propagate copy/move triviality", L"Zhihao Yuan" }, { 3u, L"variant and optional should propagate copy/move triviality", L"Zhihao Yuan" }, { 4u, L"variant and optional should propagate copy/move triviality", L"Zhihao Yuan" }, } },
    {  603u, { { 0u, L"ISO/IEC JTC1/SC22/WG21p0603r0", L"Author1920" }, } },
    {  604u, { { 0u, L"Resolving GB 55, US 84, US 85, US 86", L"Daniel Kr\u00FCgler" }, } },
    {  606u, { { 0u, L"Title498", L"gdr@microsoft.com" }, } },
    {  607u, { { 0u, L"Inline Variables for the Standard Library", L"Daniel Kr\u00FCgler" }, } },
    {  608u, { { 0u, L"A sane variant converting constructor (LEWG 227)", L"Zhihao Yuan" }, { 1u, L"A sane variant converting constructor - HackMD", L"Zhihao Yuan" }, { 2u, L"(Foswiki login) Html < Wg21rapperswil2018/StrawPolls < Foswiki", L"Author1089" }, { 3u, L"A sane variant converting constructor - HackMD", L"Zhihao Yuan" }, } },
    {  609u, { { 0u, L"Title988", L"Aaron Ballman" }, { 1u, L"Title1029", L"Aaron Ballman" }, { 2u, L"Title1005", L"Aaron Ballman" }, { 3u, L"Title1651", L"Aaron Ballman" }, } },
    {  610u, { { 0u, L"C++ Standard Library \"Review\" Issues Resolved in Kona", L"Author1476" }, } },
    {  611u, { { 0u, L"More Better Operators", L"Lawrence Crowl" }, } },
    {  612u, { { 0u, L"NB comment CH 2: volatile", L"Author457" }, } },
    {  613u, { { 0u, L"GB15: Issue 2011 resolution", L"\u00A0\u00A0\u00A0" }, } },
    {  614u, { { 0u, L"Range-based for statements with initializer", L"Author837" }, { 1u, L"Range-based for statements with initializer", L"Author683" }, } },
    {  615u, { { 0u, L"Renaming for structured bindings", L"Author1823" }, } },
    {  616u, { { 0u, L"Title825", L"Author1030" }, } },
    {  618u, { { 0u, L"Deprecating <codecvt>", L"Author1967" }, } },
    {  619u, { { 0u, L"Reviewing Deprecated Facilities of C++17 for C++20", L"Author591" }, { 1u, L"Reviewing Deprecated Facilities of C++17 for C++20", L"Author1746" }, { 2u, L"Reviewing Deprecated Facilities of C++17 for C++20", L"Author1669" }, { 3u, L"Reviewing Deprecated Facilities of C++17 for C++20", L"Author868" }, { 4u, L"Reviewing Deprecated Facilities of C++17 for C++20", L"Author1609" }, } },
    {  620u, { { 0u, L"Drafting for class template argument deduction issues", L"Author1259" }, } },
    {  621u, { { 0u, L"Ready Ranges TS Issues", L"Casey Carter" }, } },
    {  622u, { { 0u, L"Core \"ready\" Issues", L"Author1627" }, } },
    {  623u, { { 0u, L"P0623r0: Final C++17 Parallel Algorithms Fixes", L"Bryce Adelstein" }, } },
    {  624u, { { 0u, L"Title422", L"Louis Dionne" }, { 1u, L"Title827", L"Louis Dionne" }, { 2u, L"Title1085", L"Louis Dionne" }, } },
    {  625u, { { 0u, L"C++ Standard Library Issues Resolved Directly In Kona", L"Author1227" }, } },
    {  627u, { { 0u, L"Attribute to mark unreachable code", L"Melissa Mears" }, { 1u, L"Unreachable Attribute R1", L"Melissa Mears" }, { 3u, L"Title1283", L"Melissa Mears" }, { 5u, L"Title449", L"Melissa Mears" }, { 6u, L"Title147", L"Melissa Mears" }, } },
    {  629u, { { 0u, L"Title1661", L"Author2157" }, } },
    {  630u, { { 0u, L"To boldly suggest a pub crawl for C++ Toronto", L"Author833" }, } },
    {  631u, { { 0u, L"Title1572", L"Lev Minkovsky" }, { 1u, L"Title761", L"Lev Minkovsky" }, { 2u, L"Title886", L"Lev Minkovsky" }, { 3u, L"Title1602", L"Lev Minkovsky" }, { 4u, L"Title622", L"Lev Minkovsky" }, { 5u, L"Title676", L"Lev Minkovsky" }, { 6u, L"Title923", L"Lev Minkovsky" }, { 7u, L"Title1222", L"Lev Minkovsky" }, { 8u, L"Title1242", L"Lev Minkovsky" }, } },
    {  632u, { { 0u, L"Proposal of [[uninitialized]] attribute", L"Author1861" }, } },
    {  633u, { { 0u, L"Title710", L"Daveed Vandevoorde" }, } },
    {  634u, { { 0u, L"Untitled", L"Author364" }, { 1u, L"Down with typename!", L"Author842" }, { 2u, L"Down with typename!", L"Author1791" }, { 3u, L"Down with typename!", L"Author23" }, } },
    {  635u, { { 0u, L"p0635r0 - c_array addition proposal (090617).pages", L"Dan Raviv" }, } },
    {  636u, { { 0u, L"Changes between C++14 and C++17", L"Author1730" }, { 1u, L"Changes between C++14 and C++17", L"Author248" }, { 2u, L"Changes between C++14 and C++17", L"Author451" }, { 3u, L"Changes between C++14 and C++17", L"Author688" }, } },
    {  637u, { { 0u, L"Capture *this with initializer", L"Author1473" }, } },
    {  638u, { { 0u, L"Title859", L"Ed Schouten" }, } },
    {  639u, { { 0u, L"Changing attack vector of the constexpr_vector", L"Author1686" }, } },
    {  640u, { { 0u, L"Title1133", L"Emil Dotchevski" }, } },
    {  641u, { { 0u, L"Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)", L"Daniel Kr\u00FCgler" }, { 1u, L"Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)", L"Daniel Kr\u00FCgler" }, { 2u, L"Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)", L"Daniel Kr\u00FCgler" }, } },
    {  642u, { { 0u, L"Title1249", L"Mingxin Wang" }, { 1u, L"Title530", L"Mingxin Wang" }, { 2u, L"Title1062", L"Mingxin Wang" }, { 3u, L"Title1018", L"Mingxin Wang" }, { 4u, L"Title73", L"Mingxin Wang" }, } },
    {  643u, { { 0u, L"Title154", L"Michael Wong" }, } },
    {  644u, { { 0u, L"Forward without forward", L"Barry Revzin" }, { 1u, L"Forward without forward", L"Barry Revzin" }, } },
    {  645u, { { 0u, L"Text Formatting", L"Author872" }, { 1u, L"Text Formatting", L"Victor Zverovich" }, { 2u, L"Text Formatting", L"Victor Zverovich" }, { 3u, L"Text Formatting", L"Victor Zverovich" }, { 4u, L"Text Formatting", L"Victor Zverovich" }, { 5u, L"Text Formatting", L"Victor Zverovich" }, { 7u, L"Text Formatting", L"Victor Zverovich" }, { 9u, L"Text Formatting", L"Victor Zverovich" }, { 10u, L"Text Formatting", L"Victor Zverovich" }, } },
    {  646u, { { 0u, L"Title619", L"Marc Mutz" }, { 1u, L"Title1237", L"Marc Mutz" }, } },
    {  647u, { { 0u, L"Title1235", L"Author1594" }, { 1u, L"Title1065", L"Author1373" }, } },
    {  648u, { { 0u, L"p0648r0", L"Vicente J" }, } },
    {  649u, { { 0u, L"p0649r0", L"Vicente J" }, } },
    {  650u, { { 0u, L"p0650r0", L"Vicente J" }, { 1u, L"p0650r1", L"Vicente J" }, { 2u, L"p0650r2", L"Vicente J" }, } },
    {  651u, { { 0u, L"Switch the Ranges TS to Use Variable Concepts", L"Eric Niebler" }, { 1u, L"Switch the Ranges TS to Use Variable Concepts", L"Eric Niebler" }, } },
    {  652u, { { 0u, L"Concurrent associative data structure with unsynchronized view", L"Author1171" }, { 1u, L"Concurrent associative data structure with unsynchronized view", L"Author888" }, { 2u, L"Concurrent associative data structure with unsynchronized view", L"Author1219" }, { 3u, L"Concurrent associative data structure with unsynchronized view", L"Author2056" }, } },
    {  653u, { { 0u, L"pointer_traits utility to convert to raw pointer", L"Glen Joseph" }, { 1u, L"Utility to convert a pointer to a raw pointer", L"Glen Joseph" }, { 2u, L"Utility to convert a pointer to a raw pointer", L"Glen Joseph" }, } },
    {  654u, { { 0u, L"Title1371", L"Lo\uF8E0Joly" }, } },
    {  655u, { { 0u, L"visit<R>: Explicit Return Type for visit", L"Michael Park" }, { 1u, L"visit<R>: Explicit Return Type for visit", L"Michael Park" }, } },
    {  656u, { { 0u, L"Reducing <ratio>", L"Author126" }, } },
    {  657u, { { 0u, L"Deprecate Certain Declarations in the Global Namespace", L"Author1918" }, { 1u, L"Deprecate Certain Declarations in the Global Namespace", L"Author1507" }, { 2u, L"Deprecate Certain Declarations in the Global Namespace", L"Author1905" }, } },
    {  658u, { { 0u, L"P0658R0 -- Proposal for adding alias declarations to concepts", L"Christopher Di" }, { 1u, L"wg21 | For documenting all WG21-related proposals", L"Christopher Di" }, } },
    {  659u, { { 0u, L"Microsoft Word - P0659R0_futurestatus_draft_170613.docx", L"Author2084" }, } },
    {  660u, { { 0u, L"P0660R0", L"Author869" }, { 2u, L"P0660R3", L"Author1349" }, { 3u, L"P0660R3", L"Author276" }, { 4u, L"C++ International Standard", L"Author1225" }, { 5u, L"C++ International Standard", L"Author479" }, { 6u, L"P0660R6 A Cooperatively Interruptible Joining Thread, Rev 6", L"Author401" }, { 7u, L"P0660R7 Interrupt Tokens and a Joining Thread, Rev 7", L"Author1913" }, { 8u, L"C++ International Standard", L"Author764" }, { 9u, L"P0660R9", L"Author13" }, { 10u, L"P0660", L"Author68" }, } },
    {  661u, { { 0u, L"Title773", L"Allan Deutsch" }, } },
    {  662u, { { 0u, L"Working Draft, C++ Extensions for Ranges", L"Author863" }, } },
    {  663u, { { 0u, L"Ranges TS Ready Issues for the July 2017 (Toronto) meeting", L"Casey Carter" }, } },
    {  664u, { { 0u, L"C++ Coroutine TS Issues", L"Author234" }, { 1u, L"C++ Coroutine TS Issues", L"Author2095" }, { 2u, L"C++ Coroutine TS Issues", L"Author51" }, { 3u, L"C++ Coroutine TS Issues", L"Author147" }, { 4u, L"C++ Coroutine TS Issues", L"Author1277" }, { 5u, L"C++ Coroutine TS Issues", L"Author414" }, { 6u, L"C++ Coroutine TS Issues", L"Author864" }, { 7u, L"C++ Coroutine TS Issues", L"Author2102" }, { 8u, L"C++ Coroutine TS Issues", L"Author2234" }, } },
    {  665u, { { 0u, L"Title41", L"Tristan Brindle" }, { 1u, L"Title878", L"Tristan Brindle" }, } },
    {  666u, { { 0u, L"C++ Latches and Barriers", L"Alasdair Mackintosh" }, { 1u, L"P0666R1", L"Olivier Giroux" }, { 2u, L"P0666R2", L"Olivier Giroux" }, } },
    {  667u, { { 0u, L"Moving std::future extensions forward", L"Hans-J. Boehm" }, } },
    {  668u, { { 0u, L"Moving std::future extensions forward", L"Hans-J. Boehm" }, { 1u, L"Revising the C++ memory model", L"Hans-J. Boehm" }, { 2u, L"Revising the C++ memory model", L"Hans-J. Boehm" }, { 3u, L"Revising the C++ memory model", L"Hans-J. Boehm" }, { 4u, L"Revising the C++ memory model", L"Hans-J. Boehm" }, { 5u, L"Revising the C++ memory model", L"Hans-J. Boehm" }, } },
    {  669u, { { 0u, L"Title473", L"Author581" }, } },
    {  670u, { { 0u, L"Static reflection of functions", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 1u, L"Static reflection of functions", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 2u, L"Static reflection of functions", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 3u, L"Function reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 4u, L"Function reflection", L"Mat\u00FA\u0161 Chochl\u00EDk" }, } },
    {  671u, { { 0u, L"Parametric Functions", L"Axel Naumann" }, { 1u, L"Function Arguments That Speak", L"Axel Naumann" }, { 2u, L"Self-explanatory Function Arguments", L"Axel Naumann" }, } },
    {  672u, { { 0u, L"Title63", L"Joel Falcou" }, } },
    {  673u, { { 0u, L"Title367", L"Herb Sutter" }, } },
    {  674u, { { 0u, L"Extending make_shared to Support Arrays", L"Author830" }, { 1u, L"Extending make_shared to Support Arrays", L"Author780" }, } },
    {  675u, { { 0u, L"Title1667", L"Author2166" }, } },
    {  676u, { { 0u, L"future_proposal_P0676R0", L"Felix Petriconi" }, } },
    {  678u, { { 0u, L"Title1266", L"Author1637" }, } },
    {  679u, { { 0u, L"Title607", L"Torvald Riegel" }, } },
    {  680u, { { 0u, L"Title653", L"Torvald Riegel" }, } },
    {  681u, { { 0u, L"Title1228", L"Lisa Lippincott" }, } },
    {  682u, { { 0u, L"Repairing elementary string conversions (LWG 2955)", L"Author1799" }, { 1u, L"Repairing elementary string conversions (LWG 2955)", L"Author1257" }, } },
    {  683u, { { 0u, L"Default member initializers for bit-fields", L"Author821" }, { 1u, L"Default member initializers for bit-fields (revision 1)", L"Author1727" }, } },
    {  684u, { { 0u, L"Title182", L"Author224" }, { 1u, L"Title659", L"Author831" }, { 2u, L"Title1101", L"Author1416" }, } },
    {  685u, { { 0u, L"Title263", L"Michael Wong" }, } },
    {  686u, { { 0u, L"Title261", L"Michael Wong" }, } },
    {  687u, { { 0u, L"Title1041", L"Ruyman Reyes" }, } },
    {  688u, { { 0u, L"Title1166", L"Chris Kohlhoff" }, } },
    {  689u, { { 0u, L"Title1618", L"gdr@microsoft.com" }, } },
    {  690u, { { 0u, L"p0690r0: Tearable Atomics", L"JF Bastien" }, { 1u, L"p0690r1: Tearable Atomics", L"JF Bastien" }, } },
    {  691u, { { 0u, L"Title272", L"Author322" }, } },
    {  692u, { { 0u, L"Access Checking on Specializations", L"Author1921" }, { 1u, L"Access Checking on Specializations", L"Author2156" }, } },
    {  694u, { { 0u, L"Title828", L"Author1031" }, } },
    {  695u, { { 0u, L"Title1368", L"Author1762" }, } },
    {  696u, { { 0u, L"Remove abbreviated functions and template-introduction syntax from the Concepts TS", L"Tom Honermann" }, { 1u, L"Remove abbreviated functions and template-introduction syntax from the Concepts TS", L"Tom Honermann" }, } },
    {  697u, { { 0u, L"Title32", L"Herb Sutter" }, } },
    {  698u, { { 0u, L"C++ Standard Library Issues to be moved in Toronto", L"Author1643" }, } },
    {  699u, { { 0u, L"C++ Standard Library Issues Resolved Directly In Toronto", L"Author282" }, } },
    {  700u, { { 0u, L"Title277", L"Author331" }, } },
    {  701u, { { 0u, L"P0701r0: Back to the std2::future", L"Bryce Adelstein" }, { 1u, L"p0701r1: Back to the std2::future Part II", L"Bryce Adelstein" }, { 2u, L"p0701r2: Back to the std2::future Part II", L"Bryce Adelstein" }, } },
    {  702u, { { 0u, L"Language support for Constructor Template Argument Deduction", L"Mike Spertus" }, { 1u, L"Language support for Constructor Template Argument Deduction", L"Mike Spertus" }, } },
    {  703u, { { 0u, L"Title1107", L"David Sankel" }, } },
    {  704u, { { 0u, L"Fixing const-qualified pointers to members", L"Barry Revzin" }, { 1u, L"Fixing const-qualified pointers to members", L"Barry Revzin" }, } },
    {  705u, { { 0u, L"Title1504", L"Tony Van" }, } },
    {  706u, { { 0u, L"Efficient headers for modules (or not)", L"Author678" }, } },
    {  707u, { { 0u, L"Title1704", L"Herb Sutter" }, { 1u, L"Title1170", L"Herb Sutter" }, { 2u, L"Title206", L"Herb Sutter" }, { 3u, L"Title1360", L"Herb Sutter" }, { 4u, L"Title242", L"Herb Sutter" }, { 5u, L"Title356", L"Herb Sutter" }, } },
    {  709u, { { 0u, L"Title970", L"Outcome is" }, { 1u, L"Title755", L"Outcome is" }, { 2u, L"Title1631", L"Outcome is" }, { 3u, L"Title316", L"Outcome is" }, { 4u, L"Title673", L"Outcome is" }, } },
    {  710u, { { 0u, L"Core \"ready\" Issues", L"Author811" }, { 1u, L"Core \"ready\" Issues", L"Author2077" }, } },
    {  711u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author2219" }, } },
    {  712u, { { 0u, L"p0712", L"Author1982" }, } },
    {  713u, { { 0u, L"Untitled", L"Author2162" }, { 1u, L"Title1336", L"Author1728" }, } },
    {  714u, { { 0u, L"Title812", L"Author1017" }, } },
    {  715u, { { 0u, L"Title1118", L"Author1439" }, } },
    {  716u, { { 0u, L"Title1328", L"Author1720" }, } },
    {  717u, { { 0u, L"Title93", L"Author100" }, { 1u, L"Title315", L"Author370" }, } },
    {  718u, { { 0u, L"Revising atomic_shared_ptr for C++20", L"Author1745" }, { 2u, L"Revising atomic_shared_ptr for C++20", L"Author1495" }, } },
    {  721u, { { 0u, L"Title1444", L"Author1862" }, } },
    {  722u, { { 0u, L"ISO/IEC JTC1/SC22/WG21p0722r0", L"Author227" }, { 1u, L"Title808", L"Author1006" }, { 2u, L"Efficient sized delete for variable sized classes", L"Author1304" }, { 3u, L"Efficient sized delete for variable sized classes", L"Author1333" }, } },
    {  723u, { { 0u, L"Response to Clarifying the status of feature test macros", L"Author946" }, } },
    {  724u, { { 0u, L"Merge the Concepts TS Working Draft into the C++20 working draft", L"Author828" }, } },
    {  725u, { { 0u, L"Remove the requirement for constrained-type-specifiers to be deduced to the same type from the Concepts TS", L"Tom Honermann" }, } },
    {  726u, { { 0u, L"Does the Concepts TS Improve on C++17?", L"Author1202" }, } },
    {  727u, { { 0u, L"Core Issue 1299: Temporary objects vs temporary expressions", L"Author2027" }, } },
    {  728u, { { 0u, L"Wording for Networking PDTS ballot comment 005", L"Author482" }, } },
    {  729u, { { 0u, L"Proposed wording for Networking TS NB comment GB 9", L"Christopher Kohlhoff" }, } },
    {  730u, { { 0u, L"Options for addressing requires-clause syntax ambiguities", L"Hubert S.K" }, { 1u, L"requires-clause syntax ambiguities: wording to apply custom grammar", L"Hubert S.K" }, } },
    {  731u, { { 0u, L"Title1014", L"Author1309" }, } },
    {  732u, { { 0u, L"Title1227", L"Jeff Snyder" }, { 1u, L"Title963", L"Jeff Snyder" }, { 2u, L"Title1645", L"Jeff Snyder" }, } },
    {  734u, { { 0u, L"C++ Technical Specification", L"Author1621" }, } },
    {  735u, { { 0u, L"Interaction of memory_order_consume with release sequences", L"Will Deacon" }, { 1u, L"Interaction of memory_order_consume with release sequences", L"Will Deacon" }, } },
    {  736u, { { 0u, L"Nameless parameters and unutterable specializations", L"Hubert S.K" }, { 1u, L"Nameless parameters and unutterable specializations", L"Hubert S.K" }, } },
    {  737u, { { 0u, L"P0737r0 : Execution Context of Execution Agents", L"H. Carter" }, } },
    {  738u, { { 0u, L"I Stream, You Stream, We All Stream for istream_iterator", L"Casey Carter" }, { 1u, L"I Stream, You Stream, We All Stream for istream_iterator", L"Casey Carter" }, { 2u, L"I Stream, You Stream, We All Stream for istream_iterator", L"Casey Carter" }, } },
    {  739u, { { 0u, L"Some improvements to class template argument deduction integration into the standard library", L"\u00A0\u00A0\u00A0Mike Spertus" }, } },
    {  740u, { { 0u, L"Ranges TS Immediate Issues from the July 2017 (Toronto) meeting", L"Casey Carter" }, } },
    {  742u, { { 0u, L"Wording for Networking PDTS ballot comment resolutions", L"Author346" }, } },
    {  745u, { { 0u, L"Title482", L"Herb Sutter" }, { 1u, L"Title1295", L"Herb Sutter" }, } },
    {  746u, { { 0u, L"Wording for Networking PDTS ballot comment 011 (US-10)", L"Author740" }, } },
    {  747u, { { 0u, L"Wording for Networking PDTS ballot comments 026 (GB-15) and 027 (GB-16)", L"Author1129" }, { 1u, L"Wording for Networking PDTS ballot comment 026 (GB-15), but not 027 (GB-16)", L"Author1951" }, } },
    {  748u, { { 0u, L"Wording for Networking PDTS ballot comments on reentrancy", L"Author711" }, } },
    {  749u, { { 0u, L"Title748", L"Author928" }, } },
    {  750u, { { 0u, L"p0750r0: Consume", L"JF Bastien" }, { 1u, L"p0750r1: Consume", L"JF Bastien" }, } },
    {  752u, { { 0u, L"Title1064", L"Author1372" }, } },
    {  753u, { { 0u, L"Title724", L"Author895" }, { 1u, L"Title1308", L"Author1683" }, { 2u, L"Title1194", L"Author1541" }, } },
    {  754u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author952" }, { 1u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1994" }, { 2u, L"Version Header 06 P0754R2", L"Author662" }, } },
    {  756u, { { 0u, L"Lambda syntax should be more liberal in what it accepts", L"Author1685" }, } },
    {  757u, { { 0u, L"regex_iterator should be iterable", L"Author841" }, } },
    {  758u, { { 0u, L"Implicit conversion traits and utility functions", L"Daniel Kr\u00FCgler" }, { 1u, L"Implicit conversion traits and utility functions", L"Daniel Kr\u00FCgler" }, } },
    {  759u, { { 0u, L"fpos requirements", L"Daniel Kr\u00FCgler" }, { 1u, L"fpos requirements", L"Daniel Kr\u00FCgler" }, } },
    {  761u, { { 0u, L"Title1586", L"Jared Hoberock" }, { 1u, L"Title883", L"Jared Hoberock" }, { 2u, L"Title826", L"Jared Hoberock" }, } },
    {  762u, { { 0u, L"Title432", L"Niall Douglas" }, } },
    {  766u, { { 0u, L"Fixing small-ish functionality gaps in constraints", L"Author1590" }, { 1u, L"Fixing small-ish functionality gaps in constraints", L"Author1273" }, } },
    {  767u, { { 0u, L"Expunge POD", L"Author472" }, { 1u, L"Deprecate POD", L"Author1050" }, } },
    {  768u, { { 0u, L"Library Support for the Spaceship (Comparison) Operator", L"Author1658" }, { 1u, L"Library Support for the Spaceship (Comparison) Operator", L"Author705" }, } },
    {  769u, { { 0u, L"shift proposal P0769R0.pages", L"Dan Raviv" }, { 1u, L"shift proposal P0769R1.pages", L"Dan Raviv" }, { 2u, L"shift proposal P0769R2.pages", L"Dan Raviv" }, } },
    {  770u, { { 0u, L"Title1033", L"Author1342" }, } },
    {  771u, { { 0u, L"Title560", L"Nevin " }, { 1u, L"Title66", L"Nevin " }, } },
    {  772u, { { 0u, L"Title511", L"Nat Goodspeed" }, { 1u, L"Title1178", L"Nat Goodspeed" }, } },
    {  773u, { { 0u, L"Towards meaningful fancy pointers", L"Author1776" }, } },
    {  774u, { { 0u, L"Module Declaration Location", L"Author1164" }, } },
    {  775u, { { 0u, L"Module Partitions", L"Author332" }, } },
    {  776u, { { 0u, L"Rebase the Parallelism TS onto the C++17 Standard", L"Author486" }, { 1u, L"Rebase the Parallelism TS onto the C++17 Standard", L"Author300" }, } },
    {  777u, { { 0u, L"Treating Unnecessary decay", L"Author498" }, { 1u, L"Treating Unnecessary decay", L"Author2127" }, } },
    {  778u, { { 0u, L"Module Names", L"Author723" }, } },
    {  779u, { { 0u, L"Title630", L"Niall Douglas" }, } },
    {  780u, { { 0u, L"Pack expansion in lambda init-capture", L"Barry Revzin" }, { 1u, L"Pack expansion in lambda init-capture", L"Barry Revzin" }, { 2u, L"Pack expansion in lambda init-capture", L"Barry Revzin" }, } },
    {  781u, { { 0u, L"A Modern C++ Signature for Main", L"Author896" }, } },
    {  782u, { { 0u, L"A Case for Simplifying/Improving Natural Syntax Concepts", L"Author384" }, { 1u, L"Title1071", L"Author1380" }, { 2u, L"Title1473", L"Author1910" }, } },
    {  783u, { { 0u, L"P0783: Continuations without overcomplicating the future", L"Lee Howes" }, } },
    {  784u, { { 0u, L"Title79", L"Author78" }, { 1u, L"Title67", L"Author63" }, { 2u, L"Title807", L"Author1001" }, { 3u, L"More constexpr containers", L"Author867" }, { 4u, L"More constexpr containers", L"Author106" }, { 5u, L"More constexpr containers", L"Author279" }, { 6u, L"More constexpr containers", L"Author1072" }, { 7u, L"More constexpr containers", L"Author2110" }, } },
    {  785u, { { 0u, L"Runtime-sized arrays and a C++ wrapper", L"Author493" }, } },
    {  786u, { { 0u, L"p0786r0", L"Vicente J" }, { 1u, L"p0786r1", L"Vicente J" }, } },
    {  787u, { { 0u, L"Proclaimed Ownership Declarations", L"Author1470" }, } },
    {  788u, { { 0u, L"Standard Library Specification in a Concepts and Contracts World", L"Author296" }, { 1u, L"Standard Library Specification in a Concepts and Contracts World", L"Author805" }, { 2u, L"Standard Library Specification in a Concepts and Contracts World", L"Author1141" }, { 3u, L"Standard Library Specification in a Concepts and Contracts World", L"Author1969" }, } },
    {  789u, { { 0u, L"Range Adaptors and Utilities", L"Author769" }, { 1u, L"Range Adaptors and Utilities", L"Author850" }, { 2u, L"Range Adaptors and Utilities", L"Author2005" }, { 3u, L"Range Adaptors and Utilities", L"Author1608" }, } },
    {  790u, { { 0u, L"library-operator-spaceship", L"David Stone" }, { 1u, L"Title162", L"David Stone" }, { 2u, L"Title1634", L"David Stone" }, } },
    {  791u, { { 0u, L"Title662", L"Author834" }, } },
    {  792u, { { 0u, L"Title359", L"Author419" }, { 1u, L"Untitled", L"Author371" }, { 2u, L"Untitled", L"Author1958" }, { 3u, L"Untitled", L"Author2204" }, { 4u, L"Untitled", L"Author732" }, { 5u, L"function_ref: a non-owning reference to a Callable", L"Vittorio Romeo" }, { 6u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 7u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 8u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 9u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 10u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 11u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 12u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 13u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, { 14u, L"function_ref: a type-erased callable reference - HackMD", L"Vittorio Romeo" }, } },
    {  793u, { { 0u, L"Title1566", L"Michael Wong" }, } },
    {  794u, { { 0u, L"Title1666", L"Michael Wong" }, } },
    {  795u, { { 0u, L"Title42", L"Simon" }, } },
    {  796u, { { 0u, L"Title919", L"Gordon" }, { 1u, L"Title14", L"Gordon Brown" }, { 2u, L"Title798", L"Gordon Brown" }, { 3u, L"Title468", L"Gordon Brown" }, } },
    {  797u, { { 0u, L"Title54", L"Matti" }, { 1u, L"Title262", L"Matti Rintala" }, { 2u, L"Title1298", L"Matti Rintala" }, } },
    {  798u, { { 0u, L"p0798r0: Monadic operations for std::optional", L"Author1639" }, { 2u, L"p0798R2: Monadic operations for std::optional", L"Simon Brand" }, { 3u, L"p0798R3: Monadic operations for std::optional", L"Simon Brand" }, { 4u, L"p0798R4: Monadic operations for std::optional", L"Simon Brand" }, { 6u, L"p0798R6: Monadic operations for std::optional", L"Sy Brand" }, { 8u, L"Monadic operations for std::optional", L"Sy Brand" }, } },
    {  799u, { { 0u, L"Title142", L"Stephen" }, { 1u, L"Baseline for Ed 2 of TR 24772", L"Stephen Michel" }, } },
    {  800u, { { 0u, L"wg21 | For documenting all WG21-related proposals", L"Christopher Di" }, } },
    {  801u, { { 0u, L"Title966", L"Mingxin Wang" }, } },
    {  802u, { { 0u, L"Standard Library Concepts -", L"Beman Dawes" }, } },
    {  803u, { { 0u, L"Endian RFC", L"Author1420" }, } },
    {  804u, { { 0u, L"Impact of the Modules TS on the C++ tools ecosystem", L"Tom Honermann" }, } },
    {  805u, { { 0u, L"Title723", L"Marshall Clow" }, { 1u, L"Comparing Containers", L"Author1868" }, { 2u, L"Comparing Containers", L"Author950" }, } },
    {  806u, { { 0u, L"Deprecate Implicit Capture of this", L"Author2199" }, { 1u, L"Deprecate implicit capture of this via [=]", L"Author2225" }, { 2u, L"Deprecate implicit capture of this via [=]", L"Author1146" }, } },
    {  807u, { { 0u, L"An Adjective Syntax for Concepts", L"Author2022" }, } },
    {  808u, { { 0u, L"Title1600", L"Author2066" }, } },
    {  809u, { { 0u, L"Title1252", L"Author1616" }, } },
    {  810u, { { 0u, L"Title1482", L"Ben Deane" }, } },
    {  811u, { { 0u, L"Well-behaved interpolation for numbers and pointers", L"Author326" }, { 1u, L"Well-behaved interpolation for numbers and pointers", L"Author1233" }, { 2u, L"Well-behaved interpolation for numbers and pointers", L"Author1919" }, { 3u, L"Well-behaved interpolation for numbers and pointers", L"Author2155" }, } },
    {  812u, { { 0u, L"copy-list-initialization is inherently un-=", L"Author1375" }, } },
    {  813u, { { 0u, L"Microsoft Word - P0813R0_retval_construct.docx", L"Author1085" }, { 1u, L"P0813R1", L"Author1743" }, } },
    {  814u, { { 0u, L"Microsoft Word - P0814R0_hash_combine.docx", L"Author2090" }, { 2u, L"Microsoft Word - P0814R2_hash_combine.docx", L"Author1992" }, } },
    {  815u, { { 0u, L"C++ Standard Library Issues to be moved in Albuquerque", L"Author824" }, } },
    {  816u, { { 0u, L"Title221", L"Author262" }, } },
    {  817u, { { 0u, L"Core \"ready\" Issues", L"Author1339" }, } },
    {  818u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author2064" }, { 1u, L"Core \"tentatively ready\" Issues", L"Author613" }, } },
    {  819u, { { 0u, L"Microsoft Word - P0819R0_feature_macros.docx", L"Author2158" }, } },
    {  820u, { { 0u, L"Title895", L"Author1122" }, { 1u, L"Title1340", L"Author1736" }, { 2u, L"Title193", L"Author232" }, { 3u, L"Title1545", L"Author1998" }, { 4u, L"Title151", L"Author177" }, } },
    {  821u, { { 0u, L"Title1322", L"Author1712" }, } },
    {  822u, { { 0u, L"Title977", L"gdr@microsoft.com" }, } },
    {  824u, { { 0u, L"Title1038", L"Arthur" }, { 1u, L"Summary of SG14 discussion on <system_error>", L"Author278" }, } },
    {  825u, { { 0u, L"A friendlier tuple get", L"Agust\u00EDn Berg\u00E9" }, { 1u, L"A friendlier tuple get", L"Agust\u00EDn Berg\u00E9" }, } },
    {  826u, { { 0u, L"SFINAE-friendly std::bind", L"Agust\u00EDn Berg\u00E9" }, } },
    {  827u, { { 0u, L"Title305", L"Author360" }, } },
    {  828u, { { 0u, L"Title1642", L"Author2123" }, { 1u, L"Title1309", L"John McFarlane" }, } },
    {  829u, { { 0u, L"Title618", L"Ben Craig" }, { 1u, L"Title959", L"Ben Craig" }, { 2u, L"Title299", L"Ben Craig" }, { 3u, L"Title1532", L"Ben Craig" }, { 4u, L"Title1255", L"Ben Craig" }, } },
    {  830u, { { 0u, L"Microsoft Word - P0830R0_requires_in_lib.docx", L"Author2051" }, } },
    {  831u, { { 0u, L"Keep alias syntax extendable", L"\u00A0\u00A0" }, } },
    {  832u, { { 0u, L"Module TS Wording Does Not Support Intended Use Case", L"Steve Downey" }, } },
    {  834u, { { 0u, L"p0834r0: Lifting overload sets into objects", L"Micha\u0142 Dominiak" }, } },
    {  835u, { { 0u, L"Adopt SD-6 feature macros into the C++20 working draft", L"Author395" }, } },
    {  836u, { { 0u, L"Title1267", L"Gordon Brown" }, { 1u, L"Title1288", L"Gordon Brown" }, } },
    {  837u, { { 0u, L"Ruminations on modular macros", L"Author1123" }, } },
    {  838u, { { 0u, L"Title226", L"Author272" }, } },
    {  839u, { { 0u, L"Recursive lambdas", L"Author924" }, } },
    {  840u, { { 0u, L"Language support for empty objects", L"Author802" }, { 1u, L"Language support for empty objects", L"Author939" }, { 2u, L"Language support for empty objects", L"Author1201" }, } },
    {  841u, { { 0u, L"ModulesAtScale", L"Author641" }, } },
    {  842u, { { 0u, L"Unknown Exports by Example", L"Author1037" }, } },
    {  843u, { { 0u, L"fixed_capacity_vector", L"Author212" }, { 1u, L"P0843r1: fixed_capacity_vector", L"Author1752" }, { 2u, L"static_vector", L"Author1566" }, { 3u, L"README.md - Grip", L"Author204" }, { 4u, L"README.md - Grip", L"Author1886" }, { 5u, L"static_vector", L"Author50" }, { 6u, L"static_vector", L"Author2000" }, { 7u, L"inplace_vector", L"Author1079" }, { 8u, L"inplace_vector", L"Author2138" }, { 9u, L"`inplace_vector`", L"Author95" }, { 10u, L"inplace_vector", L"Author1853" }, { 11u, L"`inplace_vector`", L"Author1145" }, { 12u, L"`inplace_vector`", L"Author192" }, { 13u, L"`inplace_vector` - HackMD", L"Author1908" }, { 14u, L"`inplace_vector` - HackMD", L"Author1490" }, } },
    {  844u, { { 0u, L"Type functions and beyond", L"J. Monnon" }, } },
    {  845u, { { 0u, L"Common Subset of C++03 and C++17: Binders", L"Detlef Vollmann" }, } },
    {  846u, { { 0u, L"ADL and Function Templates that are not Visible", L"Author1667" }, } },
    {  847u, { { 0u, L"p0847R0: Deducing this", L"Ga\u0161per A\u017Eman" }, { 1u, L"Deducing this", L"Ga\u0161per A\u017Eman" }, { 2u, L"Deducing this", L"Ga\u0161per A\u017Eman" }, { 4u, L"Deducing this", L"Ga\u0161per A\u017Eman" }, { 5u, L"Deducing this", L"Ga\u0161per A\u017Eman" }, { 6u, L"Deducing this", L"Ga\u0161per A\u017Eman" }, { 7u, L"Deducing this", L"Ga\u0161per A\u017Eman" }, } },
    {  848u, { { 0u, L"Conditionally Trivial Special Member Functions", L"Barry Revzin" }, { 1u, L"Conditionally Trivial Special Member Functions", L"Barry Revzin" }, { 2u, L"Conditionally Trivial Special Member Functions", L"Barry Revzin" }, { 3u, L"Conditionally Trivial Special Member Functions", L"Barry Revzin" }, } },
    {  849u, { { 0u, L"auto(x): DECAY_COPY in the language - HackMD", L"Zhihao Yuan" }, { 1u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, { 2u, L"auto(x): decay-copy in the language", L"Zhihao Yuan" }, { 3u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, { 4u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, { 5u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, { 6u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, { 7u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, { 8u, L"auto(x): decay-copy in the language - HackMD", L"Zhihao Yuan" }, } },
    {  851u, { { 0u, L"simd<T> is neither a product type nor a container type [P0851R0]", L"Matthias Kretz" }, } },
    {  856u, { { 0u, L"p0856r0: Restrict Access Property for <code>mdspan</code> and <code>span</code>", L"David S" }, } },
    {  857u, { { 0u, L"Wording for functionality gaps in constraints", L"Author1223" }, } },
    {  858u, { { 0u, L"Constexpr iterator requirements", L"Author829" }, } },
    {  859u, { { 0u, L"Core Issue 1581: When are constexpr member functions defined?", L"Author815" }, } },
    {  860u, { { 0u, L"P0860r0 : Atomic Access Property for span and mdspan", L"H. Carter" }, { 1u, L"p0860R1: Atomic Access Property for mdspan", L"Dan Sunderland" }, } },
    {  863u, { { 0u, L"Title1439", L"Jeff Snyder" }, { 1u, L"Title1001", L"Jeff Snyder" }, } },
    {  864u, { { 0u, L"C++ Standard Library Issues Resolved Directly In Albuquerque", L"Author647" }, } },
    {  866u, { { 0u, L"Title65", L"Nat Goodspeed" }, } },
    {  867u, { { 0u, L"'Module Interface' is Misleading", L"Author1760" }, } },
    {  868u, { { 0u, L"Title19", L"Author25" }, { 1u, L"Title1635", L"Author2116" }, { 2u, L"Title539", L"Author666" }, } },
    {  870u, { { 0u, L"A proposal for a type trait to detect narrowing conversions", L"Author1579" }, { 1u, L"A proposal for a type trait to detect narrowing conversions", L"Author681" }, { 2u, L"A proposal for a type trait to detect narrowing conversions", L"Author252" }, { 3u, L"A proposal for a type trait to detect narrowing conversions", L"Author1962" }, { 4u, L"A proposal for a type trait to detect narrowing conversions", L"Author792" }, { 5u, L"A proposal for a type trait to detect narrowing conversions", L"Author773" }, } },
    {  873u, { { 0u, L"p0873R0: A plea for a consistent, terse and intuitive declaration syntax", L"Corentin jabot" }, { 1u, L"p0873R1: A plea for a consistent, terse and intuitive declaration syntax", L"Corentin jabot" }, } },
    {  874u, { { 0u, L"p0874R0: Syntax to anonymously refer to the current declaration contexts", L"Corentin Jabot" }, } },
    {  876u, { { 0u, L"fibers without scheduler", L"Oliver Kowalke" }, { 2u, L"fibers without scheduler", L"Oliver Kowalke" }, { 3u, L"fibers without scheduler", L"Oliver Kowalke" }, { 5u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 6u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 8u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 9u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 10u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 11u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 12u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 13u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 14u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 15u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 16u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 17u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 18u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 19u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, { 20u, L"fiberswithoutscheduler", L"Oliver Kowalke" }, } },
    {  877u, { { 0u, L"A proposal for modular macros", L"Bruno Cardoso" }, } },
    {  878u, { { 0u, L"Copy elision for subobjects", L"Author1615" }, } },
    {  879u, { { 0u, L"Constexpr for swap and swap related functions", L"Author499" }, } },
    {  880u, { { 0u, L"Numbers interaction", L"Author2217" }, { 1u, L"Numbers interaction", L"Author218" }, { 2u, L"Numbers interaction", L"Author1157" }, } },
    {  881u, { { 0u, L"A Proposal to add stack trace library", L"Author1487" }, { 1u, L"A Proposal to add stack trace library", L"Author1080" }, { 2u, L"A Proposal to add stack trace library", L"Author1292" }, { 3u, L"A Proposal to add stacktrace library", L"Author1288" }, { 4u, L"A Proposal to add stacktrace library", L"Author132" }, { 5u, L"A Proposal to add stacktrace library", L"Author1705" }, { 6u, L"A Proposal to add stacktrace library", L"Author1974" }, { 7u, L"A Proposal to add stacktrace library", L"Author594" }, } },
    {  882u, { { 0u, L"User-defined Literals for std::filesystem::path - HackMD", L"Yonggang Li" }, } },
    {  883u, { { 0u, L"Microsoft Word - P0883R0_atomicinit.docx", L"Author1290" }, { 1u, L"P0883R1", L"Author1837" }, { 2u, L"P0883R2 Fixing Atomic Initialization", L"Author1520" }, } },
    {  884u, { { 0u, L"Microsoft Word - P0884R0_noexceptpolicy.docx", L"Author243" }, } },
    {  886u, { { 0u, L"Title702", L"Author876" }, } },
    {  887u, { { 0u, L"Title1705", L"Author2228" }, { 1u, L"Title241", L"Author288" }, } },
    {  888u, { { 0u, L"C++ Standard Library Issues to be moved in Jacksonville", L"Author2216" }, } },
    {  889u, { { 0u, L"Ultimate copy elision", L"Author1364" }, { 1u, L"Ultimate copy elision", L"Author1749" }, } },
    {  891u, { { 0u, L"Title227", L"Gaaper A~man" }, { 1u, L"Everyone Deserves a Little Order", L"Ga\u0161per A\u017Eman" }, { 2u, L"Make strong_order a Customization Point!", L"Ga\u0161per A\u017Eman" }, } },
    {  892u, { { 0u, L"explicit(bool)", L"Barry Revzin" }, { 1u, L"explicit(bool)", L"Barry Revzin" }, { 2u, L"explicit(bool)", L"Barry Revzin" }, } },
    {  893u, { { 0u, L"Chaining Comparisons", L"Barry Revzin" }, { 1u, L"Chaining Comparisons", L"Barry Revzin" }, } },
    {  894u, { { 0u, L"Title111", L"Author129" }, { 1u, L"Title92", L"Author96" }, } },
    {  895u, { { 0u, L"Microsoft Word - P0895R0_renamingcell.docx", L"Author608" }, } },
    {  896u, { { 0u, L"Range Adaptors and Utilities", L"Author1263" }, { 1u, L"Standard Library Concepts", L"Eric Niebler" }, { 2u, L"Merge the Ranges TS", L"Eric Niebler" }, { 3u, L"Merge the Ranges TS", L"Eric Niebler" }, { 4u, L"Merge the Ranges TS", L"Eric Niebler" }, } },
    {  897u, { { 0u, L"Title574", L"Andrey Semashev" }, } },
    {  898u, { { 0u, L"Standard Library Concepts", L"Author2040" }, { 1u, L"Standard Library Concepts", L"Author759" }, { 2u, L"Standard Library Concepts", L"Casey Carter" }, { 3u, L"Standard Library Concepts", L"Casey Carter" }, } },
    {  899u, { { 0u, L"LWG 3016 is Not a Defect", L"Casey Carter" }, { 1u, L"LWG 3016 is Not a Defect", L"Casey Carter" }, } },
    {  900u, { { 0u, L"p0900r0: An Ontology for Properties of <code>mdspan</code>", L"David S" }, } },
    {  901u, { { 0u, L"p0901r0: Size feedback in operator new", L"Andrew Hunter" }, { 1u, L"Size feedback in operator new", L"Andrew Hunter" }, { 2u, L"Size feedback in operator new", L"Andrew Hunter" }, { 3u, L"Size feedback in operator new", L"Andrew Hunter" }, { 4u, L"Size feedback in operator new", L"Andrew Hunter" }, { 5u, L"Size feedback in operator new", L"Andrew Hunter" }, { 6u, L"Size feedback in operator new", L"Andrew Hunter" }, { 7u, L"Size feedback in operator new", L"Andrew Hunter" }, { 8u, L"Size feedback in operator new", L"Andrew Hunter" }, { 9u, L"Size feedback in operator new", L"Andrew Hunter" }, { 10u, L"Size feedback in operator new", L"Andrew Hunter" }, { 11u, L"Size feedback in operator new", L"Andrew Hunter" }, } },
    {  902u, { { 0u, L"p0902r0: Move-only iterators", L"Andrew Hunter" }, } },
    {  903u, { { 0u, L"Title398", L"Author478" }, { 1u, L"Title1105", L"Author1425" }, { 2u, L"Title223", L"Author265" }, } },
    {  904u, { { 0u, L"Title10", L"Lee Howes" }, } },
    {  905u, { { 0u, L"Symmetry for spaceship", L"\u00A0\u00A0" }, { 1u, L"Symmetry for spaceship", L"\u00A0\u00A0" }, } },
    {  906u, { { 0u, L"Improvement suggestions for the Modules TS", L"Author131" }, { 1u, L"Improvement suggestions for the Modules TS", L"Author271" }, } },
    {  907u, { { 0u, L"p0907r0: Signed Integers are Twos Complement", L"JF Bastien" }, { 1u, L"p0907R1: Signed Integers are Twos Complement", L"JF Bastien" }, { 2u, L"p0907R2: Signed Integers are Twos Complement", L"JF Bastien" }, { 3u, L"Signed Integers are Twos Complement", L"JF Bastien" }, { 4u, L"Signed Integers are Twos Complement", L"JF Bastien" }, } },
    {  908u, { { 0u, L"p0908r0: Offsetof for Pointers to Members", L"Eddie Kohler" }, } },
    {  909u, { { 0u, L"Module TS Supports Legacy Integration", L"Steve Downey" }, } },
    {  911u, { { 0u, L"Title1140", L"Author1465" }, { 1u, L"Title1006", L"Author1302" }, } },
    {  912u, { { 0u, L"Title1280", L"Author1650" }, { 1u, L"Title1581", L"Author2042" }, { 2u, L"Title129", L"Author153" }, { 3u, L"Title500", L"Author609" }, { 4u, L"Abstract", L"Author695" }, { 5u, L"P0912R5 - Merge Coroutines TS into C++20 working draft", L"Author1763" }, } },
    {  913u, { { 0u, L"Add symmetric coroutine control transfer", L"Author798" }, { 1u, L"Add symmetric coroutine control transfer", L"Author2194" }, } },
    {  914u, { { 0u, L"Add parameter preview to coroutine promise constructor", L"Author880" }, { 1u, L"Add parameter preview to coroutine promise constructor", L"Author1260" }, } },
    {  915u, { { 0u, L"Untitled", L"Author1751" }, } },
    {  916u, { { 0u, L"Naming implementation-defined simd_abi tag types [P0916R0]", L"Matthias Kretz" }, } },
    {  917u, { { 0u, L"Making operator?: overloadable [P0917R0]", L"Matthias Kretz" }, { 1u, L"Making operator?: overloadable [P0917R1]", L"Matthias Kretz" }, { 2u, L"Making operator?: overloadable [P0917R2]", L"Matthias Kretz" }, { 3u, L"Making operator?: overloadable [P0917R3]", L"Matthias Kretz" }, } },
    {  918u, { { 0u, L"Title420", L"Author509" }, { 1u, L"Title1347", L"Author1741" }, { 2u, L"Title85", L"Author84" }, } },
    {  919u, { { 0u, L"p0919r0: Heterogeneous lookup for unordered containers", L"Mateusz Pusz" }, { 1u, L"p0919R1: Heterogeneous lookup for unordered containers", L"Mateusz Pusz" }, { 2u, L"Heterogeneous lookup for unordered containers", L"Mateusz Pusz" }, { 3u, L"Heterogeneous lookup for unordered containers", L"Mateusz Pusz" }, } },
    {  920u, { { 0u, L"Precalculated hash values in lookup", L"Mateusz Pusz" }, { 1u, L"Precalculated hash values in lookup", L"Mateusz Pusz" }, { 2u, L"Precalculated hash values in lookup", L"Mateusz Pusz" }, } },
    {  921u, { { 0u, L"Title776", L"Author956" }, { 2u, L"Title6", L"Titus Winters" }, } },
    {  922u, { { 0u, L"Title70", L"Author66" }, } },
    {  923u, { { 0u, L"Modules:Dependent ADL", L"Author1591" }, { 1u, L"Modules:Dependent ADL", L"Author1053" }, } },
    {  924u, { { 0u, L"Modules:Context-Sensitive Keyword", L"Author1856" }, { 1u, L"Modules:Context-Sensitive Keyword", L"Author1501" }, } },
    {  925u, { { 0u, L"Modules:Unqualified Using Declarations", L"Author2233" }, } },
    {  927u, { { 0u, L"Title811", L"Author1013" }, { 1u, L"Title145", L"James Dennett" }, { 2u, L"Title764", L"James Dennett" }, } },
    {  928u, { { 0u, L"Title1547", L"Author2001" }, { 1u, L"Title1207", L"Author1557" }, } },
    {  929u, { { 0u, L"Checking for abstract class types", L"Author1314" }, { 1u, L"Checking for abstract class types", L"Author168" }, { 2u, L"Checking for abstract class types", L"Author2024" }, } },
    {  930u, { { 0u, L"Title1292", L"Lee Howes" }, } },
    {  931u, { { 0u, L"Title605", L"Author747" }, } },
    {  932u, { { 0u, L"Title1113", L"Author1434" }, { 1u, L"Title625", L"Author766" }, } },
    {  933u, { { 0u, L"Title1276", L"Author1647" }, { 1u, L"Title526", L"Author646" }, } },
    {  934u, { { 0u, L"Title1464", L"Herb Sutter" }, } },
    {  935u, { { 0u, L"Eradicating unnecessarily explicit default constructors from the standard library", L"Tim Song" }, } },
    {  936u, { { 0u, L"Microsoft Word - P0936R0_boundparam.docx", L"Author1249" }, } },
    {  937u, { { 0u, L"Title163", L"Michael Wong" }, } },
    {  938u, { { 0u, L"Title795", L"Michael Wong" }, } },
    {  939u, { { 0u, L"Title565", L"Author703" }, { 1u, L"Title394", L"Author469" }, { 2u, L"Title747", L"Author927" }, { 3u, L"Title1030", L"Author1338" }, { 4u, L"Title112", L"Author130" }, } },
    {  940u, { { 0u, L"Title1279", L"Michael Wong" }, { 1u, L"Title608", L"Michael Wong" }, { 2u, L"Title1569", L"Michael Wong" }, { 3u, L"Title1598", L"Michael Wong" }, } },
    {  941u, { { 0u, L"Integrating feature-test macros into the C++ WD", L"Author1318" }, { 1u, L"Integrating feature-test macros into the C++ WD", L"Author755" }, { 2u, L"Integrating feature-test macros into the C++ WD", L"Author1565" }, } },
    {  942u, { { 0u, L"Introducing a <smart_ptr> header", L"Author1132" }, } },
    {  943u, { { 0u, L"Support C atomics in C++", L"Hans-J. Boehm" }, { 1u, L"Support C atomics in C++", L"Hans-J. Boehm" }, { 2u, L"Support C atomics in C++", L"Hans-J. Boehm" }, { 3u, L"Support C atomics in C++", L"Hans-J. Boehm" }, { 4u, L"Support C atomics in C++", L"Hans-J. Boehm" }, { 5u, L"Support C atomics in C++", L"Hans-J. Boehm" }, { 6u, L"Support C atomics in C++", L"Hans-J. Boehm" }, } },
    {  944u, { { 0u, L"Contiguous Ranges", L"Casey Carter" }, } },
    {  945u, { { 0u, L"p0945r0: Generalizing alias declarations", L"Richard Smith" }, } },
    {  946u, { { 0u, L"p0946r0: Towards consistency between <=> and other comparison operators", L"Richard Smith" }, } },
    {  947u, { { 0u, L"p0947R0: Another take on Modules", L"Richard Smith" }, { 1u, L"Another take on Modules", L"Richard Smith" }, } },
    {  949u, { { 0u, L"Adding support for type-based metaprogramming to the standard library", L"Author1717" }, } },
    {  952u, { { 0u, L"A new specification for std::generate_canonical", L"Author191" }, { 1u, L"A new specification for std::generate_canonical", L"Author93" }, { 2u, L"A new specification for std::generate_canonical", L"Author1563" }, } },
    {  953u, { { 0u, L"constexpr reflexpr", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 1u, L"constexpr reflexpr", L"Mat\u00FA\u0161 Chochl\u00EDk" }, { 2u, L"constexpr reflexpr", L"Mat\u00FA\u0161 Chochl\u00EDk" }, } },
    {  954u, { { 0u, L"Title667", L"Author847" }, } },
    {  955u, { { 0u, L"Title1019", L"Author1320" }, } },
    {  956u, { { 0u, L"Title715", L"Author886" }, } },
    {  957u, { { 0u, L"Title1537", L"Mingxin Wang" }, { 1u, L"WG21 Paper P0957R1", L"Mingxin Wang" }, { 2u, L"Title1629", L"Mingxin Wang" }, { 3u, L"Title264", L"Mingxin Wang" }, { 4u, L"Title671", L"Mingxin Wang" }, { 5u, L"Title1136", L"Mingxin Wang" }, { 6u, L"Title939", L"Mingxin Wang" }, { 7u, L"Title813", L"Mingxin Wang" }, { 8u, L"Title621", L"Mingxin Wang" }, { 9u, L"Title658", L"Mingxin Wang" }, } },
    {  958u, { { 0u, L"Networking TS changes to support proposed Executors TS", L"Christopher Kohlhoff" }, { 1u, L"Networking TS changes to support proposed Executors TS", L"Christopher Kohlhoff" }, { 2u, L"Networking TS changes to support proposed Executors TS", L"Christopher Kohlhoff" }, { 3u, L"Networking TS changes to support proposed Executors TS", L"Christopher Kohlhoff" }, } },
    {  959u, { { 0u, L"Title890", L"Author1115" }, { 1u, L"Title61", L"Author58" }, { 2u, L"Title532", L"Author657" }, } },
    {  960u, { { 0u, L"Allow initializing aggregates from a parenthesized list of values", L"Author1279" }, { 1u, L"Allow initializing aggregates from a parenthesized list of values", L"Author784" }, { 2u, L"Allow initializing aggregates from a parenthesized list of values", L"Author1654" }, { 3u, L"Allow initializing aggregates from a parenthesized list of values", L"Author199" }, } },
    {  961u, { { 0u, L"Relaxing the structured bindings customization point finding rules", L"Author1517" }, { 1u, L"Relaxing the structured bindings customization point finding rules", L"Author1840" }, } },
    {  962u, { { 0u, L"Relaxing the range-for loop customization point finding rules", L"Author874" }, { 1u, L"Relaxing the range-for loop customization point finding rules", L"Author751" }, } },
    {  963u, { { 0u, L"Structured binding declaration as a condition - HackMD", L"Zhihao Yuan" }, { 1u, L"Structured binding declaration as a _condition_ - HackMD", L"Zhihao Yuan" }, { 2u, L"Structured binding declaration as a _condition_ - HackMD", L"Zhihao Yuan" }, { 3u, L"Structured binding declaration as a _condition_ - HackMD", L"Zhihao Yuan" }, } },
    {  964u, { { 0u, L"Finding the right set of traits for simd<T> [P0964R0]", L"Matthias Kretz" }, { 1u, L"Finding the right set of traits for simd<T> [P0964R1]", L"Matthias Kretz" }, { 2u, L"Finding the right set of traits for simd<T> [P0964R2]", L"Matthias Kretz" }, } },
    {  965u, { { 0u, L"Initializers of objects with automatic and dynamic storage duration have funny inconsistencies", L"Author1649" }, } },
    {  966u, { { 0u, L"P0966r0: <code>string::reserve</code> Should Not Shrink", L"Mark Zeren" }, { 1u, L"p0966R1: <code>string::reserve</code> Should Not Shrink", L"Mark Zeren" }, } },
    {  968u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author1671" }, } },
    {  969u, { { 0u, L"Title1273", L"Author1644" }, } },
    {  970u, { { 0u, L"Better, Safer Range Access Customization Points", L"Author439" }, { 1u, L"Better, Safer Range Access Customization Points", L"Author333" }, } },
    {  972u, { { 0u, L"Microsoft Word - d0972r0.docx", L"Billy Robert" }, } },
    {  973u, { { 0u, L"Title1008", L"Author1305" }, } },
    {  974u, { { 0u, L"A Function Returning Whether An Underlying Type Value Is a Valid Enumerator of a Given Enumeration", L"Jonathan Ringle" }, } },
    {  975u, { { 0u, L"Title968", L"Author1240" }, } },
    {  976u, { { 0u, L"Title197", L"Author237" }, } },
    {  977u, { { 0u, L"Title1214", L"Author1569" }, } },
    {  978u, { { 0u, L"Title582", L"the library" }, } },
    {  980u, { { 0u, L"Title579", L"Louis Dionne" }, { 1u, L"Title341", L"Louis Dionne" }, } },
    {  981u, { { 0u, L"Title1203", L"Author1551" }, } },
    {  982u, { { 0u, L"Weaken release sequences", L"Hans-J. Boehm" }, { 1u, L"Weaken release sequences", L"Hans-J. Boehm" }, } },
    {  983u, { { 0u, L"Title278", L"Gabriel Dos" }, } },
    {  984u, { { 0u, L"Title766", L"Author948" }, } },
    {  985u, { { 0u, L"LWG Chair post-meeting report", L"Author2167" }, { 1u, L"LWG Chair post-meeting report", L"Author521" }, { 2u, L"LWG Chair post-meeting report", L"Author67" }, { 3u, L"LWG Chair post-meeting report", L"Author311" }, { 4u, L"LWG Chair post-meeting report", L"Author1518" }, } },
    {  986u, { { 0u, L"Comparison of Modules Proposals", L"Richard Smith" }, } },
    {  987u, { { 0u, L"polymorphic_allocator<byte> instead of type-erasure", L"Pablo Halpern" }, { 1u, L"Microsoft Word - P0987_polyalloc_instead_of_erasure.docx", L"Pablo Halpern" }, { 2u, L"Microsoft Word - P0987R2_polyalloc_instead_of_erasure.docx", L"Pablo Halpern" }, } },
    {  988u, { { 0u, L"Title494", L"Author603" }, } },
    {  989u, { { 0u, L"Title1032", L"Tony Van" }, } },
    {  990u, { { 0u, L"Title18", L"Tony Van" }, } },
    {  991u, { { 0u, L"Title74", L"Author72" }, } },
    {  992u, { { 0u, L"Constexpr", L"Andrew Sutton" }, } },
    {  993u, { { 0u, L"Reflection", L"Author397" }, } },
    {  994u, { { 0u, L"Title1609", L"Author2078" }, } },
    {  995u, { { 0u, L"p0995R0: Improving atomic_flag", L"JF Bastien" }, { 1u, L"Improving atomic_flag", L"JF Bastien" }, } },
    {  996u, { { 1u, L"Rebase Library Fundamentals TS on C++17", L"Author2047" }, } },
    {  997u, { { 0u, L"Title823", L"Nathan Myers" }, } },
    {  999u, { { 0u, L"Title1346", L"Author1740" }, } },
    { 1000u, { { 0u, L"Title1055", L"Herb Sutter" }, { 1u, L"Title993", L"Herb Sutter" }, { 2u, L"Title1655", L"Herb Sutter" }, { 3u, L"Title1433", L"Herb Sutter" }, { 4u, L"Title440", L"Herb Sutter" }, { 5u, L"Title693", L"Herb Sutter" }, { 6u, L"Title1381", L"Herb Sutter" }, } },
    { 1001u, { { 0u, L"Target Vectorization Policies from Parallelism V2 TS to C++20", L"Author1580" }, { 1u, L"Target Vectorization Policies from Parallelism V2 TS to C++20", L"Author235" }, { 2u, L"Target Vectorization Policies from Parallelism V2 TS to C++20", L"Author1628" }, } },
    { 1002u, { { 0u, L"Title334", L"Louis Dionne" }, { 1u, L"Title572", L"Louis Dionne" }, } },
    { 1003u, { { 0u, L"C++ Standard Library Issues Resolved Directly In Jacksonville", L"Author15" }, } },
    { 1004u, { { 0u, L"Title568", L"Louis Dionne" }, { 1u, L"Title346", L"Louis Dionne" }, { 2u, L"Title547", L"Louis Dionne" }, } },
    { 1005u, { { 0u, L"p1005r0: namespace std { namespace fs = filesystem; }", L"Bryce Adelstein" }, { 1u, L"`namespace std { namespace fs = filesystem; }`", L"Bryce Adelstein" }, } },
    { 1006u, { { 0u, L"Title1264", L"Louis Dionne" }, { 1u, L"Title854", L"Louis Dionne" }, } },
    { 1007u, { { 0u, L"Title954", L"Author1217" }, { 1u, L"Title1306", L"Author1681" }, { 2u, L"Title1132", L"Author1454" }, { 3u, L"Title1426", L"Author1835" }, } },
    { 1008u, { { 0u, L"Title200", L"Author244" }, { 1u, L"Title983", L"Author1269" }, } },
    { 1009u, { { 0u, L"Title1379", L"Author1775" }, { 1u, L"Title1393", L"Author1792" }, { 2u, L"Title1628", L"Author2101" }, } },
    { 1010u, { { 0u, L"p1010R0: Container support for implicit lifetime types", L"Mark Zeren" }, { 1u, L"Container support for implicit lifetime types", L"Mark Zeren" }, } },
    { 1011u, { { 0u, L"Title591", L"Author734" }, } },
    { 1012u, { { 0u, L"Title1647", L"Author2135" }, { 1u, L"Title1332", L"Frank Zingsheim" }, } },
    { 1013u, { { 0u, L"Explicit concept expressions", L"Author2176" }, { 1u, L"Explicit concept expressions", L"Author1491" }, } },
    { 1014u, { { 0u, L"Unit type", L"Andrew Sutton" }, } },
    { 1015u, { { 0u, L"Title460", L"Author567" }, } },
    { 1016u, { { 0u, L"P1016R0", L"Author985" }, } },
    { 1017u, { { 0u, L"Title1692", L"Hartmut Kaiser" }, } },
    { 1018u, { { 0u, L"Evolution status after Jacksonville 2018", L"Author2140" }, { 1u, L"Evolution status after Rapperswil 2018", L"Author547" }, { 2u, L"Evolution status after San Diego 2018", L"Author1087" }, { 3u, L"Evolution status after Kona 2019", L"Author422" }, { 4u, L"Evolution status after Cologne 2019", L"Author1832" }, { 5u, L"Language Evolution status after Belfast 2019", L"JF Bastien" }, { 6u, L"Language Evolution status after Prague 2020", L"JF Bastien" }, { 7u, L"C++ Language Evolution status pandemic edition 2020/032020/10", L"JF Bastien" }, { 8u, L"C++ Language Evolution status pandemic edition 2020/112021/01", L"JF Bastien" }, { 9u, L"C++ Language Evolution status pandemic edition 2021/012021/03", L"JF Bastien" }, { 10u, L"C++ Language Evolution status pandemic edition 2021/04", L"JF Bastien" }, { 11u, L"C++ Language Evolution status pandemic edition 2021/05", L"JF Bastien" }, { 12u, L"C++ Language Evolution status pandemic edition 2021/062021/08", L"JF Bastien" }, { 13u, L"C++ Language Evolution status pandemic edition 2021/082021/09", L"JF Bastien" }, { 14u, L"C++ Language Evolution status pandemic edition 2021/092022/01", L"JF Bastien" }, { 15u, L"C++ Language Evolution status pandemic edition 2022/012022/02", L"JF Bastien" }, { 16u, L"C++ Language Evolution status pandemic edition 2022/022022/06", L"JF Bastien" }, { 17u, L"C++ Language Evolution status pandemic edition 2022/062022/07", L"JF Bastien" }, { 18u, L"C++ Language Evolution status pandemic edition 2022/072022/11", L"JF Bastien" }, { 19u, L"C++ Language Evolution status", L"JF Bastien" }, } },
    { 1019u, { { 0u, L"Title722", L"Jared Hoberock" }, { 1u, L"Title423", L"Jared Hoberock" }, { 2u, L"Title1391", L"Jared Hoberock" }, } },
    { 1020u, { { 0u, L"Smart pointer creation with default initialization", L"Glen Joseph" }, { 1u, L"Smart pointer creation with default initialization", L"Glen Joseph" }, } },
    { 1021u, { { 0u, L"Extensions to Class Template Argument Deduction", L"Author910" }, { 1u, L"Filling holes in Class Template Argument Deduction", L"Author1916" }, { 2u, L"Filling holes in Class Template Argument Deduction", L"Author90" }, { 3u, L"Filling holes in Class Template Argument Deduction", L"Author161" }, { 4u, L"Filling holes in Class Template Argument Deduction", L"Author1068" }, { 5u, L"Filling holes in Class Template Argument Deduction", L"Author1112" }, { 6u, L"Filling holes in Class Template Argument Deduction", L"Author944" }, } },
    { 1022u, { { 0u, L"Title699", L"Michael Wong" }, } },
    { 1023u, { { 0u, L"Title369", L"Author434" }, } },
    { 1024u, { { 0u, L"Title1658", L"Author2151" }, { 1u, L"Title1676", L"Author2181" }, { 2u, L"Title1144", L"Author1474" }, { 3u, L"Title103", L"Author117" }, } },
    { 1025u, { { 0u, L"Update The Reference To The Unicode Standard", L"Steve Downey" }, { 1u, L"Update The Reference To The Unicode Standard", L"Steve Downey" }, } },
    { 1026u, { { 0u, L"Title229", L"Niall Douglas" }, { 1u, L"Title563", L"Niall Douglas" }, } },
    { 1028u, { { 0u, L"Title1361", L"Niall Douglas" }, { 1u, L"Title11", L"Niall Douglas" }, { 2u, L"Title536", L"Niall Douglas" }, { 3u, L"Title91", L"Niall Douglas" }, { 4u, L"Title1049", L"Niall Douglas" }, { 5u, L"Title1325", L"Niall Douglas" }, { 6u, L"Title1522", L"Niall Douglas" }, } },
    { 1029u, { { 0u, L"Title392", L"Niall Douglas" }, { 1u, L"Title2", L"Niall Douglas" }, { 2u, L"Title1349", L"Niall Douglas" }, { 3u, L"Title855", L"Niall Douglas" }, } },
    { 1030u, { { 0u, L"Title1429", L"Niall Douglas" }, { 1u, L"Title123", L"Niall Douglas" }, { 2u, L"Title283", L"Niall Douglas" }, { 3u, L"Title1605", L"Niall Douglas" }, { 4u, L"Title824", L"Niall Douglas" }, { 5u, L"Title1500", L"Niall Douglas" }, { 6u, L"Title196", L"Niall Douglas" }, { 7u, L"Title537", L"Niall Douglas" }, { 8u, L"Title120", L"Niall Douglas" }, } },
    { 1031u, { { 0u, L"Title287", L"Niall Douglas" }, { 1u, L"Title183", L"Niall Douglas" }, { 2u, L"Title592", L"Niall Douglas" }, } },
    { 1032u, { { 0u, L"Misc constexpr bits", L"Author1788" }, { 1u, L"Misc constexpr bits", L"Author1206" }, } },
    { 1033u, { { 0u, L"P1033R0 Rangify the uninitialised memory algorithms!", L"Casey Carter" }, { 1u, L"P1033R1 Rangify the uninitialised memory algorithms!", L"Casey Carter" }, } },
    { 1035u, { { 0u, L"p1035R0: Input range adaptors", L"Christopher Di" }, { 1u, L"Input range adaptors", L"Christopher Di" }, { 2u, L"Input range adaptors", L"Christopher Di" }, { 3u, L"Input range adaptors", L"Christopher Di" }, { 4u, L"Input range adaptors", L"Christopher Di" }, { 5u, L"Input Range Adaptors", L"Christopher Di" }, { 6u, L"Input Range Adaptors", L"Christopher Di" }, { 7u, L"Input Range Adaptors", L"Christopher Di" }, } },
    { 1037u, { { 0u, L"Deep Integration of the Ranges TS", L"Eric Niebler" }, } },
    { 1039u, { { 0u, L"I got you, FAM - Flexible Array Members for C++", L"JeanHeyd Meneide" }, } },
    { 1040u, { { 0u, L"p1040R0: std::embed", L"JeanHeyd Meneide" }, { 1u, L"p1040R1: std::embed", L"JeanHeyd Meneide" }, { 2u, L"std::embed", L"JeanHeyd Meneide" }, { 3u, L"std::embed", L"JeanHeyd Meneide" }, { 4u, L"std::embed", L"JeanHeyd Meneide" }, { 5u, L"std::embed", L"JeanHeyd Meneide" }, { 6u, L"std::embed", L"JeanHeyd Meneide" }, { 7u, L"std::embed", L"JeanHeyd Meneide" }, } },
    { 1041u, { { 0u, L"Title372", L"Author442" }, { 1u, L"Make char16_t/char32_t string literals be UTF-16/32", L"cpp@rmf.io" }, { 3u, L"Make char16_t/char32_t string literals be UTF-16/32", L"cpp@rmf.io" }, { 4u, L"Make char16_t/char32_t string literals be UTF-16/32", L"cpp@rmf.io" }, } },
    { 1042u, { { 0u, L"__VA_OPT__ wording clarifications", L"Hubert S.K" }, { 1u, L"__VA_OPT__ wording clarifications", L"Hubert S.K" }, } },
    { 1043u, { { 0u, L"P1043r0 Narrow contracts in <code>string_view</code> versus P0903R1", L"Author1399" }, } },
    { 1044u, { { 0u, L"p1044R0: std::async() in an Executors World", L"Thomas Rodgers" }, } },
    { 1045u, { { 0u, L"Title49", L"David Stone" }, { 1u, L"`constexpr` Function Parameters", L"David Stone" }, } },
    { 1046u, { { 0u, L"Title469", L"David Stone" }, { 1u, L"Automatically Generate More Operators", L"David Stone" }, { 2u, L"Automatically Generate More Operators", L"David Stone" }, } },
    { 1048u, { { 0u, L"Title194", L"Juan Alday" }, { 1u, L"P1048R1", L"Juan Alday" }, } },
    { 1050u, { { 0u, L"Title1112", L"Author1433" }, { 1u, L"p1050r1", L"Author1544" }, } },
    { 1051u, { { 0u, L"p1051r0", L"Vicente J" }, } },
    { 1052u, { { 0u, L"Modules, Macros, and Build Systems", L"Author881" }, } },
    { 1053u, { { 0u, L"p1053R0: Future-proofing continuations for executors", L"Lee Howes" }, { 1u, L"Future-proofing continuations for executors", L"Lee Howes" }, } },
    { 1054u, { { 0u, L"p1054R0: A Unified Futures Proposal for C++", L"Lee Howes" }, } },
    { 1055u, { { 0u, L"Title281", L"Kirk Shoop" }, } },
    { 1056u, { { 0u, L"Add coroutine task type", L"Author615" }, { 1u, L"Add coroutine lazy type", L"Author1148" }, } },
    { 1059u, { { 0u, L"p1059R0: Adapting Asio to use std::expected", L"Thomas Rodgers" }, } },
    { 1061u, { { 0u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 1u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 2u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 3u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 4u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 5u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 6u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 7u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 8u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 9u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, { 10u, L"Structured Bindings can introduce a Pack", L"Barry Revzin" }, } },
    { 1062u, { { 0u, L"p1062R0: Diet Graphics", L"Bryce Adelstein" }, } },
    { 1063u, { { 0u, L"Title1626", L"Author2098" }, { 1u, L"Title1680", L"Author2186" }, { 2u, L"Title758", L"Author940" }, } },
    { 1064u, { { 0u, L"Allowing Virtual Function Calls in Constant Expressions", L"Author1048" }, } },
    { 1065u, { { 0u, L"constexpr INVOKE", L"Barry Revzin" }, { 1u, L"constexpr INVOKE", L"Tomasz Kami\u0144ski" }, { 2u, L"constexpr INVOKE", L"Tomasz Kami\u0144ski" }, } },
    { 1066u, { { 0u, L"p1066R0: How to catch an exception_ptr without even try-ing", L"Mathias Stearn" }, { 1u, L"How to catch an exception_ptr without even try-ing", L"Mathias Stearn" }, } },
    { 1067u, { { 0u, L"C++ Dependency Management: Package Consumption vs Development", L"Author1264" }, } },
    { 1068u, { { 0u, L"Title448", L"Ilya Burylov" }, { 1u, L"Title1418", L"Ilya Burylov" }, { 2u, L"Title1696", L"Ilya Burylov" }, { 3u, L"Title228", L"Ilya Burylov" }, { 4u, L"Title1176", L"Ilya Burylov" }, { 5u, L"Title782", L"Ilya Burylov" }, { 6u, L"P1068R6.docx", L"Ilya Burylov" }, { 7u, L"P1068R7.docx", L"Ilya Burylov" }, { 8u, L"P1068R8", L"Ilya Burylov" }, { 9u, L"P1068R9", L"Ilya Burylov" }, { 10u, L"P1068R10", L"Ilya Burylov" }, { 11u, L"P1068R11", L"Ilya Burylov" }, } },
    { 1069u, { { 0u, L"Refining standard library support for Class Template Argument Deduction", L"\u00A0\u00A0\u00A0Mike Spertus" }, { 1u, L"Inferencing heap objects", L"\u00A0\u00A0\u00A0Mike Spertus" }, } },
    { 1070u, { { 0u, L"Title270", L"Michael Wong" }, } },
    { 1071u, { { 0u, L"Title1183", L"Michael Wong" }, } },
    { 1072u, { { 0u, L"Title1204", L"Author1553" }, { 1u, L"Optimized Initialization for basic_string and vector", L"Chris Kennelly" }, { 2u, L"basic_string::resize_default_init", L"Chris Kennelly" }, { 3u, L"basic_string::resize_default_init", L"Chris Kennelly" }, { 4u, L"basic_string::resize_default_init", L"Chris Kennelly" }, { 5u, L"basic_string::resize_default_init", L"Chris Kennelly" }, { 6u, L"basic_string::resize_and_overwrite", L"Chris Kennelly" }, { 7u, L"basic_string::resize_and_overwrite", L"Chris Kennelly" }, { 8u, L"basic_string::resize_and_overwrite", L"Chris Kennelly" }, { 9u, L"basic_string::resize_and_overwrite", L"Chris Kennelly" }, { 10u, L"basic_string::resize_and_overwrite", L"Chris Kennelly" }, } },
    { 1073u, { { 0u, L"Title1460", L"Author1883" }, { 1u, L"Title429", L"Author522" }, { 2u, L"Title1021", L"Author1324" }, { 3u, L"Title1040", L"Author1346" }, } },
    { 1074u, { { 0u, L"Title1229", L"Maged Michael" }, } },
    { 1076u, { { 0u, L"Editorial clause reorganization", L"Author5" }, { 1u, L"Editorial clause reorganization", L"Author201" }, } },
    { 1077u, { { 0u, L"Allowing Virtual Destructors to be \"Trivial\"", L"Author1489" }, } },
    { 1079u, { { 0u, L"Title737", L"Author916" }, } },
    { 1080u, { { 0u, L"SG16: Unicode meeting summaries 2018/03/28 - 2018/04/25", L"Tom Honermann" }, } },
    { 1081u, { { 0u, L"P1081R0", L"Author1312" }, } },
    { 1082u, { { 0u, L"C++ Standard Library Issues to be moved in Rapperswil", L"Author565" }, } },
    { 1083u, { { 0u, L"Title1104", L"Author1422" }, { 1u, L"P1083r1 | Move resource_adaptor from Library TS to the C++ WP", L"Author19" }, { 2u, L"P1083r2 | Move resource_adaptor from Library TS to the C++ WP", L"Author465" }, { 3u, L"P1083r3 | Move resource_adaptor from Library TS to the C++ WP", L"Author1581" }, { 4u, L"Title612", L"Author754" }, { 5u, L"Title757", L"Author938" }, { 6u, L"Title13", L"Author11" }, { 7u, L"Title976", L"Author1255" }, { 8u, L"Move `resource_adaptor` from Library TS to the C++ WP", L"Pablo Halpern" }, } },
    { 1084u, { { 0u, L"Today's return-type-requirements Are Insufficient", L"Author1321" }, { 1u, L"Today's return-type-requirements Are Insufficient", L"Author435" }, { 2u, L"Today's return-type-requirements Are Insufficient", L"Author1851" }, } },
    { 1085u, { { 0u, L"Title1648", L"Author2137" }, { 1u, L"Title1427", L"Author1841" }, { 2u, L"Title1597", L"Author2059" }, } },
    { 1086u, { { 0u, L"Title370", L"gdr@microsoft.com" }, } },
    { 1087u, { { 0u, L"C++ Modules", L"gdr@microsoft.com" }, } },
    { 1089u, { { 0u, L"Title660", L"Robert Douglas" }, { 2u, L"Title1456", L"Robert Douglas" }, } },
    { 1090u, { { 0u, L"Aggregate initialization in the presence of deleted constructors", L"Author170" }, } },
    { 1091u, { { 0u, L"Title816", L"Nicolas Lesser" }, { 1u, L"Title492", L"Nicolas Lesser" }, { 2u, L"Extending structured bindings to be more like variable declarations", L"Nicolas Lesser" }, { 3u, L"Extending structured bindings to be more like variable declarations", L"Nicolas Lesser" }, } },
    { 1093u, { { 0u, L"Title1195", L"Author1542" }, } },
    { 1094u, { { 0u, L"Nested Inline Namespaces", L"Author1744" }, { 1u, L"Nested Inline Namespaces", L"Author2104" }, { 2u, L"Nested Inline Namespaces", L"Author1814" }, } },
    { 1095u, { { 0u, L"Title1499", L"Niall Douglas" }, } },
    { 1096u, { { 0u, L"Title1057", L"Author1360" }, } },
    { 1097u, { { 0u, L"Named character escapes", L"R. Martinho" }, { 1u, L"Title1171", L"R. Martinho" }, { 2u, L"Named character escapes", L"R. Martinho" }, } },
    { 1099u, { { 0u, L"p1099R0: Using Enum", L"Ga\u0161per A\u017Eman" }, { 2u, L"p1099R2: Using Enum", L"Ga\u0161per A\u017Eman" }, { 3u, L"Using Enum", L"Ga\u0161per A\u017Eman" }, { 4u, L"Using Enum", L"Ga\u0161per A\u017Eman" }, { 5u, L"Using Enum", L"Ga\u0161per A\u017Eman" }, } },
    { 1100u, { { 0u, L"Efficient composition with DynamicBuffer", L"Vinnie Falco" }, } },
    { 1101u, { { 0u, L"Vector Length Agnostic SIMD", L"Mikhail Maltsev" }, } },
    { 1102u, { { 0u, L"Down with ()!", L"Alex Christensen" }, { 1u, L"Down with <code>()</code>!", L"Alex Christensen" }, { 2u, L"Down with ()!", L"Alex Christensen" }, } },
    { 1103u, { { 0u, L"C++ Technical Specification", L"Author1404" }, { 1u, L"Merging Modules", L"Author2019" }, { 2u, L"Merging Modules", L"Author1529" }, { 3u, L"Merging Modules", L"Author1159" }, } },
    { 1105u, { { 0u, L"Leaving no room for a lower-level language: A C++ Subset", L"Ben Craig" }, { 1u, L"Leaving no room for a lower-level language: A C++ Subset", L"Ben Craig" }, } },
    { 1108u, { { 0u, L"web_view", L"Hal Finkel" }, { 1u, L"web_view", L"Hal Finkel" }, { 2u, L"web_view", L"Hal Finkel" }, { 3u, L"web_view", L"Hal Finkel" }, { 4u, L"web_view", L"Hal Finkel" }, } },
    { 1109u, { { 0u, L"P1109", L"Author70" }, { 1u, L"P1109R1", L"Author1984" }, } },
    { 1110u, { { 0u, L"A placeholder with no name", L"Jeffrey Yasskin" }, } },
    { 1111u, { { 0u, L"Resolutions to NB Comments on the Parallelism TS v2", L"Bryce Adelstein" }, } },
    { 1112u, { { 0u, L"Microsoft Word - cppprop3d.doc", L"Author947" }, { 1u, L"Microsoft Word - p1112r1.doc", L"Balog, Pal" }, { 2u, L"Microsoft Word - p1112r2.doc", L"Balog, Pal" }, { 3u, L"Microsoft Word - p1112r3.doc", L"Balog, Pal" }, { 4u, L"Microsoft Word - p1112r4.doc", L"Balog, Pal" }, { 5u, L"Microsoft Word - p1112r5.doc", L"Balog, Pal" }, } },
    { 1113u, { { 0u, L"Core \"ready\" Issues", L"Author1424" }, } },
    { 1114u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author643" }, } },
    { 1115u, { { 0u, L"Title319", L"Marc Mutz" }, { 1u, L"Title348", L"Marc Mutz" }, { 2u, L"Title872", L"Marc Mutz" }, { 3u, L"Title507", L"Marc Mutz" }, } },
    { 1116u, { { 0u, L"Title1544", L"Marc Mutz" }, } },
    { 1118u, { { 0u, L"Title550", L"Author679" }, } },
    { 1119u, { { 0u, L"ABI for std::hardware_{constructive,destructive}_interference_size", L"JF Bastien" }, } },
    { 1120u, { { 0u, L"Consistency improvements for <=> and other comparison operators", L"Richard Smith" }, } },
    { 1121u, { { 0u, L"Title832", L"Maged M" }, { 1u, L"Title131", L"Maged M" }, { 2u, L"Title28", L"Maged M" }, { 3u, L"Hazard Pointers", L"Maged M" }, } },
    { 1122u, { { 0u, L"Title1491", L"Paul McKenney" }, { 1u, L"Title1152", L"Paul McKenney" }, { 2u, L"Title677", L"Paul McKenney" }, { 3u, L"Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)", L"Paul McKenney" }, { 4u, L"Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)", L"Paul McKenney" }, } },
    { 1123u, { { 0u, L"Editorial Guidance for merging P0019r8 and P0528r3", L"Daniel Sunderland" }, } },
    { 1128u, { { 0u, L"Summer 2018 WG21 Batavia LWG Meeting Information", L"Author1082" }, } },
    { 1130u, { { 1u, L"Module Resource Requirement Propagation", L"JeanHeyd Meneide" }, } },
    { 1131u, { { 0u, L"Core Issue 2292: simple-template-id is ambiguous between class-name and type-name", L"Author1827" }, { 1u, L"Core Issue 2292: simple-template-id is ambiguous between class-name and type-name", L"Author1175" }, { 2u, L"Core Issue 2292: simple-template-id is ambiguous between class-name and type-name", L"Author1241" }, } },
    { 1132u, { { 0u, L"p1132R0: out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 1u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 2u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 3u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 4u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 5u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 6u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 7u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, { 8u, L"out_ptr - a scalable output pointer abstraction", L"JeanHeyd Meneide" }, } },
    { 1133u, { { 0u, L"Networking TS Associations For Call Wrappers", L"Vinnie Falco" }, } },
    { 1135u, { { 0u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, { 1u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, { 2u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, { 3u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, { 4u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, { 5u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, { 6u, L"The C++20 Synchronization Library", L"Bryce Adelstein" }, } },
    { 1136u, { { 0u, L"Title1202", L"Author1549" }, } },
    { 1137u, { { 0u, L"SG16: Unicode meeting summaries 2018/05/16 - 2018/06/20", L"maintain consistency" }, } },
    { 1138u, { { 0u, L"Title805", L"Aaron Ballman" }, } },
    { 1139u, { { 0u, L"Address wording issues related to ISO 10646", L"R. Martinho" }, { 1u, L"Address wording issues related to ISO 10646", L"R. Martinho" }, { 2u, L"Address wording issues related to ISO 10646", L"R. Martinho" }, } },
    { 1141u, { { 0u, L"Yet another approach for constrained declarations", L"Author273" }, { 1u, L"Yet another approach for constrained declarations", L"Author226" }, { 2u, L"Yet another approach for constrained declarations", L"Author1370" }, } },
    { 1142u, { { 0u, L"Thoughts on a conservative terse syntax for constraints", L"Author1099" }, } },
    { 1143u, { { 0u, L"Title1182", L"Author1521" }, { 1u, L"Title745", L"Author925" }, { 2u, L"Title529", L"Author649" }, } },
    { 1144u, { { 0u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 1u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 2u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 3u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 4u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 5u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 6u, L"Object relocation in terms of move plus destroy", L"Arthur O'Dwyer" }, { 7u, L"std::is_trivially_relocatable", L"Arthur O'Dwyer" }, { 8u, L"std::is_trivially_relocatable", L"Arthur O'Dwyer" }, { 9u, L"std::is_trivially_relocatable", L"Arthur O'Dwyer" }, { 10u, L"std::is_trivially_relocatable", L"Arthur O'Dwyer" }, { 11u, L"std::is_trivially_relocatable", L"Arthur O'Dwyer" }, { 12u, L"std::is_trivially_relocatable", L"Arthur O'Dwyer" }, } },
    { 1145u, { { 0u, L"Buffer Sequence Adaptors", L"Vinnie Falco" }, } },
    { 1147u, { { 0u, L"Printing `volatile` Pointers", L"Bryce Adelstein" }, { 1u, L"Printing `volatile` Pointers", L"Bryce Adelstein" }, } },
    { 1148u, { { 0u, L"Cleaning up [strings]", L"Author1152" }, } },
    { 1149u, { { 0u, L"Constexpr regex", L"Author507" }, } },
    { 1152u, { { 0u, L"Deprecating <code>volatile</code>", L"JF Bastien" }, { 1u, L"Deprecating <code>volatile</code>", L"JF Bastien" }, { 2u, L"Deprecating <code>volatile</code>", L"JF Bastien" }, { 3u, L"Deprecating <code>volatile</code>", L"JF Bastien" }, { 4u, L"Deprecating <code>volatile</code>", L"JF Bastien" }, } },
    { 1153u, { { 0u, L"Copying volatile subobjects is not trivial", L"Arthur O'Dwyer" }, } },
    { 1154u, { { 0u, L"Type traits for structural comparison", L"Arthur O'Dwyer" }, { 1u, L"Type traits for structural comparison", L"Arthur O'Dwyer" }, { 2u, L"Type traits for structural comparison", L"Arthur O'Dwyer" }, } },
    { 1155u, { { 0u, L"More implicit moves", L"Arthur O'Dwyer" }, { 1u, L"More implicit moves", L"Arthur O'Dwyer" }, { 2u, L"More implicit moves", L"Arthur O'Dwyer" }, { 3u, L"More implicit moves", L"Arthur O'Dwyer" }, } },
    { 1156u, { { 0u, L"Merged Modules and Tooling", L"Author2144" }, } },
    { 1157u, { { 0u, L"Multi-argument constrained-parameter - HackMD", L"Zhihao Yuan" }, } },
    { 1158u, { { 0u, L"Concept-defined placeholder types - HackMD", L"Zhihao Yuan" }, } },
    { 1159u, { { 0u, L"Title1100", L"Author1413" }, } },
    { 1160u, { { 0u, L"P1160R0", L"Attila Feh" }, { 1u, L"Microsoft Word - P1160R1", L"Author1755" }, } },
    { 1161u, { { 0u, L"Deprecate uses of the comma operator in subscripting expressions", L"Corentin Jabot" }, { 1u, L"Deprecate uses of the comma operator in subscripting expressions", L"Corentin Jabot" }, { 2u, L"Deprecate uses of the comma operator in subscripting expressions", L"Corentin Jabot" }, { 3u, L"Deprecate uses of the comma operator in subscripting expressions", L"Corentin Jabot" }, } },
    { 1163u, { { 0u, L"Title211", L"Nevin " }, } },
    { 1164u, { { 0u, L"Microsoft Word - D1164R0_create_directory_180824.docx", L"Author1184" }, { 1u, L"Microsoft Word - P1164R1R1_create_directory_190222.docx", L"Author1098" }, } },
    { 1165u, { { 0u, L"Title184", L"Author225" }, { 1u, L"Make stateful allocator propagation more consistent for `operator+(basic_string)`", L"Author1950" }, } },
    { 1166u, { { 0u, L"Title408", L"Author489" }, } },
    { 1167u, { { 0u, L"Improving function templates with Class Template Argument Deduction", L"Author1964" }, } },
    { 1168u, { { 0u, L"How to make Terse Notation soar with Class Template Argument Deduction", L"Author1221" }, } },
    { 1169u, { { 0u, L"static operator()", L"Barry Revzin" }, { 1u, L"static `operator()`", L"Barry Revzin" }, { 2u, L"static `operator()`", L"Barry Revzin" }, { 3u, L"static operator()", L"Barry Revzin" }, { 4u, L"static operator()", L"Barry Revzin" }, } },
    { 1170u, { { 0u, L"Overload sets as function parameters", L"Barry Revzin" }, } },
    { 1171u, { { 0u, L"Title377", L"Author448" }, } },
    { 1172u, { { 0u, L"Title569", L"Mingxin Wang" }, { 1u, L"Title1356", L"Mingxin Wang" }, } },
    { 1175u, { { 0u, L"a simple and practical optional reference for C++", L"JeanHeyd Meneide" }, } },
    { 1177u, { { 0u, L"Title1027", L"Author1335" }, { 1u, L"Title1161", L"Author1493" }, } },
    { 1178u, { { 0u, L"C++ Compile", L"Author1798" }, } },
    { 1179u, { { 0u, L"Title1120", L"Herb Sutter" }, { 1u, L"Title327", L"Herb Sutter" }, } },
    { 1180u, { { 0u, L"Response to P1156", L"Richard Smith" }, } },
    { 1181u, { { 0u, L"Proposing <code>unless</code>", L"Morwenn" }, } },
    { 1182u, { { 0u, L"New names for the power-of-2 templates (and their header)", L"Author551" }, } },
    { 1184u, { { 0u, L"A Module Mapper", L"Author548" }, { 1u, L"A Module Mapper", L"Author2169" }, { 2u, L"A Module Mapper", L"Author2004" }, } },
    { 1185u, { { 0u, L"<=> != ==", L"Barry Revzin" }, { 1u, L"<=> != ==", L"Barry Revzin" }, { 2u, L"<=> != ==", L"Barry Revzin" }, } },
    { 1186u, { { 0u, L"When do you actually use <=>?", L"Barry Revzin" }, { 1u, L"When do you actually use <=>?", L"Barry Revzin" }, { 2u, L"When do you actually use <=>?", L"Barry Revzin" }, { 3u, L"When do you actually use <=>?", L"Barry Revzin" }, } },
    { 1187u, { { 0u, L"A type trait for std::compare_3way()'s type", L"Barry Revzin" }, } },
    { 1188u, { { 0u, L"Library utilities for <=>", L"Barry Revzin" }, } },
    { 1189u, { { 0u, L"Adding <=> to library", L"Barry Revzin" }, } },
    { 1190u, { { 0u, L"Title386", L"David Stone" }, } },
    { 1191u, { { 0u, L"Title1260", L"David Stone" }, } },
    { 1192u, { { 0u, L"p1192R0: Experience report - integrating Executors with Parallel Algorithms", L"Thomas Rodgers" }, { 1u, L"p1192R1: Experience report - integrating Executors with Parallel Algorithms", L"Thomas Rodgers" }, } },
    { 1193u, { { 0u, L"Explicitly Specified Returns for (Implicit) Conversions", L"JeanHeyd Meneide" }, } },
    { 1194u, { { 0u, L"P1194: The Compromise Executors Proposal: A lazy simplification of P0443", L"Lee Howes" }, } },
    { 1195u, { { 0u, L"Making <system_error> constexpr", L"Author1421" }, } },
    { 1196u, { { 0u, L"Value-based std::error_category comparison", L"Author1773" }, } },
    { 1197u, { { 0u, L"A non-allocating overload of error_category::message()", L"Author2142" }, } },
    { 1198u, { { 0u, L"Adding error_category::failed()", L"Author297" }, } },
    { 1199u, { { 0u, L"A simple proposal for unifying generic and object-oriented programming", L"Author974" }, } },
    { 1200u, { { 0u, L"Title1641", L"Author2122" }, } },
    { 1201u, { { 0u, L"variant direct comparisons with held types", L"Author1764" }, } },
    { 1202u, { { 0u, L"Title415", L"David Goldblatt" }, { 1u, L"Title213", L"David Goldblatt" }, { 2u, L"Title178", L"David Goldblatt" }, { 3u, L"Asymmetric Fences", L"David Goldblatt" }, { 4u, L"P1202R4", L"David Goldblatt" }, { 5u, L"P1202R5", L"David Goldblatt" }, } },
    { 1203u, { { 0u, L"Modular main()", L"Author1981" }, } },
    { 1204u, { { 0u, L"Canonical Project Structure", L"Author1218" }, } },
    { 1205u, { { 0u, L"Teleportation via <code>co_await</code>", L"Olivier Giroux" }, } },
    { 1206u, { { 0u, L"Title509", L"Corentin Jabot" }, { 1u, L"Title137", L"Corentin Jabot" }, { 2u, L"Title1374", L"Corentin Jabot" }, { 3u, L"Title680", L"Corentin Jabot" }, { 4u, L"Title962", L"Corentin Jabot" }, { 5u, L"Title804", L"Corentin Jabot" }, { 6u, L"Title1543", L"Corentin Jabot" }, { 7u, L"Title1387", L"Corentin Jabot" }, } },
    { 1207u, { { 0u, L"Movability of Single-pass Iterators", L"Corentin Jabot" }, { 1u, L"Movability of Single-pass Iterators", L"Corentin Jabot" }, { 2u, L"Title1660", L"Corentin Jabot" }, { 3u, L"Title553", L"Corentin Jabot" }, { 4u, L"Title304", L"Corentin Jabot" }, } },
    { 1208u, { { 0u, L"Adopt source_location from Library Fundamentals V3 for C++20", L"Corentin Jabot" }, { 1u, L"Adopt source_location from Library Fundamentals V3 for C++20", L"Corentin Jabot" }, { 3u, L"Title1682", L"Author2190" }, { 4u, L"Title972", L"Author1252" }, { 5u, L"Title877", L"Author1091" }, { 6u, L"Title22", L"Author29" }, } },
    { 1209u, { { 0u, L"Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20", L"Author1703" }, } },
    { 1210u, { { 0u, L"Completing the Rebase of Library Fundamentals, Version 3, Working Draft", L"Author2168" }, } },
    { 1212u, { { 0u, L"Modules and Freestanding", L"Ben Craig" }, } },
    { 1213u, { { 0u, L"Global Module Fragment is Unnecessary", L"Author625" }, { 1u, L"Global Module Fragment is Unnecessary", L"Author1634" }, } },
    { 1214u, { { 0u, L"Pointer to Member Functions and Member Objects are just Callables!", L"JeanHeyd Meneide" }, } },
    { 1217u, { { 0u, L"Out-of-thin-air, revisited, again", L"Hans-J. Boehm" }, { 1u, L"Out-of-thin-air, revisited, again", L"Hans-J. Boehm" }, { 2u, L"Out-of-thin-air, revisited, again", L"Hans-J. Boehm" }, } },
    { 1218u, { { 0u, L"Redefinitions in Legacy Imports", L"Author89" }, } },
    { 1219u, { { 0u, L"Homogeneous variadic function parameters", L"James Touton" }, { 1u, L"Homogeneous variadic function parameters", L"James Touton" }, { 2u, L"Homogeneous variadic function parameters", L"James Touton" }, } },
    { 1220u, { { 0u, L"Controlling When Inline Functions are Emitted", L"Chris Kennelly" }, } },
    { 1221u, { { 0u, L"Title1293", L"Author1663" }, { 1u, L"Title1643", L"Author2126" }, } },
    { 1222u, { { 0u, L"Title488", L"Author597" }, { 1u, L"A Standard flatset", L"Author605" }, { 2u, L"A Standard flatset", L"Author1350" }, { 3u, L"A Standard flatset", L"Author255" }, { 4u, L"A Standard flatset", L"Author1301" }, } },
    { 1223u, { { 0u, L"Title1110", L"Author1430" }, { 1u, L"Title1210", L"Author1562" }, { 2u, L"findast", L"Author894" }, { 3u, L"findlast", L"Author588" }, { 4u, L"findlast", L"Author445" }, { 5u, L"findlast", L"Author1865" }, } },
    { 1224u, { { 0u, L"C++ Standard Library Issues to be moved in San Diego", L"Author736" }, } },
    { 1225u, { { 0u, L"Feedback on 2D Graphics", L"JF Bastien" }, } },
    { 1227u, { { 0u, L"p1227R0: Signed size() functions", L"Jorg Brown" }, { 1u, L"p1227R1: Signed ssize() functions, unsigned size() functions", L"Jorg Brown" }, { 2u, L"Signed ssize() functions, unsigned size() functions", L"Author843" }, } },
    { 1228u, { { 1u, L"A proposal to add an efficient string concatenation routine to the Standard Library (P1228)", L"Author2136" }, } },
    { 1229u, { { 0u, L"p1229R0: Labelled Parameters", L"Jorg Brown" }, } },
    { 1230u, { { 0u, L"Title1409", L"Mingxin Wang" }, } },
    { 1231u, { { 0u, L"Title434", L"Author533" }, } },
    { 1232u, { { 0u, L"p1232_integrating_executors_with_the_standard_library.md - Grip", L"Lee Howes" }, } },
    { 1233u, { { 0u, L"Title906", L"Ashley Hedberg" }, { 1u, L"Shift-by-negative in `shift_left` and `shift_right`", L"Ashley Hedberg" }, } },
    { 1235u, { { 0u, L"Title1103", L"Bryce Adelstein" }, } },
    { 1236u, { { 0u, L"Alternative Wording for P0907R4 Signed Integers are Two's Complement", L"Author183" }, { 1u, L"Alternative Wording for P0907R4 Signed Integers are Two's Complement", L"Author2185" }, } },
    { 1237u, { { 0u, L"SG16: Unicode meeting summaries 2018/07/11 - 2018/10/03", L"Tom Honermann" }, } },
    { 1238u, { { 0u, L"SG16: Unicode Direction", L"Tom Honermann" }, { 1u, L"SG16: Unicode Direction", L"Tom Honermann" }, } },
    { 1239u, { { 0u, L"Placed Before", L"Daniel Lustig" }, } },
    { 1240u, { { 0u, L"Title1380", L"Andrew Sutton" }, { 1u, L"Title1056", L"Wyatt Childers" }, { 2u, L"Scalable Reflection", L"Wyatt Childers" }, } },
    { 1241u, { { 0u, L"p1241_in_support_of_coroutines.md - Grip", L"Lee Howes" }, } },
    { 1242u, { { 0u, L"Title1327", L"Jeff Snyder" }, { 1u, L"Title915", L"Jeff Snyder" }, } },
    { 1243u, { { 0u, L"P1243R0 - Rangify New Algorithms", L"Dan Raviv" }, { 1u, L"P1243R1 - Rangify New Algorithms", L"Dan Raviv" }, { 2u, L"P1243R2 - Rangify New Algorithms", L"Dan Raviv" }, { 3u, L"P1243R3 - Rangify New Algorithms", L"Dan Raviv" }, { 4u, L"P1243R4", L"Dan Raviv" }, } },
    { 1244u, { { 0u, L"Title1474", L"Jared Hoberock" }, } },
    { 1245u, { { 0u, L"<code>export module containing [[attribute]];</code>", L"Bruno Cardoso" }, } },
    { 1246u, { { 0u, L"The <code>no_float</code> function attribute", L"Bruno Cardoso" }, } },
    { 1247u, { { 0u, L"Disabling static destructors: introducing <code>no_destroy</code> and <code>always_destroy</code> attributes", L"Bruno Cardoso" }, } },
    { 1248u, { { 0u, L"Fixing 'Relation's", L"\u00A0\u00A0" }, { 1u, L"Remove 'CommonReference' requirement from 'StrictWeakOrdering'", L"\u00A0\u00A0" }, } },
    { 1249u, { { 0u, L"std::forward from std::initializer_list", L"Alex Christensen" }, } },
    { 1250u, { { 0u, L"Title433", L"Titus Winters" }, } },
    { 1251u, { { 0u, L"Title321", L"Author378" }, { 1u, L"Title94", L"Author103" }, } },
    { 1252u, { { 0u, L"Merge the Ranges TS", L"Casey Carter" }, { 1u, L"Merge the Ranges TS", L"Casey Carter" }, { 2u, L"Merge the Ranges TS", L"Casey Carter" }, } },
    { 1253u, { { 0u, L"Title956", L"Steve Downey" }, } },
    { 1254u, { { 0u, L"Notes on C++ Package Management", L"Steve Downey" }, } },
    { 1255u, { { 0u, L"A view of 0 or 1 elements: <code>view::maybe</code>", L"Steve Downey" }, { 1u, L"A view of 0 or 1 elements: <code>view::maybe</code>", L"Steve Downey" }, { 2u, L"A view of 0 or 1 elements: <code>view::maybe</code>", L"Steve Downey" }, { 3u, L"A view of 0 or 1 elements: <code>view::maybe</code>", L"Steve Downey" }, { 4u, L"A view of 0 or 1 elements: <code>view::maybe</code>", L"Steve Downey" }, { 5u, L"A view of 0 or 1 elements: views::maybe", L"Steve Downey" }, { 6u, L"A view of 0 or 1 elements:", L"Steve Downey" }, { 7u, L"A view of 0 or 1 elements: `views::maybe`", L"Steve Downey" }, { 8u, L"Title275", L"Author325" }, { 9u, L"Title566", L"Author704" }, { 10u, L"Title82", L"Author82" }, { 11u, L"Title1396", L"Author1796" }, { 12u, L"Title1086", L"Author1395" }, { 13u, L"Title810", L"Author1012" }, { 14u, L"Title1209", L"Author1559" }, } },
    { 1256u, { { 0u, L"Title1341", L"Author1737" }, } },
    { 1257u, { { 0u, L"Implementation experience on trying to implement concurrent data and control structures with executors", L"Author171" }, } },
    { 1258u, { { 0u, L"Title927", L"Author1170" }, } },
    { 1259u, { { 0u, L"Title732", L"Author905" }, { 1u, L"Merge most of Networking TS into C++ Working Draft", L"Author22" }, } },
    { 1260u, { { 0u, L"Pattern Matching", L"Michael Park" }, } },
    { 1261u, { { 0u, L"Title454", L"Michael Wong" }, } },
    { 1263u, { { 0u, L"Title1657", L"Louis Dionne" }, } },
    { 1264u, { { 0u, L"Title100", L"Louis Dionne" }, { 1u, L"Title1416", L"Louis Dionne" }, { 2u, L"Title1129", L"Louis Dionne" }, } },
    { 1267u, { { 0u, L"Title201", L"Hana Dusikova" }, } },
    { 1269u, { { 0u, L"Three Years with the Networking TS", L"Jason Carey" }, } },
    { 1271u, { { 0u, L"P1271r0 | Move resource_adaptor from Library TS to the C++ WP", L"Author885" }, } },
    { 1272u, { { 0u, L"Byteswapping for fun&&nuf", L"Isabella Muerte" }, { 1u, L"Byteswapping for fun&&nuf", L"Isabella Muerte" }, { 2u, L"Byteswapping for fun&&nuf", L"Isabella Muerte" }, { 3u, L"Byteswapping for fun&&nuf", L"Isabella Muerte" }, { 4u, L"Byteswapping for fun&&nuf", L"Isabella Muerte" }, } },
    { 1273u, { { 0u, L"86 The Absurd (From Exceptions)", L"Isabella Muerte" }, } },
    { 1274u, { { 0u, L"Bang For The Buck", L"Isabella Muerte" }, } },
    { 1275u, { { 0u, L"Desert Sessions: Improving hostile environment interactions", L"Isabella Muerte" }, } },
    { 1276u, { { 0u, L"Void Main", L"Isabella Muerte" }, } },
    { 1277u, { { 0u, L"Subscripts On Parade", L"Isabella Muerte" }, } },
    { 1278u, { { 0u, L"offsetof For the Modern Era", L"Isabella Muerte" }, } },
    { 1279u, { { 0u, L"std::breakpoint", L"Isabella Muerte" }, } },
    { 1280u, { { 0u, L"Integer Width Literals", L"Isabella Muerte" }, { 1u, L"Integer Width Literals", L"Isabella Muerte" }, { 2u, L"Integer Width Literals", L"Isabella Muerte" }, } },
    { 1281u, { { 0u, L"Feature Presentation", L"Isabella Muerte" }, } },
    { 1282u, { { 0u, L"Ceci Nest Pas Une Pipe: Adding a workflow operator to C++", L"Isabella Muerte" }, } },
    { 1283u, { { 0u, L"Sharing is Caring", L"Isabella Muerte" }, } },
    { 1284u, { { 0u, L"Allowing Inlining of Replaceable Functions", L"Chris Kennelly" }, } },
    { 1285u, { { 0u, L"Improving Completeness Requirements for Type Traits", L"Author250" }, } },
    { 1286u, { { 0u, L"Contra CWG DR1778", L"Richard Smith" }, { 1u, L"Contra CWG DR1778", L"Richard Smith" }, { 2u, L"Contra CWG DR1778", L"Richard Smith" }, } },
    { 1287u, { { 0u, L"Title1124", L"Author1448" }, } },
    { 1288u, { { 0u, L"Title1673", L"Author2178" }, } },
    { 1289u, { { 0u, L"Title99", L"Author111" }, { 1u, L"Title1397", L"Author1801" }, } },
    { 1290u, { { 0u, L"Title1493", L"Author1932" }, { 1u, L"Title121", L"Author141" }, { 2u, L"Title1573", L"Author2035" }, { 3u, L"Title726", L"Author897" }, } },
    { 1291u, { { 0u, L"std::ranges::less<> Should Be More!", L"Author1059" }, } },
    { 1292u, { { 0u, L"Customization Point Functions", L"Matt Calabrese" }, } },
    { 1293u, { { 0u, L"ostream_joiner", L"Author1626" }, { 1u, L"ostream_joiner", L"Author2072" }, { 2u, L"ostream_joiner", L"Author1614" }, } },
    { 1294u, { { 0u, L"Microsoft Word - N3254.docx", L"Author1632" }, } },
    { 1295u, { { 0u, L"Spaceship library update", L"\u00A0\u00A0" }, } },
    { 1296u, { { 0u, L"Title862", L"Phil Miller" }, } },
    { 1298u, { { 0u, L"Reserve more freedom for atomic_ref implementers", L"Olivier Giroux" }, } },
    { 1299u, { { 0u, L"Module Preamble is Unnecessary", L"Author1354" }, { 1u, L"Module Preamble is Unnecessarily Fragile", L"Author961" }, { 3u, L"Module Preamble is Unnecessarily Fragile", L"Author287" }, } },
    { 1300u, { { 0u, L"Remember the FORTRAN", L"Author2093" }, } },
    { 1301u, { { 0u, L"nodiscard should have a reason", L"JeanHeyd Meneide" }, { 1u, L"[[nodiscard(\"should have a reason\")]]", L"JeanHeyd Meneide" }, { 2u, L"[[nodiscard(\"should have a reason\")]]", L"JeanHeyd Meneide" }, { 3u, L"[[nodiscard(\"should have a reason\")]]", L"JeanHeyd Meneide" }, { 4u, L"[[nodiscard(\"should have a reason\")]]", L"JeanHeyd Meneide" }, } },
    { 1302u, { { 0u, L"Implicit Module Partition Lookup", L"Isabella Muerte" }, { 1u, L"Implicit Module Partition Lookup", L"Isabella Muerte" }, } },
    { 1303u, { { 0u, L"Inline Module Partitions", L"Isabella Muerte" }, } },
    { 1304u, { { 0u, L"Simplifying Extern Template", L"Isabella Muerte" }, } },
    { 1305u, { { 0u, L"Deprecate The Addressof Operator", L"Isabella Muerte" }, } },
    { 1306u, { { 0u, L"Title351", L"Andrew Sutton" }, { 1u, L"Title1531", L"Andrew Sutton" }, { 2u, L"Expansion statements r2", L"Andrew Sutton" }, { 3u, L"P1306 (Expansion statements)", L"Andrew Sutton" }, } },
    { 1307u, { { 0u, L"Title1023", L"Tony Van" }, } },
    { 1308u, { { 0u, L"pattern_matching", L"David Sankel" }, } },
    { 1310u, { { 0u, L"Title88", L"David Stone" }, } },
    { 1312u, { { 0u, L"Title425", L"David Stone" }, } },
    { 1313u, { { 0u, L"Let's Talk About Package Specification", L"Matthew Woehlke" }, } },
    { 1314u, { { 0u, L"unique_val", L"Miguel Ojeda" }, { 1u, L"unique_val", L"Miguel Ojeda" }, } },
    { 1315u, { { 0u, L"secure_val", L"Miguel Ojeda" }, { 1u, L"secure_val", L"Miguel Ojeda" }, { 2u, L"secure_clear", L"Miguel Ojeda" }, { 3u, L"secure_clear", L"Miguel Ojeda" }, { 4u, L"secure_clear", L"Miguel Ojeda" }, { 5u, L"secure_clear", L"Miguel Ojeda" }, { 6u, L"secure_clear (update to N2599)", L"Miguel Ojeda" }, { 7u, L"secure_clear", L"Miguel Ojeda" }, } },
    { 1316u, { { 0u, L"Title1517", L"Author1954" }, } },
    { 1317u, { { 0u, L"Title785", L"Author977" }, { 1u, L"Title504", L"Author618" }, } },
    { 1318u, { { 0u, L"Title885", L"Author1104" }, } },
    { 1319u, { { 0u, L"Changes between C++11 and C++14", L"Author1015" }, } },
    { 1320u, { { 0u, L"Allowing contract predicates on non-first declarations", L"Author270" }, { 1u, L"Allowing contract predicates on non-first declarations", L"Author213" }, { 2u, L"Allowing contract predicates on non-first declarations", L"Author762" }, } },
    { 1321u, { { 0u, L"UB in contract violations", L"Author1555" }, } },
    { 1322u, { { 0u, L"Networking TS enhancement to enable custom I/O executors", L"Christopher Kohlhoff" }, { 1u, L"Networking TS enhancement to enable custom I/O executors", L"Christopher Kohlhoff" }, { 2u, L"Networking TS enhancement to enable custom I/O executors", L"Christopher Kohlhoff" }, { 3u, L"Networking TS enhancement to enable custom I/O executors", L"Christopher Kohlhoff" }, } },
    { 1323u, { { 0u, L"Contract postconditions and return type deduction", L"Hubert S.K" }, { 1u, L"Contract postconditions and return type deduction", L"Hubert S.K" }, { 2u, L"Contract postconditions and return type deduction", L"Hubert S.K" }, } },
    { 1324u, { { 0u, L"[RE] Yet another", L"Mihail Naydenov" }, { 1u, L"[RE]YetAnother", L"Mihail Naydenov" }, } },
    { 1327u, { { 0u, L"Allowing dynamic_cast, polymorphic typeid in Constant Expressions", L"Author1875" }, { 1u, L"Allowing dynamic_cast, polymorphic typeid in Constant Expressions", L"Author1254" }, } },
    { 1328u, { { 0u, L"Making std::type_info::operator== constexpr", L"Author790" }, { 1u, L"Making std::type_info::operator== constexpr", L"Author554" }, } },
    { 1329u, { { 0u, L"Title793", L"Author984" }, } },
    { 1330u, { { 0u, L"Title679", L"Louis Dionne" }, } },
    { 1331u, { { 0u, L"Title1437", L"Author1850" }, { 1u, L"Title80", L"Author81" }, { 2u, L"Title1646", L"Author2133" }, } },
    { 1332u, { { 0u, L"Title703", L"Author877" }, } },
    { 1333u, { { 0u, L"Title1466", L"Author1896" }, } },
    { 1334u, { { 0u, L"Title413", L"Author502" }, } },
    { 1335u, { { 0u, L"Title581", L"Author722" }, } },
    { 1337u, { { 0u, L"Title1413", L"Author1821" }, } },
    { 1338u, { { 0u, L"P1338", L"Author809" }, { 1u, L"P1338R1", L"Author2079" }, } },
    { 1339u, { { 0u, L"Title1392", L"Author1790" }, { 1u, L"Title704", L"Author878" }, } },
    { 1341u, { { 0u, L"Microsoft Word - Unifying asynchronous APIs in C++ standard library.docx", L"Author315" }, } },
    { 1342u, { { 0u, L"Microsoft Word - Unified Coroutines.docx", L"Author933" }, } },
    { 1344u, { { 0u, L"Title1069", L"Author1379" }, { 1u, L"Title208", L"Author251" }, } },
    { 1347u, { { 0u, L"Modules: ADL & Internal Linkage", L"Author1890" }, { 1u, L"Modules: ADL & Internal Linkage", L"Author1204" }, } },
    { 1348u, { { 0u, L"An Executor Property for Occupancy of Execution Agents", L"David S" }, } },
    { 1349u, { { 0u, L"Better Integration of Sender Executors", L"Vinnie Falco" }, } },
    { 1350u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author1185" }, } },
    { 1351u, { { 0u, L"Intrusive smart pointer feedback", L"Mark Zeren" }, } },
    { 1353u, { { 0u, L"Missing Feature Test Macros", L"Author1940" }, } },
    { 1354u, { { 0u, L"SG7 Guidelines for Review of Proposals", L"Chandler Carruth" }, } },
    { 1355u, { { 0u, L"Exposing a narrow contract for ceil2", L"Chris Kennelly" }, { 1u, L"Exposing a narrow contract for ceil2", L"Chris Kennelly" }, { 2u, L"Exposing a narrow contract for ceil2", L"Chris Kennelly" }, } },
    { 1356u, { { 0u, L"C++ Coroutine TS Issues", L"Author1032" }, } },
    { 1357u, { { 0u, L"Traits for [Un]bounded Arrays", L"Author617" }, { 1u, L"Traits for [Un]bounded Arrays", L"Author1978" }, } },
    { 1358u, { { 0u, L"Core \"ready\" Issues", L"Author1582" }, } },
    { 1359u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author292" }, } },
    { 1360u, { { 0u, L"Title1004", L"Author1300" }, } },
    { 1361u, { { 0u, L"Integration of chrono with text formatting", L"Victor Zverovich" }, { 1u, L"Integration of chrono with text formatting", L"Victor Zverovich" }, { 2u, L"Integration of chrono with text formatting", L"Victor Zverovich" }, } },
    { 1362u, { { 0u, L"Title1338", L"Gor Nishanov" }, } },
    { 1364u, { { 0u, L"Title247", L"Gor Nishanov" }, } },
    { 1365u, { { 0u, L"Title1507", L"Gor Nishanov" }, } },
    { 1367u, { { 0u, L"Title1699", L"ogiroux@nvidia.com" }, { 1u, L"Title105", L"ogiroux@nvidia.com" }, } },
    { 1368u, { { 0u, L"Multiplication and division of fixed-point numbers", L"Author854" }, { 1u, L"Multiplication and division of fixed-point numbers", L"Author1457" }, } },
    { 1369u, { { 0u, L"Guidelines for Formulating Library Semantics Specifications", L"Author654" }, } },
    { 1370u, { { 0u, L"Title387", L"Author459" }, { 1u, L"Generic numerical algorithm development with(out) <code>numeric_limits</code>", L"Mark Hoemmen" }, } },
    { 1371u, { { 0u, L"Pattern Matching", L"Sergei Murzin" }, { 1u, L"Pattern Matching", L"Sergei Murzin" }, { 2u, L"Pattern Matching", L"Sergei Murzin" }, { 3u, L"Pattern Matching", L"Bruno Cardoso" }, } },
    { 1372u, { { 0u, L"Giving <code>atomic_ref</code> implementers more flexibility by providing customization points for non-lock-free implementation", L"David S" }, } },
    { 1373u, { { 0u, L"Title833", L"Author1034" }, } },
    { 1374u, { { 0u, L"Resolving LWG #2307 for C++20: Consistently Explicit Constructors", L"Author515" }, } },
    { 1375u, { { 0u, L"More Constrained: Apples or Oranges? On the road to semantic constraint matching", L"Hubert S.K" }, { 1u, L"More Constrained: Apples or Oranges? On the road to semantic constraint matching", L"Hubert S.K" }, { 2u, L"More Constrained: Apples or Oranges? On the road to semantic constraint matching", L"Hubert S.K" }, } },
    { 1376u, { { 0u, L"Summary of freestanding evening session discussions", L"Ben Craig" }, } },
    { 1377u, { { 0u, L"Summary of Dec 2018 SG14 freestanding discussions", L"Ben Craig" }, } },
    { 1378u, { { 0u, L"std::string_literal", L"JeanHeyd Meneide" }, } },
    { 1380u, { { 0u, L"Ambiguity and Insecurities with Three-Way Comparison", L"Lawrence Crowl" }, { 1u, L"Ambiguity and Insecurities with Three-Way Comparison", L"Lawrence Crowl" }, } },
    { 1381u, { { 0u, L"Reference capture of structured bindings", L"Nicolas Lesser" }, { 1u, L"Reference capture of structured bindings", L"Nicolas Lesser" }, } },
    { 1382u, { { 0u, L"Title1226", L"JF Bastien" }, { 1u, L"Title944", L"JF Bastien" }, } },
    { 1383u, { { 0u, L"Title1620", L"Author2088" }, { 1u, L"Title1420", L"Author1828" }, { 2u, L"Title330", L"Author385" }, } },
    { 1385u, { { 0u, L"[linear.algebra]R0: A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 1u, L"[linear.algebra]R1: A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 2u, L"[linear.algebra]R2: A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 3u, L"A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 4u, L"A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 5u, L"A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 6u, L"A proposal to add linear algebra support to the C++ standard library", L"Guy Davidson" }, { 7u, L"Untitled document", L"Guy Davidson" }, } },
    { 1386u, { { 0u, L"Title1059", L"Author1365" }, { 1u, L"Title1557", L"Author2017" }, { 2u, L"Title584", L"Author724" }, } },
    { 1388u, { { 0u, L"Title1497", L"Author1936" }, } },
    { 1389u, { { 0u, L"Standing Document for SG20: Guidelines for Teaching C++ to Beginners", L"Christopher Di" }, { 1u, L"Standing Document for SG20: Guidelines for Teaching C++ to Beginners", L"Christopher Di" }, } },
    { 1390u, { { 0u, L"Suggested Reflection TS NB Resolutions", L"Mata Chochl" }, { 1u, L"Reflection TS NB comment resolutions: summary and rationale", L"Mat\u00FA\u0161 Chochl\u00EDk" }, } },
    { 1391u, { { 0u, L"Title1388", L"Corentin Jabot" }, { 1u, L"Title768", L"Corentin Jabot" }, { 2u, L"Title185", L"Corentin Jabot" }, { 3u, L"Title1216", L"Corentin Jabot" }, { 4u, L"Title1621", L"Corentin Jabot" }, } },
    { 1392u, { { 0u, L"Differences Between Functions and Function Templates", L"Author672" }, } },
    { 1393u, { { 0u, L"properties", L"David Hollman" }, } },
    { 1394u, { { 0u, L"Title846", L"Corentin Jabot" }, { 1u, L"Title251", L"Corentin Jabot" }, { 2u, L"Title1639", L"Corentin Jabot" }, { 3u, L"Title117", L"Corentin Jabot" }, { 4u, L"Title599", L"Corentin Jabot" }, } },
    { 1395u, { { 0u, L"Modules: Partitions Are Not a Panacea", L"Author2124" }, } },
    { 1401u, { { 0u, L"Title1017", L"Author1319" }, { 1u, L"constexpr_bool_conv_r1", L"Andrzej Krzemie\u0144ski" }, { 2u, L"Title738", L"Author917" }, { 3u, L"Narrowing contextual conversions to bool", L"\u00A0\u00A0" }, { 4u, L"Narrowing contextual conversions to bool", L"\u00A0\u00A0" }, { 5u, L"Narrowing contextual conversions to bool", L"\u00A0\u00A0" }, } },
    { 1402u, { { 0u, L"Title897", L"Andrew Tomazos" }, } },
    { 1403u, { { 0u, L"Experience Report: Implementing a Coroutines TS Frontend to an Existing Tasking Library", L"David S" }, } },
    { 1404u, { { 0u, L"Title354", L"Author412" }, { 1u, L"bad_alloc_r1", L"Andrzej Krzemie\u0144ski" }, } },
    { 1405u, { { 0u, L"C++20 Executors are Resilient to ABI Breakage | P1405R0", L"Jared Hoberock" }, } },
    { 1406u, { { 0u, L"Add more std::hash specializations", L"Alexander Zaitsev" }, { 1u, L"Title1236", L"Alexander Zaitsev" }, } },
    { 1407u, { { 0u, L"P1407R0_SignedIntOverflow", L"Scott Schurr" }, { 1u, L"P1407R1_SignedIntOverflow", L"Scott Schurr" }, } },
    { 1408u, { { 0u, L"Title157", L"Author182" }, } },
    { 1410u, { { 0u, L"Title1665", L"Author2164" }, } },
    { 1411u, { { 0u, L"Title139", L"Author164" }, } },
    { 1412u, { { 0u, L"Title1098", L"Author1410" }, } },
    { 1413u, { { 0u, L"Title587", L"Author728" }, { 1u, L"Title419", L"Author508" }, { 2u, L"Title907", L"Author1140" }, { 3u, L"Title1528", L"Author1966" }, } },
    { 1415u, { { 0u, L"Title158", L"Michael Wong" }, { 1u, L"Title1092", L"Michael Wong" }, } },
    { 1416u, { { 0u, L"Title1369", L"Author1765" }, } },
    { 1417u, { { 0u, L"Title347", L"Author407" }, } },
    { 1419u, { { 0u, L"Title118", L"Corentin Jabot" }, } },
    { 1421u, { { 0u, L"Title873", L"Author1083" }, } },
    { 1422u, { { 0u, L"SG16: Unicode meeting summaries 2018/10/17 - 2019/01/09", L"Tom Honermann" }, } },
    { 1423u, { { 0u, L"char8_t backward compatibility remediation", L"Tom Honermann" }, { 1u, L"char8_t backward compatibility remediation", L"Tom Honermann" }, { 2u, L"char8_t backward compatibility remediation", L"Tom Honermann" }, { 3u, L"char8_t backward compatibility remediation", L"Tom Honermann" }, } },
    { 1424u, { { 0u, L"'constexpr' feature macro concerns", L"Author1275" }, { 1u, L"'constexpr' feature macro concerns", L"Author1548" }, } },
    { 1425u, { { 0u, L"Title380", L"Corentin Jabot" }, { 1u, L"Title1011", L"Corentin Jabot" }, { 2u, L"Title561", L"Corentin Jabot" }, { 3u, L"Title600", L"Corentin Jabot" }, { 4u, L"Title1689", L"Corentin Jabot" }, } },
    { 1426u, { { 0u, L"Title1165", L"Author1500" }, } },
    { 1427u, { { 0u, L"Title1542", L"Author1995" }, } },
    { 1428u, { { 0u, L"Title639", L"Author787" }, } },
    { 1429u, { { 0u, L"Title25", L"Joshua Berne" }, { 1u, L"Title1650", L"Joshua Berne" }, { 2u, L"Title1550", L"Joshua Berne" }, { 3u, L"Title888", L"Joshua Berne" }, } },
    { 1430u, { { 0u, L"Title343", L"Author402" }, { 1u, L"Title1423", L"Author1833" }, } },
    { 1433u, { { 0u, L"Title1587", L"Hana Dusikova" }, } },
    { 1434u, { { 0u, L"Discussing Pointer Provenance", L"Author584" }, } },
    { 1436u, { { 0u, L"d1436r0.html", L"Gordon Brown" }, { 1u, L"d1436r1.html", L"Gordon Brown" }, { 2u, L"d1436r2.html", L"Gordon Brown" }, { 3u, L"Title431", L"Gordon Brown" }, } },
    { 1438u, { { 0u, L"P1438R0 - A Rational Number Library for C++", L"\u00A0" }, { 1u, L"P1438R1 - A Rational Number Library for C++", L"\u00A0" }, } },
    { 1439u, { { 0u, L"Charset Transcoding, Transformation, and Transliteration", L"Steve Downey" }, { 1u, L"Charset Transcoding, Transformation, and Transliteration", L"Steve Downey" }, } },
    { 1440u, { { 0u, L"is_clamped", L"Johel Guerrero" }, } },
    { 1441u, { { 0u, L"Title865", L"Author1074" }, { 1u, L"Title1526", L"Author1961" }, } },
    { 1442u, { { 0u, L"A Medley of Networking TS improvements", L"Author1892" }, } },
    { 1443u, { { 0u, L"Title762", L"Michael Wong" }, } },
    { 1444u, { { 0u, L"Title1153", L"Michael Wong" }, } },
    { 1445u, { { 0u, L"Title1670", L"Michael Wong" }, } },
    { 1446u, { { 0u, L"html5 Reconsider the Networking TS for inclusion in C++20", L"Christopher Kohlhoff" }, } },
    { 1447u, { { 0u, L"constexpr C++ is not constexpr C", L"Mata Chochl" }, } },
    { 1448u, { { 0u, L"Title1404", L"Nathan Burgers" }, } },
    { 1449u, { { 0u, L"Title1117", L"Author1437" }, } },
    { 1450u, { { 0u, L"P1450R0", L"Author242" }, { 1u, L"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1450r1.pdfP1450R1", L"Author2179" }, { 2u, L"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1450r2.pdfP1450R2", L"Author1794" }, { 3u, L"P1450R3", L"Author1270" }, } },
    { 1452u, { { 0u, L"On the non-uniform semantics of return-type-requirements", L"Hubert S.K" }, { 1u, L"On the non-uniform semantics of return-type-requirements", L"Hubert S.K" }, { 2u, L"On the non-uniform semantics of return-type-requirements", L"Hubert S.K" }, } },
    { 1453u, { { 0u, L"Modularizing the Standard Library is a Reorganization Opportunity", L"Bryce Adelstein" }, } },
    { 1456u, { { 0u, L"Move-only views", L"Casey Carter" }, { 1u, L"Move-only views", L"Casey Carter" }, } },
    { 1457u, { { 0u, L"C++ Standard Library Issues to be moved in Kona", L"Author426" }, } },
    { 1458u, { { 0u, L"C++ International Standard", L"Author1412" }, { 1u, L"C++ International Standard", L"Author1036" }, } },
    { 1459u, { { 0u, L"C++ International Standard", L"Author245" }, { 1u, L"C++ International Standard", L"Author409" }, } },
    { 1460u, { { 0u, L"Mandating the Standard Library: Clause 20", L"Author746" }, { 1u, L"Mandating the Standard Library: Clause 20", L"Author1196" }, } },
    { 1462u, { { 0u, L"Mandating the Standard Library: Clause 20 - Strings library", L"Author136" }, { 1u, L"Mandating the Standard Library: Clause 20 - Strings library", L"Author611" }, } },
    { 1463u, { { 0u, L"C++ International Standard", L"Author1822" }, { 1u, L"C++ International Standard", L"Author307" }, } },
    { 1464u, { { 0u, L"C++ International Standard", L"Author379" }, { 1u, L"C++ International Standard", L"Author1854" }, } },
    { 1465u, { { 0u, L"Title573", L"David Goldblatt" }, } },
    { 1466u, { { 0u, L"chrono fixes", L"Author902" }, { 1u, L"chrono fixes", L"Author2222" }, { 2u, L"chrono fixes", L"Author1583" }, { 3u, L"chrono fixes", L"Author1222" }, } },
    { 1467u, { { 0u, L"Extended floating-point types", L"Micha\u0142 Dominiak" }, { 1u, L"Extended floating-point types", L"Micha\u0142 Dominiak" }, { 2u, L"Extended floating-point types", L"Micha\u0142 Dominiak" }, { 3u, L"Extended floating-point types", L"David Olsen" }, { 4u, L"Extended floating-point types and standard names", L"David Olsen" }, { 5u, L"Extended floating-point types and standard names", L"David Olsen" }, { 6u, L"Extended floating-point types and standard names", L"David Olsen" }, { 7u, L"Extended floating-point types and standard names", L"David Olsen" }, { 8u, L"Extended floating-point types and standard names", L"David Olsen" }, { 9u, L"Extended floating-point types and standard names", L"David Olsen" }, } },
    { 1468u, { { 0u, L"Fixed-layout floating-point type aliases", L"Micha\u0142 Dominiak" }, { 1u, L"Fixed-layout floating-point type aliases", L"Micha\u0142 Dominiak" }, { 2u, L"Fixed-layout floating-point type aliases", L"Micha\u0142 Dominiak" }, { 3u, L"Fixed-layout floating-point type aliases", L"Micha\u0142 Dominiak" }, { 4u, L"Fixed-layout floating-point type aliases", L"Micha\u0142 Dominiak" }, } },
    { 1469u, { { 0u, L"Disallow _ Usage in C++20 for Pattern Matching in C++23", L"Sergei Murzin" }, } },
    { 1470u, { { 0u, L"Title1365", L"David Goldblatt" }, } },
    { 1471u, { { 0u, L"html5 The trouble with coroutine_traits", L"Christopher Kohlhoff" }, } },
    { 1472u, { { 0u, L"Title1501", L"SG5 minutes" }, } },
    { 1473u, { { 0u, L"Move-only views", L"Casey Carter" }, } },
    { 1474u, { { 0u, L"Move-only views", L"Casey Carter" }, { 1u, L"Amazing Stuff", L"Casey Carter" }, } },
    { 1477u, { { 0u, L"Title1080", L"Author1390" }, { 1u, L"Title190", L"Author230" }, } },
    { 1478u, { { 0u, L"P1478: Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 1u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 2u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 3u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 4u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 5u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 6u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 7u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, { 8u, L"Byte-wise atomic memcpy", L"Hans-J. Boehm" }, } },
    { 1479u, { { 0u, L"ostringstream wrapper", L"Robert Kawulak" }, } },
    { 1481u, { { 0u, L"constexpr structured bindings", L"Nicolas Lesser" }, } },
    { 1482u, { { 0u, L"Modules Feedback", L"Bruno Cardoso" }, } },
    { 1484u, { { 1u, L"Title1198", L"Peter Bindels" }, } },
    { 1485u, { { 0u, L"Better keywords for the Coroutines TS", L"Author1900" }, { 1u, L"Better keywords for the Coroutines", L"Author1789" }, } },
    { 1486u, { { 0u, L"Title880", L"Author1093" }, { 1u, L"Title1312", L"Author1689" }, } },
    { 1487u, { { 0u, L"Title728", L"Author899" }, } },
    { 1490u, { { 0u, L"P1490r0 Contract-Related Issues", L"Andrzej Krzemie\u0144ski" }, } },
    { 1491u, { { 0u, L"Title1520", L"Author1955" }, } },
    { 1492u, { { 0u, L"Title714", L"Richard Smith" }, } },
    { 1493u, { { 0u, L"Title96", L"Geoffrey Romer" }, } },
    { 1494u, { { 0u, L"Partial program correctness", L"Author1784" }, { 1u, L"Partial program correctness", L"Author415" }, { 2u, L"Partial program correctness", L"Author1139" }, { 3u, L"Partial program correctness", L"Author1209" }, { 4u, L"Partial program correctness", L"Author794" }, { 5u, L"Partial program correctness", L"Author1575" }, } },
    { 1496u, { { 0u, L"Formatting of negative zero", L"Alan Talbot" }, { 1u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author54" }, { 2u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1400" }, } },
    { 1498u, { { 0u, L"Constrained Internal Linkage for Modules", L"Chandler Carruth" }, { 1u, L"Constrained Internal Linkage for Modules", L"Chandler Carruth" }, } },
    { 1502u, { { 0u, L"Standard library header units for C++20", L"Richard Smith" }, { 1u, L"Standard library header units for C++20", L"Richard Smith" }, } },
    { 1505u, { { 0u, L"C++ International Standard", L"Author945" }, { 1u, L"C++ International Standard", L"Author530" }, } },
    { 1510u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author1768" }, } },
    { 1517u, { { 0u, L"Contract Requirements for Iterative High-Assurance Systems", L"Ryan McDougall" }, } },
    { 1518u, { { 0u, L"Stop overconstraining allocators in container deduction guides", L"Arthur O'Dwyer" }, { 1u, L"Stop overconstraining allocators in container deduction guides", L"Arthur O'Dwyer" }, { 2u, L"Stop overconstraining allocators in container deduction guides", L"Arthur O'Dwyer" }, } },
    { 1520u, { { 0u, L"Title1125", L"Gor Nishanov" }, } },
    { 1522u, { { 0u, L"Iterator Difference Type and Integer Overflow", L"Eric Niebler" }, { 1u, L"Iterator Difference Type and Integer Overflow", L"Eric Niebler" }, } },
    { 1523u, { { 0u, L"Views and Size Types", L"Eric Niebler" }, { 1u, L"Views and Size Types", L"Eric Niebler" }, } },
    { 1525u, { { 0u, L"One-Way execute is a Poor Basis Operation", L"Eric Niebler" }, { 1u, L"One-Way is a Poor Basis Operation", L"Gaaper A~man" }, } },
    { 1601u, { { 0u, L"Recommendations for Specifying ``Hidden Friends''", L"Author1708" }, } },
    { 1602u, { { 0u, L"Make Me A Module", L"Author710" }, } },
    { 1604u, { { 0u, L"The inline keyword is not in line with the design of modules.", L"Corentin Jabot" }, { 1u, L"The inline keyword is not in line with the design of modules.", L"Corentin Jabot" }, } },
    { 1605u, { { 0u, L"Member Layout Control", L"Author745" }, } },
    { 1606u, { { 0u, L"Title29", L"Joshua Berne" }, } },
    { 1607u, { { 0u, L"Title50", L"Joshua Berne" }, { 1u, L"Title763", L"Joshua Berne" }, } },
    { 1609u, { { 0u, L"C++ Should Support Just-in-Time Compilation", L"Hal Finkel" }, { 1u, L"C++ Should Support Just-in-Time Compilation", L"Hal Finkel" }, { 2u, L"C++ Should Support Just-in-Time Compilation", L"Hal Finkel" }, { 3u, L"C++ Should Support Just-in-Time Compilation", L"Hal Finkel" }, } },
    { 1610u, { { 0u, L"D1610 Rename await_resume() to await_result().md", L"Author1230" }, } },
    { 1611u, { { 0u, L"Rod-Kona-P1611", L"Author392" }, } },
    { 1612u, { { 0u, L"Relocate Endian's Specification", L"Author413" }, { 1u, L"Relocate Endian's Specification", L"Author2143" }, } },
    { 1614u, { { 0u, L"The Mothership Has Landed Adding <=> to the Library", L"Barry Revzin" }, { 1u, L"The Mothership has Landed", L"Barry Revzin" }, { 2u, L"The Mothership has Landed", L"Barry Revzin" }, } },
    { 1616u, { { 0u, L"Using unconstrained template template parameters with constrained templates", L"Mike Spertus" }, { 1u, L"Using unconstrained template template parameters with constrained templates", L"Mike Spertus" }, } },
    { 1619u, { { 0u, L"Title1694", L"Lisa Lippincott" }, { 1u, L"Title291", L"Lisa Lippincott" }, { 2u, L"Title1348", L"Lisa Lippincott" }, } },
    { 1622u, { { 0u, L"C++ International Standard", L"Author1187" }, { 1u, L"C++ International Standard", L"Author181" }, { 2u, L"P1622R2", L"Author337" }, { 3u, L"P1622R3", L"Author1528" }, } },
    { 1624u, { { 0u, L"Resolving technical issues in parameter mapping equivalence and related problems", L"Hubert S.K" }, { 1u, L"Resolving technical issues in parameter mapping equivalence and related problems", L"Hubert S.K" }, } },
    { 1625u, { { 0u, L"Contracts: why the house is not on fire (i.e. why the status quo is tolerable)", L"Author1311" }, } },
    { 1628u, { { 0u, L"Title524", L"Corentin Jabot" }, } },
    { 1629u, { { 0u, L"Standard Text Encoding", L"JeanHeyd Meneide" }, { 1u, L"Transcoding the - Standard Text Encoding", L"JeanHeyd Meneide" }, } },
    { 1630u, { { 0u, L"Spaceship needs a tune-up", L"Barry Revzin" }, { 1u, L"Spaceship needs a tune-up", L"Barry Revzin" }, } },
    { 1631u, { { 0u, L"Title1126", L"Niall Douglas" }, { 1u, L"Title1503", L"Niall Douglas" }, } },
    { 1633u, { { 0u, L"Amendments to the C++20 Synchronization Library", L"David Olsen" }, { 1u, L"Amendments to the C++20 Synchronization Library", L"David Olsen" }, } },
    { 1634u, { { 0u, L"Naming guidelines for modules", L"Corentin Jabot" }, } },
    { 1635u, { { 0u, L"Title409", L"Author490" }, } },
    { 1636u, { { 0u, L"Formatters for library types", L"Lars Gullik" }, { 1u, L"Formatters for library types", L"Lars Gullik" }, { 2u, L"Formatters for library types", L"Lars Gullik" }, } },
    { 1638u, { { 0u, L"Title1685", L"Corentin Jabot" }, { 1u, L"Title441", L"Corentin Jabot" }, } },
    { 1639u, { { 0u, L"Title83", L"Corentin Jabot" }, } },
    { 1640u, { { 0u, L"Error size benchmarking", L"Ben Craig" }, { 1u, L"Error size benchmarking: Redux", L"Ben Craig" }, } },
    { 1641u, { { 0u, L"Freestanding Library: Rewording the Status Quo", L"Ben Craig" }, { 1u, L"D1641R1.0: Freestanding Library: Rewording the Status Quo", L"Ben Craig" }, { 2u, L"Freestanding Library: Rewording the Status Quo", L"Ben Craig" }, { 3u, L"Freestanding Library: Rewording the Status Quo", L"Ben Craig" }, } },
    { 1642u, { { 0u, L"Freestanding Library: Easy [utilities]", L"Ben Craig" }, { 1u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 2u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 3u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 4u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 5u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 6u, L"P1642R6 Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 7u, L"P1642R7 Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 8u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 9u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 10u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, { 11u, L"Freestanding Library: Easy [utilities], [ranges], and [iterators]", L"Ben Craig" }, } },
    { 1643u, { { 0u, L"Add wait/notify to atomic_ref<T>", L"David Olsen" }, { 1u, L"Add wait/notify to atomic_ref<T>", L"David Olsen" }, } },
    { 1644u, { { 0u, L"Add wait/notify to atomic<shared_ptr<T>>", L"David Olsen" }, } },
    { 1645u, { { 0u, L"constexpr for <numeric> algorithms", L"Ben Deane" }, { 1u, L"constexpr for <numeric> algorithms", L"Ben Deane" }, } },
    { 1648u, { { 0u, L"Title1359", L"Mingxin Wang" }, { 1u, L"Title1428", L"Mingxin Wang" }, { 2u, L"Title266", L"Mingxin Wang" }, } },
    { 1649u, { { 0u, L"Title447", L"Mingxin Wang" }, } },
    { 1650u, { { 0u, L"Output std::chrono::days with 'd' suffix", L"\u00A0\u00A0" }, } },
    { 1651u, { { 0u, L"bind_front should not unwrap reference_wrapper", L"\u00A0\u00A0" }, } },
    { 1652u, { { 0u, L"Printf corner cases in std::format - HackMD", L"Zhihao Yuan" }, { 1u, L"Printf corner cases in std::format - HackMD", L"Zhihao Yuan" }, } },
    { 1654u, { { 0u, L"ABI breakage - summary of initial comments", L"Author1511" }, { 1u, L"ABI breakage - summary of initial comments", L"Author511" }, } },
    { 1655u, { { 0u, L"LEWG Omnibus Design Policy Paper", L"Zach Laine" }, } },
    { 1656u, { { 0u, L"\"Throws: Nothing\" should be noexcept", L"Agust\u00EDn Berg\u00E9" }, { 1u, L"\"Throws: Nothing\" should be noexcept", L"Agust\u00EDn Berg\u00E9" }, { 2u, L"\"Throws: Nothing\" should be noexcept", L"Agust\u00EDn Berg\u00E9" }, } },
    { 1657u, { { 0u, L"Title257", L"Paul Fee" }, } },
    { 1658u, { { 0u, L"Suggestions for Consensus on Executors | P1658", L"Author3" }, } },
    { 1659u, { { 0u, L"starts_with and ends_with", L"Christopher Di" }, { 1u, L"starts_with and ends_with", L"Christopher Di" }, { 2u, L"starts_with and ends_with", L"Christopher Di" }, { 3u, L"starts_with and ends_with", L"Christopher Di" }, } },
    { 1660u, { { 0u, L"A Compromise Executor Design Sketch", L"Jared Hoberock" }, } },
    { 1661u, { { 0u, L"Remove dedicated precalculated hash lookup interface", L"\u00A0\u00A0" }, { 1u, L"Remove dedicated precalculated hash lookup interface", L"\u00A0\u00A0" }, } },
    { 1662u, { { 0u, L"Title1155", L"Author1483" }, } },
    { 1663u, { { 0u, L"Title125", L"Author146" }, } },
    { 1664u, { { 0u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 1u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 2u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 3u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 4u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 5u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 6u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, { 7u, L"reconstructible_range - a concept for putting ranges back together", L"JeanHeyd Meneide" }, } },
    { 1665u, { { 0u, L"Title324", L"John Bandela" }, } },
    { 1666u, { { 0u, L"SG16: Unicode meeting summaries 2019/01/23 - 2019/05/22", L"Tom Honermann" }, } },
    { 1667u, { { 0u, L"Concept-aware `noexcept` specifiers", L"Christopher Di" }, } },
    { 1668u, { { 0u, L"Enabling Constexpr Intrinsics By Permitting Unevaluated inline-asm in Constexpr Functions", L"Erich Keane" }, { 1u, L"Enabling Constexpr Intrinsics By Permitting Unevaluated inline-asm in Constexpr Functions", L"Erich Keane" }, } },
    { 1669u, { { 0u, L"Callsite Based Inlining Hints: [[always_inline]] and [[never_inline]]", L"Erich Keane" }, } },
    { 1670u, { { 0u, L"Title224", L"Alisdair Meredith" }, } },
    { 1671u, { { 0u, L"Title850", L"Joshua Berne" }, } },
    { 1672u, { { 0u, L"Title1490", L"Joshua Berne" }, } },
    { 1673u, { { 0u, L"Title467", L"Author576" }, { 1u, L"Title320", L"Author377" }, { 2u, L"Title1296", L"Author1666" }, { 3u, L"Title1217", L"Author1570" }, { 4u, L"D1673R4R4: D1673R4: A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 5u, L"P1673R5R5: P1673R5: A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 6u, L"P1673R6: A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 7u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 8u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 9u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 10u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 11u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 12u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, { 13u, L"A free function linear algebra interface based on the BLAS", L"Mark Hoemmen" }, } },
    { 1674u, { { 0u, L"Title1122", L"Author1445" }, { 1u, L"Title1421", L"Author1829" }, { 2u, L"Evolving a Standard C++ Linear Algebra Library from the BLAS", L"Author1997" }, } },
    { 1675u, { { 0u, L"Title594", L"Author737" }, { 1u, L"rethrow_exception must be allowed to copy", L"Author353" }, { 2u, L"rethrow_exception must be allowed to copy", L"Author1629" }, } },
    { 1676u, { { 0u, L"Title1462", L"Gor Nishanov" }, } },
    { 1677u, { { 0u, L"Cancellation is not an Error", L"Kirk Shoop" }, { 1u, L"Cancellation is not an Error", L"Kirk Shoop" }, { 2u, L"Cancellation is serendipitous-success", L"Kirk Shoop" }, } },
    { 1678u, { { 0u, L"Callbacks and Composition", L"Kirk Shoop" }, { 1u, L"Callbacks and Composition", L"Kirk Shoop" }, { 2u, L"Callbacks and Composition", L"Kirk Shoop" }, } },
    { 1679u, { { 0u, L"String Contains function", L"Wim Leflere" }, { 1u, L"String Contains function", L"Wim Leflere" }, { 2u, L"string contains function", L"Wim Leflere" }, { 3u, L"string contains function", L"Wim Leflere" }, } },
    { 1680u, { { 0u, L"p1680r0", L"Author1023" }, } },
    { 1681u, { { 0u, L"Title1116", L"Gor Nishanov" }, } },
    { 1682u, { { 0u, L"std::to_underlying for enumerations", L"JeanHeyd Meneide" }, { 1u, L"std::to_underlying for enumerations", L"JeanHeyd Meneide" }, { 2u, L"std::to_underlying for enumerations", L"JeanHeyd Meneide" }, { 3u, L"std::to_underlying for enumerations", L"JeanHeyd Meneide" }, } },
    { 1683u, { { 0u, L"References for Standard Library Vocabulary Types - an optional<> case study", L"JeanHeyd Meneide" }, } },
    { 1684u, { { 0u, L"mdarray: An Owning Multidimensional Array Analog of mdspan", L"David Hollman" }, { 1u, L"mdarray: An Owning Multidimensional Array Analog of mdspan", L"Christian Trott" }, { 2u, L"mdarray: An Owning Multidimensional Array Analog of mdspan", L"Christian Trott" }, { 3u, L"mdarray: An Owning Multidimensional Array Analog of mdspan", L"Christian Trott" }, { 4u, L"mdarray: An Owning Multidimensional Array Analog of mdspan", L"Christian Trott" }, { 5u, L"mdarray: An Owning Multidimensional Array Analog of mdspan", L"Christian Trott" }, } },
    { 1685u, { { 0u, L"Microsoft Word - P1685_replaceable_default_resource.docx", L"Pablo Halpern" }, } },
    { 1686u, { { 0u, L"C++ International Standard", L"Author1111" }, { 1u, L"C++ International Standard", L"Author187" }, { 2u, L"Mandating the Standard Library: Clause 27 - Time library", L"Author523" }, } },
    { 1687u, { { 0u, L"Summary of the Tooling Study Groups Pre-Cologne Telecons on Modules Tooling Interactions", L"Bryce Adelstein" }, { 1u, L"Summary of the Tooling Study Groups Modules Ecosystem Technical Report Telecons", L"Bryce Adelstein" }, } },
    { 1688u, { { 0u, L"Towards a C++ Ecosystem Technical Report", L"Bryce Adelstein" }, } },
    { 1689u, { { 0u, L"Format for describing dependencies of source files", L"Author1516" }, { 1u, L"Format for describing dependencies of source files", L"Author1120" }, { 2u, L"Format for describing dependencies of source files", L"Author321" }, { 3u, L"Format for describing dependencies of source files", L"Author908" }, { 4u, L"Format for describing dependencies of source files", L"Author343" }, { 5u, L"Format for describing dependencies of source files", L"Author614" }, } },
    { 1690u, { { 0u, L"Refinement Proposal for P0919 Heterogeneous lookup for unordered containers", L"Xiao Shi" }, { 1u, L"Refinement Proposal for P0919 Heterogeneous lookup for unordered containers", L"Xiao Shi" }, } },
    { 1696u, { { 0u, L"Refinement proposal for P0920 Precalculated hash values in lookup", L"Xiao Shi" }, } },
    { 1697u, { { 0u, L"Require a diagnostic for \"declaration changes meaning\"", L"Botond Ballo" }, } },
    { 1700u, { { 0u, L"Audience Tables", L"Christopher Di" }, } },
    { 1701u, { { 0u, L"Inline Namespaces: Fragility Bites", L"Author1192" }, { 1u, L"Inline Namespaces: Fragility Bites", L"Author264" }, { 2u, L"Inline Namespaces: Fragility Bites", L"Author808" }, } },
    { 1702u, { { 0u, L"Title783", L"Corentin Jabot" }, } },
    { 1703u, { { 0u, L"Recognizing Header Unit Imports Requires Full Preprocessing", L"Author1029" }, { 1u, L"Recognizing Header Unit Imports Requires Full Preprocessing", L"Author1160" }, } },
    { 1704u, { { 0u, L"axiom_level_contract_statements", L"Joshua Berne" }, } },
    { 1705u, { { 0u, L"Enumerating Core Undefined Behavior", L"Shafik Yaghmour" }, { 1u, L"Enumerating Core Undefined Behavior", L"Shafik Yaghmour" }, } },
    { 1706u, { { 0u, L"Title1435", L"Michael Wong" }, { 1u, L"Title631", L"Michael Wong" }, { 2u, L"Title735", L"Michael Wong" }, { 3u, L"Programming Language Vulnerabilities for Safety Critical C++", L"Michael Wong" }, } },
    { 1708u, { { 0u, L"Title1422", L"Richard Dosselmann" }, { 1u, L"Title1656", L"Author2150" }, { 2u, L"Title132", L"Author156" }, { 3u, L"Title289", L"Author345" }, { 4u, L"Title760", L"Author942" }, { 5u, L"Title75", L"Author73" }, { 6u, L"Title1321", L"Richard Dosselmann" }, { 7u, L"Title442", L"Richard Dosselmann" }, { 8u, L"Title1058", L"Richard Dosselmann" }, { 9u, L"Title1099", L"Richard Dosselmann" }, } },
    { 1709u, { { 0u, L"Title538", L"Phillip Ratzloff" }, { 1u, L"Title451", L"Phillip Ratzloff" }, { 2u, L"Title946", L"Phillip Ratzloff" }, { 3u, L"Graph Proposal", L"Phillip Ratzloff" }, { 4u, L"Title921", L"Author1161" }, { 5u, L"Title936", L"Author1194" }, } },
    { 1710u, { { 0u, L"Adding a global contract assumption mode", L"Author1880" }, } },
    { 1711u, { { 0u, L"Title33", L"Author37" }, } },
    { 1713u, { { 0u, L"Title345", L"Author404" }, } },
    { 1714u, { { 0u, L"NTTP are incomplete without float, double, and long double!", L"Author1725" }, { 1u, L"NTTP are incomplete without float, double, and long double!", L"Author1830" }, } },
    { 1715u, { { 0u, L"Loosen restrictions on \"_t\" typedefs.", L"Author400" }, { 1u, L"Loosen restrictions on \"_t\" typedefs.", L"Author2170" }, } },
    { 1716u, { { 0u, L"ranges compare algorithm are over-constrained", L"\u00A0\u00A0" }, { 1u, L"ranges compare algorithm are over-constrained", L"\u00A0\u00A0" }, { 2u, L"ranges compare algorithm are over-constrained", L"\u00A0\u00A0" }, { 3u, L"ranges compare algorithm are over-constrained", L"\u00A0\u00A0" }, } },
    { 1717u, { { 0u, L"Title750", L"Andrew Sutton" }, } },
    { 1718u, { { 0u, L"Mandating the Standard Library: Clause 25", L"Author1011" }, { 1u, L"Mandating the Standard Library: Clause 25", L"Author334" }, { 2u, L"Mandating the Standard Library: Clause 25", L"Author1979" }, } },
    { 1719u, { { 0u, L"Mandating the Standard Library: Clause 26", L"Author1173" }, { 1u, L"Mandating the Standard Library: Clause 26", L"Author2171" }, { 2u, L"Mandating the Standard Library: Clause 26", L"Author32" }, } },
    { 1720u, { { 0u, L"Mandating the Standard Library: Clause 28", L"Author1108" }, { 1u, L"Mandating the Standard Library: Clause 28", L"Author356" }, { 2u, L"Mandating the Standard Library: Clause 28", L"Author79" }, } },
    { 1721u, { { 0u, L"Mandating the Standard Library: Clause 29", L"Author1687" }, { 1u, L"Mandating the Standard Library: Clause 29", L"Author2120" }, { 2u, L"Mandating the Standard Library: Clause 29", L"Author202" }, } },
    { 1722u, { { 0u, L"Mandating the Standard Library: Clause 25", L"Author440" }, { 1u, L"Mandating the Standard Library: Clause 30", L"Author92" }, { 2u, L"Mandating the Standard Library: Clause 30", L"Author2193" }, } },
    { 1723u, { { 0u, L"Mandating the Standard Library: Clause 25", L"Author1787" }, { 1u, L"Mandating the Standard Library: Clause 31", L"Author128" }, { 2u, L"Mandating the Standard Library: Clause 31", L"Author386" }, } },
    { 1724u, { { 0u, L"C++ Standard Library Issues to be moved in Cologne", L"Author1327" }, } },
    { 1725u, { { 0u, L"Modular Topic Design", L"Christopher Di" }, { 1u, L"Modular Topic Design", L"Christopher Di" }, } },
    { 1726u, { { 0u, L"Title836", L"Author1044" }, { 1u, L"Title1377", L"Author1771" }, { 2u, L"Title576", L"Author714" }, { 3u, L"Title1258", L"Author1624" }, { 4u, L"Title259", L"Author305" }, { 5u, L"P1726R5 Pointer lifetime-end zap", L"Paul E" }, } },
    { 1727u, { { 0u, L"Issues with current flat_map proposal", L"Denis Yaroshevskiy" }, } },
    { 1728u, { { 0u, L"contracts_explained", L"Andrzej Krzemie\u0144ski" }, } },
    { 1729u, { { 0u, L"Text Parsing", L"Victor Zverovich" }, { 1u, L"Text Parsing", L"Victor Zverovich" }, { 2u, L"Text Parsing", L"Elias Kosunen" }, { 3u, L"Text Parsing", L"Elias Kosunen" }, { 4u, L"Text Parsing", L"Elias Kosunen" }, { 5u, L"Text Parsing", L"Elias Kosunen" }, } },
    { 1730u, { { 0u, L"Title668", L"Author849" }, } },
    { 1731u, { { 0u, L"Microsoft Word - P1731R0_memory_helpers.docx", L"Ilya Burylov" }, { 1u, L"Title1390", L"Ilya Burylov" }, } },
    { 1732u, { { 0u, L"Title51", L"Author48" }, { 1u, L"Title174", L"Author210" }, { 2u, L"Title950", L"Author1211" }, { 3u, L"Title21", L"Author27" }, { 4u, L"Title952", L"Author1215" }, } },
    { 1733u, { { 0u, L"User-friendly and Evolution-friendly Reflection: A Compromise", L"David Sankel" }, } },
    { 1734u, { { 0u, L"Title378", L"Author449" }, } },
    { 1735u, { { 0u, L"Title682", L"Michael Wong" }, } },
    { 1736u, { { 0u, L"Title774", L"Michael Wong" }, } },
    { 1737u, { { 0u, L"Title1614", L"Nevin " }, } },
    { 1738u, { { 0u, L"The Executor Concept Hierarchy Needs a Single Root", L"Eric Niebler" }, } },
    { 1739u, { { 0u, L"Title333", L"Author390" }, { 1u, L"Title496", L"Author606" }, { 2u, L"Avoid template bloat for forwarding ranges in combination with subrange-y view adaptors.", L"Hannes Hauswedell" }, { 3u, L"Avoid template bloat for safe_ranges in combination with subrange-y view adaptors.", L"Hannes Hauswedell" }, { 4u, L"Avoid template bloat for s in combination with subrange-y view adaptors.", L"Hannes Hauswedell" }, } },
    { 1743u, { { 0u, L"Title1074", L"Author1382" }, } },
    { 1744u, { { 0u, L"Title1233", L"Author1593" }, } },
    { 1745u, { { 0u, L"Title214", L"Author254" }, } },
    { 1746u, { { 0u, L"Feedback on <a data-link-type=\"biblio\" href=\"#biblio-p1386r2\">[P1386R2]</a> std::audio", L"Richard Powell" }, { 1u, L"D1746R1: Feedback on <a data-link-type=\"biblio\" href=\"#biblio-p1386r2\">[P1386R2]</a> std::audio", L"Richard Powell" }, } },
    { 1747u, { { 0u, L"Dont use `char8_t` and `std::u8string` yet in P1389", L"Yehezkel Bernat" }, } },
    { 1748u, { { 0u, L"Fill in [delay.cpp] TODO in P1389", L"Yehezkel Bernat" }, { 1u, L"Fill in [delay.cpp] TODO in P1389", L"Yehezkel Bernat" }, } },
    { 1749u, { { 0u, L"Access control for reflection", L"Yehezkel Bernat" }, } },
    { 1750u, { { 0u, L"D1750R0 A Proposal to Add Process Management to the C++ Standard Library", L"Author1697" }, { 1u, L"P1750R1 A Proposal to Add Process Management to the C++ Standard Library", L"Author503" }, } },
    { 1751u, { { 0u, L"p1751r0", L"Author973" }, } },
    { 1753u, { { 0u, L"Name Lookup Should ``Find the First Thing of That Name''", L"Author682" }, } },
    { 1754u, { { 0u, L"Title1672", L"Herb Sutter" }, { 1u, L"Title310", L"Herb Sutter" }, } },
    { 1759u, { { 0u, L"Native handle from file streams", L"Elias Kosunen" }, { 1u, L"Native handle from file streams", L"Elias Kosunen" }, { 2u, L"Native handle from file streams", L"Elias Kosunen" }, { 3u, L"Native handles and file streams", L"Elias Kosunen" }, { 4u, L"Native handles and file streams", L"Elias Kosunen" }, { 5u, L"Native handles and file streams", L"Elias Kosunen" }, { 6u, L"Native handles and file streams", L"Elias Kosunen" }, } },
    { 1760u, { { 0u, L"Title1662", L"Author2160" }, } },
    { 1761u, { { 0u, L"Title156", L"David Goldblatt" }, } },
    { 1762u, { { 0u, L"Title967", L"David Goldblatt" }, } },
    { 1764u, { { 0u, L"Title543", L"Tony Van" }, } },
    { 1766u, { { 0u, L"Mitigating minor modules maladies", L"Richard Smith" }, { 1u, L"Mitigating minor modules maladies", L"Richard Smith" }, } },
    { 1767u, { { 0u, L"Packaging C++ Modules", L"Richard Smith" }, } },
    { 1768u, { { 0u, L"Title97", L"Nevin " }, } },
    { 1769u, { { 0u, L"The \"default\" contract build-level and continuation-mode should be implementation-defined", L"Author2175" }, } },
    { 1770u, { { 0u, L"On vectors, tensors, matrices, and hypermatrices", L"Author848" }, } },
    { 1771u, { { 0u, L"Title548", L"Author676" }, { 1u, L"Title340", L"Author399" }, } },
    { 1772u, { { 0u, L"P1772R0", L"Author557" }, { 1u, L"P1772R1", L"Author2211" }, } },
    { 1773u, { { 0u, L"Title363", L"Author424" }, } },
    { 1774u, { { 0u, L"Title570", L"Author707" }, { 1u, L"Title313", L"Author367" }, { 2u, L"Title672", L"Author853" }, { 3u, L"Title491", L"Author599" }, { 4u, L"Title1607", L"Author2075" }, { 5u, L"Title670", L"Author852" }, { 6u, L"Title1693", L"Author2213" }, { 7u, L"Title98", L"Author110" }, { 8u, L"Title733", L"Author907" }, } },
    { 1779u, { { 0u, L"ABI isolation for member functions", L"Author1366" }, { 1u, L"ABI isolation for member functions", L"Author882" }, { 2u, L"ABI isolation for member functions", L"Author1262" }, { 3u, L"ABI isolation for member functions", L"Author1723" }, } },
    { 1780u, { { 0u, L"D1780R0: Modular Relaxed Dependencies: A new approach to the Out-Of-Thin-Air Problem", L"Mark Batty" }, } },
    { 1782u, { { 0u, L"Local contract restrictions", L"Author382" }, { 1u, L"Local contract restrictions", L"Author290" }, } },
    { 1786u, { { 0u, L"Title1247", L"Author1612" }, } },
    { 1787u, { { 0u, L"Declarations and where to find them", L"Author1695" }, { 1u, L"Declarations and where to find them", L"Author1922" }, { 2u, L"Declarations and where to find them", L"Author430" }, { 3u, L"Declarations and where to find them", L"Author1005" }, { 4u, L"Declarations and where to find them", L"Author394" }, { 5u, L"Declarations and where to find them", L"Author194" }, { 6u, L"Declarations and where to find them", L"Author1556" }, } },
    { 1788u, { { 0u, L"Title1223", L"Author1578" }, { 2u, L"Title1082", L"Author1393" }, { 3u, L"Title633", L"Author776" }, } },
    { 1789u, { { 0u, L"Library Support for Expansion Statements", L"Author328" }, { 1u, L"Library Support for Expansion Statements", L"Alisdair Meredith" }, } },
    { 1790u, { { 0u, L"Networking TS changes to enable better DynamicBuffer composition", L"Christopher Kohlhoff" }, { 1u, L"Networking TS changes to enable better DynamicBuffer composition", L"Christopher Kohlhoff" }, } },
    { 1791u, { { 0u, L"Evolution of the P0443 Unified Executors Proposal to accommodate new requirements", L"Christopher Kohlhoff" }, } },
    { 1792u, { { 0u, L"Simplifying and generalising Sender/Receiver for asynchronous operations", L"Christopher Kohlhoff" }, } },
    { 1793u, { { 0u, L"Proposal Template", L"Author965" }, } },
    { 1795u, { { 0u, L"p1795r0.html", L"Gordon Brown" }, { 1u, L"d1795r1.html", L"Gordon Brown" }, { 2u, L"Title243", L"Gordon Brown" }, } },
    { 1796u, { { 0u, L"Effective types: examples (P1796R0)", L"Author660" }, } },
    { 1797u, { { 0u, L"C/C++ Memory Object Model Papers - Introduction (P1797R0)", L"Author765" }, } },
    { 1798u, { { 0u, L"Title986", L"Michael Wong" }, } },
    { 1801u, { { 0u, L"Title1241", L"Herb Sutter" }, } },
    { 1803u, { { 0u, L"packexpr(args, I) -- compile-time friendly pack inspection", L"JeanHeyd Meneide" }, } },
    { 1807u, { { 0u, L"Title38", L"Joshua Berne" }, } },
    { 1808u, { { 0u, L"Contra P0339 \"`polymorphic_allocator<>` as a vocabulary type\"", L"Arthur O'Dwyer" }, } },
    { 1810u, { { 0u, L"A Quick Look at What P1754 Will Change", L"Christopher Di" }, } },
    { 1811u, { { 0u, L"Relaxing redefinition restrictions for re-exportation robustness", L"Richard Smith" }, } },
    { 1812u, { { 0u, L"Title1190", L"Author1535" }, } },
    { 1813u, { { 0u, L"A Concept Design for the Numeric Algorithms", L"Author1715" }, } },
    { 1814u, { { 0u, L"Wording for Class Template Argument Deduction for Alias Templates", L"Author336" }, } },
    { 1815u, { { 0u, L"Translation-unit-local entities", L"Author763" }, { 1u, L"Translation-unit-local entities", L"Author1027" }, { 2u, L"Translation-unit-local entities", L"Author178" }, } },
    { 1816u, { { 0u, L"Title791", L"Author980" }, } },
    { 1818u, { { 0u, L"Narrowing and Widening Conversions", L"Lawrence Crowl" }, { 1u, L"Narrowing and Widening Conversions", L"Lawrence Crowl" }, } },
    { 1819u, { { 0u, L"Untitled", L"Author173" }, } },
    { 1820u, { { 0u, L"p1820r0.html", L"Gordon Brown" }, } },
    { 1823u, { { 0u, L"d1823r0", L"Author1816" }, } },
    { 1825u, { { 0u, L"Title314", L"David Stone" }, } },
    { 1830u, { { 0u, L"Title514", L"Ruslan Arutyunyan" }, { 1u, L"Title1575", L"Ruslan Arutyunyan" }, } },
    { 1831u, { { 0u, L"Deprecating <code>volatile</code>: library", L"JF Bastien" }, { 1u, L"Deprecating <code>volatile</code>: library", L"JF Bastien" }, } },
    { 1832u, { { 0u, L"p1832r0", L"Author1587" }, } },
    { 1837u, { { 0u, L"Remove NTTPs of class type from C++20", L"Arthur O'Dwyer" }, } },
    { 1838u, { { 0u, L"Title1479", L"Bryce Adelstein" }, } },
    { 1839u, { { 0u, L"Accessing Object Representations", L"Krystian Stasiowski" }, { 1u, L"Accessing Object Representations", L"Krystian Stasiowski" }, { 2u, L"Accessing Object Representations", L"Krystian Stasiowski" }, { 3u, L"Accessing Object Representations", L"Krystian Stasiowski" }, { 4u, L"Accessing Object Representations", L"Krystian Stasiowski" }, { 5u, L"Title1087", L"Author1396" }, { 6u, L"Accessing object representations", L"Timur Doumler" }, { 7u, L"Accessing object representations", L"Timur Doumler" }, } },
    { 1840u, { { 0u, L"Rod-Cologne", L"Author2106" }, } },
    { 1841u, { { 0u, L"Wording for Individually Specializable Numeric Traits", L"Author186" }, { 1u, L"Wording for Individually Specializable Numeric Traits", L"Author1442" }, { 2u, L"Wording for Individually Specializable Numeric Traits", L"Author497" }, { 3u, L"Wording for Individually Specializable Numeric Traits", L"Author1975" }, } },
    { 1842u, { { 0u, L"Generalized Module (Dependency?) Mapper", L"Author1598" }, } },
    { 1843u, { { 0u, L"comparison and hasher requirements", L"Author1526" }, } },
    { 1844u, { { 0u, L"Enhancement of regex", L"Author240" }, { 1u, L"Enhancement of regex", L"Author1567" }, } },
    { 1845u, { { 0u, L"2019-09-21 Denver Tooling Meeting", L"Bryce Adelstein" }, } },
    { 1846u, { { 0u, L"p1846r0", L"Author1008" }, } },
    { 1847u, { { 0u, L"Microsoft Word - P1847R0.doc", L"Balog, Pal" }, { 1u, L"Microsoft Word - P1847R1.doc", L"Balog, Pal" }, { 2u, L"Microsoft Word - P1847R2.doc", L"Balog, Pal" }, { 3u, L"Microsoft Word - P1847R3.doc", L"Balog, Pal" }, { 4u, L"Microsoft Word - P1847R4.doc", L"Balog, Pal" }, } },
    { 1848u, { { 0u, L"Microsoft Word - P1848R0.doc", L"Balog, Pal" }, } },
    { 1851u, { { 0u, L"Guidelines For snake_case Concept Naming", L"Jonathan M\u00FCller" }, } },
    { 1854u, { { 0u, L"Title1443", L"Corentin Jabot" }, { 1u, L"Title869", L"Corentin Jabot" }, { 2u, L"Title602", L"Corentin Jabot" }, { 3u, L"Title58", L"Corentin Jabot" }, { 4u, L"Title1131", L"Corentin Jabot" }, } },
    { 1855u, { { 0u, L"Make <compare> freestanding", L"\u00A0\u00A0Ben Craig" }, } },
    { 1856u, { { 0u, L"P1856R0", L"Author1458" }, } },
    { 1857u, { { 0u, L"<code>remove.dots.in.module.names</code>", L"Michael Spencer" }, { 1u, L"Modules Dependency Discovery", L"Michael Spencer" }, { 2u, L"Modules Dependency Discovery", L"Michael Spencer" }, { 3u, L"Modules Dependency Discovery", L"Michael Spencer" }, } },
    { 1858u, { { 0u, L"Generalized pack declaration and usage", L"Barry Revzin" }, { 1u, L"Generalized pack declaration and usage", L"Barry Revzin" }, { 2u, L"Generalized pack declaration and usage", L"Barry Revzin" }, } },
    { 1859u, { { 0u, L"Standard terminology character sets and encodings", L"Steve Downey" }, } },
    { 1860u, { { 0u, L"C++ Networking Must Be Secure By Default", L"Alex Christensen" }, } },
    { 1861u, { { 0u, L"D1861R0: Secure Connections in Networking TS", L"Alex Christensen" }, { 1u, L"Secure Networking in C++", L"Alex Christensen" }, } },
    { 1862u, { { 0u, L"Title301", L"Corentin Jabot" }, { 1u, L"Title1344", L"Corentin Jabot" }, } },
    { 1863u, { { 0u, L"Title996", L"Author1285" }, { 1u, L"Title1461", L"Author1884" }, } },
    { 1864u, { { 0u, L"Defining Target Tuplets", L"Isabella Muerte" }, } },
    { 1865u, { { 0u, L"Add max() to latch and barrier", L"David Olsen" }, { 1u, L"Add max() to latch and barrier", L"David Olsen" }, } },
    { 1868u, { { 0u, L"width: clarifying units of width and precision in std::format", L"Victor Zverovich" }, { 1u, L"width: clarifying units of width and precision in std::format", L"Victor Zverovich" }, { 2u, L"width: clarifying units of width and precision in std::format", L"Victor Zverovich" }, } },
    { 1869u, { { 0u, L"Rename 'condition_variable_any' interruptible wait methods", L"\u00A0\u00A0" }, { 1u, L"Rename 'condition_variable_any' interruptible wait methods", L"\u00A0\u00A0" }, } },
    { 1870u, { { 0u, L"forwarding-range<T> is too subtle", L"Barry Revzin" }, { 1u, L"forwarding-range<T> is too subtle", L"Barry Revzin" }, } },
    { 1871u, { { 0u, L"Should concepts be enabled or disabled?", L"Barry Revzin" }, { 1u, L"Concept traits should be named after concepts", L"Barry Revzin" }, } },
    { 1872u, { { 0u, L"Title1486", L"Nevin " }, } },
    { 1873u, { { 0u, L"<code>remove.dots.in.module.names</code>", L"Michael Spencer" }, { 1u, L"<code>remove.dots.in.module.names</code>", L"Michael Spencer" }, } },
    { 1874u, { { 0u, L"Dynamic Initialization Order of Non-Local Variables in Modules", L"Michael Spencer" }, { 1u, L"Dynamic Initialization Order of Non-Local Variables in Modules", L"Michael Spencer" }, } },
    { 1875u, { { 0u, L"Title1604", L"Michael Spear" }, { 1u, L"Title689", L"Michael Spear" }, { 2u, L"Title650", L"Michael Spear" }, } },
    { 1876u, { { 0u, L"All The Module Names", L"Author1530" }, { 1u, L"All The Module Names", L"Author2087" }, } },
    { 1877u, { { 0u, L"Saving Private Ranges: Recovering Lost Information from Comparison and Predicate Algorithms", L"JeanHeyd Meneide" }, } },
    { 1878u, { { 0u, L"Constraining Readable Types", L"Eric Niebler" }, { 1u, L"Constraining Readable Types", L"Eric Niebler" }, } },
    { 1879u, { { 0u, L"Please Don't Rewrite My String Literals", L"Zach Laine" }, } },
    { 1880u, { { 0u, L"uNstring Arguments Shall Be UTF-N Encoded", L"Zach Laine" }, } },
    { 1881u, { { 0u, L"Epochs: a backward-compatible language evolution mechanism", L"Vittorio Romeo" }, { 1u, L"Epochs: a backward-compatible language evolution mechanism", L"Vittorio Romeo" }, } },
    { 1882u, { { 0u, L"Title604", L"Noel Tchidjo" }, } },
    { 1883u, { { 0u, L"Title942", L"Niall Douglas" }, { 1u, L"Title797", L"Niall Douglas" }, { 2u, L"Title1574", L"Niall Douglas" }, } },
    { 1884u, { { 0u, L"Private Module Fragment: An Inconsistent Boundary", L"Author1463" }, } },
    { 1885u, { { 0u, L"Title849", L"Corentin Jabot" }, { 1u, L"Title1206", L"Corentin Jabot" }, { 2u, L"Title437", L"Corentin Jabot" }, { 3u, L"Title209", L"Corentin Jabot" }, { 4u, L"Title558", L"Corentin Jabot" }, { 5u, L"Title1590", L"Corentin Jabot" }, { 6u, L"Title965", L"Corentin Jabot" }, { 7u, L"Title1044", L"Corentin Jabot" }, { 8u, L"Title794", L"Corentin Jabot" }, { 9u, L"Title1289", L"Corentin Jabot" }, { 10u, L"Title1239", L"Corentin Jabot" }, { 11u, L"Title694", L"Corentin Jabot" }, { 12u, L"Title1410", L"Corentin Jabot" }, } },
    { 1886u, { { 0u, L"Error speed benchmarking", L"Ben Craig" }, } },
    { 1887u, { { 0u, L"Title169", L"Corentin Jabot" }, { 1u, L"Title1372", L"Corentin Jabot" }, } },
    { 1888u, { { 0u, L"Title1160", L"Matti Rintala" }, } },
    { 1889u, { { 0u, L"C++ Numerics Work In Progress", L"Author1428" }, { 1u, L"C++ Numerics Work In Progress", L"Author97" }, } },
    { 1890u, { { 0u, L"C++ Numerics Work In Progress Issues", L"Author1109" }, } },
    { 1891u, { { 0u, L"Title53", L"Guy Davidson" }, } },
    { 1892u, { { 0u, L"Title317", L"Author374" }, { 1u, L"Title1706", L"Author2229" }, } },
    { 1893u, { { 0u, L"Title1053", L"Andrew Tomazos" }, } },
    { 1894u, { { 0u, L"Title1688", L"Andrew Tomazos" }, } },
    { 1895u, { { 0u, L"Title555", L"Author689" }, } },
    { 1896u, { { 0u, L"SG16: Unicode meeting summaries 2019/06/12 - 2019/09/25", L"Tom Honermann" }, } },
    { 1897u, { { 0u, L"Towards C++23 executors: A proposal for an initial set of algorithms", L"Lee Howes" }, { 1u, L"Towards C++23 executors: A proposal for an initial set of algorithms", L"Lee Howes" }, { 2u, L"Towards C++23 executors: A proposal for an initial set of algorithms", L"Lee Howes" }, { 3u, L"Towards C++23 executors: A proposal for an initial set of algorithms", L"Lee Howes" }, } },
    { 1898u, { { 0u, L"Forward progress delegation for executors", L"Lee Howes" }, { 1u, L"Forward progress delegation for executors", L"Lee Howes" }, } },
    { 1899u, { { 0u, L"strideview", L"Author1678" }, { 1u, L"`stride_view`", L"Christopher Di" }, { 2u, L"stride_view", L"Christopher Di" }, { 3u, L"stride_view", L"Christopher Di" }, } },
    { 1900u, { { 0u, L"Concepts-Adjacent Problems", L"Barry Revzin" }, } },
    { 1901u, { { 0u, L"P1901R0 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers", L"Daryl Haresign" }, { 1u, L"P1901R1 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers", L"Daryl Haresign" }, { 2u, L"P1901R2 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers", L"Daryl Haresign" }, } },
    { 1902u, { { 0u, L"Missing feature-test macros 2018-2019", L"Barry Revzin" }, { 1u, L"Missing feature-test macros 2017-2019", L"Barry Revzin" }, } },
    { 1905u, { { 0u, L"Title999", L"Corentin Jabot" }, } },
    { 1906u, { { 0u, L"Title1219", L"Author1571" }, } },
    { 1907u, { { 0u, L"Inconsistencies with non-type template parameters", L"Author475" }, { 1u, L"Inconsistencies with non-type template parameters", L"Author1293" }, } },
    { 1908u, { { 0u, L"Title379", L"Corentin Jabot" }, { 1u, L"Title1583", L"Corentin Jabot" }, { 2u, L"Title1180", L"Corentin Jabot" }, } },
    { 1909u, { { 0u, L"Title1149", L"Michael Wong" }, } },
    { 1910u, { { 0u, L"Title1442", L"Michael Wong" }, } },
    { 1911u, { { 0u, L"Title1189", L"Michael Wong" }, } },
    { 1912u, { { 0u, L"Title700", L"Author873" }, { 1u, L"Title286", L"Author340" }, } },
    { 1913u, { { 0u, L"Comments on Audio Devices", L"Author140" }, } },
    { 1914u, { { 0u, L"P1914R0", L"Author1510" }, } },
    { 1915u, { { 0u, L"Expected Feedback from simd in the Parallelism TS 2 [P1915R0]", L"Matthias Kretz" }, } },
    { 1916u, { { 0u, L"Title106", L"David Goldblatt" }, } },
    { 1917u, { { 0u, L"C++ Standard Library Issues to be moved in Belfast", L"Author1706" }, } },
    { 1919u, { { 0u, L"Title255", L"Nevin " }, { 1u, L"Title396", L"Nevin " }, { 2u, L"Title554", L"Nevin " }, { 3u, L"Title1335", L"Nevin " }, } },
    { 1920u, { { 0u, L"Title1259", L"Andrew Tomazos" }, } },
    { 1921u, { { 0u, L"Title508", L"Nevin " }, } },
    { 1922u, { { 0u, L"Title908", L"Alexander Zaitsev" }, } },
    { 1923u, { { 0u, L"Title853", L"Alexander Zaitsev" }, } },
    { 1924u, { { 0u, L"Title801", L"Alexander Zaitsev" }, } },
    { 1925u, { { 0u, L"Title551", L"Alexander Zaitsev" }, } },
    { 1926u, { { 0u, L"Title1668", L"Alexander Zaitsev" }, } },
    { 1927u, { { 0u, L"Title244", L"Alexander Zaitsev" }, } },
    { 1928u, { { 0u, L"Merge data-parallel types from the Parallelism TS 2 [P1928R0]", L"Matthias Kretz" }, { 1u, L"Merge data-parallel types from the Parallelism TS 2 [P1928R1]", L"Matthias Kretz" }, { 2u, L"Merge data-parallel types from the Parallelism TS 2 [P1928R2]", L"Matthias Kretz" }, { 3u, L"Merge data-parallel types from the Parallelism TS 2 [P1928R3]", L"Matthias Kretz" }, { 4u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R4]", L"Matthias Kretz" }, { 5u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R5]", L"Matthias Kretz" }, { 6u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R6]", L"Matthias Kretz" }, { 7u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R7]", L"Matthias Kretz" }, { 8u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R8]", L"Matthias Kretz" }, { 9u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R9]", L"Matthias Kretz" }, { 10u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R10]", L"Matthias Kretz" }, { 11u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R11]", L"Matthias Kretz" }, { 12u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R12]", L"Matthias Kretz" }, { 13u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R13]", L"Matthias Kretz" }, { 14u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R14]", L"Matthias Kretz" }, { 15u, L"std::simd merge data-parallel types from the Parallelism TS 2 [P1928R15]", L"Matthias Kretz" }, } },
    { 1929u, { { 0u, L"Title307", L"Alexander Zaitsev" }, } },
    { 1930u, { { 0u, L"Title648", L"Author807" }, } },
    { 1932u, { { 0u, L"Title711", L"Pavel Dyakov" }, } },
    { 1933u, { { 0u, L"Suggestions for bulk_execute | P1933", L"Author1662" }, } },
    { 1934u, { { 0u, L"Amazing Stuff", L"Casey Carter" }, } },
    { 1935u, { { 0u, L"A C++ Approach to Physical Units", L"Mateusz Pusz" }, { 1u, L"A C++ Approach to Physical Units", L"Mateusz Pusz" }, { 2u, L"A C++ Approach to Physical Units", L"Mateusz Pusz" }, } },
    { 1936u, { { 0u, L"Title1294", L"Ruslan Arutyunyan" }, } },
    { 1937u, { { 0u, L"Fixing inconsistencies between `constexpr` and `consteval` functions", L"David Stone" }, { 1u, L"Fixing inconsistencies between `constexpr` and `consteval` functions", L"David Stone" }, { 2u, L"Fixing inconsistencies between `constexpr` and `consteval` functions", L"David Stone" }, } },
    { 1938u, { { 0u, L"if consteval", L"Barry Revzin" }, { 1u, L"if-consteval", L"Barry Revzin" }, { 2u, L"`if consteval`", L"Barry Revzin" }, { 3u, L"`if consteval`", L"Barry Revzin" }, } },
    { 1943u, { { 0u, L"Networking TS changes to improve completion token flexibility and performance", L"Christopher Kohlhoff" }, } },
    { 1944u, { { 0u, L"Title875", L"Author1088" }, { 1u, L"Title549", L"Author677" }, } },
    { 1945u, { { 0u, L"Making More Objects Contiguous", L"Krystian Stasiowski" }, } },
    { 1946u, { { 0u, L"Allow defaulting comparisons by value", L"Barry Revzin" }, } },
    { 1947u, { { 0u, L"Title1640", L"Author2121" }, } },
    { 1948u, { { 0u, L"Title195", L"Author236" }, } },
    { 1949u, { { 0u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 1u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 2u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 3u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 4u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 5u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 6u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, { 7u, L"C++ Identifier Syntax using Unicode Standard Annex 31", L"Steve Downey" }, } },
    { 1950u, { { 0u, L"<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++", L"Jonathan B" }, { 1u, L"<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++", L"Jonathan B" }, { 2u, L"<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++", L"Jonathan B" }, } },
    { 1951u, { { 0u, L"Default Arguments for pair's Forwarding Constructor", L"Logan R" }, { 1u, L"Default Arguments for pair's Forwarding Constructor", L"Logan R" }, } },
    { 1953u, { { 0u, L"Title806", L"Author997" }, } },
    { 1955u, { { 0u, L"Top Level Is Constant Evaluated", L"Author1802" }, { 1u, L"Top Level Is Constant Evaluated", L"Author428" }, } },
    { 1956u, { { 0u, L"P1956R0", L"Author1282" }, { 1u, L"P1956R1", L"Author921" }, } },
    { 1957u, { { 0u, L"Converting from T* to bool should be considered narrowing (re: US 212) - HackMD", L"Zhihao Yuan" }, { 1u, L"Converting from T* to bool should be considered narrowing (re: US 212) - HackMD", L"Zhihao Yuan" }, { 2u, L"Converting from T* to bool should be considered narrowing (re: US 212) - HackMD", L"Zhihao Yuan" }, } },
    { 1958u, { { 0u, L"C++ Concurrent Buffer Queue", L"Lawrence Crowl" }, } },
    { 1959u, { { 0u, L"Remove std::weak_equality and std::strong_equality", L"Barry Revzin" }, } },
    { 1960u, { { 0u, L"NB Comment Changes Reviewed by SG1", L"David Olsen" }, } },
    { 1961u, { { 0u, L"Harmonizing the definitions of total order for pointers", L"Gaaper A~man" }, } },
    { 1962u, { { 0u, L"Title1533", L"Author1971" }, } },
    { 1963u, { { 0u, L"P1963R0 Fixing US 313", L"Author49" }, } },
    { 1964u, { { 0u, L"Casting convertible_to<bool> considered harmful", L"Tim Song" }, { 1u, L"Wording for boolean-testable", L"Tim Song" }, { 2u, L"Wording for boolean-testable", L"Tim Song" }, } },
    { 1965u, { { 0u, L"Blanket Wording for Specifying ``Hidden Friends''", L"Author1805" }, } },
    { 1967u, { { 0u, L"Preprocessor embed", L"Author1700" }, { 1u, L"Preprocessor embed - Binary Resource Inclusion", L"Author433" }, { 2u, L"Preprocessor embed - Binary Resource Inclusion", L"Author295" }, { 3u, L"Preprocessor embed - Binary Resource Inclusion | r4", L"Author680" }, { 4u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 5u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 6u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 7u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 8u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 9u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 10u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 11u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 12u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 13u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, { 14u, L"#embed - a scannable, tooling-friendly binary resource inclusion mechanism", L"JeanHeyd Meneide" }, } },
    { 1968u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author2230" }, } },
    { 1969u, { { 0u, L"Core \"ready\" Issues", L"Author266" }, } },
    { 1970u, { { 0u, L"Consistency for size() functions", L"Hannes Hauswedell" }, { 1u, L"Consistency for size() functions", L"Hannes Hauswedell" }, { 2u, L"Consistency for size() functions: Add ranges::ssize", L"Hannes Hauswedell" }, } },
    { 1971u, { { 0u, L"Core NB Comment Resolutions", L"Author1383" }, } },
    { 1972u, { { 0u, L"US105 Check satisfaction of constraints for non-templates when forming pointer to function", L"Author175" }, } },
    { 1973u, { { 0u, L"Rename _default_init Functions", L"Author2145" }, { 1u, L"Rename _default_init Functions", L"Author528" }, } },
    { 1974u, { { 0u, L"Non-transient constexpr allocation using", L"Jeff Snyder" }, } },
    { 1975u, { { 0u, L"Fixing the wording of parenthesized aggregate-initialization", L"Author1568" }, } },
    { 1976u, { { 0u, L"Fixed-size 'span' construction from dynamic-size range", L"\u00A0\u00A0" }, { 1u, L"Fixed-size 'span' construction from dynamic-size range", L"\u00A0\u00A0" }, { 2u, L"Fixed-size 'span' construction from dynamic-size range", L"\u00A0\u00A0" }, } },
    { 1978u, { { 0u, L"Rename `_default_init` functions and do nothing more", L"\u00A0\u00A0" }, } },
    { 1979u, { { 0u, L"Title87", L"Mathias Stearn" }, } },
    { 1980u, { { 0u, L"Drafting for CA096: Declaration matching for non-dependent requires-clauses", L"Jason Merrill" }, } },
    { 1981u, { { 0u, L"Rename leap to leap_second", L"Author1466" }, } },
    { 1982u, { { 0u, L"Rename link to time_zone_link", L"Author362" }, } },
    { 1983u, { { 0u, L"Wording for GB301, US296, US292, US291, and US283", L"Tim Song" }, } },
    { 1985u, { { 0u, L"Universal Template Parameters", L"Mateusz Pusz" }, { 1u, L"Universal Template Parameters", L"Mateusz Pusz" }, { 3u, L"Universal Template Parameters", L"Mateusz Pusz" }, } },
    { 1988u, { { 0u, L"Allow Templates in Local Classes", L"Steve Downey" }, { 1u, L"Allow Templates in Local Classes", L"Steve Downey" }, } },
    { 1989u, { { 0u, L"Title138", L"Corentin Jabot" }, { 1u, L"Title472", L"Corentin Jabot" }, { 2u, L"Title161", L"Corentin Jabot" }, } },
    { 1990u, { { 0u, L"Title502", L"Author612" }, { 1u, L"Title510", L"Author628" }, } },
    { 1991u, { { 0u, L"Rod-Belfast-P1991", L"Author1534" }, } },
    { 1993u, { { 0u, L"Restore factories to bulk_execute | P1993R0", L"Author1276" }, { 1u, L"Restore shared state to bulk_execute | P1993R1", L"Author1296" }, } },
    { 1994u, { { 0u, L"elements_view needs its own sentinel", L"Tim Song" }, { 1u, L"elements_view needs its own sentinel", L"Tim Song" }, } },
    { 1995u, { { 0u, L"P1995R0 Contract Use Cases", L"Joshua Berne" }, { 1u, L"P1995R1 Contract Use Cases", L"Joshua Berne" }, } },
    { 1996u, { { 0u, L"Title1555", L"Dmitry Sokolov" }, } },
    { 1997u, { { 0u, L"Relaxing Restrictions on Arrays", L"Krystian Stasiowski" }, { 1u, L"Relaxing Restrictions on Arrays", L"Krystian Stasiowski" }, } },
    { 1998u, { { 0u, L"Title616", L"Ryan McDougall" }, { 1u, L"Title1224", L"Ryan McDougall" }, } },
    { 1999u, { { 0u, L"Process proposal: double-check evolutionary material via a Tentatively Ready status", L"Author1690" }, } },
    { 2000u, { { 0u, L"Title971", L"Author1251" }, { 1u, L"Title1627", L"Author2100" }, { 2u, L"Title232", L"Author281" }, { 3u, L"P2000r3: Direction for ISO C++", L"Author1113" }, { 4u, L"P2000r4: Direction for ISO C++", L"Author1336" }, } },
    { 2002u, { { 0u, L"Defaulted comparison specification fixes", L"Author1889" }, { 1u, L"Defaulted comparison specification fixes", L"Author549" }, } },
    { 2003u, { { 0u, L"Fixing Internal and External Linkage Entities in Header Units", L"Michael Spencer" }, } },
    { 2004u, { { 0u, L"Numbers and their Scopes", L"Author1100" }, } },
    { 2005u, { { 0u, L"2D Graphics: A Brief Review", L"James Berrow" }, } },
    { 2006u, { { 0u, L"Title407", L"Author487" }, { 1u, L"Eliminating heap-allocations in sender/receiver with connect()/start() as basis operations", L"Lewis Baker" }, } },
    { 2007u, { { 0u, L"std::from_chars should work with std::string_view", L"Mateusz Pusz" }, } },
    { 2008u, { { 0u, L"Enable variable template template parameters", L"Mateusz Pusz" }, } },
    { 2009u, { { 0u, L"SG16: Unicode meeting summaries 2019-10-09 through 2019-12-11", L"The proposal" }, } },
    { 2010u, { { 0u, L"Markdown To PDF", L"Author1956" }, } },
    { 2011u, { { 0u, L"A pipeline-rewrite operator", L"Colby Pike" }, { 1u, L"A pipeline-rewrite operator", L"Colby Pike" }, } },
    { 2012u, { { 0u, L"P2012R0", L"Author1707" }, { 1u, L"Fix the rangebased for loop, Rev1", L"Author1440" }, { 2u, L"Fix the range-based for loop, Rev 2", L"Author357" }, } },
    { 2013u, { { 0u, L"Freestanding Language: Optional <code>::operator new</code>", L"Ben Craig" }, { 1u, L"Freestanding Language: Optional <code>::operator new</code>", L"Ben Craig" }, { 2u, L"Freestanding Language: Optional <code>::operator new</code>", L"Ben Craig" }, { 3u, L"Freestanding Language: Optional <code>::operator new</code>", L"Ben Craig" }, { 4u, L"Freestanding Language: Optional <code>::operator new</code>", L"Ben Craig" }, { 5u, L"Freestanding Language: Optional <code>::operator new</code>", L"Ben Craig" }, } },
    { 2014u, { { 0u, L"Title1046", L"Author1351" }, { 1u, L"Title1354", L"Author1747" }, { 2u, L"Proposed resolution for US061+US063 - aligned allocation of coroutine frames", L"Author1295" }, } },
    { 2016u, { { 0u, L"Title603", L"Corentin Jabot" }, } },
    { 2017u, { { 0u, L"Conditionally safe ranges", L"Barry Revzin" }, { 1u, L"Conditionally borrowed ranges", L"Barry Revzin" }, } },
    { 2019u, { { 0u, L"Title1484", L"Corentin Jabot" }, { 1u, L"Title974", L"Corentin Jabot" }, { 2u, L"Title1568", L"Corentin Jabot" }, { 3u, L"Title843", L"Corentin Jabot" }, { 4u, L"Title1154", L"Corentin Jabot" }, { 5u, L"Title1529", L"Corentin Jabot" }, { 6u, L"Title958", L"Corentin Jabot" }, { 7u, L"Title749", L"Corentin Jabot" }, { 8u, L"Title1215", L"Corentin Jabot" }, } },
    { 2020u, { { 0u, L"Title308", L"Corentin Jabot" }, } },
    { 2021u, { { 0u, L"Negative zero strikes again", L"Victor Zverovich" }, } },
    { 2022u, { { 0u, L"Rangified version of lexicographical_compare_three_way", L"Ran Regev" }, { 1u, L"Rangified version of lexicographical_compare_three_way", L"Ran Regev" }, { 2u, L"Rangified version of lexicographical_compare_three_way", L"Ran Regev" }, { 3u, L"P2022R3 - Rangified version of lexicographical_compare_three_way", L"Alex Dathskovsky" }, } },
    { 2024u, { { 0u, L"Bloomberg Analysis of Unified Executors", L"Dietmar Khl" }, } },
    { 2025u, { { 0u, L"Guaranteed copy elision for named return objects", L"Anton Zhilin" }, { 1u, L"Guaranteed copy elision for return variables", L"Anton Zhilin" }, { 2u, L"Guaranteed copy elision for return variables", L"Anton Zhilin" }, } },
    { 2026u, { { 0u, L"Title789", L"Ryan McDougall" }, } },
    { 2027u, { { 0u, L"Title980", L"Author1266" }, } },
    { 2028u, { { 0u, L"Title465", L"Author575" }, } },
    { 2029u, { { 0u, L"Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", L"Tom Honermann" }, { 1u, L"Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", L"Tom Honermann" }, { 2u, L"Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", L"Tom Honermann" }, { 3u, L"Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", L"Tom Honermann" }, { 4u, L"Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", L"Tom Honermann" }, } },
    { 2030u, { { 0u, L"Title1395", L"Michael Wong" }, } },
    { 2031u, { { 0u, L"Title1683", L"Michael Wong" }, } },
    { 2032u, { { 0u, L"P2032R0 Contract Use Cases", L"Joshua Berne" }, } },
    { 2033u, { { 0u, L"Title352", L"Author411" }, } },
    { 2034u, { { 0u, L"Title418", L"Ryan McDougall" }, { 1u, L"Title337", L"Ryan McDougall" }, { 2u, L"Title990", L"Ryan McDougall" }, { 3u, L"Partially Mutable Lambda Captures", L"Ryan McDougall" }, { 4u, L"Partially Mutable Lambda Captures", L"Ryan McDougall" }, } },
    { 2035u, { { 0u, L"Microsoft Word - AP0_value_prop.docx", L"Author219" }, } },
    { 2036u, { { 0u, L"Change scope of lambda trailing-return-type", L"Barry Revzin" }, { 1u, L"Change scope of lambda *trailing-return-type*", L"Barry Revzin" }, { 2u, L"Change scope of lambda *trailing-return-type*", L"Barry Revzin" }, { 3u, L"Change scope of lambda trailing-return-type", L"Barry Revzin" }, } },
    { 2037u, { { 0u, L"P2037R0 String's gratuitous assignment", L"\u00A0\u00A0" }, { 1u, L"P2037R1 String's gratuitous assignment", L"\u00A0\u00A0" }, } },
    { 2038u, { { 0u, L"P2038R0 Proposed nomenclature for contract-related proposals", L"\u00A0\u00A0" }, } },
    { 2039u, { { 0u, L"Title934", L"Menashe Rosemberg" }, } },
    { 2040u, { { 0u, L"Title424", L"Corentin Jabot" }, } },
    { 2041u, { { 0u, L"Deleting variable templates", L"David Stone" }, { 1u, L"Title647", L"David Stone" }, } },
    { 2042u, { { 0u, L"P2042R0 Alternate names for make_shared_default_init", L"\u00A0\u00A0" }, } },
    { 2043u, { { 0u, L"Don't constexpr All The Things", L"David Sankel" }, } },
    { 2044u, { { 0u, L"Title503", L"Robert Leahy" }, { 1u, L"Title955", L"Robert Leahy" }, { 2u, L"Title152", L"Robert Leahy" }, } },
    { 2045u, { { 0u, L"Missing Mandates for the standard library", L"Author844" }, { 1u, L"Missing Mandates for the standard library", L"Author85" }, } },
    { 2046u, { { 0u, L"P1243R3 - Rangify New Algorithms", L"Dan Raviv" }, } },
    { 2047u, { { 0u, L"An allocator-aware optional type", L"Author727" }, { 1u, L"An allocator-aware optional type", L"Author624" }, { 2u, L"An allocator-aware optional type", L"Author306" }, { 3u, L"An allocator-aware optional type", L"Author1897" }, { 4u, L"An allocator-aware optional type", L"Author2118" }, { 5u, L"An allocator-aware optional type", L"Author1887" }, { 6u, L"An allocator-aware optional type", L"Author1718" }, { 7u, L"An allocator-aware optional type", L"Author604" }, } },
    { 2048u, { { 0u, L"Prohibit zero and NULL from being used as null pointer literals", L"Vittorio Romeo" }, } },
    { 2049u, { { 0u, L"Title292", L"Andrew Sutton" }, } },
    { 2050u, { { 0u, L"Title721", L"Andrew Sutton" }, } },
    { 2051u, { { 0u, L"C++ Standard Library Issues to be moved in Prague", L"Author369" }, } },
    { 2052u, { { 0u, L"Title678", L"Niall Douglas" }, } },
    { 2053u, { { 0u, L"Title1134", L"Author1455" }, { 1u, L"Title1601", L"Author2067" }, } },
    { 2054u, { { 0u, L"Title215", L"Author258" }, { 1u, L"Title122", L"Author142" }, } },
    { 2055u, { { 0u, L"Title892", L"Author1118" }, } },
    { 2057u, { { 0u, L"Title274", L"Michael Wong" }, } },
    { 2058u, { { 0u, L"Title110", L"Martin HoYeHovsk" }, } },
    { 2059u, { { 0u, L"Title456", L"Martin HoYeHovsk" }, } },
    { 2060u, { { 0u, L"Title1130", L"Martin HoYeHovsk" }, } },
    { 2061u, { { 0u, L"Title391", L"Author467" }, } },
    { 2062u, { { 0u, L"Title834", L"Wyatt Childers" }, } },
    { 2064u, { { 0u, L"Title1577", L"Herb Sutter" }, } },
    { 2065u, { { 0u, L"naming and aliases", L"Kirk Shoop" }, } },
    { 2066u, { { 0u, L"Suggested draft TS for C++ Extensions for Transaction Memory Light", L"Michael L" }, { 1u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 2u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 3u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 4u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 5u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 6u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 7u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 8u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 9u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, { 10u, L"Suggested draft TS for C++ Extensions for Minimal Transactional Memory", L"Hans Boehm" }, } },
    { 2067u, { { 0u, L"Title817", L"Marc Mutz" }, } },
    { 2068u, { { 0u, L"Title207", L"Marc Mutz" }, } },
    { 2069u, { { 0u, L"Title815", L"Niall Douglas" }, } },
    { 2070u, { { 0u, L"Title727", L"Peter Sommerlad" }, } },
    { 2071u, { { 0u, L"Named universal character escapes", L"Tom Honermann" }, { 1u, L"Named universal character escapes", L"Tom Honermann" }, { 2u, L"Named universal character escapes", L"Tom Honermann" }, } },
    { 2072u, { { 0u, L"Title191", L"Marco Foco" }, { 1u, L"Title353", L"Marco Foco" }, } },
    { 2073u, { { 0u, L"Title24", L"Author30" }, } },
    { 2074u, { { 0u, L"Title522", L"Author640" }, } },
    { 2075u, { { 0u, L"Title941", L"Pavel Dyakov" }, { 1u, L"Title917", L"Pavel Dyakov" }, { 2u, L"P2075R2.docx", L"Pavel Dyakov" }, { 3u, L"P2075R3.docx", L"Ilya Burylov" }, { 4u, L"P2075R4.docx", L"Ilya Burylov" }, { 5u, L"P2075R5.docx", L"Ilya Burylov" }, { 6u, L"P2075R6.docx", L"Ilya Burylov" }, } },
    { 2076u, { { 0u, L"Previous disagreements on Contracts", L"Author1453" }, } },
    { 2077u, { { 0u, L"Title282", L"Boyarinov, Konstantin" }, { 1u, L"Heterogeneous erasure overloads for associative containers", L"Konstantin Boyarinov" }, { 2u, L"Heterogeneous erasure overloads for associative containers", L"Konstantin Boyarinov" }, { 3u, L"Heterogeneous erasure overloads for associative containers", L"Konstantin Boyarinov" }, } },
    { 2078u, { { 0u, L"Add new traits type std::is_complex<T>", L"Bob Steagall" }, } },
    { 2079u, { { 0u, L"Title1330", L"Ruslan" }, { 1u, L"Parallel Executor", L"Ruslan Arutyunyan" }, { 2u, L"System execution context", L"Lee Howes" }, { 3u, L"System execution context", L"Lee Howes" }, { 4u, L"System execution context", L"Lee Howes" }, { 5u, L"System execution context", L"Lucian Radu" }, { 6u, L"System execution context", L"Lucian Radu" }, { 7u, L"Parallel scheduler", L"Lucian Radu" }, } },
    { 2080u, { { 0u, L"Polymorphic allocators: There is no such thing as One True Vocabulary Type", L"Author410" }, } },
    { 2081u, { { 0u, L"Rebase the Library Fundamentals v3 TS on C++20", L"Author1533" }, { 1u, L"Rebase the Library Fundamentals v3 TS on C++20", L"Author717" }, } },
    { 2082u, { { 0u, L"Title326", L"Author381" }, { 1u, L"Title1625", L"Author2097" }, } },
    { 2085u, { { 0u, L"Consistent defaulted comparisons", L"Author914" }, } },
    { 2087u, { { 0u, L"Reflection Naming: fix reflexpr", L"Mihail Naydenov" }, } },
    { 2088u, { { 0u, L"Reflection Naming: Reification", L"Mihail Naydenov" }, } },
    { 2089u, { { 0u, L"Function parameter constraints are fragile", L"Barry Revzin" }, } },
    { 2091u, { { 0u, L"Issues with range access CPOs", L"Casey Carter" }, } },
    { 2092u, { { 0u, L"Title373", L"Daveed Vandevoorde" }, } },
    { 2093u, { { 0u, L"Formatted output", L"Victor Zverovich" }, { 1u, L"Formatted output", L"Victor Zverovich" }, { 2u, L"Formatted output", L"Victor Zverovich" }, { 3u, L"Formatted output", L"Victor Zverovich" }, { 4u, L"Formatted output", L"Victor Zverovich" }, { 5u, L"Formatted output", L"Victor Zverovich" }, { 6u, L"Formatted output", L"Victor Zverovich" }, { 7u, L"Formatted output", L"Victor Zverovich" }, { 8u, L"Formatted output", L"Victor Zverovich" }, { 9u, L"Formatted output", L"Victor Zverovich" }, { 10u, L"Formatted output", L"Victor Zverovich" }, { 11u, L"Formatted output", L"Victor Zverovich" }, { 12u, L"Formatted output", L"Victor Zverovich" }, { 13u, L"Formatted output", L"Victor Zverovich" }, { 14u, L"Formatted output", L"Victor Zverovich" }, } },
    { 2095u, { { 0u, L"Resolve lambda init-capture pack grammar (CWG2378)", L"Barry Revzin" }, } },
    { 2096u, { { 0u, L"Generalized wording for partial specializations", L"James Touton" }, { 1u, L"Generalized wording for partial specializations", L"James Touton" }, { 2u, L"Generalized wording for partial specializations", L"James Touton" }, } },
    { 2098u, { { 0u, L"Proposing std::isspecializationof", L"Author437" }, { 1u, L"Proposing std::isspecializationof", L"Author517" }, } },
    { 2100u, { { 0u, L"D2100R0: Keep unhandled_exception of a promise type mandatory - a response to US062 and FR066", L"Micha\u0142 Dominiak" }, } },
    { 2101u, { { 0u, L"Models subsumes satisfies (Wording for US298 and US300)", L"Tim Song" }, } },
    { 2102u, { { 0u, L"Make implicit expression variations more explicit (Wording for US185)", L"Tim Song" }, } },
    { 2103u, { { 0u, L"Core NB Comment Resolutions", L"Author1574" }, } },
    { 2104u, { { 0u, L"Resolution for GB046 - Disallow changing concept values", L"Author962" }, } },
    { 2106u, { { 0u, L"Alternative wording for GB315 and GB316", L"Tim Song" }, } },
    { 2107u, { { 0u, L"Core Issue 2436: US064 Copy semantics of coroutine parameters", L"Jens Maurer" }, } },
    { 2108u, { { 0u, L"Core \"ready\" Issues", L"Author504" }, } },
    { 2109u, { { 0u, L"US084: Disallow \"export import foo\" outside of module interface", L"Author542" }, } },
    { 2113u, { { 0u, L"Proposed resolution for 2019 comment CA 112", L"Hubert S.K" }, } },
    { 2114u, { { 0u, L"P2114R0 Minimal Contract Use Cases", L"Joshua Berne" }, } },
    { 2115u, { { 0u, L"US069: Merging of multiple definitionsfor unnamed unscoped enumerations", L"Author585" }, } },
    { 2116u, { { 0u, L"Remove tuple-like protocol support from fixed-extent span", L"Tim Song" }, } },
    { 2117u, { { 0u, L"C++ Standard Library Issues Resolved Directly In Prague", L"Author1911" }, } },
    { 2119u, { { 0u, L"Feedback on P1708: Simple Statistical Functions", L"Jolanta Opara" }, } },
    { 2120u, { { 0u, L"Simplified structured bindings protocol with pack aliases", L"Barry Revzin" }, } },
    { 2123u, { { 0u, L"Extending the Type System to Provide API and ABI Flexibility", L"Hal Finkel" }, } },
    { 2125u, { { 0u, L"Title1562", L"Titus Winters" }, } },
    { 2126u, { { 0u, L"Microsoft Word - AP1_unleashing.docx", L"Author423" }, } },
    { 2127u, { { 0u, L"Title501", L"Author610" }, } },
    { 2128u, { { 0u, L"Title101", L"Mark Hoemmen" }, { 1u, L"Title519", L"Mark Hoemmen" }, { 2u, L"Title627", L"Mark Hoemmen" }, { 3u, L"Title664", L"Mark Hoemmen" }, { 4u, L"Title684", L"Mark Hoemmen" }, { 5u, L"Title1167", L"Mark Hoemmen" }, { 6u, L"Title1525", L"Mark Hoemmen" }, } },
    { 2130u, { { 0u, L"P2130-Rod-Prague", L"Author1256" }, } },
    { 2131u, { { 0u, L"Changes between C++17 and C++20", L"Author2089" }, } },
    { 2133u, { { 0u, L"Microsoft Word - incu.doc", L"Balog, Pal" }, } },
    { 2134u, { { 0u, L"Microsoft Word - kaizen.doc", L"Balog, Pal" }, } },
    { 2135u, { { 1u, L"Title1603", L"Author2068" }, } },
    { 2136u, { { 0u, L"invoke<R> - HackMD", L"Zhihao Yuan" }, { 1u, L"invoke_r - HackMD", L"Zhihao Yuan" }, { 2u, L"invoke_r - HackMD", L"Zhihao Yuan" }, { 3u, L"invoke_r - HackMD", L"Zhihao Yuan" }, } },
    { 2137u, { { 0u, L"Goals and priorities for C++", L"Chandler Carruth" }, } },
    { 2138u, { { 0u, L"Rules of Design<=>Wording engagement", L"Author771" }, { 1u, L"Rules of Design<=>Wording engagement", L"Author1990" }, { 2u, L"Rules of Design<=>Specification engagement", L"Author804" }, { 3u, L"Rules of Design<=>Specification engagement", L"Author425" }, { 4u, L"Rules of Design<=>Specification engagement", L"Author34" }, } },
    { 2139u, { { 0u, L"Reviewing Deprecated Facilities of C++20 for C++23", L"Author1329" }, { 1u, L"Reviewing Deprecated Facilities of C++20 for C++23", L"Author1785" }, { 2u, L"Reviewing Deprecated Facilities of C++20 for C++23", L"Author2132" }, } },
    { 2141u, { { 0u, L"Aggregates are named tuples", L"Author28" }, { 1u, L"Aggregates are named tuples", L"Author2210" }, { 2u, L"Aggregates are named tuples", L"Author514" }, } },
    { 2142u, { { 1u, L"Markdown To PDF", L"Author970" }, } },
    { 2145u, { { 0u, L"Evolving C++ Remotely", L"Bryce Adelstein" }, { 1u, L"Evolving C++ Remotely", L"Bryce Adelstein" }, } },
    { 2146u, { { 0u, L"Modern std::byte stream IO for C++", L"Amanda Kornoushenko" }, { 1u, L"Modern std::byte stream IO for C++", L"Amanda Kornoushenko" }, { 2u, L"Modern std::byte stream IO for C++", L"Amanda Kornoushenko" }, } },
    { 2148u, { { 0u, L"Title381", L"Author453" }, } },
    { 2149u, { { 0u, L"Title1097", L"Robert Leahy" }, } },
    { 2150u, { { 0u, L"Down with typename in the Library!", L"Author209" }, } },
    { 2152u, { { 0u, L"Title160", L"Inbal Levi" }, { 1u, L"Title1157", L"Inbal Levi" }, } },
    { 2155u, { { 0u, L"Title238", L"Gordon Brown" }, } },
    { 2156u, { { 0u, L"Title709", L"Erich Keane" }, { 1u, L"Title754", L"Erich Keane" }, } },
    { 2159u, { { 0u, L"Unbounded Decimal", L"\u00A0" }, { 1u, L"P2159R1, A Big Decimal", L"\u00A0" }, } },
    { 2160u, { { 0u, L"Locks lock lockables", L"Tim Song" }, { 1u, L"Locks lock lockables", L"Tim Song" }, } },
    { 2161u, { { 0u, L"Title1679", L"Robert Leahy" }, { 1u, L"Title1016", L"Robert Leahy" }, { 2u, L"Title254", L"Robert Leahy" }, } },
    { 2162u, { { 0u, L"Inheriting from std::variant", L"Barry Revzin" }, { 1u, L"Inheriting from `std::variant`", L"Barry Revzin" }, { 2u, L"Inheriting from `std::variant`", L"Barry Revzin" }, } },
    { 2163u, { { 0u, L"nativetuple/draft2.md at master accelerated/nativetuple GitHub", L"Author659" }, } },
    { 2164u, { { 0u, L"Title245", L"Corentin Jabot" }, { 1u, L"Title534", L"Corentin Jabot" }, { 2u, L"Title1513", L"Corentin Jabot" }, { 3u, L"Title1563", L"Corentin Jabot" }, { 4u, L"Title1708", L"Corentin Jabot" }, { 5u, L"Title495", L"Corentin Jabot" }, { 6u, L"Title499", L"Corentin Jabot" }, { 7u, L"Title1043", L"Corentin Jabot" }, { 8u, L"Title1050", L"Corentin Jabot" }, { 9u, L"Title1199", L"Corentin Jabot" }, } },
    { 2165u, { { 0u, L"Title279", L"Corentin Jabot" }, { 1u, L"Title893", L"Corentin Jabot" }, { 2u, L"Title851", L"Corentin Jabot" }, { 3u, L"Title1402", L"Corentin Jabot" }, { 4u, L"Title205", L"Corentin Jabot" }, } },
    { 2166u, { { 0u, L"Title1663", L"Author2161" }, { 1u, L"Title779", L"Author960" }, } },
    { 2167u, { { 0u, L"Proposed wording for LWG 2114", L"Daniel Kr\u00FCgler" }, { 1u, L"Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)", L"Daniel Kr\u00FCgler" }, { 2u, L"Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)", L"Daniel Kr\u00FCgler" }, { 3u, L"Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)", L"Daniel Kr\u00FCgler" }, } },
    { 2168u, { { 0u, L"Title1483", L"Lewis Baker" }, { 1u, L"Title1181", L"Lewis Baker" }, { 2u, L"Title383", L"Lewis Baker" }, { 3u, L"Title172", L"Lewis Baker" }, } },
    { 2169u, { { 0u, L"Title1412", L"Corentin Jabot" }, { 1u, L"Title1039", L"Corentin Jabot" }, { 2u, L"Title428", L"Corentin Jabot" }, { 3u, L"Title322", L"Corentin Jabot" }, { 4u, L"Title520", L"Corentin Jabot" }, } },
    { 2170u, { { 0u, L"Feedback on designing the proposed `std::error` type", L"Charles Salvia" }, } },
    { 2171u, { { 0u, L"Rebasing the Networking TS on C++20", L"Author2205" }, { 1u, L"Rebasing the Networking TS on C++20", L"Author1898" }, { 2u, L"Rebasing the Networking TS on C++20", L"Author1963" }, } },
    { 2172u, { { 0u, L"Title1114", L"Corentin Jabot" }, } },
    { 2173u, { { 0u, L"Title759", L"Inbal Levi" }, { 1u, L"Attributes on Lambda-Expressions", L"Inbal Levi" }, } },
    { 2174u, { { 0u, L"Compound Literals - HackMD", L"Zhihao Yuan" }, { 1u, L"Compound Literals - HackMD", L"Zhihao Yuan" }, } },
    { 2175u, { { 0u, L"Composable cancellation for sender-based async operations", L"Lewis Baker" }, } },
    { 2176u, { { 0u, L"A different take on inexpressible conditions", L"\u00A0\u00A0" }, } },
    { 2178u, { { 0u, L"Title155", L"Corentin Jabot" }, { 1u, L"Title1311", L"Corentin Jabot" }, } },
    { 2179u, { { 0u, L"SG16: Unicode meeting summaries 2020-01-08 through 2020-05-27", L"Tom Honermann" }, } },
    { 2181u, { { 0u, L"Correcting the Design of Bulk Execution", L"Author1154" }, { 1u, L"Correcting the Design of Bulk Execution", L"Author943" }, } },
    { 2182u, { { 0u, L"Contract Support: Defining the Minimum Viable Feature Set", L"\u00A0\u00A0" }, { 1u, L"Contract Support: Defining the Minimum Viable Feature Set", L"\u00A0\u00A0" }, } },
    { 2183u, { { 0u, L"Executors Review: Properties", L"David Olsen" }, } },
    { 2184u, { { 0u, L"Title1301", L"Author1675" }, } },
    { 2185u, { { 0u, L"Contracts Use Case Categorization - HackMD", L"Author2044" }, } },
    { 2186u, { { 0u, L"Removing Garbage Collection Support", L"JF Bastien" }, { 1u, L"Removing Garbage Collection Support", L"JF Bastien" }, { 2u, L"Removing Garbage Collection Support", L"JF Bastien" }, } },
    { 2187u, { { 0u, L"Title294", L"Nathan Myers" }, { 3u, L"Title767", L"Nathan Myers" }, { 4u, L"Title1287", L"Nathan Myers" }, { 5u, L"Title1527", L"Nathan Myers" }, } },
    { 2188u, { { 0u, L"DXXXX: Zap the Zap: Pointers should just be bags of bits", L"Anthony" }, { 1u, L"Zap the Zap: Pointers are sometimes just bags of bits", L"Anthony" }, } },
    { 2191u, { { 0u, L"Modules: ADL & GMFs do not play together well (anymore)", L"Author2003" }, } },
    { 2192u, { { 0u, L"Title57", L"Author56" }, { 1u, L"Title1094", L"Author1405" }, { 2u, L"Title368", L"Author429" }, { 3u, L"Title1623", L"Author2092" }, } },
    { 2193u, { { 0u, L"Title666", L"Author845" }, { 1u, L"Title404", L"Author484" }, } },
    { 2194u, { { 0u, L"Title1592", L"Author2050" }, } },
    { 2195u, { { 0u, L"Electronic Straw Polls", L"Bryce Adelstein" }, { 1u, L"Electronic Straw Polls", L"Author303" }, { 2u, L"Electronic Straw Polls", L"Bryce Adelstein" }, } },
    { 2196u, { { 0u, L"P2196R0", L"Author1462" }, } },
    { 2197u, { { 0u, L"Formatting for std::complex", L"Michael Tesch" }, } },
    { 2198u, { { 0u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 1u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 2u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 3u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 4u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 5u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 6u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, { 7u, L"Freestanding Feature-Test Macros and Implementation-Defined Extensions", L"Ben Craig" }, } },
    { 2199u, { { 0u, L"Concepts to Differentiate Types", L"Isabella Muerte" }, } },
    { 2201u, { { 0u, L"Mixed string literal concatenation", L"Jens Maurer" }, { 1u, L"Mixed string literal concatenation", L"Jens Maurer" }, } },
    { 2202u, { { 0u, L"Executors review Senders and Receivers", L"Gaaper A~man" }, } },
    { 2203u, { { 0u, L"Title860", L"Tomasz KamiDski" }, } },
    { 2205u, { { 0u, L"Executors Review - Polymorphic Executor", L"Chris Kohlhoff" }, } },
    { 2206u, { { 0u, L"Executors Thread Pool review report", L"Ruslan Arutyunyan" }, } },
    { 2207u, { { 0u, L"Title1175", L"- name" }, } },
    { 2209u, { { 0u, L"Bulk schedule", L"Lee Howes" }, } },
    { 2210u, { { 0u, L"Superior String Splitting", L"Barry Revzin" }, { 1u, L"Superior String Splitting", L"Barry Revzin" }, { 2u, L"Superior String Splitting", L"Barry Revzin" }, } },
    { 2211u, { { 0u, L"Exhaustiveness Checking for Pattern Matching", L"Bruno Cardoso" }, } },
    { 2212u, { { 0u, L"Relax Requirements for time_point::clock", L"Alexey Dmitriev" }, { 1u, L"Relax Requirements for time_point::clock", L"Alexey Dmitriev" }, { 2u, L"Relax Requirements for time_point::clock", L"Alexey Dmitriev" }, } },
    { 2213u, { { 0u, L"Title786", L"Amir Kirsh" }, { 1u, L"Title1119", L"Amir Kirsh" }, } },
    { 2214u, { { 0u, L"A Plan for C++23 Ranges", L"Barry Revzin" }, { 1u, L"A Plan for C++23 Ranges", L"Barry Revzin" }, { 2u, L"A Plan for C++23 Ranges", L"Barry Revzin" }, } },
    { 2215u, { { 0u, L"Title1681", L"Author2189" }, { 1u, L"Title597", L"Author741" }, } },
    { 2216u, { { 0u, L"std::format improvements", L"Victor Zverovich" }, { 1u, L"std::format improvements", L"Victor Zverovich" }, { 2u, L"std::format improvements", L"Victor Zverovich" }, { 3u, L"std::format improvements", L"Victor Zverovich" }, } },
    { 2217u, { { 0u, L"SG16: Unicode meeting summaries 2020-06-10 through 2020-08-26", L"Tom Honermann" }, } },
    { 2218u, { { 0u, L"Title1212", L"value" }, } },
    { 2219u, { { 0u, L"P0433 Executors Issues Needing Resolution | P2219R0", L"Author2053" }, } },
    { 2220u, { { 0u, L"redefine properties in P0443", L"Kirk Shoop" }, } },
    { 2221u, { { 0u, L"define P0443 cpos with tag_invoke", L"Kirk Shoop" }, } },
    { 2223u, { { 0u, L"Title410", L"Corentin Jabot" }, { 1u, L"Title459", L"Corentin Jabot" }, { 2u, L"Title629", L"Corentin Jabot" }, } },
    { 2224u, { { 0u, L"A Better bulk_schedule", L"Author1812" }, } },
    { 2226u, { { 0u, L"A proposal for an idiom to move from an object and reset it to its default constructed state", L"Giuseppe D'Angelo" }, } },
    { 2227u, { { 0u, L"Update normative reference to POSIX", L"Author1560" }, } },
    { 2228u, { { 0u, L"Title982", L"Author1267" }, } },
    { 2231u, { { 0u, L"Missing `constexpr` in `std::optional` and `std::variant`", L"Barry Revzin" }, { 1u, L"Missing `constexpr` in `std::optional` and `std::variant`", L"Barry Revzin" }, } },
    { 2232u, { { 0u, L"Zero-Overhead Deterministic Exceptions: Catching Values", L"Emil Dotchevski" }, } },
    { 2233u, { { 0u, L"2020 Fall Library Evolution Polls", L"Bryce Adelstein" }, { 1u, L"2020 Fall Library Evolution Polls", L"Author59" }, { 2u, L"D2233R2: 2020 Fall Library Evolution Polls", L"Author1297" }, { 3u, L"2020 Fall Library Evolution Polls", L"Author2109" }, } },
    { 2234u, { { 0u, L"P2234R0-UB_and_IF-NDR_Audit", L"Scott Schurr" }, { 1u, L"P2234R1-UB_and_IF-NDR_Audit", L"Scott Schurr" }, } },
    { 2235u, { { 0u, L"Disentangling schedulers and executors", L"Author1193" }, } },
    { 2236u, { { 0u, L"C++ Standard Library Issues to be moved in Virtual Plenary, Nov. 2020", L"Author1316" }, } },
    { 2237u, { { 0u, L"Title296", L"Author350" }, } },
    { 2238u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author355" }, } },
    { 2242u, { { 0u, L"Non-literal variables (and labels and gotos) in constexpr functions", L"Author2221" }, { 1u, L"Non-literal variables (and labels and gotos) in constexpr functions", L"Author827" }, { 2u, L"Non-literal variables (and labels and gotos) in constexpr functions", L"Author911" }, { 3u, L"Non-literal variables (and labels and gotos) in constexpr functions", L"Author1199" }, } },
    { 2244u, { { 0u, L"Title1291", L"Michael Wong" }, } },
    { 2245u, { { 0u, L"Title1554", L"Michael Wong" }, } },
    { 2246u, { { 0u, L"Title891", L"Aaron Ballman" }, { 1u, L"Title414", L"Aaron Ballman" }, } },
    { 2247u, { { 0u, L"2020 Library Evolution Report", L"Author1504" }, { 1u, L"2020 Library Evolution Report", L"Bryce Adelstein" }, } },
    { 2248u, { { 0u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 1u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 2u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 3u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 4u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 5u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 6u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 7u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, { 8u, L"Enabling list-initialization for algorithms", L"Giuseppe D'Angelo" }, } },
    { 2249u, { { 0u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, { 1u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, { 2u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, { 3u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, { 4u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, { 5u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, { 6u, L"Mixed comparisons for smart pointers", L"Giuseppe D'Angelo" }, } },
    { 2250u, { { 0u, L"Scheduler_Vs_Executor", L"Author1043" }, } },
    { 2251u, { { 0u, L"Title1414", L"Nevin " }, { 1u, L"Title1205", L"1" }, } },
    { 2253u, { { 0u, L"SG16: Unicode meeting summaries 2020-09-09 through 2020-11-11", L"Tom Honermann" }, } },
    { 2254u, { { 0u, L"Title1187", L"Author1527" }, } },
    { 2255u, { { 0u, L"A type trait to detect reference binding to temporary", L"Tim Song" }, { 1u, L"A type trait to detect reference binding to temporary", L"Tim Song" }, { 2u, L"A type trait to detect reference binding to temporary", L"Tim Song" }, } },
    { 2257u, { { 0u, L"Title839", L"Dalton M" }, } },
    { 2259u, { { 0u, L"Repairing input range adaptors and counted_iterator", L"Tim Song" }, { 1u, L"Repairing input range adaptors and counted_iterator", L"Tim Song" }, } },
    { 2260u, { { 0u, L"Title493", L"Author602" }, } },
    { 2262u, { { 0u, L"2020 Fall Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2263u, { { 0u, L"A call for a WG21 managed chat service", L"Tom Honermann" }, { 1u, L"A call for a WG21 managed chat service", L"Tom Honermann" }, } },
    { 2264u, { { 0u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 1u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 2u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 3u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 4u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 5u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 6u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, { 7u, L"Make assert() macro user friendly for C and C++", L"Peter Sommerlad" }, } },
    { 2265u, { { 0u, L"Title325", L"Kevlin Henney" }, { 1u, L"Title1436", L"Kevlin Henney" }, } },
    { 2266u, { { 0u, L"Simpler implicit move", L"Arthur O'Dwyer" }, { 1u, L"Simpler implicit move", L"Arthur O'Dwyer" }, { 2u, L"Simpler implicit move", L"Arthur O'Dwyer" }, { 3u, L"Simpler implicit move", L"Arthur O'Dwyer" }, } },
    { 2267u, { { 0u, L"Library Evolution Policies", L"Inbal Levi" }, { 1u, L"Library Evolution Policies", L"Inbal Levi" }, } },
    { 2268u, { { 0u, L"Freestanding Roadmap", L"Ben Craig" }, } },
    { 2272u, { { 0u, L"Title844", L"Author1052" }, } },
    { 2273u, { { 0u, L"Making std::unique_ptr constexpr", L"Author1423" }, { 1u, L"Making std::unique_ptr constexpr", L"Author1869" }, { 2u, L"Making std::unique_ptr constexpr", L"Author785" }, { 3u, L"Making std::unique_ptr constexpr", L"Author1019" }, } },
    { 2274u, { { 0u, L"Title1109", L"Aaron Ballman" }, } },
    { 2276u, { { 0u, L"Fix std::cbegin(), ranges::cbegin, and provide const_iterator support for std::span", L"Author2206" }, { 1u, L"Microsoft Word - P2276R1_fix_cbegin_210909.docx", L"Author285" }, } },
    { 2277u, { { 0u, L"Packs outside of Templates", L"Barry Revzin" }, } },
    { 2278u, { { 0u, L"`cbegin` should always return a constant iterator", L"Barry Revzin" }, { 1u, L"cbegin should always return a constant iterator", L"Barry Revzin" }, { 2u, L"cbegin should always return a constant iterator", L"Barry Revzin" }, { 3u, L"cbegin should always return a constant iterator", L"Barry Revzin" }, { 4u, L"cbegin should always return a constant iterator", L"Barry Revzin" }, } },
    { 2279u, { { 0u, L"We need a language mechanism for customization points", L"Barry Revzin" }, } },
    { 2280u, { { 0u, L"Using unknown references in constant expressions", L"Barry Revzin" }, { 1u, L"Using unknown references in constant expressions", L"Barry Revzin" }, { 2u, L"Using unknown pointers and references in constant expressions", L"Barry Revzin" }, { 3u, L"Using unknown pointers and references in constant expressions", L"Barry Revzin" }, { 4u, L"Using unknown pointers and references in constant expressions", L"Barry Revzin" }, } },
    { 2281u, { { 0u, L"Clarifying range adaptor objects", L"Tim Song" }, { 1u, L"Clarifying range adaptor objects", L"Tim Song" }, } },
    { 2283u, { { 0u, L"constexpr for specialized memory algorithms", L"Michael Schellenberger" }, { 1u, L"constexpr for specialized memory algorithms", L"Michael Schellenberger" }, { 2u, L"constexpr for specialized memory algorithms", L"Michael Schellenberger" }, } },
    { 2285u, { { 0u, L"Are default function arguments in the immediate context?", L"\u00A0\u00A0" }, } },
    { 2286u, { { 0u, L"Formatting Ranges", L"Barry Revzin" }, { 1u, L"Formatting Ranges", L"Barry Revzin" }, { 2u, L"Formatting Ranges", L"Barry Revzin" }, { 3u, L"Formatting Ranges", L"Barry Revzin" }, { 4u, L"Formatting Ranges", L"Barry Revzin" }, { 5u, L"Formatting Ranges", L"Barry Revzin" }, { 6u, L"Formatting Ranges", L"Barry Revzin" }, { 7u, L"Formatting Ranges", L"Barry Revzin" }, { 8u, L"Formatting Ranges", L"Barry Revzin" }, } },
    { 2287u, { { 0u, L"Designated-initializers for Base Classes", L"Barry Revzin" }, { 1u, L"Designated-initializers for Base Classes", L"Barry Revzin" }, { 2u, L"Designated-initializers for Base Classes", L"Barry Revzin" }, { 3u, L"Designated-initializers for Base Classes", L"Barry Revzin" }, { 4u, L"Designated-initializers for Base Classes", L"Barry Revzin" }, } },
    { 2289u, { { 0u, L"2021 Winter Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2290u, { { 0u, L"Title1357", L"Corentin Jabot" }, { 1u, L"Title546", L"Corentin Jabot" }, { 2u, L"Title1373", L"Corentin Jabot" }, { 3u, L"Title444", L"Corentin Jabot" }, } },
    { 2291u, { { 0u, L"Title781", L"Author967" }, { 1u, L"Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header", L"Daniil Goncharov" }, { 2u, L"Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header", L"Daniil Goncharov" }, { 3u, L"Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header", L"Daniil Goncharov" }, } },
    { 2295u, { { 0u, L"Title1351", L"Corentin Jabot" }, { 1u, L"Title204", L"Corentin Jabot" }, { 2u, L"Title1148", L"Corentin Jabot" }, { 3u, L"Title466", L"Corentin Jabot" }, { 4u, L"Title730", L"Corentin Jabot" }, { 5u, L"Title1269", L"Corentin Jabot" }, { 6u, L"Title1401", L"Corentin Jabot" }, } },
    { 2297u, { { 0u, L"Title443", L"Corentin Jabot" }, } },
    { 2299u, { { 0u, L"`mdspan` and CTAD", L"Bryce Adelstein" }, { 1u, L"`mdspan` and CTAD", L"Bryce Adelstein" }, { 2u, L"`mdspan` and CTAD", L"Bryce Adelstein" }, { 3u, L"`mdspan`s of All Dynamic Extents", L"Bryce Adelstein" }, { 4u, L"mdspans of All Dynamic Extents", L"Bryce Adelstein" }, } },
    { 2300u, { { 0u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 1u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 2u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 3u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 4u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 5u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 6u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 7u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 8u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 9u, L"`std::execution`", L"Micha\u0142 Dominiak" }, { 10u, L"`std::execution`", L"Micha\u0142 Dominiak" }, } },
    { 2301u, { { 0u, L"Add a `pmr` alias for `std::stacktrace`", L"Steve Downey" }, { 1u, L"Add a `pmr` alias for `std::stacktrace`", L"Steve Downey" }, } },
    { 2302u, { { 0u, L"Prefer std::ranges::contains over std::basic_string_view::contains", L"Christopher Di" }, { 1u, L"`std::ranges::contains`", L"Christopher Di" }, { 2u, L"`std::ranges::contains`", L"Christopher Di" }, { 3u, L"`std::ranges::contains`", L"Christopher Di" }, { 4u, L"`std::ranges::contains`", L"Christopher Di" }, } },
    { 2303u, { { 0u, L"Title1613", L"Author2081" }, { 1u, L"Title374", L"Author443" }, { 2u, L"Title393", L"Author468" }, { 3u, L"Title1177", L"Author1515" }, { 4u, L"Title497", L"Author607" }, } },
    { 2304u, { { 0u, L"Title1382", L"Author1780" }, { 1u, L"Title302", L"Author358" }, { 2u, L"Title562", L"Author700" }, { 3u, L"Title405", L"Author485" }, } },
    { 2305u, { { 0u, L"Title1320", L"Author1709" }, { 1u, L"Title1246", L"Author1611" }, { 2u, L"Title687", L"Author862" }, { 3u, L"Title645", L"Author800" }, { 4u, L"Title143", L"Author166" }, { 5u, L"Type inference for object definitions", L"Author983" }, } },
    { 2306u, { { 0u, L"Title626", L"Author768" }, { 1u, L"Title818", L"Author1024" }, { 2u, L"Title1556", L"Author2016" }, { 3u, L"Title203", L"Author247" }, } },
    { 2307u, { { 0u, L"Title654", L"Author822" }, { 1u, L"Title938", L"Author1197" }, { 2u, L"Title1297", L"Author1668" }, } },
    { 2308u, { { 0u, L"Template parameter initialization", L"Author598" }, { 1u, L"Template parameter initialization", L"Author1244" }, } },
    { 2309u, { { 0u, L"CORE:202101", L"Author329" }, } },
    { 2310u, { { 0u, L"Title989", L"Author1278" }, { 1u, L"Title1687", L"Author2202" }, } },
    { 2311u, { { 0u, L"Title729", L"Author901" }, { 1u, L"Title1649", L"Author2141" }, { 2u, L"Title1463", L"Author1894" }, } },
    { 2312u, { { 0u, L"Title1632", L"Author2113" }, { 1u, L"Title1470", L"Author1904" }, } },
    { 2313u, { { 0u, L"Core \"tentatively ready\" Issues", L"Author2125" }, } },
    { 2314u, { { 0u, L"Character sets and encodings", L"Jens Maurer" }, { 1u, L"Character sets and encodings", L"Jens Maurer" }, { 2u, L"Character sets and encodings", L"Jens Maurer" }, { 3u, L"Character sets and encodings", L"Jens Maurer" }, { 4u, L"Character sets and encodings", L"Jens Maurer" }, } },
    { 2315u, { { 0u, L"C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2021", L"Author744" }, } },
    { 2316u, { { 0u, L"Title176", L"Corentin Jabot" }, { 1u, L"Title72", L"Corentin Jabot" }, { 2u, L"Title40", L"Corentin Jabot" }, } },
    { 2317u, { { 0u, L"Title953", L"Author1216" }, } },
    { 2318u, { { 0u, L"Title167", L"Author198" }, { 1u, L"Title1553", L"Author2013" }, } },
    { 2319u, { { 0u, L"Prevent path presentation problems", L"Victor Zverovich" }, { 1u, L"Prevent path presentation problems", L"Victor Zverovich" }, { 2u, L"Prevent path presentation problems", L"Victor Zverovich" }, { 3u, L"Prevent path presentation problems", L"Victor Zverovich" }, { 4u, L"Prevent path presentation problems", L"Victor Zverovich" }, } },
    { 2320u, { { 0u, L"The Syntax of Static Reflection", L"Author955" }, } },
    { 2321u, { { 0u, L"zip", L"Tim Song" }, { 1u, L"zip", L"Tim Song" }, { 2u, L"zip", L"Tim Song" }, } },
    { 2322u, { { 0u, L"`ranges::fold`", L"Barry Revzin" }, { 1u, L"`ranges::fold`", L"Barry Revzin" }, { 2u, L"`ranges::fold`", L"Barry Revzin" }, { 3u, L"`ranges::fold`", L"Barry Revzin" }, { 4u, L"ranges::fold", L"Barry Revzin" }, { 5u, L"ranges::fold", L"Barry Revzin" }, { 6u, L"ranges::fold", L"Barry Revzin" }, } },
    { 2323u, { { 0u, L"Title1121", L"Martin Uecker" }, } },
    { 2324u, { { 0u, L"Title150", L"Martin Uecker" }, { 1u, L"Title293", L"Martin Uecker" }, { 2u, L"Title964", L"Martin Uecker" }, } },
    { 2325u, { { 0u, L"Views should not be required to be default constructible", L"Barry Revzin" }, { 1u, L"Views should not be required to be default constructible", L"Barry Revzin" }, { 2u, L"Views should not be required to be default constructible", L"Barry Revzin" }, { 3u, L"Views should not be required to be default constructible", L"Barry Revzin" }, } },
    { 2327u, { { 0u, L"Title771", L"Paul M" }, { 1u, L"Title240", L"Paul M" }, } },
    { 2328u, { { 0u, L"join_view should join all views of ranges", L"Tim Song" }, { 1u, L"join_view should join all views of ranges", L"Tim Song" }, } },
    { 2329u, { { 0u, L"Title457", L"Author564" }, } },
    { 2330u, { { 0u, L"Title1459", L"Author1882" }, } },
    { 2331u, { { 0u, L"Title20", L"Author26" }, } },
    { 2332u, { { 0u, L"Establishing std::hive as replacement name for the proposed std::colony container", L"Matthew Bentley" }, } },
    { 2333u, { { 0u, L"2021 Winter Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2334u, { { 0u, L"Title1606", L"Melanie Blower" }, { 1u, L"Title490", L"Melanie Blower" }, } },
    { 2337u, { { 0u, L"Title1257", L"Author1623" }, } },
    { 2338u, { { 0u, L"Freestanding Library: Character primitives and the C library", L"Ben Craig" }, { 1u, L"Freestanding Library: Character primitives and the C library", L"Ben Craig" }, { 2u, L"Freestanding Library: Character primitives and the C library", L"Ben Craig" }, { 3u, L"Freestanding Library: Character primitives and the C library", L"Ben Craig" }, { 4u, L"Freestanding Library: Character primitives and the C library", L"Ben Craig" }, } },
    { 2339u, { { 0u, L"Contract violation handlers", L"\u00A0\u00A0" }, } },
    { 2340u, { { 0u, L"Clarifying the status of the C headers", L"Author616" }, { 1u, L"Clarifying the status of the C headers", L"Author1061" }, } },
    { 2342u, { { 0u, L"Title71", L"Corentin Jabot" }, } },
    { 2345u, { { 0u, L"Relaxing Requirements of Moved-From Objects", L"Sean Parent" }, } },
    { 2347u, { { 0u, L"Title1146", L"Corentin Jabot" }, { 1u, L"Title362", L"Corentin Jabot" }, { 2u, L"Title1201", L"Corentin Jabot" }, } },
    { 2348u, { { 0u, L"Title37", L"Corentin Jabot" }, { 1u, L"Title516", L"Corentin Jabot" }, { 2u, L"Title913", L"Corentin Jabot" }, { 3u, L"Title45", L"Corentin Jabot" }, } },
    { 2350u, { { 0u, L"constexpr class", L"Author71" }, { 1u, L"constexpr class", L"Author318" }, { 2u, L"constexpr class", L"Author1369" }, } },
    { 2351u, { { 0u, L"nodiscard casts", L"hana.dusikova@avast.com" }, } },
    { 2352u, { { 0u, L"SG16: Unicode meeting summaries 2020-12-09 through 2021-03-24", L"Tom Honermann" }, } },
    { 2353u, { { 0u, L"Title814", L"David Rector" }, } },
    { 2355u, { { 0u, L"Postfix fold expressions", L"Author87" }, { 1u, L"Postfix fold expressions", L"Author903" }, { 2u, L"Postfix fold expressions", L"Author730" }, } },
    { 2356u, { { 0u, L"Title1449", L"Author1870" }, } },
    { 2358u, { { 0u, L"Defining Contracts", L"Gaaper A~man" }, } },
    { 2360u, { { 0u, L"Extend init-statement to allow alias-declaration", L"Jens Maurer" }, } },
    { 2361u, { { 0u, L"Title688", L"Corentin Jabot" }, { 1u, L"Title1078", L"Corentin Jabot" }, { 2u, L"Title1480", L"Corentin Jabot" }, { 3u, L"Title349", L"Corentin Jabot" }, { 4u, L"Title609", L"Corentin Jabot" }, { 5u, L"Title188", L"Corentin Jabot" }, { 6u, L"Title1653", L"Corentin Jabot" }, } },
    { 2362u, { { 0u, L"Title523", L"Author644" }, { 1u, L"Title136", L"Author159" }, { 2u, L"Title171", L"Author207" }, { 3u, L"Title1495", L"Author1935" }, } },
    { 2363u, { { 0u, L"Extending associative containers with the remaining heterogeneous overloads", L"Konstantin Boyarinov" }, { 1u, L"Extending associative containers with the remaining heterogeneous overloads", L"Konstantin Boyarinov" }, { 2u, L"Extending associative containers with the remaining heterogeneous overloads", L"Konstantin Boyarinov" }, { 3u, L"Extending associative containers with the remaining heterogeneous overloads", L"Konstantin Boyarinov" }, { 4u, L"Extending associative containers with the remaining heterogeneous overloads", L"Konstantin Boyarinov" }, { 5u, L"Extending associative containers with the remaining heterogeneous overloads", L"Konstantin Boyarinov" }, } },
    { 2367u, { { 0u, L"Remove misuses of list-initialization from Clause 24", L"Tim Song" }, } },
    { 2368u, { { 0u, L"2021 Spring Library Evolution Polls", L"Bryce Adelstein" }, { 1u, L"2021 Spring Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2370u, { { 0u, L"Stacktrace from exception", L"Author2086" }, { 1u, L"Stacktrace from exception", L"Author16" }, { 2u, L"Stacktrace from exception", L"Author2220" }, } },
    { 2372u, { { 0u, L"Fixing locale handling in chrono formatters", L"Victor Zverovich" }, { 1u, L"Fixing locale handling in chrono formatters", L"Victor Zverovich" }, { 2u, L"Fixing locale handling in chrono formatters", L"Victor Zverovich" }, { 3u, L"Fixing locale handling in chrono formatters", L"Victor Zverovich" }, } },
    { 2374u, { { 0u, L"XXXXR0: views::cartesian_product", L"Sy Brand" }, { 1u, L"views::cartesian_product", L"Sy Brand" }, { 2u, L"views::cartesian_product", L"Sy Brand" }, { 3u, L"`views::cartesian_product`", L"Sy Brand" }, { 4u, L"`views::cartesian_product`", L"Sy Brand" }, } },
    { 2375u, { { 0u, L"Title328", L"Author383" }, { 1u, L"Title512", L"Author631" }, } },
    { 2376u, { { 0u, L"Title388", L"Author462" }, } },
    { 2377u, { { 0u, L"[[nodiscard]] in the Standard Library: Clause 23 Iterators library", L"Christopher Di" }, } },
    { 2378u, { { 0u, L"Title175", L"Author211" }, { 1u, L"Title556", L"Author690" }, } },
    { 2380u, { { 0u, L"Paper", L"Robert Leahy" }, { 1u, L"Paper R1", L"Robert Leahy" }, } },
    { 2381u, { { 0u, L"Pattern Matching with Exception Handling", L"Jarrad J" }, } },
    { 2382u, { { 0u, L"Bright Blue", L"Author214" }, } },
    { 2384u, { { 0u, L"2021 Spring Library Evolution Poll Outcomes", L"Bryce Adelstein" }, { 1u, L"2021 Spring Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2385u, { { 0u, L"C++ Standard Library Issues to be moved in Virtual Plenary, June 2021", L"Author2010" }, } },
    { 2386u, { { 0u, L"Core \"ready\" Issues", L"Author1352" }, } },
    { 2387u, { { 0u, L"Pipe support for user-defined range adaptors", L"Barry Revzin" }, { 1u, L"Pipe support for user-defined range adaptors", L"Barry Revzin" }, { 2u, L"Pipe support for user-defined range adaptors", L"Barry Revzin" }, { 3u, L"Pipe support for user-defined range adaptors", L"Barry Revzin" }, } },
    { 2388u, { { 0u, L"Abort-only contract support", L"\u00A0\u00A0" }, { 1u, L"Minimum Contract Support: either Ignore or Check_and_abort", L"\u00A0\u00A0" }, { 2u, L"Minimum Contract Support: either Ignore or Check_and_abort", L"\u00A0\u00A0" }, { 3u, L"Minimum Contract Support: either No_eval or Eval_and_abort", L"\u00A0\u00A0" }, { 4u, L"Minimum Contract Support: either No_eval or Eval_and_abort", L"\u00A0\u00A0" }, } },
    { 2389u, { { 0u, L"dextents Index Type Parameter", L"Bryce Adelstein" }, { 1u, L"dextents Index Type Parameter", L"Bryce Adelstein" }, { 2u, L"dextents Index Type Parameter", L"Bryce Adelstein" }, } },
    { 2390u, { { 0u, L"Title1478", L"Author1914" }, { 1u, L"Title842", L"Author1049" }, { 2u, L"Title173", L"Author208" }, } },
    { 2391u, { { 0u, L"Title1541", L"Aaron Ballman" }, } },
    { 2392u, { { 0u, L"Title234", L"structure_map" }, { 1u, L"Title1256", L"structure_map" }, { 2u, L"Title744", L"structure_map" }, { 3u, L"Title1091", L"structure_map" }, } },
    { 2393u, { { 0u, L"Cleaning up integer-class types", L"Tim Song" }, { 1u, L"Cleaning up integer-class types", L"Tim Song" }, } },
    { 2395u, { { 0u, L"WG21 2021-06 Virtual Meeting Record of Discussion.docx", L"Author1929" }, } },
    { 2396u, { { 0u, L"Concurrency TS 2 fixes", L"David Goldblatt" }, { 1u, L"P2396R1", L"David Goldblatt" }, } },
    { 2397u, { { 0u, L"SG16: Unicode meeting summaries 2021-04-14 through 2021-05-26", L"Tom Honermann" }, } },
    { 2400u, { { 0u, L"Library Evolution Report: 2020-10-27 to 2021-02-16", L"Bryce Adelstein" }, { 1u, L"Library Evolution Report: 2021-02-23 to 2021-05-25", L"Bryce Adelstein" }, { 2u, L"Library Evolution Report: 2021-06-01 to 2021-09-20", L"Bryce Adelstein" }, { 3u, L"Library Evolution Report: 2021-09-28 to 2022-01-25", L"Bryce Adelstein" }, } },
    { 2401u, { { 0u, L"Add a conditional noexcept specification to std::exchange", L"Giuseppe D'Angelo" }, } },
    { 2402u, { { 0u, L"PowerPoint Presentation", L"Author432" }, } },
    { 2403u, { { 0u, L"Slide 1", L"Author1676" }, } },
    { 2404u, { { 0u, L"Title382", L"Justin Bassett" }, { 1u, L"Title1218", L"Justin Bassett" }, { 2u, L"Title1238", L"Justin Bassett" }, { 3u, L"Title124", L"Justin Bassett" }, } },
    { 2405u, { { 0u, L"Title46", L"Justin Bassett" }, } },
    { 2406u, { { 0u, L"Fix `counted_iterator` interaction with input iterators", L"Yehezkel Bernat" }, { 1u, L"Fix `counted_iterator` interaction with input iterators", L"Yehezkel Bernat" }, { 2u, L"Add `lazy_counted_iterator`", L"Yehezkel Bernat" }, { 3u, L"Add `lazy_counted_iterator`", L"Yehezkel Bernat" }, { 4u, L"Add `lazy_counted_iterator`", L"Yehezkel Bernat" }, { 5u, L"Add `lazy_counted_iterator`", L"Yehezkel Bernat" }, } },
    { 2407u, { { 0u, L"Freestanding Library: Partial Classes", L"Emil Meissner" }, { 1u, L"Freestanding Library: Partial Classes", L"Emil Meissner" }, { 2u, L"Freestanding Library: Partial Classes", L"\u2003\u2003Emil Meissner" }, { 3u, L"Freestanding Library: Partial Classes", L"\u2003\u2003Ben Craig" }, { 4u, L"Freestanding Library: Partial Classes", L"\u2003\u2003Ben Craig" }, { 5u, L"Freestanding Library: Partial Classes", L"\u2003\u2003Ben Craig" }, } },
    { 2408u, { { 0u, L"Ranges views as inputs to non-Ranges algorithms", L"David Olsen" }, { 1u, L"Ranges views as inputs to non-Ranges algorithms", L"David Olsen" }, { 2u, L"Ranges iterators as inputs to non-Ranges algorithms", L"David Olsen" }, { 3u, L"Ranges iterators as inputs to non-Ranges algorithms", L"David Olsen" }, { 4u, L"Ranges iterators as inputs to non-Ranges algorithms", L"David Olsen" }, { 5u, L"Ranges iterators as inputs to non-Ranges algorithms", L"David Olsen" }, } },
    { 2409u, { { 0u, L"Requirements for Usage of C++ Modules at Bloomberg", L"Daniel Ruoso" }, } },
    { 2410u, { { 0u, L"Title1384", L"Author1782" }, } },
    { 2411u, { { 0u, L"Title681", L"Author856" }, } },
    { 2412u, { { 0u, L"Title1191", L"Author1536" }, } },
    { 2413u, { { 0u, L"Remove unsafe conversions of unique_ptr<T>", L"L\u00E9n\u00E1rd Szolnoki" }, { 1u, L"Remove unsafe conversions of unique_ptr<T>", L"L\u00E9n\u00E1rd Szolnoki" }, } },
    { 2414u, { { 0u, L"P2414R0 Pointer lifetime-end zap proposed solutions", L"Paul E" }, { 1u, L"P2414R1 Pointer lifetime-end zap proposed solutions", L"Paul E" }, { 2u, L"P2414R2 Pointer lifetime-end zap proposed solutions", L"Paul E" }, { 3u, L"P2414R3 Pointer lifetime-end zap proposed solutions: atomics and volatile", L"Paul E" }, { 4u, L"P2414R4 Pointer lifetime-end zap proposed solutions: atomics and volatile", L"Paul E" }, { 5u, L"P2414R5 Pointer lifetime-end zap proposed solutions: atomics and volatile", L"Paul E" }, { 6u, L"P2414R6 Pointer lifetime-end zap proposed solutions: atomics and volatile", L"Paul E" }, } },
    { 2415u, { { 0u, L"What is a `view`?", L"Barry Revzin" }, { 1u, L"What is a `view`?", L"Barry Revzin" }, { 2u, L"What is a view?", L"Barry Revzin" }, } },
    { 2416u, { { 0u, L"Title1559", L"Jens Maurer" }, { 1u, L"Title871", L"Jens Maurer" }, { 2u, L"Title1659", L"Jens Maurer" }, } },
    { 2417u, { { 0u, L"Title1453", L"Author1877" }, { 1u, L"Title180", L"Author221" }, { 2u, L"Title1363", L"Author1757" }, } },
    { 2418u, { { 0u, L"Add support for <code>std::generator</code>-like types to <code>std::format</code>", L"Victor Zverovich" }, { 1u, L"Add support for <code>std::generator</code>-like types to <code>std::format</code>", L"Victor Zverovich" }, { 2u, L"Add support for <code>std::generator</code>-like types to <code>std::format</code>", L"Victor Zverovich" }, } },
    { 2419u, { { 0u, L"Clarify handling of encodings in localized formatting of chrono types", L"Victor Zverovich" }, { 1u, L"Clarify handling of encodings in localized formatting of chrono types", L"Victor Zverovich" }, { 2u, L"Clarify handling of encodings in localized formatting of chrono types", L"Victor Zverovich" }, } },
    { 2420u, { { 0u, L"2021 Summer Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2422u, { { 0u, L"Remove nodiscard annotations from the standard library specification", L"Author203" }, { 1u, L"Remove nodiscard annotations from the standard library specification", L"Author1831" }, } },
    { 2423u, { { 0u, L"C++ Liaison CFP C Summary", L"Author1672" }, } },
    { 2424u, { { 0u, L"Abbreviated Parameters", L"Mihail Naydenov" }, } },
    { 2425u, { { 0u, L"Expression Function Body", L"Mihail Naydenov" }, } },
    { 2428u, { { 0u, L"Title1570", L"Author2032" }, } },
    { 2429u, { { 0u, L"Title1168", L"Author1503" }, } },
    { 2430u, { { 0u, L"SenderReceiverPartial", L"Christopher Kohlhoff" }, } },
    { 2431u, { { 0u, L"Slide 1", L"Author1258" }, } },
    { 2432u, { { 0u, L"P2432R0", L"Author375" }, { 1u, L"Fix istream_view, Rev 1", L"Author1635" }, } },
    { 2434u, { { 0u, L"Nondeterministic pointer provenance", L"Author589" }, { 1u, L"Nondeterministic pointer provenance", L"Author1106" }, { 2u, L"Nondeterministic pointer provenance", L"Author1041" }, { 3u, L"Nondeterministic pointer provenance", L"Author1738" }, } },
    { 2435u, { { 0u, L"2021 Summer Library Evolution Poll Outcomes", L"Bryce Adelstein" }, { 1u, L"2021 Summer Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2436u, { { 0u, L"2021 September Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2437u, { { 0u, L"Title705", L"Aaron Ballman" }, { 1u, L"Title829", L"Aaron Ballman" }, } },
    { 2438u, { { 0u, L"std::string::substr() &&", L"federico.kircheis@gmail.com" }, { 1u, L"std::string::substr() &&", L"federico.kircheis@gmail.com" }, { 2u, L"std::string::substr() &&", L"federico.kircheis@gmail.com" }, } },
    { 2439u, { { 0u, L"What is a view?", L"Barry Revzin" }, } },
    { 2440u, { { 0u, L"ranges::iota, ranges::shift_left, and ranges::shift_right", L"Tim Song" }, { 1u, L"ranges::iota, ranges::shift_left, and ranges::shift_right", L"Tim Song" }, } },
    { 2441u, { { 0u, L"views::join_with", L"Barry Revzin" }, { 1u, L"views::join_with", L"Barry Revzin" }, { 2u, L"views::join_with", L"Barry Revzin" }, } },
    { 2442u, { { 0u, L"Windowing range adaptors: views::chunk and views::slide", L"Tim Song" }, { 1u, L"Windowing range adaptors: views::chunk and views::slide", L"Tim Song" }, } },
    { 2443u, { { 0u, L"views::chunk_by", L"Tim Song" }, { 1u, L"views::chunk_by", L"Tim Song" }, } },
    { 2444u, { { 0u, L"TheAsioAsyncModel", L"Author2052" }, } },
    { 2445u, { { 0u, L"std::forward_like", L"Gaaper A~man" }, { 1u, L"std::forward_like", L"Gaaper A~man" }, } },
    { 2446u, { { 0u, L"views::move", L"Barry Revzin" }, { 1u, L"views::all_move", L"Barry Revzin" }, { 2u, L"views::as_rvalue", L"Barry Revzin" }, } },
    { 2447u, { { 0u, L"std::span and the missing constructor", L"federico.kircheis@gmail.com" }, { 1u, L"std::span and the missing constructor", L"federico.kircheis@gmail.com" }, { 2u, L"std::span and the missing constructor", L"federico.kircheis@gmail.com" }, { 3u, L"<code>std::span</code> over an initializer list", L"Arthur O'Dwyer" }, { 4u, L"<code>std::span</code> over an initializer list", L"Arthur O'Dwyer" }, { 5u, L"<code>std::span</code> over an initializer list", L"Arthur O'Dwyer" }, { 6u, L"<code>std::span</code> over an initializer list", L"Arthur O'Dwyer" }, } },
    { 2448u, { { 0u, L"Relaxing some constexpr restrictions", L"Barry Revzin" }, { 1u, L"Relaxing some constexpr restrictions", L"Barry Revzin" }, { 2u, L"Relaxing some constexpr restrictions", L"Barry Revzin" }, } },
    { 2450u, { { 0u, L"C++ Standard Library Issues to be moved in Virtual Plenary, Oct. 2021", L"Author1357" }, } },
    { 2451u, { { 0u, L"2021 September Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2452u, { { 0u, L"2021 October Library Evolution and Concurrency Polls on Networking and Executors", L"Bryce Adelstein" }, } },
    { 2453u, { { 0u, L"2021 October Library Evolution and Concurrency Networking and Executors Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2454u, { { 0u, L"2021 November Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2455u, { { 0u, L"2021 November Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2456u, { { 0u, L"2021 December Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2457u, { { 0u, L"2021 December Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2458u, { { 0u, L"2022 January Library Evolution Polls", L"Bryce Adelstein" }, { 1u, L"2022 January Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2459u, { { 0u, L"2022 January Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2460u, { { 0u, L"Title165", L"Corentin Jabot" }, { 1u, L"Title1508", L"Corentin Jabot" }, { 2u, L"Title1", L"Corentin Jabot" }, } },
    { 2461u, { { 0u, L"Closure-Based Syntax for Contracts", L"Gaaper A~man" }, { 1u, L"Closure-Based Syntax for Contracts", L"Gaaper A~man" }, } },
    { 2462u, { { 0u, L"Core \"ready\" Issues", L"Author114" }, } },
    { 2463u, { { 0u, L"AsioAsyncModel", L"Christopher Kohlhoff" }, } },
    { 2464u, { { 0u, L"Ruminations on networking and executors", L"Author813" }, } },
    { 2465u, { { 0u, L"Title463", L"Author572" }, { 1u, L"Title68", L"Author64" }, { 2u, L"Title199", L"Author239" }, { 3u, L"Title159", L"Author185" }, } },
    { 2466u, { { 0u, L"The notes on contract annotations", L"\u00A0\u00A0" }, } },
    { 2467u, { { 0u, L"Support exclusive mode for fstreams", L"Author216" }, { 1u, L"Support exclusive mode for fstreams", L"Author2073" }, } },
    { 2468u, { { 0u, L"The Equality Operator You Are Looking For", L"Barry Revzin" }, { 1u, L"P2468R1R1: The Equality Operator You Are Looking For", L"Barry Revzin" }, { 2u, L"The Equality Operator You Are Looking For", L"Barry Revzin" }, } },
    { 2469u, { { 0u, L"Response to P2464", L"Jamie Allsop" }, } },
    { 2470u, { { 0u, L"Slide 1", L"Author685" }, } },
    { 2471u, { { 0u, L"NetTS, ASIO and Sender Library Design Comparison", L"Kirk Shoop" }, { 1u, L"NetTS, ASIO and Sender Library Design Comparison", L"Kirk Shoop" }, } },
    { 2472u, { { 0u, L"make_function_ref: A More Functional function_ref", L"Jarrad J" }, { 1u, L"make_function_ref_more_functional", L"Author941" }, { 2u, L"make_function_ref_more_functional", L"Author342" }, { 3u, L"make function_ref more functional - HackMD", L"Author1783" }, } },
    { 2473u, { { 0u, L"Title1084", L"Daniel" }, { 1u, L"Distributing C++ Module Libraries", L"Daniel Ruoso" }, } },
    { 2474u, { { 0u, L"`views::repeat`", L"Micha\u0142 Dominiak" }, { 1u, L"`views::repeat`", L"Micha\u0142 Dominiak" }, { 2u, L"`views::repeat`", L"Micha\u0142 Dominiak" }, } },
    { 2475u, { { 0u, L"WG21 2021-10 Virtual Meeting Record of Discussion.docx", L"Author675" }, } },
    { 2477u, { { 0u, L"Allow programmer to control and detect coroutine elision by static constexpr bool should_elide() and coroutine_handle::elided()", L"Chuanqi Xu" }, { 1u, L"Allow programmer to control and detect coroutine elision by static constexpr bool must_elide() and coroutine_handle::elided()", L"Chuanqi Xu" }, { 2u, L"Allow programmer to control and detect coroutine elision", L"Chuanqi Xu" }, { 3u, L"Allow programmers to control coroutine elision", L"Chuanqi Xu" }, } },
    { 2478u, { { 0u, L"_Thread_local for better C++ interoperability with C", L"Hubert S.K" }, } },
    { 2479u, { { 0u, L"Title36", L"Author41" }, } },
    { 2480u, { { 0u, L"Response to P2471", L"Jamie Allsop" }, } },
    { 2481u, { { 0u, L"Forwarding reference to specific type/template", L"Barry Revzin" }, { 1u, L"Forwarding reference to specific type/template", L"Barry Revzin" }, { 2u, L"Forwarding reference to specific type/template", L"Barry Revzin" }, } },
    { 2483u, { { 0u, L"Support Non-copyable Types for `single_view`", L"Hui Xie" }, } },
    { 2484u, { { 0u, L"Extending support for class types as non-type template parameters", L"Richard Smith" }, } },
    { 2485u, { { 0u, L"Do not add value_exists and value_or to C++23", L"Author1214" }, } },
    { 2486u, { { 0u, L"Structured naming for function object and CPO values", L"Kirk Shoop" }, { 1u, L"Structured naming for function object and CPO values", L"Kirk Shoop" }, } },
    { 2487u, { { 0u, L"Attribute-like syntax for contract annotations", L"\u00A0\u00A0" }, { 1u, L"Is attribute-like syntax adequate for contract annotations?", L"\u00A0\u00A0" }, } },
    { 2489u, { { 0u, L"Library Evolution Plan for Completing C++23", L"Bryce Adelstein" }, } },
    { 2490u, { { 0u, L"Zero-overhead exception stacktraces", L"Ed Catmur" }, { 3u, L"Zero-overhead exception stacktraces", L"Ed Catmur" }, } },
    { 2491u, { { 0u, L"Text encodings follow-up", L"Jens Maurer" }, } },
    { 2492u, { { 0u, L"Attending C++ Standards Committee Meetings During a Pandemic", L"Author976" }, } },
    { 2493u, { { 0u, L"Missing feature test macros for C++20 core papers", L"Barry Revzin" }, } },
    { 2494u, { { 0u, L"Relaxing range adaptors to allow for move only types", L"Micha\u0142 Dominiak" }, { 1u, L"Relaxing range adaptors to allow for move only types", L"Micha\u0142 Dominiak" }, { 2u, L"Relaxing range adaptors to allow for move only types", L"Micha\u0142 Dominiak" }, } },
    { 2495u, { { 0u, L"Title1669", L"Michael Florian" }, { 1u, L"Title366", L"Michael Florian" }, { 2u, L"Title1485", L"Michael Florian" }, { 3u, L"Title1137", L"Michael Florian" }, } },
    { 2497u, { { 0u, L"Testing for success or failure of <charconv> functions", L"Author109" }, } },
    { 2498u, { { 0u, L"Title1060", L"Author1367" }, { 1u, L"Title1536", L"Author1976" }, } },
    { 2499u, { { 0u, L"`string_view` range constructor should be `explicit`", L"James Touton" }, } },
    { 2500u, { { 0u, L"C++17 parallel algorithms and P2300", L"Ruslan Arutyunyan" }, { 1u, L"C++ parallel algorithms and P2300", L"Ruslan Arutyunyan" }, { 2u, L"C++ parallel algorithms and P2300", L"Ruslan Arutyunyan" }, } },
    { 2501u, { { 0u, L"Undo the rename of views::move and views::as_const", L"Author65" }, } },
    { 2502u, { { 0u, L"Title725", L"Casey Carter" }, { 1u, L"Title1163", L"Casey Carter" }, { 2u, L"Title3", L"Casey Carter" }, } },
    { 2504u, { { 0u, L"Computations as a global solution to concurrency", L"Lucian Radu" }, } },
    { 2505u, { { 0u, L"P2505R0 Monadic Functions for <code>std::expected</code>", L"Jeff Garland" }, { 1u, L"P2505R1 Monadic Functions for <code>std::expected</code>", L"Jeff Garland" }, { 2u, L"P2505R2 Monadic Functions for <code>std::expected</code>", L"Jeff Garland" }, { 3u, L"P2505R3 Monadic Functions for <code>std::expected</code>", L"Jeff Garland" }, { 4u, L"P2505R4 Monadic Functions for <code>std::expected</code>", L"Jeff Garland" }, { 5u, L"P2505R5 Monadic Functions for <code>std::expected</code>", L"Jeff Garland" }, } },
    { 2506u, { { 0u, L"P2506", L"Casey Carter" }, } },
    { 2507u, { { 0u, L"Title371", L"Author438" }, { 1u, L"Title978", L"Author1265" }, } },
    { 2508u, { { 0u, L"Expose std::$basic-format-string$<charT, Args...>", L"Barry Revzin" }, { 1u, L"Expose std::$basic-format-string$<charT, Args...>", L"Barry Revzin" }, { 2u, L"Expose std::$basic-format-string$<charT, Args...>", L"Barry Revzin" }, } },
    { 2509u, { { 0u, L"A proposal for a type trait to detect value-preserving conversions", L"Giuseppe D'Angelo" }, } },
    { 2510u, { { 0u, L"Title531", L"Mark de" }, { 1u, L"Title1677", L"Mark de" }, { 2u, L"Title336", L"Mark de" }, { 3u, L"Title1615", L"Mark de" }, } },
    { 2511u, { { 0u, L"Beyond operator(): NTTP callables in type-erased call wrappers - HackMD", L"Zhihao Yuan" }, { 1u, L"Beyond operator(): NTTP callables in type-erased call wrappers - HackMD", L"Zhihao Yuan" }, { 2u, L"Beyond operator(): NTTP callables in type-erased call wrappers - HackMD", L"Zhihao Yuan" }, } },
    { 2512u, { { 0u, L"SG16: Unicode meeting summaries 2021-06-09 through 2021-12-15", L"Tom Honermann" }, } },
    { 2513u, { { 0u, L"char8_t Compatibility and Portability Fixes", L"JeanHeyd Meneide" }, { 1u, L"char8_t Compatibility and Portability Fix", L"JeanHeyd Meneide" }, { 2u, L"char8_t Compatibility and Portability Fix", L"JeanHeyd Meneide" }, { 3u, L"D2513R3: char8_t Compatibility and Portability Fix", L"JeanHeyd Meneide" }, { 4u, L"char8_t Compatibility and Portability Fix", L"JeanHeyd Meneide" }, } },
    { 2514u, { { 0u, L"std::breakpoint", L"Ren\u00E9 Ferdinand" }, } },
    { 2515u, { { 0u, L"std::is_debugger_present", L"Ren\u00E9 Ferdinand" }, } },
    { 2516u, { { 0u, L"<code>string_view</code> is implicitly convertible from what?", L"Victor Zverovich" }, } },
    { 2517u, { { 0u, L"Add a conditional noexcept specification to std::apply", L"Author1065" }, { 1u, L"Add a conditional noexcept specification to std::apply", L"Author1377" }, } },
    { 2520u, { { 0u, L"move_iterator<T*> should be a random access iterator", L"Barry Revzin" }, } },
    { 2521u, { { 0u, L"Contract support Working Paper", L"\u00A0\u00A0" }, { 1u, L"Contract support Working Paper", L"\u00A0\u00A0" }, { 2u, L"Contract support Working Paper", L"\u00A0\u00A0" }, { 3u, L"Contract support Record of SG21 consensus", L"\u00A0\u00A0" }, { 4u, L"Contract support Record of SG21 consensus", L"\u00A0\u00A0" }, { 5u, L"Contract support Record of SG21 consensus", L"\u00A0\u00A0" }, } },
    { 2523u, { { 0u, L"Request for re-inclusion of std::hive proposal in C++23", L"This was" }, } },
    { 2524u, { { 0u, L"Title1102", L"Michael Wong" }, } },
    { 2525u, { { 0u, L"Title848", L"Michael Wong" }, } },
    { 2527u, { { 0u, L"std::variant_alternative_index and std::variant_alternative_index_v", L"Alex Christensen" }, { 1u, L"std::variant_alternative_index and std::tuple_element_index", L"Alex Christensen" }, { 2u, L"std::variant_alternative_index and std::tuple_element_index", L"Alex Christensen" }, { 3u, L"std::variant_alternative_index and std::tuple_element_index", L"Alex Christensen" }, } },
    { 2528u, { { 0u, L"P2528R0", L"Reini Urban" }, } },
    { 2529u, { { 0u, L"generator<T> should have T&& reference_type", L"Mathias Stearn" }, } },
    { 2530u, { { 0u, L"Why Hazard Pointers Should be in C++26", L"Maged M" }, { 1u, L"Why Hazard Pointers Should be in C++26", L"Maged M" }, { 2u, L"Why Hazard Pointers Should be in C++26", L"Maged M" }, { 3u, L"Why Hazard Pointers Should be in C++26", L"Maged M" }, } },
    { 2531u, { { 0u, L"C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2022", L"Author1546" }, } },
    { 2532u, { { 0u, L"Removing exception_ptr from the Receiver Concepts", L"Eric Niebler" }, } },
    { 2533u, { { 0u, L"Core \"ready\" Issues", L"Author2065" }, } },
    { 2534u, { { 0u, L"function_ref in the wild", L"Author314" }, } },
    { 2535u, { { 0u, L"Title458", L"dlustig@nvidia.com, ogiroux@nvidia.com" }, } },
    { 2536u, { { 0u, L"Microsoft Word - Distributing C++ Module Libraries with dependencies json files.docx", L"Olga Arkhipova" }, } },
    { 2537u, { { 0u, L"Relax va_start Requirements to Match C", L"JeanHeyd Meneide" }, { 1u, L"Relax va_start Requirements to Match C", L"JeanHeyd Meneide" }, { 2u, L"Relax va_start Requirements to Match C", L"JeanHeyd Meneide" }, } },
    { 2538u, { { 0u, L"ADL-proof std::projected", L"Arthur O'Dwyer" }, { 1u, L"ADL-proof std::projected", L"Arthur O'Dwyer" }, } },
    { 2539u, { { 0u, L"Should the output of std::print to a terminal be synchronized with the underlying stream?", L"Victor Zverovich" }, { 1u, L"Should the output of std::print to a terminal be synchronized with the underlying stream?", L"Victor Zverovich" }, { 2u, L"Should the output of std::print to a terminal be synchronized with the underlying stream?", L"Victor Zverovich" }, { 3u, L"Should the output of std::print to a terminal be synchronized with the underlying stream?", L"Victor Zverovich" }, { 4u, L"Should the output of std::print to a terminal be synchronized with the underlying stream?", L"Victor Zverovich" }, } },
    { 2540u, { { 0u, L"Empty Product for certain Views", L"Steve Downey" }, { 1u, L"Empty Product for certain Views", L"Steve Downey" }, } },
    { 2541u, { { 0u, L"Consider renaming remove_quals.docx", L"Corentin Jabot" }, } },
    { 2542u, { { 0u, L"`views::concat`", L"Hui Xie" }, { 1u, L"`views::concat`", L"Hui Xie" }, { 2u, L"`views::concat`", L"Hui Xie" }, { 3u, L"`views::concat`", L"Hui Xie" }, { 4u, L"`views::concat`", L"Hui Xie" }, { 5u, L"`views::concat`", L"Hui Xie" }, { 6u, L"`views::concat`", L"Hui Xie" }, { 7u, L"`views::concat`", L"Hui Xie" }, { 8u, L"`views::concat`", L"Hui Xie" }, } },
    { 2544u, { { 0u, L"C++ exceptions are becoming more and more problematic", L"Thomas Neumann" }, } },
    { 2545u, { { 0u, L"Why RCU Should be in C++26", L"Paul McKenney" }, { 1u, L"Why RCU Should be in C++26", L"Paul McKenney" }, { 2u, L"Why RCU Should be in C++26", L"Paul McKenney" }, { 3u, L"Why RCU Should be in C++26", L"Paul McKenney" }, { 4u, L"Read-Copy Update (RCU)", L"Paul McKenney" }, } },
    { 2546u, { { 0u, L"Debugging Support", L"Ren\u00E9 Ferdinand" }, { 1u, L"Debugging Support", L"Ren\u00E9 Ferdinand" }, { 2u, L"Debugging Support", L"Ren\u00E9 Ferdinand" }, { 3u, L"Debugging Support", L"Ren\u00E9 Ferdinand" }, { 4u, L"Debugging Support", L"1" }, { 5u, L"Debugging Support", L"1" }, } },
    { 2547u, { { 0u, L"P2547R0 - Language support for customisable functions", L"Author99" }, { 1u, L"Language Support for Customisable Functions", L"Lewis Baker" }, } },
    { 2548u, { { 0u, L"Title528", L"Michael Florian" }, { 1u, L"Title790", L"Michael Florian" }, { 2u, L"Title1455", L"Michael Florian" }, { 3u, L"Title48", L"Michael Florian" }, { 4u, L"Title1315", L"Michael Florian" }, { 5u, L"Title1026", L"Michael Florian" }, { 6u, L"Title1034", L"Michael Florian" }, } },
    { 2549u, { { 0u, L"std::unexpected<E> should have error() as member accessor", L"Yihe Li" }, { 1u, L"std::unexpected<E> should have error() as member accessor", L"Yihe Li" }, } },
    { 2550u, { { 0u, L"ranges::copy should say output_iterator somewhere", L"Barry Revzin" }, } },
    { 2551u, { { 0u, L"Clarify intent of P1841 numeric traits [P2551R0]", L"Matthias Kretz" }, { 1u, L"Clarify intent of P1841 numeric traits [P2551R1]", L"Matthias Kretz" }, { 2u, L"Clarify intent of P1841 numeric traits [P2551R2]", L"Matthias Kretz" }, } },
    { 2552u, { { 0u, L"Title925", L"Author1169" }, { 1u, L"Title590", L"Author733" }, { 2u, L"Title403", L"Author483" }, { 3u, L"Title436", L"Author538" }, } },
    { 2553u, { { 0u, L"Make mdspan size_type controllable", L"Christian Trott" }, { 1u, L"Make mdspan size_type controllable", L"Christian Trott" }, } },
    { 2554u, { { 0u, L"C-Array Interoperability of MDSpan", L"Christian Trott" }, } },
    { 2555u, { { 0u, L"DxxxxR0: Naming improvements for std::execution", L"Jens Maurer" }, { 1u, L"Naming improvements for std::execution", L"Jens Maurer" }, } },
    { 2557u, { { 0u, L"WG21 2022-02 Virtual Meeting Record of Discussion.docx", L"Author1547" }, } },
    { 2558u, { { 0u, L"Add @, $, and ` to the basic character set", L"Steve Downey" }, { 1u, L"Add @, $, and ` to the basic character set", L"Steve Downey" }, { 2u, L"Add @, $, and ` to the basic character set", L"Steve Downey" }, } },
    { 2559u, { { 0u, L"Plan for Concurrency Technical Specification Version 2", L"Bryce Adelstein" }, { 1u, L"Plan for Concurrency Technical Specification Version 2", L"Bryce Adelstein" }, } },
    { 2560u, { { 0u, L"Title515", L"Author633" }, } },
    { 2561u, { { 0u, L"operator??", L"Barry Revzin" }, { 1u, L"An error propagation operator", L"Barry Revzin" }, { 2u, L"A control flow operator", L"Barry Revzin" }, } },
    { 2562u, { { 0u, L"Title1364", L"Author1758" }, { 1u, L"Title179", L"Author220" }, } },
    { 2564u, { { 0u, L"consteval needs to propagate up", L"Barry \u201CPatch\u201D" }, { 1u, L"consteval needs to propagate up", L"Barry \u201CPatch\u201D" }, { 2u, L"consteval needs to propagate up", L"Barry \u201CPatch\u201D" }, { 3u, L"consteval needs to propagate up", L"Barry \u201CPatch\u201D" }, } },
    { 2565u, { { 0u, L"D2565R0_Supporting_User-Defined_Attributes", L"Bret Brown" }, } },
    { 2568u, { { 0u, L"P2568R0 Proposal of std::map::at_ptr", L"Andrew Tomazos" }, } },
    { 2569u, { { 0u, L"N2797: *_HAS_SUBNORM==0 implies what?", L"Author1114" }, } },
    { 2570u, { { 0u, L"On side effects in contract annotations", L"\u00A0\u00A0" }, { 1u, L"Contract predicates that are not predicates", L"\u00A0\u00A0" }, { 2u, L"Contract predicates that are not predicates", L"\u00A0\u00A0" }, } },
    { 2572u, { { 0u, L"std::format() fill character allowances;proposed resolution for LWG issues 3576 and 3639", L"Tom Honermann" }, { 1u, L"std::format() fill character allowances;proposed resolution for LWG issues 3576 and 3639", L"Tom Honermann" }, } },
    { 2573u, { { 0u, L"<code>= delete(\"should have a reason\");</code>", L"Yihe Li" }, { 1u, L"= delete(\"should have a reason\");", L"Yihe Li" }, { 2u, L"= delete(\"should have a reason\");", L"Yihe Li" }, } },
    { 2574u, { { 0u, L"2022-05 Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2575u, { { 0u, L"2022-05 Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2576u, { { 0u, L"The constexpr specifier for object definitions", L"Author446" }, } },
    { 2577u, { { 0u, L"Discovering C++ modules in pre-built library releases", L"Daniel Ruoso" }, { 1u, L"Discovering C++ modules in pre-built library releases", L"Daniel Ruoso" }, { 2u, L"Discovering C++ modules in pre-built library releases", L"Daniel Ruoso" }, } },
    { 2579u, { { 0u, L"Title1599", L"Corentin Jabot" }, } },
    { 2580u, { { 0u, L"Tuple protocol for C-style arrays T[N]", L"Paolo Di" }, } },
    { 2581u, { { 0u, L"Specifying the Interoperability of Binary Module Interface Files", L"Daniel Ruoso" }, { 1u, L"Specifying the Interoperability of Built Module Interface Files", L"Daniel Ruoso" }, { 2u, L"Specifying the Interoperability of Built Module Interface Files", L"Daniel Ruoso" }, } },
    { 2582u, { { 0u, L"Title1196", L"Author1543" }, { 1u, L"Title841", L"Author1047" }, } },
    { 2584u, { { 0u, L"Title1211", L"Corentin Jabot" }, } },
    { 2585u, { { 0u, L"Improve default container formatting", L"Barry Revzin" }, { 1u, L"Improve default container formatting", L"Barry Revzin" }, } },
    { 2586u, { { 0u, L"Title931", L"Niall Douglas" }, } },
    { 2587u, { { 0u, L"<code>to_string</code> or not <code>to_string</code>", L"Victor Zverovich" }, { 1u, L"D2587R1: <code>to_string</code> or not <code>to_string</code>", L"Victor Zverovich" }, { 2u, L"<code>to_string</code> or not <code>to_string</code>", L"Victor Zverovich" }, { 3u, L"<code>to_string</code> or not <code>to_string</code>", L"Victor Zverovich" }, } },
    { 2588u, { { 0u, L"barriers phase completion guarantees - HackMD", L"Gonzalo Brito" }, { 1u, L"barriers phase completion guarantees", L"Gonzalo Brito" }, { 2u, L"barriers phase completion guarantees", L"Gonzalo Brito" }, { 3u, L"barriers phase completion guarantees - HackMD", L"Gonzalo Brito" }, } },
    { 2589u, { { 0u, L"Title1477", L"Nevin " }, { 1u, L"Title1633", L"Nevin " }, } },
    { 2590u, { { 0u, L"Title769", L"Author949" }, { 1u, L"Title445", L"Author546" }, { 2u, L"Title506", L"Author621" }, } },
    { 2591u, { { 0u, L"Concatenation of strings and string views", L"Giuseppe D'Angelo" }, { 1u, L"Concatenation of strings and string views", L"Giuseppe D'Angelo" }, { 2u, L"Concatenation of strings and string views", L"Giuseppe D'Angelo" }, { 3u, L"Concatenation of strings and string views", L"Giuseppe D'Angelo" }, { 4u, L"Concatenation of strings and string views", L"Giuseppe D'Angelo" }, { 5u, L"Concatenation of strings and string views", L"Giuseppe D'Angelo" }, } },
    { 2592u, { { 0u, L"Hashing support for std::chrono value classes", L"Giuseppe D'Angelo" }, { 1u, L"Hashing support for std::chrono value classes", L"Giuseppe D'Angelo" }, { 2u, L"Hashing support for std::chrono value classes", L"Giuseppe D'Angelo" }, { 3u, L"Hashing support for std::chrono value classes", L"Giuseppe D'Angelo" }, } },
    { 2593u, { { 0u, L"Allowing static_assert(false)", L"Barry Revzin" }, { 1u, L"Allowing static_assert(false)", L"Barry Revzin" }, } },
    { 2594u, { { 0u, L"Title1270", L"Author1638" }, { 1u, L"Title852", L"Author1060" }, } },
    { 2596u, { { 0u, L"Improve std::hive::reshape", L"Arthur O'Dwyer" }, } },
    { 2598u, { { 0u, L"\"Changing scope for lambda trailing-return-type\" (P2036) should not be a DR", L"Author1509" }, } },
    { 2599u, { { 0u, L"Title480", L"Nevin " }, { 1u, L"Title1111", L"__ 1" }, { 2u, L"Title1142", L"__ 1" }, } },
    { 2600u, { { 0u, L"A minimal ADL restriction to avoid ill-formed template instantiation [P2600R0]", L"Matthias Kretz" }, } },
    { 2601u, { { 0u, L"Title1290", L"Justin Cooke" }, { 1u, L"Title295", L"Justin Cooke" }, } },
    { 2602u, { { 0u, L"Poison Pills are Too Toxic", L"Barry Revzin" }, { 1u, L"Poison Pills are Too Toxic", L"Barry Revzin" }, { 2u, L"Poison Pills are Too Toxic", L"Barry Revzin" }, } },
    { 2603u, { { 0u, L"member function pointer to function pointer - HackMD", L"Author1419" }, { 1u, L"member function pointer to function pointer - HackMD", L"Author1693" }, } },
    { 2604u, { { 0u, L"mdspan: rename pointer and contiguous", L"Christian Trott" }, } },
    { 2605u, { { 0u, L"SG16: Unicode meeting summaries 2022-01-12 through 2022-06-08", L"Tom Honermann" }, } },
    { 2607u, { { 0u, L"Title487", L"Author596" }, } },
    { 2608u, { { 0u, L"Title961", L"Justin Cooke" }, } },
    { 2609u, { { 0u, L"Relaxing Ranges Just A Smidge", L"John Eivind" }, { 1u, L"Relaxing Ranges Just A Smidge", L"John Eivind" }, { 2u, L"Relaxing Ranges Just A Smidge", L"John Eivind" }, { 3u, L"Relaxing Ranges Just A Smidge", L"John Eivind" }, } },
    { 2610u, { { 0u, L"2022-07 Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2611u, { { 0u, L"2022-07 Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2613u, { { 0u, L"Add the missing empty to mdspan", L"Yihe Li" }, { 1u, L"Add the missing empty to mdspan", L"Yihe Li" }, } },
    { 2614u, { { 0u, L"Deprecate numeric_limits::has_denorm [P2614R0]", L"Matthias Kretz" }, { 1u, L"Deprecate numeric_limits::has_denorm [P2614R1]", L"Matthias Kretz" }, { 2u, L"Deprecate numeric_limits::has_denorm [P2614R2]", L"Matthias Kretz" }, } },
    { 2615u, { { 0u, L"Meaningful exports", L"Author1845" }, { 1u, L"Meaningful exports", L"Author1126" }, } },
    { 2616u, { { 0u, L"Making std::atomic notification/wait operations usable in more situations", L"Author846" }, { 1u, L"Revision History", L"Author893" }, { 2u, L"Making std::atomic notification/wait operations usable in more situations", L"Author630" }, { 3u, L"Making std::atomic notification/wait operations usable in more situations", L"Author62" }, { 4u, L"Making std::atomic notification/wait operations usable in more situations", L"Author77" }, } },
    { 2617u, { { 0u, L"Responses to NB comments on DTS 12907 \"Extensions to C++ forTransactional Memory Version 2\"", L"Jens Maurer" }, } },
    { 2618u, { { 0u, L"C++ Standard Library Issues to be moved in Virtual Plenary, Jul. 2022", L"Author1010" }, } },
    { 2620u, { { 0u, L"Title1318", L"Corentin Jabot" }, { 1u, L"Title1519", L"Corentin Jabot" }, { 2u, L"Title1035", L"Corentin Jabot" }, } },
    { 2621u, { { 0u, L"Title1467", L"Corentin Jabot" }, { 1u, L"Title355", L"Corentin Jabot" }, { 2u, L"Title1045", L"Corentin Jabot" }, { 3u, L"Title249", L"Corentin Jabot" }, } },
    { 2622u, { { 0u, L"Core \"ready\" Issues", L"Author1800" }, } },
    { 2623u, { { 0u, L"implicit constant initialization - HackMD", L"Author1210" }, { 1u, L"implicit constant initialization - HackMD", L"Author2173" }, { 2u, L"implicit constant initialization - HackMD", L"Author1022" }, } },
    { 2624u, { { 0u, L"Title220", L"Justin Cooke" }, } },
    { 2625u, { { 0u, L"Life without operator()", L"Author2154" }, } },
    { 2626u, { { 0u, L"Title1173", L"Corentin Jabot" }, } },
    { 2627u, { { 0u, L"P2627 WG21 2022-07 Virtual Meeting Record of Discussion.docx", L"Author1401" }, } },
    { 2628u, { { 0u, L"Extend barrier APIs with memory_order", L"Gonzalo Brito" }, } },
    { 2629u, { { 0u, L"barrier token-less split arrive/wait", L"Gonzalo Brito" }, } },
    { 2630u, { { 0u, L"Submdspan", L"Christian Trott" }, { 1u, L"Submdspan", L"Christian Trott" }, { 2u, L"Submdspan", L"Christian Trott" }, { 3u, L"Submdspan", L"Christian Trott" }, { 4u, L"Submdspan", L"Christian Trott" }, } },
    { 2631u, { { 0u, L"Publish TS Library Fundamentals 3 Now!", L"Author1438" }, } },
    { 2632u, { { 0u, L"Title792", L"Corentin Jabot" }, } },
    { 2633u, { { 0u, L"Title230", L"Justin Cooke" }, } },
    { 2634u, { { 0u, L"Title376", L"Author447" }, } },
    { 2635u, { { 0u, L"Title1399", L"Author1803" }, } },
    { 2636u, { { 0u, L"References to ranges should always be viewable", L"Hannes Hauswedell" }, { 1u, L"References to ranges should always be viewable", L"Hannes Hauswedell" }, { 2u, L"References to ranges should always be viewable", L"Hannes Hauswedell" }, } },
    { 2637u, { { 0u, L"Member visit and apply", L"Barry Revzin" }, { 1u, L"Member visit", L"Barry Revzin" }, { 2u, L"Member visit", L"Barry Revzin" }, { 3u, L"Member visit", L"Barry Revzin" }, } },
    { 2638u, { { 0u, L"Title1430", L"Author1842" }, } },
    { 2639u, { { 0u, L"Title1158", L"Torben Thaysen" }, } },
    { 2640u, { { 0u, L"Modules: Inner-scope Namespace Entities: Exported or Not?", L"Author913" }, { 1u, L"Modules: Inner-scope Namespace Entities: Exported or Not?", L"Author789" }, { 2u, L"Modules: Inner-scope Namespace Entities: Exported or Not?", L"Author1772" }, } },
    { 2641u, { { 0u, L"Checking if a union alternative is active", L"Barry Revzin" }, { 1u, L"Checking if a union alternative is active", L"Barry Revzin" }, { 2u, L"Checking if a union alternative is active", L"Barry Revzin" }, { 3u, L"Checking if a union alternative is active", L"Barry Revzin" }, { 4u, L"Checking if a union alternative is active", L"Barry Revzin" }, } },
    { 2642u, { { 0u, L"Padded mdspan layouts", L"Mark Hoemmen" }, { 1u, L"Padded mdspan layouts", L"Mark Hoemmen" }, { 2u, L"Padded mdspan layouts", L"Mark Hoemmen" }, { 3u, L"Padded mdspan layouts", L"Mark Hoemmen" }, { 4u, L"Padded mdspan layouts", L"Christian Trott" }, { 5u, L"Padded mdspan layouts", L"Christian Trott" }, { 6u, L"Title1619", L"Christian Trott" }, } },
    { 2643u, { { 0u, L"Improving C++ concurrency features", L"Gonzalo Brito" }, { 1u, L"Improving C++ concurrency features", L"Gonzalo Brito" }, { 2u, L"Improving C++ concurrency features", L"Gonzalo Brito" }, } },
    { 2644u, { { 0u, L"Final Fix of Broken Range-based for Loop", L"Herb Sutter" }, { 1u, L"Final Fix of Broken Range-Based for Loop", L"Herb Sutter" }, } },
    { 2645u, { { 0u, L"path_view: a design that took a wrong turn", L"Victor Zverovich" }, { 1u, L"path_view: a design that took a wrong turn", L"Victor Zverovich" }, } },
    { 2646u, { { 0u, L"Title624", L"Parsa Amini" }, } },
    { 2647u, { { 0u, L"Permitting static constexpr variables in constexpr functions", L"Barry Revzin" }, { 1u, L"Permitting static constexpr variables in constexpr functions", L"Barry Revzin" }, } },
    { 2648u, { { 0u, L"2022-10 Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2649u, { { 0u, L"2022-10 Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2650u, { { 0u, L"2022-11 Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2652u, { { 0u, L"Disallow user specialization of allocator_traits", L"Author2009" }, { 1u, L"Disallow User Specialization of allocator_traits", L"Author190" }, { 2u, L"Disallow User Specialization of allocator_traits", L"Author61" }, } },
    { 2653u, { { 0u, L"Title1589", L"Author2048" }, { 1u, L"Title1458", L"Author1881" }, } },
    { 2654u, { { 0u, L"Macros And Standard Library Modules", L"Alisdair Meredith" }, { 1u, L"Macros And Standard Library Modules", L"Alisdair Meredith" }, } },
    { 2655u, { { 0u, L"`common_reference_t` of `reference_wrapper` Should Be a Reference Type", L"Hui Xie" }, { 1u, L"`common_reference_t` of `reference_wrapper` Should Be a Reference Type", L"Hui Xie" }, { 2u, L"`common_reference_t` of `reference_wrapper` Should Be aReference Type", L"Hui Xie" }, { 3u, L"`common_reference_t` of `reference_wrapper` Should Be aReference Type", L"Hui Xie" }, } },
    { 2656u, { { 0u, L"C++ Ecosystem International Standard", L"Ren\u00E9 Ferdinand" }, { 1u, L"C++ Ecosystem International Standard", L"Ren\u00E9 Ferdinand" }, { 2u, L"C++ Ecosystem International Standard", L"Ren\u00E9 Ferdinand" }, { 3u, L"C++ Ecosystem International Standard", L"Ren\u00E9 Ferdinand" }, { 4u, L"WITHDRAWN: C++ Ecosystem International Standard", L"Ren\u00E9 Ferdinand" }, } },
    { 2657u, { { 0u, L"C++ is the next C++ - HackMD", L"Author101" }, { 1u, L"C++ is the next C++ - HackMD", L"Author1" }, } },
    { 2658u, { { 0u, L"temporary storage class specifiers - HackMD", L"Author1042" }, { 1u, L"temporary storage class specifiers - HackMD", L"Author1095" }, } },
    { 2659u, { { 0u, L"A Proposal to Publish a Technical Specification for Contracts", L"Author1545" }, { 1u, L"A Proposal to Publish a Technical Specificationfor Contracts", L"Author444" }, { 2u, L"A Proposal to Publish a Technical Specificationfor Contracts", L"Author471" }, } },
    { 2660u, { { 0u, L"C++ Information technology Extensions for contracts", L"Author909" }, } },
    { 2661u, { { 0u, L"Miscellaneous amendments to the Contracts TS", L"Author206" }, } },
    { 2662u, { { 0u, L"Title933", L"Corentin Jabot" }, { 1u, L"Title113", L"Corentin Jabot" }, { 2u, L"Title235", L"Corentin Jabot" }, { 3u, L"Title1450", L"Corentin Jabot" }, } },
    { 2663u, { { 0u, L"Title", L"Author83" }, { 1u, L"Title", L"Author107" }, { 2u, L"Interleaved complex values support in std::simd", L"Daniel Towner" }, { 3u, L"Interleaved complex values support in std::simd", L"Daniel Towner" }, { 4u, L"Interleaved complex values support in std::simd", L"Daniel Towner" }, { 5u, L"Interleaved complex values support in std::simd", L"Daniel Towner" }, { 6u, L"Interleaved complex values support in std::simd", L"Daniel Towner" }, { 7u, L"Interleaved complex values support in std::simd", L"Daniel Towner" }, } },
    { 2664u, { { 0u, L"Title", L"Author149" }, { 1u, L"Title", L"Author1391" }, { 2u, L"Proposal to extend std::simd with permutation API", L"Daniel Towner" }, { 3u, L"Proposal to extend std::simd with permutation API", L"Daniel Towner" }, { 4u, L"Proposal to extend std::simd with permutation API", L"Daniel Towner" }, { 5u, L"Extend std::simd with permutation API", L"Daniel Towner" }, { 6u, L"Extend std::simd with permutation API", L"Daniel Towner" }, { 7u, L"Extend std::simd with permutation API", L"Daniel Towner" }, { 8u, L"Extend std::simd with permutation API", L"Daniel Towner" }, { 9u, L"Extend std::simd with permutation API", L"Daniel Towner" }, } },
    { 2665u, { { 0u, L"Title364", L"Bengt Gustafsson" }, } },
    { 2666u, { { 0u, L"Title740", L"Bengt Gustafsson" }, } },
    { 2667u, { { 0u, L"Title1326", L"Bengt Gustafsson" }, } },
    { 2668u, { { 0u, L"Title485", L"Bengt Gustafsson" }, } },
    { 2669u, { { 0u, L"Title518", L"Bengt Gustafsson" }, } },
    { 2670u, { { 0u, L"Non-transient constexpr allocation", L"Barry Revzin" }, { 1u, L"Non-transient constexpr allocation", L"Barry Revzin" }, } },
    { 2671u, { { 0u, L"Syntax Choices for Generalized Pack Declaration and Usage", L"Barry Revzin" }, } },
    { 2672u, { { 0u, L"Exploring the Design Space for a Pipeline Operator", L"Barry Revzin" }, } },
    { 2673u, { { 0u, L"Title575", L"Author713" }, } },
    { 2674u, { { 0u, L"Title1595", L"Author2057" }, { 1u, L"Title1151", L"Author1480" }, } },
    { 2675u, { { 0u, L"LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)", L"Author1607" }, { 1u, L"LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)", L"Author674" }, } },
    { 2676u, { { 0u, L"The Val Object Model", L"Dave Abrahams" }, } },
    { 2677u, { { 0u, L"Title701", L"Mike Spertus" }, { 2u, L"Title957", L"Mike Spertus" }, } },
    { 2678u, { { 0u, L"SG16: Unicode meeting summaries 2022-06-22 through 2022-09-28", L"Tom Honermann" }, } },
    { 2679u, { { 0u, L"Title1135", L"Author1456" }, { 1u, L"Title116", L"Author135" }, { 2u, L"Title898", L"Author1125" }, } },
    { 2680u, { { 0u, L"Title1248", L"gdr@microsoft.com Audience" }, { 1u, L"Title870", L"gdr@microsoft.com Audience" }, } },
    { 2681u, { { 0u, L"Title1286", L"Richard Dosselmann" }, { 1u, L"Title170", L"Richard Dosselmann" }, } },
    { 2682u, { { 0u, L"Title489", L"Michael Wong" }, } },
    { 2683u, { { 0u, L"Title649", L"Michael Wong" }, } },
    { 2684u, { { 0u, L"Title1451", L"Michael Wong" }, } },
    { 2685u, { { 0u, L"Language Support For Scoped Allocators", L"Author1778" }, { 1u, L"Language Support For Scoped Objects", L"Alisdair Meredith" }, } },
    { 2686u, { { 0u, L"Title39", L"Corentin Jabot" }, { 1u, L"Title935", L"Corentin Jabot" }, { 2u, L"Title707", L"Corentin Jabot" }, { 3u, L"Title1143", L"Corentin Jabot" }, { 4u, L"Title1048", L"Corentin Jabot" }, { 5u, L"Title746", L"Corentin Jabot" }, } },
    { 2687u, { { 0u, L"Title1263", L"Author1630" }, } },
    { 2688u, { { 0u, L"Pattern Matching Discussion for Kona 2022", L"Michael Park" }, { 1u, L"Pattern Matching: Expression", L"structure_map" }, { 2u, L"Pattern Matching: `match` Expression", L"structure_map" }, { 3u, L"Pattern Matching: `match` Expression", L"structure_map" }, { 4u, L"Pattern Matching: `match` Expression", L"structure_map" }, { 5u, L"Pattern Matching: `match` Expression", L"structure_map" }, } },
    { 2689u, { { 0u, L"atomic_accessor", L"Christian Trott" }, { 1u, L"Atomic Refs Bounded to Memory Orderings & Atomic Accessors", L"Christian Trott" }, { 2u, L"Atomic Refs Bound to Memory Orderings & Atomic Accessors", L"Christian Trott" }, { 3u, L"Atomic Refs Bound to Memory Orderings & Atomic Accessors", L"Christian Trott" }, } },
    { 2690u, { { 0u, L"C++17 parallel algorithms and P2300", L"Ruslan Arutyunyan" }, { 1u, L"Corporate PowerPoint Template Use Intel Clear For All Text (General Employee Usage)", L"Author1988" }, } },
    { 2691u, { { 0u, L"Title236", L"Author284" }, } },
    { 2692u, { { 0u, L"Generic Programming is just Programming", L"Mihail Naydenov" }, } },
    { 2693u, { { 0u, L"Title1186", L"Corentin Jabot" }, { 1u, L"Title765", L"Corentin Jabot" }, } },
    { 2695u, { { 0u, L"A proposed plan for contracts in C++", L"Author160" }, { 1u, L"A proposed plan for contracts in C++", L"Author580" }, } },
    { 2696u, { { 0u, L"Introduce Cpp17Swappable as additional convenience requirements", L"Daniel Kr\u00FCgler" }, } },
    { 2697u, { { 0u, L"Title1305", L"Michael Florian" }, { 1u, L"Title1162", L"Michael Florian" }, } },
    { 2698u, { { 0u, L"Title1644", L"Author2131" }, } },
    { 2700u, { { 0u, L"Questions on P2680 Contracts for C++: Prioritizing Safety", L"Author1893" }, { 1u, L"Questions on P2680 Contracts for C++: Prioritizing Safety", L"Author431" }, } },
    { 2701u, { { 0u, L"Translating Linker Input Files to Module Metadata Files", L"Daniel Ruoso" }, } },
    { 2702u, { { 0u, L"Specifying Importable Headers", L"Daniel Ruoso" }, } },
    { 2703u, { { 0u, L"C++ Standard Library Issues to be moved in Kona", L"Author1810" }, } },
    { 2704u, { { 0u, L"C++ Standard Library Immediate Issues to be moved in Kona, Nov. 2022", L"Author560" }, } },
    { 2705u, { { 0u, L"C++ Library Fundamentals TS Issues to be moved in Kona", L"Author1359" }, } },
    { 2706u, { { 0u, L"Drafting for US 26-061", L"Author857" }, } },
    { 2708u, { { 0u, L"No Further Fundamentals TSes", L"Author1734" }, { 1u, L"No Further Fundamentals TSes", L"Author501" }, } },
    { 2709u, { { 0u, L"Core \"ready\" Issues", L"Author80" }, } },
    { 2710u, { { 0u, L"Core \"NB\" Issues", L"Author1876" }, } },
    { 2711u, { { 0u, L"Making multi-param (and other converting) constructors of views explicit", L"Author267" }, { 1u, L"Making multi-param constructors of views explicit", L"Author731" }, } },
    { 2712u, { { 0u, L"Title665", L"Joshua Berne" }, } },
    { 2713u, { { 0u, L"Escaping improvements in std::format", L"Victor Zverovich" }, { 1u, L"Escaping improvements in std::format", L"Victor Zverovich" }, } },
    { 2714u, { { 0u, L"Bind front and back to NTTP callables - HackMD", L"Zhihao Yuan" }, { 1u, L"Bind front and back to NTTP callables - HackMD", L"Zhihao Yuan" }, } },
    { 2717u, { { 0u, L"Tool Introspection", L"Ren\u00E9 Ferdinand" }, { 1u, L"Tool Introspection", L"Ren\u00E9 Ferdinand" }, { 2u, L"Tool Introspection", L"Ren\u00E9 Ferdinand" }, { 3u, L"Tool Introspection", L"Ren\u00E9 Ferdinand" }, { 4u, L"Tool Introspection", L"Ren\u00E9 Ferdinand" }, { 5u, L"Tool Introspection", L"Ren\u00E9 Ferdinand" }, { 6u, L"WITHDRAWN: Tool Introspection", L"Ren\u00E9 Ferdinand" }, } },
    { 2718u, { { 0u, L"D2718R0: Wording for P2644R1 Fix for Range-based for Loop", L"Nicolai Josuttis" }, } },
    { 2719u, { { 0u, L"Type-aware allocation and deallocation functions", L"Louis Dionne" }, { 1u, L"Type-aware allocation and deallocation functions", L"Louis Dionne" }, { 2u, L"Type-aware allocation and deallocation functions", L"Louis Dionne" }, { 3u, L"Type-aware allocation and deallocation functions", L"Louis Dionne" }, { 4u, L"Type-aware allocation and deallocation functions", L"Louis Dionne" }, } },
    { 2721u, { { 0u, L"P2721R0", L"Michael Florian" }, } },
    { 2722u, { { 0u, L"Beyond operator()", L"Author14" }, } },
    { 2723u, { { 0u, L"Zero-initialize objects of automatic storage duration", L"JF Bastien" }, { 1u, L"Zero-initialize objects of automatic storage duration", L"JF Bastien" }, } },
    { 2724u, { { 0u, L"constant dangling - HackMD", L"Author629" }, { 1u, L"constant dangling - HackMD", L"Author2008" }, } },
    { 2725u, { { 0u, L"`std::integral_constant` Literals", L"Zach Laine" }, { 1u, L"`std::integral_constant` Literals", L"Zach Laine" }, } },
    { 2726u, { { 0u, L"Better `std::tuple` Indexing", L"Zach Laine" }, } },
    { 2727u, { { 0u, L"`std::iterator_interface`", L"Zach Laine" }, { 1u, L"`std::iterator_interface`", L"Zach Laine" }, { 2u, L"`std::iterator_interface`", L"Zach Laine" }, { 3u, L"`std::iterator_interface`", L"Zach Laine" }, { 4u, L"`std::iterator_interface`", L"Zach Laine" }, } },
    { 2728u, { { 0u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 1u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 2u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 3u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 4u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 5u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 6u, L"Unicode in the Library, Part 1: UTF Transcoding", L"Zach Laine" }, { 7u, L"Unicode in the Library, Part 1: UTF Transcoding", L"1" }, } },
    { 2729u, { { 0u, L"Unicode in the Library, Part 2: Normalization", L"Zach Laine" }, } },
    { 2730u, { { 0u, L"variable scope - HackMD", L"Author692" }, { 1u, L"variable scope - HackMD", L"Author119" }, } },
    { 2732u, { { 0u, L"P2732 WG21 2022-11 Kona Record of Discussion.docx", L"Author1648" }, } },
    { 2733u, { { 0u, L"Fix handling of empty specifiers in std::format", L"Victor Zverovich" }, { 1u, L"Fix handling of empty specifiers in std::format", L"Victor Zverovich" }, { 2u, L"Fix handling of empty specifiers in std::format", L"Victor Zverovich" }, { 3u, L"Fix handling of empty specifiers in std::format", L"Victor Zverovich" }, } },
    { 2734u, { { 0u, L"Title140", L"Marc Mutz" }, } },
    { 2735u, { { 0u, L"Title632", L"Author775" }, } },
    { 2736u, { { 0u, L"Title78", L"Corentin Jabot" }, { 2u, L"Title464", L"Corentin Jabot" }, } },
    { 2737u, { { 0u, L"Proposal of Condition-centric Contracts Syntax", L"Andrew Tomazos" }, } },
    { 2738u, { { 0u, L"Title638", L"Corentin Jabot" }, { 1u, L"Title135", L"Corentin Jabot" }, } },
    { 2739u, { { 0u, L"Title476", L"Author583" }, } },
    { 2740u, { { 0u, L"Simpler implicit dangling resolution - HackMD", L"Author693" }, { 1u, L"Simpler implicit dangling resolution - HackMD", L"Author552" }, { 2u, L"Simpler implicit dangling resolution - HackMD", L"Author2196" }, } },
    { 2741u, { { 0u, L"Title863", L"Corentin Jabot" }, { 1u, L"Title416", L"Corentin Jabot" }, { 2u, L"Title1197", L"Corentin Jabot" }, { 3u, L"Title149", L"Corentin Jabot" }, } },
    { 2742u, { { 0u, L"indirect dangling identification - HackMD", L"Author327" }, { 1u, L"indirect dangling identification - HackMD", L"Author427" }, { 2u, L"indirect dangling identification - HackMD", L"Author1228" }, } },
    { 2743u, { { 0u, L"Contracts for C++: Priorotizing Safety", L"Author1055" }, } },
    { 2746u, { { 0u, L"Fenv rounding", L"Author981" }, { 1u, L"Fenv rounding", L"Author968" }, { 2u, L"Fenv rounding", L"Author1176" }, { 3u, L"Fenv rounding", L"Author1957" }, { 4u, L"Fenv rounding", L"Author512" }, { 5u, L"Fenv rounding", L"Author1135" }, { 6u, L"Fenv rounding", L"Author1655" }, { 7u, L"Fenv rounding", L"Author1467" }, } },
    { 2747u, { { 0u, L"Limited support for constexpr void*", L"Barry Revzin" }, { 1u, L"constexpr placement new", L"Barry Revzin" }, { 2u, L"constexpr placement new", L"Barry Revzin" }, } },
    { 2748u, { { 0u, L"Disallow Binding a Returned glvalue to a Temporary", L"Brian Bi" }, { 1u, L"Disallow Binding a Returned Glvalue to a Temporary", L"Brian Bi" }, { 2u, L"Disallow Binding a Returned Glvalue to a Temporary", L"Brian Bi" }, { 3u, L"Disallow Binding a Returned Glvalue to a Temporary", L"Brian Bi" }, { 4u, L"Disallow Binding a Returned Glvalue to a Temporary", L"Brian Bi" }, { 5u, L"Disallow Binding a Returned Glvalue to a Temporary", L"Brian Bi" }, } },
    { 2749u, { { 0u, L"Title1686", L"Corentin Jabot" }, } },
    { 2750u, { { 0u, L"C Dangling Reduction - HackMD", L"Author1361" }, { 1u, L"C Dangling Reduction - HackMD", L"Author2055" }, { 2u, L"C Dangling Reduction - HackMD", L"Author1642" }, } },
    { 2751u, { { 0u, L"Title620", L"Joshua Berne" }, { 1u, L"Title1638", L"Joshua Berne" }, } },
    { 2752u, { { 0u, L"Static storage for braced initializers", L"Arthur O'Dwyer" }, { 1u, L"Static storage for braced initializers", L"Arthur O'Dwyer" }, { 2u, L"Static storage for braced initializers", L"Arthur O'Dwyer" }, { 3u, L"Static storage for braced initializers", L"Arthur O'Dwyer" }, } },
    { 2754u, { { 0u, L"Deconstructing the Avoidance of Uninitialized Reads of AutoVariables", L"Jake Fevold" }, } },
    { 2755u, { { 0u, L"Title1282", L"Joshua Berne" }, { 1u, L"Title309", L"Joshua Berne" }, } },
    { 2756u, { { 0u, L"D2756R0 Proposal of Simple Contract Side Effect Semantics", L"Andrew Tomazos" }, } },
    { 2757u, { { 0u, L"Type-checking format args", L"Barry Revzin" }, { 1u, L"Type-checking format args", L"Barry Revzin" }, { 2u, L"Type-checking format args", L"Barry Revzin" }, { 3u, L"Type-checking format args", L"Barry Revzin" }, } },
    { 2758u, { { 0u, L"Emitting messages at compile time", L"Barry Revzin" }, { 1u, L"Emitting messages at compile time", L"Barry Revzin" }, { 2u, L"Emitting messages at compile time", L"Barry Revzin" }, { 3u, L"Emitting messages at compile time", L"Barry Revzin" }, { 4u, L"Emitting messages at compile time", L"Barry Revzin" }, { 5u, L"Emitting messages at compile time", L"Barry Revzin" }, } },
    { 2759u, { { 0u, L"D2759R0: DG Opinion on Safety for ISO C++", L"Author818" }, { 1u, L"DG Opinion on Safety for ISO C++", L"Author1843" }, } },
    { 2760u, { { 0u, L"A Plan for C++26 Ranges", L"Barry Revzin" }, { 1u, L"A Plan for C++26 Ranges", L"Barry Revzin" }, } },
    { 2761u, { { 0u, L"If structured binding", L"Author996" }, { 1u, L"If structured binding", L"Author1631" }, { 2u, L"Evaluating structured binding as a condition", L"Author1552" }, { 3u, L"Title998", L"Author1287" }, } },
    { 2762u, { { 0u, L"Sender/Receiver Interface For Networking", L"Dietmar Khl" }, { 1u, L"Sender/Receiver Interface For Networking", L"Dietmar Khl" }, { 2u, L"Sender/Receiver Interface For Networking", L"Dietmar Khl" }, } },
    { 2763u, { { 0u, L"layout_stride static extents default constructor fix", L"Christian Trott" }, { 1u, L"layout_stride static extents default constructor fix", L"Christian Trott" }, } },
    { 2764u, { { 0u, L"Title1593", L"Michael Wong" }, } },
    { 2765u, { { 0u, L"Title1342", L"Michael Wong" }, } },
    { 2766u, { { 0u, L"SG16: Unicode meeting summaries 2022-10-12 through 2022-12-14", L"Tom Honermann" }, } },
    { 2767u, { { 0u, L"flat_map/flat_set omnibus", L"Arthur O'Dwyer" }, { 1u, L"flat_map/flat_set omnibus", L"Arthur O'Dwyer" }, { 2u, L"flat_map/flat_set omnibus", L"Arthur O'Dwyer" }, } },
    { 2769u, { { 0u, L"get_element customization point object", L"Ruslan Arutyunyan" }, { 1u, L"get_element customization point object", L"Ruslan Arutyunyan" }, { 2u, L"get_element customization point object", L"Ruslan Arutyunyan" }, { 3u, L"get_element customization point object", L"Ruslan Arutyunyan" }, } },
    { 2770u, { { 0u, L"Stashing stashing iterators for proper flattening", L"Tim Song" }, } },
    { 2771u, { { 0u, L"Towards memory safety in C++", L"Thomas Neumann" }, { 1u, L"R2771R1: Towards memory safety in C++", L"Thomas Neumann" }, } },
    { 2772u, { { 0u, L"std::integral_constant literals do not suffice constexpr_t? [P2772R0]", L"Matthias Kretz" }, } },
    { 2773u, { { 0u, L"Title1068", L"Corentin Jabot" }, } },
    { 2774u, { { 0u, L"D2774 - Scoped thread-local storage", L"Michael Florian" }, { 1u, L"D2774 - Concurrent object pool", L"Michael Florian" }, } },
    { 2775u, { { 0u, L"2023-05 Library Evolution Polls", L"Bryce Adelstein" }, } },
    { 2776u, { { 0u, L"2023-05 Library Evolution Poll Outcomes", L"Bryce Adelstein" }, } },
    { 2779u, { { 0u, L"Make basic_string_views range construction conditionally explicit", L"Giuseppe D'Angelo" }, { 1u, L"D2779R1: Make basic_string_views range construction conditionally explicit", L"Giuseppe D'Angelo" }, } },
    { 2780u, { { 0u, L"Caller-side precondition checking, and Eval_and_throw", L"Author990" }, } },
    { 2781u, { { 1u, L"`std::constexpr_v`", L"Matthias Kretz" }, { 2u, L"`std::constexpr_v`", L"Matthias Kretz" }, { 3u, L"`std::constexpr_v`", L"Matthias Kretz" }, { 4u, L"`std::constant_wrapper`", L"Matthias Kretz" }, { 5u, L"`std::constant_wrapper`", L"Hana Dusikova" }, { 6u, L"`std::constant_wrapper`", L"Hana Dusikova" }, { 7u, L"`std::constant_wrapper`", L"Hana Dusikova" }, { 8u, L"`std::constant_wrapper`", L"Hana Dusikova" }, } },
    { 2782u, { { 0u, L"A proposal for a type trait to detect if value initialization can be achieved by zero-filling", L"Giuseppe D'Angelo" }, } },
    { 2784u, { { 0u, L"Not halting the program after detected contract violation", L"\u00A0\u00A0" }, } },
    { 2785u, { { 0u, L"D2785R1: Relocating prvalues", L"S\u00E9bastien Bini" }, { 1u, L"Relocating prvalues", L"S\u00E9bastien Bini" }, { 2u, L"D2785R2: Relocating prvalues", L"S\u00E9bastien Bini" }, { 3u, L"Relocating prvalues", L"S\u00E9bastien Bini" }, } },
    { 2786u, { { 0u, L"Trivial relocatability options", L"Mungo Gill" }, { 1u, L"Trivial relocatability options", L"Mungo Gill" }, { 2u, L"Trivial relocatability options", L"Mungo Gill" }, { 3u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 4u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 5u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 6u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 7u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 8u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 9u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 10u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 11u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 12u, L"Trivial Relocatability For C++26", L"Mungo Gill" }, { 13u, L"Trivial Relocatability For C++26", L"Alisdair Meredith" }, } },
    { 2787u, { { 0u, L"Title1304", L"Author1679" }, { 1u, L"Title505", L"Author619" }, } },
    { 2788u, { { 0u, L"Linkage for modular constants", L"Author835" }, } },
    { 2789u, { { 0u, L"C++ Standard Library Issues to be moved in Issaquah, Feb. 2023", L"Author1858" }, } },
    { 2790u, { { 0u, L"C++ Standard Library Immediate Issues to be moved in Issaquah, Feb. 2023", L"Author686" }, } },
    { 2791u, { { 0u, L"P2791R0", L"Ran Regev" }, } },
    { 2795u, { { 0u, L"Correct and incorrect code, and erroneous behaviour", L"Author1344" }, { 1u, L"Erroneous behaviour for uninitialized reads", L"Author963" }, { 2u, L"Erroneous behaviour for uninitialized reads", L"Author1417" }, { 3u, L"Erroneous behaviour for uninitialized reads", L"Author363" }, { 4u, L"Erroneous behaviour for uninitialized reads", L"Author53" }, { 5u, L"Erroneous behaviour for uninitialized reads", L"Author158" }, } },
    { 2796u, { { 0u, L"Core \"ready\" Issues", L"Author719" }, } },
    { 2797u, { { 0u, L"Proposed resolution for CWG2692 Static and explicit objectmember functions with the same parameter-type-lists", L"Ga\u0161per A\u017Eman" }, } },
    { 2798u, { { 0u, L"Fix layout mappings all static extent default constructor", L"Christian Trott" }, } },
    { 2799u, { { 0u, L"Closed ranges may be a problem; breaking counted_iterator is not the solution", L"Tim Song" }, } },
    { 2800u, { { 0u, L"Dependency flag soup needs some fiber", L"Author1124" }, } },
    { 2802u, { { 0u, L"P1385R7", L"Guy Davidson" }, } },
    { 2803u, { { 0u, L"std::simd", L"Author1779" }, } },
    { 2805u, { { 0u, L"Slide 1", L"Author671" }, } },
    { 2806u, { { 0u, L"do expressions", L"Bruno Cardoso" }, { 1u, L"do expressions", L"Bruno Cardoso" }, { 2u, L"do expressions", L"Bruno Cardoso" }, { 3u, L"do expressions", L"Bruno Cardoso" }, } },
    { 2807u, { { 0u, L"Title9", L"Author8" }, } },
    { 2808u, { { 0u, L"Internal linkage in the global module", L"Author118" }, } },
    { 2809u, { { 0u, L"Trivial infinite loops are not Undefined Behavior", L"JF Bastien" }, { 1u, L"Trivial infinite loops are not Undefined Behavior", L"JF Bastien" }, { 2u, L"Trivial infinite loops are not Undefined Behavior", L"JF Bastien" }, { 3u, L"Trivial infinite loops are not Undefined Behavior", L"JF Bastien" }, } },
    { 2810u, { { 0u, L"is_debugger_present is_replaceable", L"Ren\u00E9 Ferdinand" }, { 1u, L"is_debugger_present is_replaceable", L"Ren\u00E9 Ferdinand" }, { 2u, L"is_debugger_present is_replaceable", L"Ren\u00E9 Ferdinand" }, { 3u, L"is_debugger_present is_replaceable", L"Ren\u00E9 Ferdinand" }, { 4u, L"is_debugger_present is_replaceable", L"Ren\u00E9 Ferdinand" }, } },
    { 2811u, { { 0u, L"Title471", L"Joshua Berne" }, { 1u, L"Title623", L"Joshua Berne" }, { 2u, L"Title141", L"Joshua Berne" }, { 3u, L"Title134", L"Joshua Berne" }, { 4u, L"Title412", L"Joshua Berne" }, { 5u, L"Title975", L"Joshua Berne" }, { 6u, L"Title248", L"Joshua Berne" }, { 7u, L"Title268", L"Joshua Berne" }, } },
    { 2812u, { { 0u, L"P2812: P1673R11 LEWG presentation", L"Mark Hoemmen" }, } },
    { 2814u, { { 0u, L"Trivial Relocatability Comparing P1144 with P2786", L"Mungo Gill" }, { 1u, L"Trivial Relocatability Comparing P1144 with P2786", L"Mungo Gill" }, } },
    { 2815u, { { 0u, L"Pointers are sometimes just bags of bits", L"Author2029" }, } },
    { 2816u, { { 0u, L"Upcoming Changes to C++", L"Author810" }, } },
    { 2817u, { { 0u, L"The idea behind the contracts MVP", L"\u00A0\u00A0" }, } },
    { 2818u, { { 0u, L"Uniform Call Syntax for explicit-object memberfunctions", L"Ga\u0161per A\u017Eman" }, } },
    { 2819u, { { 0u, L"D2819 - Add tuple protocol to complex", L"Michael Florian" }, { 1u, L"D2819 - Add tuple protocol to complex", L"Michael Florian" }, { 2u, L"D2819 - Add tuple protocol to complex", L"Michael Florian" }, } },
    { 2821u, { { 0u, L"span.at() - HackMD", L"Author1235" }, { 1u, L"span.at() - HackMD", L"Author1103" }, { 2u, L"span.at() - HackMD", L"Author1116" }, { 3u, L"span.at() - HackMD", L"Author535" }, { 4u, L"span.at() - HackMD", L"Author304" }, { 5u, L"span.at() - HackMD", L"Author2192" }, } },
    { 2822u, { { 0u, L"Providing user control of associated entities of class types", L"Author184" }, { 1u, L"Providing user control of associated entities of class types", L"Author1402" }, { 2u, L"Providing user control of associated entities of class types", L"Author274" }, } },
    { 2824u, { { 0u, L"P2824 WG21 2023-02 Issaquah Record of Discussion.docx", L"Author200" }, } },
    { 2825u, { { 0u, L"calltarget(unevaluated-call-expression)", L"Ga\u0161per A\u017Eman" }, { 1u, L"declcall(unevaluated-postfix-expression)", L"Ga\u0161per A\u017Eman" }, { 2u, L"declcall(unevaluated-postfix-expression)", L"Ga\u0161per A\u017Eman" }, { 3u, L"Overload resolution hook: declcall( unevaluated-call-expression)", L"Ga\u0161per A\u017Eman" }, { 4u, L"Overload resolution hook: declcall( unevaluated-call-expression)", L"Ga\u0161per A\u017Eman" }, { 5u, L"Overload resolution hook: declcall( unevaluated-call-expression)", L"Ga\u0161per A\u017Eman" }, } },
    { 2826u, { { 0u, L"Replacement function", L"Ga\u0161per A\u017Eman" }, { 1u, L"Replacement function", L"Ga\u0161per A\u017Eman" }, { 2u, L"Replacement function", L"Ga\u0161per A\u017Eman" }, } },
    { 2827u, { { 0u, L"Floating-point overflow and underflow in from_chars (LWG 3081) - HackMD", L"Zhihao Yuan" }, { 1u, L"Floating-point overflow and underflow in `from_chars` (LWG 3081) - HackMD", L"Zhihao Yuan" }, } },
    { 2828u, { { 0u, L"Copy elision for direct-initialization with a conversion function (Coreissue 2327)", L"Author653" }, { 1u, L"Copy elision for direct-initialization with a conversion function (Coreissue 2327)", L"Author466" }, { 2u, L"Copy elision for direct-initialization with a conversion function (Coreissue 2327)", L"Author994" }, } },
    { 2829u, { { 0u, L"Proposal of Contracts Supporting Const-On-Definition Style", L"Andrew Tomazos" }, } },
    { 2830u, { { 0u, L"Standardized Type Ordering", L"Nate Nichols" }, { 1u, L"Standardized Type Ordering", L"Nate Nichols" }, { 2u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 3u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 4u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 5u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 6u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 7u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 8u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 9u, L"Standardized Constexpr Type Ordering", L"Nate Nichols" }, { 10u, L"Constexpr Type Ordering", L"Nate Nichols" }, } },
    { 2831u, { { 0u, L"Title613", L"Author756" }, } },
    { 2833u, { { 0u, L"Freestanding Library: inout expected span", L"Ben Craig" }, { 1u, L"Freestanding Library: inout expected span", L"Ben Craig" }, { 2u, L"Freestanding Library: inout expected span", L"Ben Craig" }, } },
    { 2834u, { { 0u, L"Title1362", L"Joshua Berne" }, { 1u, L"Title1454", L"Joshua Berne" }, } },
    { 2835u, { { 0u, L"Expose std::atomic_ref 's object address", L"Gonzalo Brito" }, { 1u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, { 2u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, { 3u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, { 4u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, { 5u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, { 6u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, { 7u, L"Expose `std::atomic_ref` 's object address", L"Gonzalo Brito" }, } },
    { 2836u, { { 0u, L"`std::const_iterator` often produces an unexpected type", L"Christopher Di" }, { 1u, L"`std::basic_const_iterator` should follow its underlying type'sconvertibility", L"Christopher Di" }, } },
    { 2837u, { { 0u, L"Planning to Revisit the Lakos Rule", L"Alisdair Meredith" }, } },
    { 2838u, { { 0u, L"Unconditional contract violation handling of any kind is a serious problem", L"Author699" }, } },
    { 2839u, { { 0u, L"Nontrivial Relocation via a New *owning reference* Type", L"Brian Bi" }, } },
    { 2841u, { { 0u, L"Title1505", L"Corentin Jabot" }, { 1u, L"Title1179", L"Corentin Jabot" }, { 2u, L"Title1128", L"Corentin Jabot" }, { 3u, L"Title831", L"Corentin Jabot" }, { 4u, L"Title585", L"Corentin Jabot" }, { 5u, L"Title446", L"Corentin Jabot" }, { 6u, L"Title1552", L"Corentin Jabot" }, { 7u, L"Title1003", L"Corentin Jabot" }, } },
    { 2842u, { { 0u, L"Destructor Semantics Do Not Affect Constructible Traits", L"Alisdair Meredith" }, } },
    { 2843u, { { 0u, L"Preprocessing is never undefined", L"Alisdair Meredith" }, { 1u, L"Preprocessing is never undefined", L"Alisdair Meredith" }, { 2u, L"Preprocessing is never undefined", L"Alisdair Meredith" }, } },
    { 2845u, { { 0u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 1u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 2u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 3u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 4u, L"D2845R4: Formatting of std::filesystem::path", L"Victor Zverovich" }, { 5u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 6u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 7u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, { 8u, L"Formatting of std::filesystem::path", L"Victor Zverovich" }, } },
    { 2846u, { { 0u, L"Title237", L"Corentin Jabot" }, { 1u, L"Title312", L"Corentin Jabot" }, { 2u, L"Title1345", L"Corentin Jabot" }, { 3u, L"Title1376", L"Corentin Jabot" }, { 4u, L"Title365", L"Corentin Jabot" }, { 5u, L"Title981", L"Corentin Jabot" }, { 6u, L"Title5", L"Corentin Jabot" }, } },
    { 2848u, { { 0u, L"std::is_uniqued", L"Arthur O'Dwyer" }, { 1u, L"std::is_uniqued", L"Arthur O'Dwyer" }, } },
    { 2849u, { { 0u, L"async-object - aka async-RAII", L"Kirk Shoop" }, } },
    { 2850u, { { 0u, L"Title104", L"2.6" }, } },
    { 2852u, { { 0u, L"Contract violation handling semantics for the contracts MVP", L"Tom Honermann" }, } },
    { 2853u, { { 0u, L"P2853R0 Proposal of std::contract_violation", L"Andrew Tomazos" }, } },
    { 2855u, { { 0u, L"Member customization points for Senders and Receivers", L"Author884" }, { 1u, L"Member customization points for Senders and Receivers", L"Author1387" }, } },
    { 2857u, { { 0u, L"Improve std::hive::reshape", L"Matthew Bentley" }, } },
    { 2858u, { { 0u, L"Noexcept vs contract violations", L"\u00A0\u00A0" }, } },
    { 2861u, { { 0u, L"Title1370", L"Author1766" }, } },
    { 2862u, { { 0u, L"text_encoding::name() should never return null values", L"Daniel Kr\u00FCgler" }, { 1u, L"text_encoding::name() should never return null values", L"Daniel Kr\u00FCgler" }, } },
    { 2863u, { { 0u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 1u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 2u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 3u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 4u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 5u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 6u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 7u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 8u, L"Review Annex D for C++26", L"Alisdair Meredith" }, { 9u, L"Review Annex D for C++26", L"Alisdair Meredith" }, } },
    { 2864u, { { 0u, L"Remove Deprecated Arithmetic Conversion on Enumerations From C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Arithmetic Conversion on Enumerations From C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Arithmetic Conversion on Enumerations From C++26", L"Alisdair Meredith" }, } },
    { 2865u, { { 0u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, { 3u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, { 4u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, { 5u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, { 6u, L"Remove Deprecated Array Comparisons from C++26", L"Alisdair Meredith" }, } },
    { 2866u, { { 0u, L"Remove Deprecated Volatile Features From C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Volatile Features From C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Volatile Features from C++26", L"Alisdair Meredith" }, { 3u, L"Remove Deprecated Volatile Features from C++26", L"Alisdair Meredith" }, { 4u, L"Remove Deprecated Volatile Features from C++26", L"Alisdair Meredith" }, { 5u, L"Remove Deprecated Volatile Features from C++26", L"Alisdair Meredith" }, } },
    { 2867u, { { 0u, L"Remove Deprecated strstreams From C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated strstreams From C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated strstreams From C++26", L"Alisdair Meredith" }, } },
    { 2868u, { { 0u, L"Remove Deprecated Typedef From C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Typedef From C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Typedef From C++26", L"Alisdair Meredith" }, { 3u, L"Remove Deprecated Typedef From C++26", L"Alisdair Meredith" }, } },
    { 2869u, { { 0u, L"Remove Deprecated Atomic Access APIs From C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Atomic Access APIs From C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Atomic Access APIs From C++26", L"Alisdair Meredith" }, { 3u, L"Remove Deprecated Atomic Access APIs from C++26", L"Alisdair Meredith" }, { 4u, L"Remove Deprecated Atomic Access APIs from C++26", L"Alisdair Meredith" }, } },
    { 2870u, { { 0u, L"Remove From C++26", L"Alisdair Meredith" }, { 1u, L"Remove From C++26", L"Alisdair Meredith" }, { 2u, L"Remove From C++26", L"Alisdair Meredith" }, { 3u, L"Remove From C++26", L"Alisdair Meredith" }, } },
    { 2871u, { { 0u, L"Remove Deprecated Unicode Conversion Facets From C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Unicode Conversion Facets From C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Unicode Conversion Facets from C++26", L"Alisdair Meredith" }, { 3u, L"Remove Deprecated Unicode Conversion Facets from C++26", L"Alisdair Meredith" }, } },
    { 2872u, { { 0u, L"Remove From C++26", L"Alisdair Meredith" }, { 1u, L"Remove From C++26", L"Alisdair Meredith" }, { 2u, L"Remove From C++26", L"Alisdair Meredith" }, { 3u, L"Remove From C++26", L"Alisdair Meredith" }, } },
    { 2873u, { { 0u, L"Remove Deprecated Locale Category Facets For Unicode from C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Locale Category Facets For Unicode from C++26", L"Alisdair Meredith" }, { 2u, L"Remove Deprecated Locale-Category Facets for Unicode from C++26", L"Alisdair Meredith" }, { 3u, L"Remove Deprecated Locale-Category Facets for Unicode from C++26", L"Alisdair Meredith" }, } },
    { 2874u, { { 0u, L"Mandating Annex D", L"Alisdair Meredith" }, { 1u, L"Mandating Annex D", L"Alisdair Meredith" }, { 2u, L"Mandating Annex D", L"Alisdair Meredith" }, } },
    { 2875u, { { 0u, L"Undeprecate For C++26", L"Alisdair Meredith" }, { 1u, L"Undeprecate `polymorphic_allocator::destroy` For C++26", L"Alisdair Meredith" }, { 2u, L"Undeprecate for C++26", L"Alisdair Meredith" }, { 3u, L"Undeprecate for C++26", L"Alisdair Meredith" }, { 4u, L"Undeprecate for C++26", L"Alisdair Meredith" }, } },
    { 2876u, { { 0u, L"D2876R0: Proposal to extend <code>std::simd</code> with more constructors and accessors", L"Daniel Towner" }, { 1u, L"Proposal to extend <code>std::simd</code> with more constructors and accessors", L"Daniel Towner" }, { 2u, L"Proposal to extend <code>std::simd</code> with more constructors and accessors", L"Daniel Towner" }, } },
    { 2877u, { { 0u, L"Title1610", L"Joshua Berne" }, } },
    { 2878u, { { 0u, L"Reference checking - HackMD", L"Author582" }, { 1u, L"Reference checking - HackMD", L"Author1180" }, { 2u, L"Reference checking - HackMD", L"Author1212" }, { 3u, L"Reference checking - HackMD", L"Author637" }, { 4u, L"Reference checking - HackMD", L"Author1016" }, { 5u, L"Reference checking - HackMD", L"Author814" }, { 6u, L"Reference checking - HackMD", L"Author2034" }, } },
    { 2879u, { { 0u, L"P2879R0 Proposal of std::dump", L"Andrew Tomazos" }, } },
    { 2880u, { { 0u, L"Algorithm-like vs std::simd based RNG API", L"Ilya Burylov" }, } },
    { 2881u, { { 0u, L"Generator-based for loop", L"Jonathan M\u00FCller" }, } },
    { 2882u, { { 0u, L"An Event Model for C++ Executors", L"Author1033" }, } },
    { 2883u, { { 0u, L"Should Be A Keyword In C++26", L"Alisdair Meredith" }, { 1u, L"Should Be a Keyword in C++26", L"Alisdair Meredith" }, } },
    { 2884u, { { 0u, L"Should Be A Keyword In C++26", L"Alisdair Meredith" }, } },
    { 2885u, { { 0u, L"Requirements for a Contracts syntax", L"Author2025" }, { 1u, L"Requirements for a Contracts syntax", L"Author1673" }, { 2u, L"Requirements for a Contracts syntax", L"Author60" }, { 3u, L"Requirements for a Contracts syntax", L"Author1938" }, } },
    { 2886u, { { 0u, L"p2886r0: concurrency ts2 editor's report", L"Michael Wong" }, } },
    { 2887u, { { 0u, L"P2887r0.docx", L"Michael Wong" }, } },
    { 2888u, { { 0u, L"P2888r0.docx", L"Michael Wong" }, } },
    { 2889u, { { 0u, L"Distributed Arrays", L"Lauri Vasama" }, } },
    { 2890u, { { 0u, L"Title995", L"Author1284" }, { 1u, L"Title540", L"Author667" }, { 2u, L"Title260", L"Author308" }, } },
    { 2891u, { { 0u, L"SG16: Unicode meeting summaries 2023-01-11 through 2023-05-10", L"Tom Honermann" }, } },
    { 2892u, { { 0u, L"Types Should be Regular", L"Joe Jevnik" }, } },
    { 2893u, { { 0u, L"Variadic Friends", L"Jody Hagins" }, { 1u, L"Untitled", L"Author1051" }, { 2u, L"Variadic friends", L"Jody Hagins" }, { 3u, L"Variadic friends", L"Jody Hagins" }, } },
    { 2894u, { { 0u, L"Title44", L"Author46" }, { 1u, L"Title486", L"Author595" }, { 2u, L"Title1015", L"Author1310" }, } },
    { 2895u, { { 0u, L"noncopyable and nonmovable utility classes", L"Sebastian Theophil" }, } },
    { 2896u, { { 0u, L"Outstanding design questions for the Contracts MVP", L"Author2099" }, } },
    { 2897u, { { 0u, L"aligned_accessor: An mdspan accessor expressing pointer overalignment", L"Mark Hoemmen" }, { 1u, L"aligned_accessor: An mdspan accessor expressing pointer overalignment", L"Mark Hoemmen" }, { 2u, L"aligned_accessor: An mdspan accessor expressing pointer overalignment", L"Mark Hoemmen" }, { 3u, L"aligned_accessor: An mdspan accessor expressing pointer overalignment", L"Mark Hoemmen" }, { 4u, L"aligned_accessor: An mdspan accessor expressing pointer overalignment", L"Mark Hoemmen" }, { 5u, L"aligned_accessor: An mdspan accessor expressing pointer overalignment", L"Mark Hoemmen" }, { 6u, L"aligned_accessor: An mdspan accessor expressing pointer over-alignment", L"Mark Hoemmen" }, { 7u, L"aligned_accessor: An mdspan accessor expressing pointer over-alignment", L"Mark Hoemmen" }, } },
    { 2898u, { { 0u, L"Importable Headers are Not Universally Implementable", L"Daniel Ruoso" }, { 1u, L"Build System Requirements for Importable Headers", L"Daniel Ruoso" }, } },
    { 2899u, { { 0u, L"Title644", L"Joshua Berne" }, { 1u, L"Title696", L"Joshua Berne" }, } },
    { 2900u, { { 0u, L"Title1415", L"Joshua Berne" }, { 1u, L"Title1674", L"Joshua Berne" }, { 2u, L"Title390", L"Joshua Berne" }, { 3u, L"Title1389", L"Joshua Berne" }, { 4u, L"Title474", L"Joshua Berne" }, { 5u, L"Title911", L"Joshua Berne" }, { 6u, L"Title1147", L"Joshua Berne" }, { 7u, L"Title1028", L"Joshua Berne" }, { 8u, L"Title1253", L"Joshua Berne" }, { 9u, L"Title1535", L"Joshua Berne" }, { 10u, L"Title1302", L"Joshua Berne" }, { 11u, L"Title1406", L"Joshua Berne" }, { 12u, L"Title130", L"Joshua Berne" }, { 13u, L"Title357", L"Joshua Berne" }, { 14u, L"Title1549", L"Joshua Berne" }, } },
    { 2901u, { { 0u, L"Extending Linear Algebra Support to Batched Operations", L"Mark Hoemmen" }, } },
    { 2902u, { { 0u, L"Title1285", L"Author1653" }, { 1u, L"Title720", L"Author891" }, } },
    { 2904u, { { 0u, L"Title731", L"Anoop Rana" }, } },
    { 2905u, { { 0u, L"Runtime format strings", L"Victor Zverovich" }, { 1u, L"Runtime format strings", L"Victor Zverovich" }, { 2u, L"Runtime format strings", L"Victor Zverovich" }, } },
    { 2906u, { { 0u, L"Structured bindings for <code>std::extents</code>", L"Bernhard Manfred" }, } },
    { 2909u, { { 0u, L"Dude, wheres my char?", L"Victor Zverovich" }, { 1u, L"Fix formatting of code units as integers<br>(Dude, wheres my char?)", L"Victor Zverovich" }, { 2u, L"Fix formatting of code units as integers<br>(Dude, wheres my char?)", L"Victor Zverovich" }, { 3u, L"Fix formatting of code units as integers<br>(Dude, wheres my char?)", L"Victor Zverovich" }, { 4u, L"Fix formatting of code units as integers<br>(Dude, wheres my char?)", L"Victor Zverovich" }, } },
    { 2910u, { { 0u, L"C++ Standard Library Issues to be moved in Varna 2023", L"Author532" }, } },
    { 2911u, { { 0u, L"Title661", L"Adam Lach" }, { 1u, L"Title1007", L"Author1303" }, } },
    { 2912u, { { 0u, L"p2912r0: Concurrent queues and sender/receivers", L"Author1242" }, } },
    { 2915u, { { 0u, L"Proposed resolution to CWG1223", L"Author1660" }, } },
    { 2917u, { { 0u, L"An in-line defaulted destructor should keep the copy- and move-operations", L"Author2096" }, { 1u, L"An in-line defaulted destructor should keep the copy- and move-operations", L"Author836" }, } },
    { 2918u, { { 0u, L"Runtime format strings II", L"Victor Zverovich" }, { 1u, L"Runtime format strings II", L"Victor Zverovich" }, { 2u, L"Runtime format strings II", L"Victor Zverovich" }, } },
    { 2920u, { { 0u, L"2023_06__iso_cpp_varna__library_evolution_leadership_understanding_of_narrow_noexcept_policy_history__r4", L"Author543" }, } },
    { 2921u, { { 0u, L"p2921r0: Exploring std::expected based API alternatives for buffer_queue", L"Author1774" }, } },
    { 2922u, { { 0u, L"Core \"ready\" Issues", L"Author505" }, } },
    { 2925u, { { 0u, L"inplace_vector D0843R7", L"Author1447" }, } },
    { 2926u, { { 0u, L"Title477", L"Author586" }, } },
    { 2927u, { { 0u, L"Inspecting exception_ptr", L"Author36" }, { 1u, L"Inspecting exception_ptr", L"Author1584" }, { 2u, L"Inspecting exception_ptr", L"Author665" }, } },
    { 2929u, { { 0u, L"Proposal to add simd_invoke to std::simd", L"Daniel Towner" }, } },
    { 2930u, { { 0u, L"Formatter specializations for the standard library", L"Mark de" }, } },
    { 2931u, { { 0u, L"P2931 WG21 2023-06 Varna Record of Discussion.docx", L"Author460" }, } },
    { 2932u, { { 0u, L"Title920", L"Joshua Berne" }, { 1u, L"Title674", L"Joshua Berne" }, { 2u, L"Title544", L"Joshua Berne" }, { 3u, L"Title589", L"Joshua Berne" }, } },
    { 2933u, { { 0u, L"Proposal to allow simd overloads for standard C++ <bit> header", L"Daniel Towner" }, { 1u, L"Extend <code><bit></code> header function with overloads for <code>std::simd</code>", L"Daniel Towner" }, { 2u, L"Extend <code><bit></code> header function with overloads for <code>std::simd</code>", L"Daniel Towner" }, { 3u, L"Extend <code><bit></code> header function with overloads for <code>std::simd</code>", L"Daniel Towner" }, { 4u, L"Extend <bit> header function with overloads for std::simd", L"Daniel Towner" }, } },
    { 2935u, { { 0u, L"Title788", L"Joshua Berne" }, { 1u, L"Title1475", L"Joshua Berne" }, { 2u, L"Title1145", L"Joshua Berne" }, { 3u, L"Title1081", L"Joshua Berne" }, { 4u, L"Title1278", L"Joshua Berne" }, } },
    { 2937u, { { 0u, L"Freestanding: Remove <code>strtok</code>", L"\u2003\u2003Ben Craig" }, } },
    { 2940u, { { 0u, L"switch for Pattern Matching", L"Mihail Naydenov" }, } },
    { 2941u, { { 0u, L"Identifiers for Pattern Matching", L"Mihail Naydenov" }, } },
    { 2944u, { { 0u, L"Comparisons for reference_wrapper", L"Barry Revzin" }, { 1u, L"Comparisons for reference_wrapper", L"Barry Revzin" }, { 2u, L"Comparisons for reference_wrapper", L"Barry Revzin" }, { 3u, L"Comparisons for reference_wrapper", L"Barry Revzin" }, } },
    { 2945u, { { 0u, L"Additional format specifiers for time_point", L"Barry Revzin" }, { 1u, L"Additional format specifiers for time_point", L"Barry Revzin" }, } },
    { 2946u, { { 0u, L"A Flexible Solution to the Problems of noexcept", L"Author912" }, { 1u, L"A Flexible Solution to the Problems of noexcept", L"Author1928" }, } },
    { 2947u, { { 0u, L"D2947R0", L"Andrei Zissu" }, } },
    { 2949u, { { 0u, L"Microsoft Word - PxxxxR0.docx", L"John Lakos" }, } },
    { 2950u, { { 0u, L"P2836R1 Slides", L"Christopher Di" }, } },
    { 2951u, { { 0u, L"Shadowing is good for safety - HackMD", L"Author138" }, { 1u, L"Shadowing is good for safety - HackMD", L"Author556" }, { 2u, L"Shadowing is good for safety - HackMD", L"Author2152" }, { 3u, L"Shadowing is good for safety - HackMD", L"Author1769" }, } },
    { 2952u, { { 0u, L"auto& operator=(X&&) = default", L"Arthur O'Dwyer" }, { 1u, L"auto& operator=(X&&) = default", L"Arthur O'Dwyer" }, { 2u, L"auto& operator=(X&&) = default", L"Arthur O'Dwyer" }, } },
    { 2953u, { { 0u, L"Forbid defaulting operator=(X&&) &&", L"Arthur O'Dwyer" }, { 1u, L"Forbid defaulting operator=(X&&) &&", L"Arthur O'Dwyer" }, } },
    { 2954u, { { 0u, L"Contracts and virtual functions for the Contracts MVP", L"Author1451" }, } },
    { 2955u, { { 0u, L"Safer Range Access - HackMD", L"Author998" }, { 1u, L"Safer Range Access - HackMD", L"Author2108" }, } },
    { 2956u, { { 0u, L"Allow <code>std::simd</code> overloads for saturating operations", L"Daniel Towner" }, } },
    { 2957u, { { 0u, L"Contracts and coroutines", L"\u00A0\u00A0" }, { 1u, L"Contracts and coroutines", L"\u00A0\u00A0" }, { 2u, L"Contracts and coroutines", L"\u00A0\u00A0" }, } },
    { 2958u, { { 0u, L"typeof and typeof_unqual for C++", L"JeanHeyd Meneide" }, } },
    { 2959u, { { 0u, L"Relocation Within Containers", L"Alisdair Meredith" }, } },
    { 2960u, { { 0u, L"P2960R0 Concurrency TS2 Editors report for N4953", L"Michael Wong" }, } },
    { 2961u, { { 0u, L"Title641", L"Author791" }, { 1u, L"Title1441", L"Author1859" }, { 2u, L"Title552", L"Author687" }, } },
    { 2962u, { { 0u, L"Communicating the Baseline Compile Command for C++ Modules support", L"Daniel Ruoso" }, } },
    { 2963u, { { 0u, L"Title250", L"Corentin Jabot" }, { 1u, L"Title475", L"Corentin Jabot" }, { 2u, L"Title1664", L"Corentin Jabot" }, { 3u, L"Title979", L"Corentin Jabot" }, } },
    { 2964u, { { 0u, L"Adding support for user-defined element types in std::simd", L"Daniel Towner" }, { 1u, L"Adding support for user-defined element types (UDT) in <code>std::simd</code>", L"Daniel Towner" }, } },
    { 2966u, { { 0u, L"Title960", L"Patrice Roy" }, { 1u, L"Title940", L"Patrice Roy" }, } },
    { 2967u, { { 0u, L"Relocation Has A Library Interface", L"Alisdair Meredith" }, { 1u, L"Relocation Has A Library Interface", L"Alisdair Meredith" }, } },
    { 2968u, { { 0u, L"Make std::ignore a first-class object", L"Peter Sommerlad" }, { 1u, L"Make std::ignore a first-class object", L"Peter Sommerlad" }, { 2u, L"Make std::ignore a first-class object", L"Peter Sommerlad" }, } },
    { 2969u, { { 0u, L"Title1316", L"Author1698" }, } },
    { 2971u, { { 0u, L"Implication for C++", L"Author2165" }, { 1u, L"Implication for C++", L"Author729" }, { 2u, L"Implication for C++", L"Author1067" }, { 3u, L"Implication for C++", L"Author215" }, } },
    { 2972u, { { 0u, L"2023-09 Library Evolution Polls", L"Inbal Levi" }, } },
    { 2973u, { { 0u, L"Erroneous behaviour for missing return from assignment", L"Author2198" }, } },
    { 2976u, { { 0u, L"Freestanding Library: algorithm, numeric, and random", L"Ben Craig" }, { 1u, L"Freestanding Library: algorithm, numeric, and random", L"Ben Craig" }, } },
    { 2977u, { { 0u, L"Module configuration files", L"Author1972" }, { 1u, L"Build database files", L"Author223" }, { 2u, L"Build database files", L"Author620" }, } },
    { 2978u, { { 0u, L"A New Approach For Compiling C++", L"HassanSajjad" }, } },
    { 2979u, { { 0u, L"The Need for Design Policies in WG21", L"Alisdair Meredith" }, } },
    { 2980u, { { 0u, L"A motivation, scope, and plan for a physical quantities andunits library", L"Mateusz Pusz" }, { 1u, L"A motivation, scope, and plan for a quantities and unitslibrary", L"Mateusz Pusz" }, } },
    { 2981u, { { 0u, L"Improving our safety with a physical quantities and unitslibrary", L"Mateusz Pusz" }, { 1u, L"Improving our safety with a physical quantities and unitslibrary", L"Mateusz Pusz" }, } },
    { 2982u, { { 0u, L"`std::quantity` as a numeric type", L"Mateusz Pusz" }, { 1u, L"`std::quantity` as a numeric type", L"Mateusz Pusz" }, } },
    { 2984u, { { 0u, L"Reconsider Redeclaring static constexpr Data Members", L"Alisdair Meredith" }, { 1u, L"Reconsider Redeclaring static constexpr Data Members", L"Alisdair Meredith" }, } },
    { 2985u, { { 0u, L"A type trait for detecting virtual base classes", L"Giuseppe D'Angelo" }, } },
    { 2986u, { { 0u, L"Generic Function Pointer", L"Lauri Vasama" }, } },
    { 2988u, { { 0u, L"std::optional<T&>", L"Steve Downey" }, { 1u, L"Title1561", L"Author2020" }, { 2u, L"Title663", L"Author839" }, { 3u, L"Title777", L"Author958" }, { 4u, L"Title577", L"Author715" }, { 5u, L"Title269", L"Author319" }, { 6u, L"Title922", L"Author1162" }, { 7u, L"Title1169", L"Author1505" }, { 8u, L"Title397", L"Author474" }, { 9u, L"Title879", L"Author1092" }, { 10u, L"Title219", L"Author261" }, { 11u, L"Title31", L"Author35" }, { 12u, L"Title634", L"Author778" }, } },
    { 2989u, { { 0u, L"Title596", L"Corentin Jabot" }, { 1u, L"Title1323", L"Corentin Jabot" }, { 2u, L"Title34", L"Corentin Jabot" }, } },
    { 2990u, { { 0u, L"C++ Modules Roadmap", L"Daniel Ruoso" }, } },
    { 2991u, { { 0u, L"Stop Forcing `std::move` to Pessimize", L"Brian Bi" }, } },
    { 2992u, { { 0u, L"Attribute [[discard]] and attributes on expressions", L"Giuseppe D'Angelo" }, { 1u, L"Attribute [[discard(\"reason\")]]", L"Giuseppe D'Angelo" }, } },
    { 2993u, { { 0u, L"Constrained Numbers", L"Luke Valenty" }, } },
    { 2994u, { { 0u, L"On the Naming of Packs", L"Barry Revzin" }, { 1u, L"On the Naming of Packs", L"Barry Revzin" }, } },
    { 2995u, { { 0u, L"SG16: Unicode meeting summaries 2023-05-24 through 2023-09-27", L"Tom Honermann" }, } },
    { 2996u, { { 0u, L"Reflection for C++26", L"Wyatt Childers" }, { 1u, L"Reflection for C++26", L"Wyatt Childers" }, { 2u, L"Reflection for C++26", L"Wyatt Childers" }, { 3u, L"Reflection for C++26", L"Wyatt Childers" }, { 4u, L"Reflection for C++26", L"Wyatt Childers" }, { 5u, L"Reflection for C++26", L"Wyatt Childers" }, { 6u, L"Reflection for C++26", L"Wyatt Childers" }, { 7u, L"Reflection for C++26", L"Wyatt Childers" }, { 8u, L"Reflection for C++26", L"Wyatt Childers" }, { 9u, L"Reflection for C++26", L"Wyatt Childers" }, { 10u, L"Reflection for C++26", L"Wyatt Childers" }, { 11u, L"Reflection for C++26", L"Wyatt Childers" }, } },
    { 2997u, { { 0u, L"Removing the common reference requirement from the indirectly invocable concepts", L"Barry Revzin" }, { 1u, L"Removing the common reference requirement from the indirectly invocable concepts", L"Barry Revzin" }, } },
    { 2998u, { { 0u, L"Deducing function parameter types using alias templateCTAD", L"James Touton" }, } },
    { 2999u, { { 0u, L"Sender Algorithm Customization", L"Eric Niebler" }, { 1u, L"Sender Algorithm Customization", L"Eric Niebler" }, { 2u, L"Sender Algorithm Customization", L"Eric Niebler" }, { 3u, L"Sender Algorithm Customization", L"Eric Niebler" }, } },
    { 3001u, { { 0u, L"std::hive and containers like it are not a good fit for thestandard library", L"Jonathan M\u00FCller" }, } },
    { 3002u, { { 0u, L"Guidelines for Allocators in New Library Classes", L"Author1231" }, { 1u, L"Policies for Using Allocators in Library Classes", L"Pablo Halpern" }, } },
    { 3003u, { { 0u, L"P3003R0 The design of a library of number concepts", L"Author1987" }, } },
    { 3004u, { { 0u, L"Principled Design for WG21", L"John Lakos" }, } },
    { 3005u, { { 0u, L"Memorializing Principled-Design Policies for WG21", L"John Lakos" }, } },
    { 3006u, { { 0u, L"Launder less", L"Author799" }, { 1u, L"Launder less", L"Author1680" }, } },
    { 3007u, { { 0u, L"Title987", L"Author1274" }, } },
    { 3008u, { { 0u, L"Atomic floating-point min/max semantics", L"Author1781" }, { 1u, L"Atomic floating-point min/max semantics", L"Author1191" }, { 2u, L"Atomic floating-point min/max semantics", L"Author555" }, { 3u, L"Atomic floating-point min/max", L"Author233" }, { 4u, L"Atomic floating-point min/max", L"Author851" }, } },
    { 3009u, { { 0u, L"Injected class name in the base specifier list", L"Joe Jevnik" }, } },
    { 3010u, { { 0u, L"P3010R0 - Using Reflection to Replace a Metalanguage for Generating JS Bindings", L"Dan Katz" }, } },
    { 3011u, { { 0u, L"Title1385", L"Matthew Bentley" }, } },
    { 3012u, { { 0u, L"Title1530", L"Matthew Bentley" }, } },
    { 3014u, { { 0u, L"Customizing std::expected's exception", L"Jonathan M\u00FCller" }, } },
    { 3015u, { { 0u, L"Rebuttal to Additional format specifiers for time_point", L"Howard E" }, } },
    { 3016u, { { 0u, L"Resolve inconsistencies in begin/end for <code>valarray</code> and braced initializer lists", L"Arthur O'Dwyer" }, { 1u, L"Resolve inconsistencies in begin/end for <code>valarray</code> and braced initializer lists", L"Arthur O'Dwyer" }, { 2u, L"Resolve inconsistencies in begin/end for valarray and braced initializer lists", L"Arthur O'Dwyer" }, { 3u, L"Resolve inconsistencies in begin/end for valarray and braced initializer lists", L"Arthur O'Dwyer" }, { 4u, L"Resolve inconsistencies in begin/end for valarray and braced initializer lists", L"Arthur O'Dwyer" }, { 5u, L"Resolve inconsistencies in begin/end for valarray and braced initializer lists", L"Arthur O'Dwyer" }, { 6u, L"Resolve inconsistencies in begin/end for valarray and braced initializer lists", L"Arthur O'Dwyer" }, } },
    { 3018u, { { 0u, L"Title945", L"Andreas Weis" }, } },
    { 3019u, { { 0u, L"Title1567", L"Author2026" }, { 1u, L"Title290", L"Author347" }, { 2u, L"Title311", L"Author366" }, { 3u, L"Title601", L"Author743" }, { 4u, L"Title360", L"Author420" }, { 5u, L"Title557", L"Author691" }, { 6u, L"Title102", L"Author115" }, { 7u, L"Title802", L"Author991" }, { 8u, L"Title1432", L"Author1847" }, { 9u, L"Title1617", L"Author2085" }, { 10u, L"Title216", L"Author259" }, { 11u, L"Title1534", L"Author1973" }, { 12u, L"Title4", L"Author6" }, { 13u, L"Title1139", L"Author1461" }, { 14u, L"Title1265", L"Author1636" }, } },
    { 3020u, { { 0u, L"2023-09 Library Evolution Poll Outcomes", L"Inbal Levi" }, } },
    { 3021u, { { 0u, L"Title690", L"Herb Sutter" }, } },
    { 3022u, { { 0u, L"A Boring Thread Attributes Interface - HackMD", L"Author495" }, { 1u, L"A Boring Thread Attributes Interface", L"Darius Neau" }, } },
    { 3023u, { { 0u, L"C++ Should Be C++ - HackMD", L"Author24" }, { 1u, L"C++ Should Be C++ - HackMD", L"Author2112" }, } },
    { 3024u, { { 0u, L"Title809", L"Author1009" }, } },
    { 3025u, { { 0u, L"P3025R0.docx", L"Michael Wong" }, } },
    { 3026u, { { 0u, L"P3026R0.docx", L"Michael Wong" }, } },
    { 3027u, { { 0u, L"UFCS is a breaking change, of the absolutely worst kind", L"Author349" }, } },
    { 3028u, { { 0u, L"Title1075", L"Joshua Berne" }, } },
    { 3029u, { { 0u, L"Better <code>mdspan</code>'s CTAD", L"Author189" }, { 1u, L"Better <code>mdspan</code>'s CTAD", L"Author1208" }, } },
    { 3031u, { { 0u, L"Resolve CWG2561, conversion function for lambda with explicit object parameter", L"Arthur O'Dwyer" }, } },
    { 3032u, { { 0u, L"Less transient constexpr allocation", L"Barry Revzin" }, { 1u, L"Less transient constexpr allocation", L"Barry Revzin" }, { 2u, L"Less transient constexpr allocation (and more constevalrelaxation)", L"Barry Revzin" }, } },
    { 3033u, { { 0u, L"Should we import function bodies to get the better optimizations?", L"Chuanqi Xu" }, } },
    { 3034u, { { 0u, L"Module Declarations Shouldnt be Macros", L"Michael Spencer" }, { 1u, L"Module Declarations Shouldnt be Macros", L"Michael Spencer" }, } },
    { 3037u, { { 0u, L"Title427", L"Paul Keir" }, { 1u, L"Title739", L"Paul Keir" }, { 2u, L"Title62", L"Paul Keir" }, { 3u, L"Title202", L"Paul Keir" }, { 4u, L"Title1594", L"Paul Keir" }, { 5u, L"Title15", L"Paul Keir" }, } },
    { 3038u, { { 0u, L"Title1407", L"Author1820" }, } },
    { 3039u, { { 0u, L"Title1088", L"David Stone" }, } },
    { 3040u, { { 0u, L"C++ Standard Library Issues to be moved in Kona, Nov. 2023", L"Author391" }, } },
    { 3041u, { { 0u, L"Title1684", L"gdr@microsoft.com" }, } },
    { 3042u, { { 0u, L"Title35", L"Author39" }, } },
    { 3043u, { { 0u, L"Using variable template template without meta programming", L"Author2209" }, } },
    { 3044u, { { 0u, L"P3044R0", L"Michael Florian" }, { 1u, L"P3044R1", L"Michael Florian" }, } },
    { 3045u, { { 0u, L"Quantities and units library", L"Mateusz Pusz" }, { 1u, L"Quantities and units library", L"Mateusz Pusz" }, { 2u, L"Quantities and units library", L"Mateusz Pusz" }, { 3u, L"Quantities and units library", L"Mateusz Pusz" }, { 4u, L"Quantities and units library", L"Mateusz Pusz" }, { 5u, L"Quantities and units library", L"Mateusz Pusz" }, } },
    { 3046u, { { 0u, L"Core \"ready\" Issues", L"Author361" }, } },
    { 3047u, { { 0u, L"Remove Namespace relops From C++26", L"Alisdair Meredith" }, } },
    { 3049u, { { 0u, L"P3049R0", L"Michael Florian" }, { 1u, L"P3049R1", L"Michael Florian" }, } },
    { 3050u, { { 0u, L"Optimize linalg::conjugated for noncomplex value types", L"Mark Hoemmen" }, { 1u, L"Fix C++26 by optimizing linalg::conjugated for noncomplex value types", L"Mark Hoemmen" }, { 2u, L"Fix C++26 by optimizing linalg::conjugated for noncomplex value types", L"Mark Hoemmen" }, { 3u, L"Fix C++26 by optimizing linalg::conjugated for noncomplex value types", L"Mark Hoemmen" }, } },
    { 3051u, { { 0u, L"Structured Response Files", L"Ren\u00E9 Ferdinand" }, { 1u, L"Structured Response Files", L"Ren\u00E9 Ferdinand" }, { 2u, L"Structured Response Files", L"Ren\u00E9 Ferdinand" }, { 3u, L"WITHDRAWN: Structured Response Files", L"Ren\u00E9 Ferdinand" }, } },
    { 3052u, { { 0u, L"<code>view_interface::at</code>", L"Author1748" }, { 1u, L"<code>view_interface::at</code>", L"Author1472" }, } },
    { 3053u, { { 0u, L"2023-12 Library Evolution Polls", L"Inbal Levi" }, } },
    { 3054u, { { 0u, L"2023-12 Library Evolution Poll Outcomes", L"Inbal Levi" }, } },
    { 3055u, { { 0u, L"Relax wording to permit relocation optimizations in the STL", L"Arthur O'Dwyer" }, { 1u, L"Relax wording to permit relocation optimizations in the STL", L"Arthur O'Dwyer" }, } },
    { 3056u, { { 0u, L"what ostream exception - HackMD", L"Author1891" }, } },
    { 3057u, { { 0u, L"Two finer-grained compilation model for named modules", L"Chuanqi Xu" }, } },
    { 3059u, { { 0u, L"Making user-defined constructors of view iterators/sentinels private", L"Author2159" }, { 1u, L"Making user-defined constructors of view iterators/sentinels private", L"Author1716" }, } },
    { 3060u, { { 0u, L"std::ranges::upto(n) - HackMD", L"Weile Wei" }, { 1u, L"Add std::views::upto(n) - HackMD", L"Weile Wei" }, { 2u, L"Add std::views::indices(n) - HackMD", L"Weile Wei" }, } },
    { 3061u, { { 0u, L"P3061 WG21 2023-11 Kona Record of Discussion.docx", L"Author1682" }, } },
    { 3062u, { { 0u, L"Title1514", L"Author1952" }, } },
    { 3064u, { { 0u, L"Title273", L"Author323" }, { 1u, L"Title1584", L"Author2045" }, { 2u, L"Title685", L"Author860" }, } },
    { 3066u, { { 0u, L"Title910", L"Author1143" }, } },
    { 3067u, { { 0u, L"Named permutation functions for `std::simd`", L"Daniel Towner" }, } },
    { 3068u, { { 0u, L"constexpr-throw", L"Hana Dusikova" }, { 1u, L"constexpr-throw R2", L"Hana Dusikova" }, { 2u, L"Allowing exception throwing in constant-evaluation", L"Hana Dusikova" }, { 3u, L"Allowing exception throwing in constant-evaluation", L"Hana Dusikova" }, { 4u, L"Allowing exception throwing in constant-evaluation", L"Hana Dusikova" }, { 5u, L"D3068R5: Allowing exception throwing in constant-evaluation", L"Hana Dusikova" }, { 6u, L"Allowing exception throwing in constant-evaluation", L"Hana Dusikova" }, } },
    { 3070u, { { 0u, L"Formatting enums", L"Victor Zverovich" }, { 1u, L"Formatting enums", L"Victor Zverovich" }, { 2u, L"Formatting enums", L"Victor Zverovich" }, { 3u, L"Formatting enums", L"Victor Zverovich" }, } },
    { 3071u, { { 0u, L"Protection against modifications in contracts", L"Author1348" }, { 1u, L"Protection against modifications in contracts", L"Author1550" }, } },
    { 3072u, { { 0u, L"Hassle-free thread attributes - HackMD", L"Zhihao Yuan" }, { 1u, L"Hassle-free thread attributes - HackMD", L"Zhihao Yuan" }, { 2u, L"Hassle-free thread attributes - HackMD", L"Zhihao Yuan" }, } },
    { 3073u, { { 0u, L"Title997", L"Author1286" }, } },
    { 3074u, { { 0u, L"constexpr union lifetime", L"Barry Revzin" }, { 1u, L"std::uninitialized<T>", L"Barry Revzin" }, { 2u, L"std::uninitialized<T>", L"Barry Revzin" }, { 3u, L"trivial union (was std::uninitialized<T>)", L"Barry Revzin" }, { 4u, L"trivial unions (was std::uninitialized<T>)", L"Barry Revzin" }, { 5u, L"trivial unions (was std::uninitialized<T>)", L"Barry Revzin" }, { 6u, L"trivial unions (was std::uninitialized<T>)", L"Barry Revzin" }, { 7u, L"trivial unions (was std::uninitialized<T>)", L"Barry Revzin" }, } },
    { 3075u, { { 0u, L"Title775", L"Shafik Yaghmour" }, } },
    { 3079u, { { 0u, L"Should ignore and observe exist for constant evaluation of contracts?", L"Author1564" }, } },
    { 3081u, { { 0u, L"Title187", L"Herb Sutter" }, { 1u, L"Title1061", L"Herb Sutter" }, { 2u, L"Title1317", L"Herb Sutter" }, } },
    { 3084u, { { 0u, L"Title153", L"Author180" }, } },
    { 3085u, { { 0u, L"noexcept policy for SD-9 (throws nothing)", L"Ben Craig" }, { 1u, L"noexcept policy for SD-9 (throws nothing)", L"Ben Craig" }, { 2u, L"noexcept policy for SD-9 (throws nothing)", L"Ben Craig" }, { 3u, L"noexcept policy for SD-9 (throws nothing)", L"Ben Craig" }, } },
    { 3086u, { { 0u, L"Title525", L"Mingxin Wang" }, { 1u, L"Title177", L"Mingxin Wang" }, { 2u, L"Title903", L"Mingxin Wang" }, { 3u, L"Title1523", L"Mingxin Wang" }, } },
    { 3087u, { { 0u, L"Make direct-initialization for enumeration types at least as permissive as direct-list-initialization", L"Jan Schultke" }, { 1u, L"Make direct-initialization for enumeration types at least as permissive as direct-list-initialization", L"Jan Schultke" }, } },
    { 3088u, { { 0u, L"Title127", L"Author148" }, { 1u, L"Title384", L"Author455" }, } },
    { 3090u, { { 0u, L"std::execution Introduction", L"Inbal Levi" }, } },
    { 3091u, { { 0u, L"Better lookups for `map` and `unordered_map`", L"Pablo Halpern" }, { 1u, L"Better Lookups for `map` and `unordered_map`", L"Pablo Halpern" }, { 2u, L"Better Lookups for `map` and `unordered_map`", L"Pablo Halpern" }, { 3u, L"Better Lookups for `map` and `unordered_map`", L"Pablo Halpern" }, } },
    { 3092u, { { 0u, L"Modules ABI Requirement", L"Chuanqi Xu" }, } },
    { 3093u, { { 0u, L"Attributes on expressions", L"Giuseppe D'Angelo" }, } },
    { 3094u, { { 0u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, { 1u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, { 2u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, { 3u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, { 4u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, { 5u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, { 6u, L"`std::basic_fixed_string`", L"Mateusz Pusz" }, } },
    { 3095u, { { 0u, L"P3095R0", L"Saksham Sharma" }, } },
    { 3096u, { { 0u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 1u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 2u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 3u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 4u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 5u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 6u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 7u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, { 8u, L"Function Parameter Reflection in Reflection for C++26", L"Adam Lach" }, } },
    { 3097u, { { 0u, L"Title1468", L"Timur Doumler" }, } },
    { 3098u, { { 0u, L"Contracts for C++: Postcondition captures", L"Author709" }, { 1u, L"Contracts for C++: Postcondition captures", L"Author553" }, } },
    { 3100u, { { 0u, L"Title1073", L"Author1381" }, { 1u, L"Title399", L"Author480" }, } },
    { 3101u, { { 0u, L"Differentiating potentially throwing and non throwing violation handlers", L"Ran Regev" }, } },
    { 3102u, { { 0u, L"Title86", L"Joshua Berne" }, } },
    { 3103u, { { 0u, L"More bitset operations", L"Jan Schultke" }, { 1u, L"More bitset operations", L"Jan Schultke" }, { 2u, L"More bitset operations", L"Jan Schultke" }, } },
    { 3104u, { { 0u, L"Bit permutations", L"Jan Schultke" }, { 1u, L"Bit permutations", L"Jan Schultke" }, { 2u, L"Bit permutations", L"Jan Schultke" }, { 3u, L"Bit permutations", L"Jan Schultke" }, } },
    { 3105u, { { 0u, L"constexpr std::uncaught_exceptions()", L"Jan Schultke" }, { 1u, L"constexpr std::uncaught_exceptions()", L"Jan Schultke" }, { 2u, L"constexpr std::uncaught_exceptions()", L"Jan Schultke" }, } },
    { 3106u, { { 0u, L"Clarifying rules for brace elision in aggregateinitialization", L"James Touton" }, { 1u, L"Clarifying rules for brace elision in aggregateinitialization", L"James Touton" }, } },
    { 3107u, { { 0u, L"Permit an efficient implementation of std::print", L"Victor Zverovich" }, { 1u, L"Permit an efficient implementation of std::print", L"Victor Zverovich" }, { 2u, L"Permit an efficient implementation of std::print", L"Victor Zverovich" }, { 3u, L"Permit an efficient implementation of std::print", L"Victor Zverovich" }, { 4u, L"Permit an efficient implementation of std::print", L"Victor Zverovich" }, { 5u, L"Permit an efficient implementation of std::print", L"Victor Zverovich" }, } },
    { 3109u, { { 0u, L"Title1000", L"Author1289" }, } },
    { 3110u, { { 0u, L"Array element initialization via pattern expansion", L"James Touton" }, } },
    { 3111u, { { 0u, L"Atomic Reduction Operations", L"Author1492" }, { 1u, L"Atomic Reduction Operations", L"Author1238" }, { 2u, L"Atomic Reduction Operations", L"Author372" }, { 3u, L"Atomic Reduction Operations", L"Author393" }, { 4u, L"Atomic Reduction Operations", L"Author330" }, { 5u, L"Atomic Reduction Operations", L"Author1977" }, } },
    { 3112u, { { 0u, L"Specify Constructor of `std::nullopt_t`", L"Brian Bi" }, } },
    { 3113u, { { 0u, L"2024-02-01 telecon", L"Author761" }, } },
    { 3114u, { { 0u, L"dwdwedwed", L"Author1599" }, } },
    { 3115u, { { 0u, L"Title838", L"Corentin Jabot" }, } },
    { 3116u, { { 0u, L"Policy for `explicit`", L"Zach Laine" }, } },
    { 3117u, { { 0u, L"Extending Conditionally Borrowed", L"Zach Laine" }, { 1u, L"Extending Conditionally Borrowed", L"Zach Laine" }, } },
    { 3119u, { { 0u, L"Title1037", L"Joshua Berne" }, { 1u, L"Title1408", L"Joshua Berne" }, } },
    { 3122u, { { 0u, L"Using [[nodiscard]] should be Recommended Practice", L"Author421" }, { 1u, L"Using [[nodiscard]] should be Recommended Practice", L"Author320" }, } },
    { 3123u, { { 0u, L"2024-02 Library Evolution Polls", L"Inbal Levi" }, } },
    { 3124u, { { 0u, L"2024-02 Library Evolution Poll Outcomes", L"Inbal Levi" }, } },
    { 3125u, { { 0u, L"D3125R0: Pointer Tagging", L"Hana Dusikova" }, { 1u, L"constexpr pointer tagging", L"Hana Dusikova" }, { 2u, L"constexpr pointer tagging", L"Hana Dusikova" }, { 3u, L"constexpr pointer tagging", L"Hana Dusikova" }, } },
    { 3126u, { { 0u, L"Test document for P3126r0", L"Phil Ratzloff" }, { 1u, L"Test document for P3126r1", L"Phil Ratzloff" }, { 2u, L"Test document for P3126r2", L"Phil Ratzloff" }, { 3u, L"Test document for P3126r3", L"Phil Ratzloff" }, } },
    { 3127u, { { 0u, L"Test document for P3127r0", L"Phil Ratzloff" }, { 1u, L"Test document for P3127r1", L"Phil Ratzloff" }, } },
    { 3128u, { { 0u, L"Test document for P3128r0", L"Phil Ratzloff" }, { 1u, L"Test document for P3128r1", L"Phil Ratzloff" }, { 2u, L"Test document for P3128r2", L"Phil Ratzloff" }, { 3u, L"Test document for P3128r3", L"Phil Ratzloff" }, } },
    { 3129u, { { 0u, L"Test document for P3129r0", L"Phil Ratzloff" }, { 1u, L"Test document for P3129r2", L"Phil Ratzloff" }, } },
    { 3130u, { { 0u, L"Test document for P3130r0", L"Phil Ratzloff" }, { 1u, L"Test document for P3130r1", L"Phil Ratzloff" }, { 2u, L"Test document for P3130r2", L"Phil Ratzloff" }, { 3u, L"Test document for P3130r3", L"Phil Ratzloff" }, } },
    { 3131u, { { 0u, L"Test document for P3131r0", L"Phil Ratzloff" }, { 1u, L"Test document for P3131r1", L"Phil Ratzloff" }, { 2u, L"Test document for P3131r2", L"Phil Ratzloff" }, { 3u, L"Test document for P3131r3", L"Phil Ratzloff" }, } },
    { 3133u, { { 0u, L"Fast first-factor finding function", L"Chip Hogg" }, } },
    { 3135u, { { 0u, L"Hazard Pointer Extensions", L"Maged M" }, { 1u, L"Hazard Pointer Extensions", L"Maged M" }, } },
    { 3136u, { { 0u, L"Retiring niebloids", L"Tim Song" }, { 1u, L"Retiring niebloids", L"Tim Song" }, } },
    { 3137u, { { 0u, L"views::to_input", L"Tim Song" }, { 1u, L"views::to_input", L"Tim Song" }, { 2u, L"views::to_input", L"Tim Song" }, { 3u, L"views::to_input", L"Tim Song" }, } },
    { 3138u, { { 0u, L"views::cache_last", L"Tim Song" }, { 1u, L"views::cache_last", L"Tim Song" }, { 2u, L"views::cache_last", L"Tim Song" }, { 3u, L"views::cache_latest", L"Tim Song" }, { 4u, L"views::cache_latest", L"Tim Song" }, { 5u, L"views::cache_latest", L"Tim Song" }, } },
    { 3139u, { { 0u, L"Pointer cast for unique_ptr - HackMD", L"Zhihao Yuan" }, { 1u, L"Pointer cast for unique_ptr - HackMD", L"Zhihao Yuan" }, } },
    { 3140u, { { 0u, L"std::int_least128_t", L"Jan Schultke" }, } },
    { 3142u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1166" }, } },
    { 3143u, { { 0u, L"An in-depth walk-through of the example in P3090R0", L"Author1888" }, } },
    { 3144u, { { 0u, L"Deprecate Delete of a Pointer to an Incomplete Type", L"Alisdair Meredith" }, { 1u, L"Deprecate Delete of a Pointer to an Incomplete Type", L"Alisdair Meredith" }, { 2u, L"Deleting a Pointer to an Incomplete Type Should be Ill-formed", L"Alisdair Meredith" }, } },
    { 3146u, { { 0u, L"Clarifying std::variant converting construction", L"Giuseppe D'Angelo" }, { 1u, L"Clarifying std::variant converting construction", L"Giuseppe D'Angelo" }, { 2u, L"Clarifying std::variant converting construction", L"Giuseppe D'Angelo" }, } },
    { 3147u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author1577" }, { 1u, L"A Direction for Vector", L"Author1926" }, } },
    { 3148u, { { 0u, L"Some Proposed Improvements to the Presentation of Requirements for Functions", L"Author312" }, { 1u, L"Formatting of chrono Time Values", L"Author1848" }, } },
    { 3149u, { { 0u, L"Creating scopes for non-sequential concurrency", L"Ian Petersen" }, { 1u, L"Creating scopes for non-sequential concurrency", L"Ian Petersen" }, { 2u, L"Creating scopes for non-sequential concurrency", L"Ian Petersen" }, { 3u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"Ian Petersen" }, { 4u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"Ian Petersen" }, { 5u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"Ian Petersen" }, { 6u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"2" }, { 7u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"2" }, { 8u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"2" }, { 9u, L"`async_scope` -- Creating scopes for non-sequentialconcurrency", L"2" }, } },
    { 3150u, { { 0u, L"SG14 2024/02/15 P3150R0.docx", L"Michael Wong" }, } },
    { 3151u, { { 0u, L"SG19 2024/02/15 P3151R0.docx", L"Michael Wong" }, } },
    { 3152u, { { 0u, L"Title635", L"Author781" }, { 1u, L"Title905", L"Author1138" }, } },
    { 3153u, { { 0u, L"An allocator-aware optional type", L"Author1119" }, } },
    { 3154u, { { 0u, L"Deprecating signed character types in iostreams", L"Elias Kosunen" }, { 1u, L"Deprecating signed character types in iostreams", L"Elias Kosunen" }, } },
    { 3155u, { { 0u, L"Title1063", L"Author1371" }, } },
    { 3156u, { { 0u, L"<tt>empty_checkable_range</tt>", L"Author122" }, } },
    { 3157u, { { 0u, L"Title1488", L"Author1924" }, { 1u, L"Generative Extensions for Reflection", L"Andrei Alexandrescu" }, } },
    { 3158u, { { 0u, L"Headless Template Template Parameters", L"James Touton" }, } },
    { 3159u, { { 0u, L"C++ Range Adaptors and Parallel Algorithms", L"Bryce Adelstein" }, } },
    { 3160u, { { 0u, L"An Allocator-aware `inplace_vector`", L"Pablo Halpern" }, { 1u, L"An Allocator-Aware `inplace_vector`", L"Pablo Halpern" }, { 2u, L"An Allocator-Aware `inplace_vector`", L"Pablo Halpern" }, } },
    { 3161u, { { 0u, L"P3161R0 - Unified integer overflow arithmetic", L"Tiago Freire" }, { 1u, L"D3161R1 - Unified integer overflow arithmetic", L"Tiago Freire" }, { 2u, L"R3161R2 - Unified integer overflow arithmetic", L"Tiago Freire" }, { 3u, L"R3161R3 - Unified integer overflow arithmetic", L"Tiago Freire" }, { 4u, L"R3161R4 - Unified integer overflow arithmetic", L"Tiago Freire" }, } },
    { 3162u, { { 0u, L"LEWG [[nodiscard]] policy - HackMD", L"Author1397" }, } },
    { 3164u, { { 0u, L"Improving diagnostics for sender expressions", L"Eric Niebler" }, { 1u, L"Improving diagnostics for sender expressions", L"Eric Niebler" }, { 2u, L"Improving diagnostics for sender expressions", L"Eric Niebler" }, { 3u, L"Early Diagnostics for Sender Expressions", L"Eric Niebler" }, } },
    { 3165u, { { 0u, L"Contracts on virtual functions for the Contracts MVP", L"Author1640" }, } },
    { 3166u, { { 0u, L"Static Exception Specifications", L"Lewis Baker" }, } },
    { 3167u, { { 0u, L"Attributes for the result name in a postcondition assertion", L"Tom Honermann" }, } },
    { 3168u, { { 0u, L"Give std::optional range support - HackMD", L"Author788" }, { 1u, L"Give std::optional range support - HackMD", L"4" }, { 2u, L"Give std::optional range support - HackMD", L"4" }, } },
    { 3169u, { { 0u, L"Inherited contracts", L"Jonas Persson" }, } },
    { 3170u, { { 0u, L"sinkable exception error message - HackMD", L"Author566" }, } },
    { 3171u, { { 0u, L"Adding functionality to placeholder types", L"Peter Dimov" }, } },
    { 3172u, { { 0u, L"Using `this` in constructor preconditions", L"\u00A0\u00A0" }, } },
    { 3173u, { { 0u, L"Title1434", L"gdr@microsoft.com Audience" }, } },
    { 3174u, { { 0u, L"SG16: Unicode meeting summaries 2023-10-11 through 2024-02-21", L"Tom Honermann" }, } },
    { 3175u, { { 0u, L"Reconsidering the std::execution::on algorithm", L"Eric Niebler" }, { 1u, L"Reconsidering the std::execution::on algorithm", L"Eric Niebler" }, { 2u, L"Reconsidering the std::execution::on algorithm", L"Eric Niebler" }, { 3u, L"Reconsidering the std::execution::on algorithm", L"Eric Niebler" }, } },
    { 3176u, { { 0u, L"The Oxford variadic comma", L"Jan Schultke" }, { 1u, L"The Oxford variadic comma", L"Jan Schultke" }, } },
    { 3177u, { { 0u, L"const prvalues in the conditional operator", L"Barry Revzin" }, } },
    { 3178u, { { 0u, L"PxxxxR0: std::exception_typeid", L"TPK Healy" }, { 1u, L"Retrieval of Exception Information", L"Thomas PK" }, } },
    { 3179u, { { 0u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 1u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 2u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 3u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 4u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 5u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 6u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, { 7u, L"C++ parallel range algorithms", L"Ruslan Arutyunyan" }, } },
    { 3180u, { { 0u, L"C++ Standard Library Issues to be moved in Tokyo, Mar. 2024", L"Author1482" }, } },
    { 3181u, { { 0u, L"Atomic stores and object lifetimes", L"Hans Boehm" }, } },
    { 3182u, { { 0u, L"Add `pop_value` methods to container adaptors", L"Brian Bi" }, { 1u, L"Add container pop methods that return the popped value", L"Brian Bi" }, } },
    { 3183u, { { 0u, L"Contract testing support", L"Bengt Gustafsson" }, { 1u, L"Contract testing support", L"Bengt Gustafsson" }, } },
    { 3185u, { { 0u, L"A proposed direction for C++ Standard Networking based on IETF TAPS", L"Thomas Rodgers" }, } },
    { 3187u, { { 1u, L"remove ensure_started and start_detached from P2300", L"Kirk Shoop" }, } },
    { 3188u, { { 0u, L"Proxy: A Pointer-Semantics-Based Polymorphism Library", L"Author121" }, } },
    { 3189u, { { 0u, L"P3189R0", L"Author1750" }, } },
    { 3190u, { { 0u, L"talk_ewg", L"Author2139" }, } },
    { 3191u, { { 0u, L"Feedback on the scalability of contract violation handlers in P2900", L"Louis Dionne" }, } },
    { 3192u, { { 0u, L"PowerPoint-Prsentation", L"Jan Schultke" }, } },
    { 3194u, { { 0u, L"PowerPoint-Prsentation", L"Jan Schultke" }, } },
    { 3196u, { { 0u, L"Core \"ready\" Issues", L"Author971" }, } },
    { 3197u, { { 0u, L"A response to the Tokyo EWG polls on the Contracts MVP", L"Author1102" }, } },
    { 3198u, { { 0u, L"A takeaway from the Tokyo LEWG meeting on Contracts MVP", L"\u00A0\u00A0" }, } },
    { 3199u, { { 0u, L"Choices for ~make_optional~ and ~value_or()~", L"Steve Downey" }, } },
    { 3201u, { { 0u, L"LEWG [[nodiscard]] policy - HackMD", L"Author69" }, { 1u, L"LEWG [[nodiscard]] policy - HackMD", L"Author1970" }, } },
    { 3203u, { { 0u, L"Title640", L"name" }, } },
    { 3204u, { { 0u, L"Title332", L"Joshua Berne" }, } },
    { 3205u, { { 0u, L"Throwing from a function should be a contract violation.", L"Gaaper A~man" }, } },
    { 3206u, { { 0u, L"A sender query for completion behaviour", L"Maikel Nadolski" }, } },
    { 3207u, { { 0u, L"More & like - HackMD", L"Author1178" }, } },
    { 3208u, { { 0u, L"Title1671", L"Sunghyun Min" }, } },
    { 3210u, { { 0u, L"P3210R0 A Postcondition *is* a Pattern Match", L"Andrew Tomazos" }, { 1u, L"P3210R1 A Postcondition *is* a Pattern Match", L"Andrew Tomazos" }, { 2u, L"P3210R2 A Postcondition *is* a Pattern Match", L"Andrew Tomazos" }, } },
    { 3211u, { { 0u, L"<code>views::transform_join</code>", L"Author648" }, } },
    { 3212u, { { 0u, L"The contract of sort()", L"\u00A0\u00A0" }, } },
    { 3213u, { { 0u, L"2024-04 Library Evolution Polls", L"Inbal Levi" }, } },
    { 3214u, { { 0u, L"2024-04 Library Evolution Poll Outcomes", L"Inbal Levi" }, } },
    { 3215u, { { 0u, L"Using variable template template without meta programming", L"Author1699" }, } },
    { 3216u, { { 0u, L"<code>views::slice</code>", L"Author144" }, } },
    { 3217u, { { 0u, L"Adjoints to \"Enabling list-initialization for algorithms\": find_last", L"Giuseppe D'Angelo" }, } },
    { 3218u, { { 0u, L"const references to constexpr variables - HackMD", L"Author1062" }, } },
    { 3220u, { { 0u, L"<code>views::delimit</code>", L"Author1756" }, } },
    { 3221u, { { 0u, L"Disable pointers to contracted functions", L"Jonas Persson" }, } },
    { 3222u, { { 0u, L"Fix C++26 by adding transposed special cases for P2642 layouts", L"Mark Hoemmen" }, { 1u, L"Fix C++26 by adding transposed special cases for P2642 layouts", L"Mark Hoemmen" }, } },
    { 3223u, { { 0u, L"Making std::basic_istream::ignore less surprising", L"Author1496" }, { 1u, L"Making std::istream::ignore less surprising", L"Author1021" }, } },
    { 3224u, { { 0u, L"PowerPoint-Prsentation", L"Jan Schultke" }, } },
    { 3225u, { { 0u, L"PowerPoint-Prsentation", L"Jan Schultke" }, } },
    { 3226u, { { 0u, L"Title1405", L"Author1818" }, } },
    { 3227u, { { 0u, L"Fixing the library API for contract violation handling", L"Author1186" }, { 1u, L"Fixing the library API for contract violation handling", L"Author1415" }, } },
    { 3228u, { { 0u, L"Title1612", L"Author2080" }, { 1u, L"Title1624", L"Author2094" }, } },
    { 3229u, { { 0u, L"Title1042", L"Author1347" }, { 1u, L"Title1274", L"Author1645" }, } },
    { 3230u, { { 0u, L"<code>views::(take|drop)_exactly</code>", L"Author2018" }, { 1u, L"<code>views::unchecked_(take|drop)</code>", L"Author1874" }, { 2u, L"<code>views::unchecked_(take|drop)</code>", L"Author365" }, } },
    { 3232u, { { 0u, L"User-defined erroneous behaviour", L"Author155" }, { 1u, L"User-defined erroneous behaviour", L"Author1443" }, } },
    { 3233u, { { 0u, L"Issues with P2786 (\"Trivial Relocatability For C++26\")", L"Giuseppe D'Angelo" }, } },
    { 3234u, { { 0u, L"Utility to check if a pointer is in a given range", L"Glen Joseph" }, { 1u, L"Utility to check if a pointer is in a given range", L"Glen Joseph" }, } },
    { 3235u, { { 0u, L"std::print more types faster with less memory", L"Victor Zverovich" }, { 1u, L"std::print more types faster with less memory", L"Victor Zverovich" }, { 2u, L"std::print more types faster with less memory", L"Victor Zverovich" }, { 3u, L"std::print more types faster with less memory", L"Victor Zverovich" }, } },
    { 3236u, { { 0u, L"Please reject P2786 and adopt P1144", L"Alan de" }, { 1u, L"Please reject P2786 and adopt P1144", L"Alan de" }, } },
    { 3237u, { { 0u, L"Matrix Representation of Contract Semantics", L"Andrei Zissu" }, { 1u, L"P3237 - Matrix Representation of Contract Semantics", L"Andrei Zissu" }, { 2u, L"P3237 - Matrix Representation of Contract Semantics", L"Andrei Zissu" }, } },
    { 3238u, { { 0u, L"An alternate proposal for naming contract semantics", L"Author518" }, } },
    { 3239u, { { 0u, L"A Relocating Swap", L"Alisdair Meredith" }, } },
    { 3240u, { { 0u, L"p3240", L"Author1902" }, } },
    { 3241u, { { 0u, L"P3241", L"Author1200" }, } },
    { 3242u, { { 0u, L"Copy and fill for mdspan", L"Nicolas Morales" }, { 1u, L"Copy and fill for mdspan", L"Nicolas Morales" }, } },
    { 3243u, { { 0u, L"Give <code>std::optional</code> Range Support", L"Author1294" }, } },
    { 3244u, { { 0u, L"<code>[[nodiscard]]</code> Policy", L"Author269" }, } },
    { 3245u, { { 0u, L"Allow `[[nodiscard]]` in type alias declarations", L"Xavier Bonaventura" }, { 1u, L"Allow `[[nodiscard]]` in type alias declarations", L"Xavier Bonaventura" }, { 2u, L"Allow `[[nodiscard]]` in type alias declarations", L"Xavier Bonaventura" }, } },
    { 3247u, { { 0u, L"Deprecate the notion of trivial types", L"Author1872" }, { 1u, L"Deprecate the notion of trivial types", L"Author188" }, { 2u, L"Deprecate the notion of trivial types", L"Author1696" }, } },
    { 3248u, { { 0u, L"Require [u]intptr_t", L"Gonzalo Brito" }, { 1u, L"Require [u]intptr_t", L"Gonzalo Brito" }, { 2u, L"Require [u]intptr_t", L"Gonzalo Brito" }, { 3u, L"Require [u]intptr_t", L"Gonzalo Brito" }, } },
    { 3249u, { { 0u, L"P3249R0 - unified pattern matching and contracts syntax", L"Ran Regev" }, } },
    { 3250u, { { 0u, L"C++ contracts with regards to function pointers", L"Author642" }, } },
    { 3251u, { { 0u, L"C++ Contracts and Coroutines", L"Author1906" }, } },
    { 3253u, { { 0u, L"Distinguishing between member and free coroutines", L"Brian Bi" }, } },
    { 3254u, { { 0u, L"Reserve identifiers preceded by `@` for non-ignorableannotation tokens", L"Brian Bi" }, } },
    { 3255u, { { 0u, L"Expose whether atomic notifying operations are lockfree", L"Brian Bi" }, { 1u, L"Expose whether atomic notifying operations are lockfree", L"Brian Bi" }, } },
    { 3257u, { { 0u, L"Make the predicate of <TT>contract_assert</TT> more regular", L"Author1691" }, } },
    { 3258u, { { 0u, L"Title402", L"Corentin Jabot" }, } },
    { 3259u, { { 0u, L"const by default - HackMD", L"Author2187" }, } },
    { 3261u, { { 0u, L"Title114", L"Joshua Berne" }, { 1u, L"Title606", L"Joshua Berne" }, { 2u, L"Title1580", L"Joshua Berne" }, } },
    { 3263u, { { 0u, L"P3263R0 - Encoding annotated char", L"Tiago Freire" }, } },
    { 3264u, { { 0u, L"Double-evaluation of preconditions", L"Author701" }, { 1u, L"Double-evaluation of preconditions", L"Author953" }, } },
    { 3265u, { { 0u, L"Ship Contracts in a TS", L"Author1392" }, { 1u, L"Ship Contracts in a TS", L"Author124" }, { 2u, L"Ship Contracts in a TS", L"Author491" }, { 3u, L"Ship Contracts in a TS", L"Author645" }, } },
    { 3266u, { { 0u, L"non referenceable types - HackMD", L"Author817" }, } },
    { 3267u, { { 0u, L"C++ contracts implementation strategies", L"Author477" }, { 1u, L"C++ contracts implementation strategies", L"Author964" }, } },
    { 3268u, { { 0u, L"C++ Contracts Constification Challenges Concerning Current Code", L"Author1867" }, } },
    { 3269u, { { 0u, L"Do Not Ship Contracts as a TS", L"Author228" }, } },
    { 3270u, { { 0u, L"Title1036", L"Joshua Berne" }, } },
    { 3271u, { { 0u, L"Title60", L"Lisa Lippincott" }, { 1u, L"Title1284", L"Lisa Lippincott" }, } },
    { 3273u, { { 0u, L"Introspection of Closure Types", L"Barry Revzin" }, } },
    { 3274u, { { 0u, L"Title1313", L"Author1692" }, } },
    { 3275u, { { 0u, L"Replace simd operator[] with getter and setter functions or not [P3275R0]", L"Matthias Kretz" }, } },
    { 3276u, { { 0u, L"Title59", L"Joshua Berne" }, } },
    { 3278u, { { 0u, L"P3278R0", L"Nina Ranns" }, } },
    { 3279u, { { 0u, L"CWG2463: What \"trivially fooable\" should mean", L"Arthur O'Dwyer" }, } },
    { 3281u, { { 0u, L"Contract Checks Should be Regular C++", L"Author545" }, } },
    { 3282u, { { 0u, L"Static Storage for C++ Concurrent <tt>bounded_queue</tt>", L"Detlef Vollmann" }, } },
    { 3283u, { { 0u, L"P3283. Adding .first() and .last() to strings", L"Author1824" }, } },
    { 3284u, { { 0u, L"`finally`, `write_env`, and `unstoppable` SenderAdaptors", L"Eric Niebler" }, { 1u, L"`finally`, `write_env`, and `unstoppable` SenderAdaptors", L"Eric Niebler" }, { 2u, L"`write_env` and `unstoppable` Sender Adaptors", L"Eric Niebler" }, { 3u, L"`write_env` and `unstoppable` Sender Adaptors", L"Eric Niebler" }, } },
    { 3285u, { { 0u, L"Title108", L"gdr@microsoft.com Audience" }, } },
    { 3286u, { { 0u, L"Module Metadata Distributed With Pre-Built Libraries", L"Daniel Ruoso" }, } },
    { 3287u, { { 0u, L"Exploration of namespaces for std::simd [P3287R0]", L"Matthias Kretz" }, { 1u, L"Exploration of namespaces for std::simd [P3287R1]", L"Matthias Kretz" }, { 2u, L"Exploration of namespaces for std::simd [P3287R2]", L"Matthias Kretz" }, { 3u, L"Exploration of namespaces for std::simd [P3287R3]", L"Matthias Kretz" }, } },
    { 3288u, { { 0u, L"std::elide", L"TPK Healy" }, { 1u, L"std::elide", L"Thomas PK" }, { 2u, L"std::elide", L"Thomas PK" }, { 3u, L"std::elide", L"Thomas PK" }, } },
    { 3289u, { { 0u, L"consteval blocks", L"Wyatt Childers" }, { 1u, L"consteval blocks", L"Wyatt Childers" }, } },
    { 3290u, { { 0u, L"Title192", L"Joshua Berne" }, { 1u, L"Title1334", L"Joshua Berne" }, { 2u, L"Title1072", L"Joshua Berne" }, } },
    { 3292u, { { 0u, L"P3292R0R0: Provenance and Concurrency", L"David Goldblatt" }, } },
    { 3293u, { { 0u, L"Splicing a base class subobject", L"Peter Dimov" }, { 1u, L"Splicing a base class subobject", L"Peter Dimov" }, } },
    { 3294u, { { 0u, L"Code Injection with Token Sequences", L"Andrei Alexandrescu" }, { 1u, L"Code Injection with Token Sequences", L"Andrei Alexandrescu" }, { 2u, L"Code Injection with Token Sequences", L"Andrei Alexandrescu" }, } },
    { 3295u, { { 0u, L"Freestanding constexpr containers and constexpr exception types", L"Ben Craig" }, { 1u, L"Freestanding constexpr containers and constexpr exception types", L"Ben Craig" }, { 2u, L"Freestanding constexpr containers and constexpr exception types", L"Ben Craig" }, { 3u, L"Freestanding constexpr containers and constexpr exception types", L"Ben Craig" }, } },
    { 3296u, { { 0u, L"let_async_scope.html", L"Anthony Williams" }, { 1u, L"let_async_scope.html", L"Anthony Williams" }, { 2u, L"let_async_scope.html", L"Anthony Williams" }, { 3u, L"let_async_scope.html", L"Anthony Williams" }, { 4u, L"let_async_scope.html", L"Anthony Williams" }, } },
    { 3297u, { { 0u, L"C++26 Needs Contract Checking", L"Author1236" }, { 1u, L"C++26 Needs Contract Checking", L"Author1481" }, } },
    { 3298u, { { 0u, L"Implicit user-defined conversion functions as operator.()", L"Bengt Gustafsson" }, { 1u, L"Implicit user-defined conversion functions as operator.()", L"Bengt Gustafsson" }, } },
    { 3299u, { { 0u, L"Proposal to extend <code>std::simd</code> with range constructors", L"Daniel Towner" }, { 1u, L"Proposal to extend <code>std::simd</code> with range constructors", L"Daniel Towner" }, { 2u, L"Proposal to extend <code>std::simd</code> with range constructors", L"Daniel Towner" }, { 3u, L"Proposal to extend std::simd with range constructors", L"Daniel Towner" }, } },
    { 3300u, { { 0u, L"C++ Asynchronous Parallel Algorithms", L"Bryce Adelstein" }, } },
    { 3301u, { { 0u, L"inplace_stoppable_base", L"Lauri Vasama" }, } },
    { 3302u, { { 0u, L"SG16: Unicode meeting summaries 2024-03-13 through 2024-05-08", L"Tom Honermann" }, } },
    { 3303u, { { 0u, L"Fixing Lazy Sender Algorithm Customization", L"Eric Niebler" }, { 1u, L"Fixing Lazy Sender Algorithm Customization", L"Eric Niebler" }, } },
    { 3304u, { { 0u, L"SG14 2024/02/15 P3304R0.docx", L"Michael Wong" }, } },
    { 3305u, { { 0u, L"SG19 2024/05/22 P3305R0.docx", L"Michael Wong" }, } },
    { 3306u, { { 0u, L"Atomic Read-Modify-Write Improvements", L"Author2049" }, } },
    { 3307u, { { 0u, L"Floating-Point Maximum/Minimum Function Objects", L"Author1871" }, } },
    { 3308u, { { 0u, L"mdarray design questions and answers", L"Mark Hoemmen" }, } },
    { 3309u, { { 0u, L"constexpr atomic<T> and atomic_ref<T>", L"Hana Dusikova" }, { 1u, L"constexpr atomic<T> and atomic_ref<T>", L"Hana Dusikova" }, { 2u, L"constexpr atomic<T> and atomic_ref<T>", L"Hana Dusikova" }, { 3u, L"atomic<T> and atomic_ref<T>", L"Hana Dusikova" }, } },
    { 3310u, { { 0u, L"Solving partial ordering issues introduced by P0522R0", L"Matheus Izvekov" }, { 1u, L"Solving partial ordering issues introduced by P0522R0", L"Matheus Izvekov" }, { 2u, L"Solving partial ordering issues introduced by P0522R0", L"Matheus Izvekov" }, { 3u, L"Solving partial ordering issues introduced by P0522R0", L"Matheus Izvekov" }, { 4u, L"Solving issues introduced by P0522R0", L"Matheus Izvekov" }, { 5u, L"Solving issues introduced by relaxed template templateparameter matching", L"Matheus Izvekov" }, } },
    { 3311u, { { 0u, L"An opt-in approach for integration of traditional assert facilities in C++ contracts", L"Tom Honermann" }, } },
    { 3312u, { { 0u, L"Overload Set Types", L"Bengt Gustafsson" }, { 1u, L"Overload Set Types", L"Bengt Gustafsson" }, } },
    { 3313u, { { 0u, L"Impacts of noexept on ARM table based exception metadata", L"Khalil Estell" }, } },
    { 3314u, { { 0u, L"2024-07 Library Evolution Polls", L"Inbal Levi" }, } },
    { 3315u, { { 0u, L"2024-07 Library Evolution Poll Outcomes", L"Inbal Levi" }, } },
    { 3316u, { { 0u, L"A more predictable unchecked semantic", L"Jonas Persson" }, } },
    { 3317u, { { 0u, L"Compile time resolved contracts", L"Jonas Persson" }, } },
    { 3318u, { { 0u, L"Throwing violation handlers, from an application programming perspective", L"Author529" }, } },
    { 3319u, { { 0u, L"Add an iota object for simd (and more) [P3319R0]", L"Matthias Kretz" }, { 1u, L"Add an iota object for simd (and more) [P3319R1]", L"Matthias Kretz" }, { 2u, L"Add an iota object for simd (and more) [P3319R2]", L"Matthias Kretz" }, { 3u, L"Add an iota object for simd (and more) [P3319R3]", L"Matthias Kretz" }, { 4u, L"Add an iota object for simd (and more) [P3319R4]", L"Matthias Kretz" }, { 5u, L"Add an iota object for simd (and more) [P3319R5]", L"Matthias Kretz" }, } },
    { 3320u, { { 0u, L"DeleteIfIncomplete", L"Author1444" }, } },
    { 3321u, { { 0u, L"Title89", L"Joshua Berne" }, } },
    { 3323u, { { 0u, L"cv-qualified types in atomic and atomic_ref", L"Gonzalo Brito" }, { 1u, L"cv-qualified types in atomic and atomic_ref", L"Gonzalo Brito" }, } },
    { 3324u, { { 0u, L"Attributes for namespace aliases, template parameters, and lambda captures", L"Tom Honermann" }, } },
    { 3325u, { { 0u, L"A Utility for Creating Execution Environments", L"Eric Niebler" }, { 1u, L"A Utility for Creating Execution Environments", L"Eric Niebler" }, { 2u, L"A Utility for Creating Execution Environments", L"Eric Niebler" }, { 3u, L"A Utility for Creating Execution Environments", L"Eric Niebler" }, { 4u, L"A Utility for Creating Execution Environments", L"Eric Niebler" }, { 5u, L"A Utility for Creating Execution Environments", L"Eric Niebler" }, } },
    { 3326u, { { 0u, L"favor ease of use - HackMD", L"Author1684" }, } },
    { 3327u, { { 0u, L"Title864", L"Author1073" }, } },
    { 3328u, { { 0u, L"Title756", L"Joshua Berne" }, } },
    { 3329u, { { 0u, L"P3329R0 Healing the Filter View", L"Audience" }, } },
    { 3330u, { { 0u, L"User-defined Atomic Read-Modify-Write Operations", L"Author222" }, } },
    { 3331u, { { 0u, L"Title652", L"Author819" }, { 1u, L"Title1054", L"Author1358" }, } },
    { 3332u, { { 0u, L"Title1487", L"Author1923" }, } },
    { 3334u, { { 0u, L"Cross Static Variables", L"Coral Kashri" }, } },
    { 3335u, { { 0u, L"Structured Core Options", L"Ren\u00E9 Ferdinand" }, { 1u, L"Structured Core Options", L"Ren\u00E9 Ferdinand" }, { 2u, L"Structured Core Options", L"Ren\u00E9 Ferdinand" }, { 3u, L"Structured Core Options", L"Ren\u00E9 Ferdinand" }, { 4u, L"WITHDRAWN: Structured Core Options", L"Ren\u00E9 Ferdinand" }, } },
    { 3336u, { { 0u, L"Title992", L"Joshua Berne" }, } },
    { 3338u, { { 0u, L"Observe and ignore semantics in constant evaluation", L"Author516" }, } },
    { 3339u, { { 0u, L"C++ Ecosystem IS Open License", L"Ren\u00E9 Ferdinand" }, { 1u, L"WITHDRAWN: C++ Ecosystem IS Open License", L"Ren\u00E9 Ferdinand" }, } },
    { 3340u, { { 0u, L"A Consistent Grammar for Sequences", L"Alisdair Meredith" }, } },
    { 3341u, { { 0u, L"C++ Standard Library Issues to be moved in St. Louis", L"Author1657" }, } },
    { 3342u, { { 0u, L"C++ Ecosystem Working Draft", L"Author1063" }, { 1u, L"C++ Ecosystem Working Draft", L"Author812" }, { 2u, L"WITHDRAWN: Working Draft, Standard for C++ Ecosystem", L"Ren\u00E9 Ferdinand" }, } },
    { 3343u, { { 0u, L"Contracts: What we are doing here - P3343R0", L"Author1909" }, } },
    { 3344u, { { 0u, L"Contracts on Virtual Functions - P3343R0 - Presentation on P3097R0", L"Author1879" }, } },
    { 3345u, { { 0u, L"Core \"ready\" Issues", L"Author1721" }, } },
    { 3346u, { { 0u, L"threadlocalmeansfiber-specific", L"Nat Goodspeed" }, } },
    { 3347u, { { 0u, L"P3347R0 Pointer lifetime-end zap proposed solutions: Tighten IDB for invalid and prospective pointers", L"Paul E" }, { 1u, L"P3347R1 Pointer lifetime-end zap proposed solutions: Tighten IDB for invalid and prospective pointers", L"Paul E" }, } },
    { 3348u, { { 0u, L"C++26 should refer to C23 not C17", L"Jonathan Wakely" }, { 1u, L"Title884", L"Jonathan Wakely" }, { 2u, L"Title64", L"Jonathan Wakely" }, { 3u, L"Title1127", L"Jonathan Wakely" }, } },
    { 3349u, { { 0u, L"Converting contiguous iterators to pointers", L"Author277" }, { 1u, L"Converting contiguous iterators to pointers", L"Author197" }, } },
    { 3351u, { { 0u, L"views::scan", L"Yihe Li" }, { 1u, L"views::scan", L"Yihe Li" }, { 2u, L"views::scan", L"Yihe Li" }, } },
    { 3352u, { { 0u, L"P3352R0 Taming the Demons (C++ version) Undefined Behavior and Partial Program Correctness", L"Andrew Tomazos" }, } },
    { 3354u, { { 0u, L"Issues with P2786 (\"Trivial Relocatability For C++26\")", L"Author1226" }, } },
    { 3355u, { { 0u, L"Fix submdspan for C++26", L"Mark Hoemmen" }, { 1u, L"Fix submdspan for C++26", L"Mark Hoemmen" }, { 2u, L"Fix submdspan for C++26", L"Mark Hoemmen" }, } },
    { 3356u, { { 0u, L"non_invalidating_vector - HackMD", L"Author1163" }, } },
    { 3357u, { { 0u, L"NRVO with factory and after_factory", L"Thomas PK" }, } },
    { 3358u, { { 0u, L"SARIF for Structured Diagnostics", L"Sy Brand" }, } },
    { 3359u, { { 0u, L"P2667R0++", L"Author293" }, } },
    { 3360u, { { 0u, L"P2667R0++", L"Author1151" }, } },
    { 3361u, { { 0u, L"contracts.dvi", L"Author1844" }, { 1u, L"contracts.dvi", L"Author1020" }, } },
    { 3362u, { { 0u, L"Static analysis and 'safety' of Contracts, P2900 vs. P2680/P3285", L"Author94" }, } },
    { 3364u, { { 0u, L"Remove Deprecated u8path overloads From C++26", L"Alisdair Meredith" }, } },
    { 3365u, { { 0u, L"Remove the Deprecated Class Template from C++26", L"Alisdair Meredith" }, { 1u, L"Remove the Deprecated Class Template from C++26", L"Alisdair Meredith" }, } },
    { 3366u, { { 0u, L"Remove Deprecated Atomic Initialization API from C++26", L"Alisdair Meredith" }, { 1u, L"Remove Deprecated Atomic Initialization API from C++26", L"Alisdair Meredith" }, } },
    { 3367u, { { 0u, L"constexpr coroutines", L"Hana Dusikova" }, { 1u, L"constexpr coroutines", L"Hana Dusikova" }, { 2u, L"constexpr coroutines", L"Hana Dusikova" }, { 3u, L"constexpr coroutines", L"Hana Dusikova" }, { 4u, L"constexpr coroutines", L"Hana Dusikova" }, } },
    { 3369u, { { 0u, L"constexpr for uninitialized_default_construct", L"Giuseppe D'Angelo" }, } },
    { 3370u, { { 0u, L"Add new library headers from C23", L"Author1475" }, { 1u, L"Add new library headers from C23", L"Author1018" }, } },
    { 3371u, { { 0u, L"Fix C++26 by making the symmetric and Hermitian rank-k and rank-2k updates consistent with the BLAS", L"Mark Hoemmen" }, { 1u, L"Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", L"Mark Hoemmen" }, { 2u, L"Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", L"Mark Hoemmen" }, { 3u, L"Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", L"Mark Hoemmen" }, { 4u, L"Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", L"Mark Hoemmen" }, } },
    { 3372u, { { 0u, L"constexpr containers", L"Hana Dusikova" }, { 1u, L"constexpr containers", L"Hana Dusikova" }, { 2u, L"constexpr containers", L"Hana Dusikova" }, { 3u, L"constexpr containers", L"Hana Dusikova" }, } },
    { 3373u, { { 0u, L"Paper", L"Robert Leahy" }, { 1u, L"Paper R1", L"1" }, } },
    { 3374u, { { 0u, L"Adding formatter for fpos<mbstate_t>", L"Liang Jiaming" }, { 1u, L"Adding formatter for fpos<mbstate_t>", L"Liang Jiaming" }, } },
    { 3375u, { { 0u, L"Reproducible floating-point results", L"Guy Davidson" }, { 1u, L"Reproducible floating-point results", L"Guy Davidson" }, { 2u, L"Reproducible floating-point results", L"Guy Davidson" }, } },
    { 3376u, { { 0u, L"Contract assertions versus static analysis and 'safety'", L"\u00A0\u00A0" }, } },
    { 3378u, { { 0u, L"constexpr exception types", L"Hana Dusikova" }, { 1u, L"constexpr exception types", L"Hana Dusikova" }, { 2u, L"constexpr exception types", L"Hana Dusikova" }, } },
    { 3379u, { { 0u, L"Constrain std::expected equality operators", L"Author684" }, } },
    { 3380u, { { 0u, L"Extending support for class types as non-type templateparameters", L"Barry Revzin" }, { 1u, L"Extending support for class types as non-type templateparameters", L"Barry Revzin" }, } },
    { 3381u, { { 0u, L"Syntax for Reflection", L"Wyatt Childers" }, } },
    { 3382u, { { 0u, L"Coarse clocks and resolutions", L"Author1866" }, } },
    { 3383u, { { 0u, L"mdspan.at()", L"Stephan Lachnit" }, { 1u, L"mdspan.at()", L"Stephan Lachnit" }, { 2u, L"mdspan.at()", L"Stephan Lachnit" }, } },
    { 3384u, { { 0u, L"__COUNTER__", L"Jeremy Rifkin" }, } },
    { 3385u, { { 0u, L"Attributes reflection", L"Aurelien Cassagnes" }, { 1u, L"Attributes reflection", L"Aurelien Cassagnes" }, { 2u, L"Attributes reflection", L"Aurelien Cassagnes" }, { 3u, L"Attributes reflection", L"Aurelien Cassagnes" }, { 4u, L"Attributes reflection", L"Aurelien Cassagnes" }, } },
    { 3386u, { { 0u, L"Title708", L"Joshua Berne" }, { 1u, L"Title1193", L"Joshua Berne" }, } },
    { 3387u, { { 0u, L"Title148", L"Author174" }, } },
    { 3388u, { { 0u, L"Paper", L"Robert Leahy" }, { 1u, L"Paper R1", L"1 Authors" }, { 2u, L"Paper R2", L"1" }, } },
    { 3389u, { { 0u, L"Slides", L"Author750" }, } },
    { 3390u, { { 0u, L"Safe C++", L"Sean Baxter" }, } },
    { 3391u, { { 0u, L"constexpr std::format", L"Barry Revzin" }, { 1u, L"constexpr std::format", L"Barry Revzin" }, } },
    { 3392u, { { 0u, L"Do not promise support for function syntax of operators", L"Corentin Jabot" }, } },
    { 3394u, { { 0u, L"Annotations for Reflection", L"Wyatt Childers" }, { 1u, L"Annotations for Reflection", L"Wyatt Childers" }, { 2u, L"Annotations for Reflection", L"Wyatt Childers" }, } },
    { 3395u, { { 0u, L"Formatting of std::error_code", L"Victor Zverovich" }, { 1u, L"Fix encoding issues and add a formatter for std::error_code", L"Victor Zverovich" }, { 2u, L"Fix encoding issues and add a formatter for std::error_code", L"Victor Zverovich" }, { 3u, L"Fix encoding issues and add a formatter for std::error_code", L"Victor Zverovich" }, } },
    { 3396u, { { 0u, L"Title1678", L"Author2183" }, { 1u, L"Title1337", L"Author1731" }, } },
    { 3397u, { { 0u, L"Clarify requirements on extended floating point types", L"Author2007" }, } },
    { 3398u, { { 0u, L"User specified type decay", L"Bengt Gustafsson" }, } },
    { 3399u, { { 0u, L"Title1090", L"Inbal Levi" }, } },
    { 3400u, { { 0u, L"Title628", L"Joshua Berne" }, { 1u, L"Title210", L"Joshua Berne" }, } },
    { 3401u, { { 0u, L"Title69", L"Tian Liao" }, } },
    { 3402u, { { 0u, L"A Safety Profile Verifying Class Initialization", L"Marc-Andr\u00E9 Laverdi\u00E8re" }, { 1u, L"A Safety Profile Verifying Class Initialization", L"Marc-Andr\u00E9 Laverdi\u00E8re" }, { 2u, L"A Safety Profile Verifying Initialization", L"Marc-Andr\u00E9 Laverdi\u00E8re" }, } },
    { 3403u, { { 0u, L"The Undefined Behavior Question", L"Andrew Tomazos" }, } },
    { 3404u, { { 0u, L"std::at : Range-checked accesses to arbitrary containers", L"Andre Kostur" }, } },
    { 3405u, { { 0u, L"Out-of-order designated initializers", L"Elias Kosunen" }, } },
    { 3406u, { { 0u, L"Title686", L"Author861" }, } },
    { 3407u, { { 0u, L"Make idiomatic usage of `offsetof` well-defined", L"Brian Bi" }, { 1u, L"Make idiomatic usage of `offsetof` well-defined", L"Brian Bi" }, } },
    { 3409u, { { 0u, L"Enabling more efficient stop-token based cancellation of senders", L"Author1795" }, { 1u, L"Enabling more efficient stop-token based cancellation of senders", L"Author1452" }, } },
    { 3411u, { { 0u, L"`any_view`", L"Hui Xie" }, { 1u, L"`any_view`", L"Hui Xie" }, } },
    { 3412u, { { 0u, L"String interpolation", L"Bengt Gustafsson" }, { 1u, L"String interpolation", L"Bengt Gustafsson" }, } },
    { 3413u, { { 0u, L"Title1596", L"Corentin Jabot" }, } },
    { 3415u, { { 0u, L"Range interface in std::optional breaks code!", L"\u00A0\u00A0" }, } },
    { 3416u, { { 0u, L"exception_ptr_cast: Add && = delete overload", L"Author561" }, } },
    { 3417u, { { 0u, L"Improve the handling of exceptions thrown from contract predicates", L"Author2014" }, { 1u, L"Improve the handling of exceptions thrown from contract predicates", L"Author354" }, } },
    { 3419u, { { 0u, L"Reflection Syntax Options Summary", L"Michael Levine" }, } },
    { 3420u, { { 0u, L"Reflection of Templates", L"Barry Revzin" }, { 1u, L"Reflection of Templates", L"Barry Revzin" }, } },
    { 3421u, { { 0u, L"Consteval destructors", L"Ben Craig" }, } },
    { 3422u, { { 0u, L"Allow main function in named modules", L"Chuanqi Xu" }, { 1u, L"Allow main function in named modules", L"Chuanqi Xu" }, } },
    { 3423u, { { 0u, L"Extending User-Generated Diagnostic Messages", L"Yihe Li" }, { 1u, L"Extending User-Generated Diagnostic Messages", L"Yihe Li" }, } },
    { 3424u, { { 0u, L"Define Delete With Throwing Exception Specification", L"Alisdair Meredith" }, } },
    { 3425u, { { 0u, L"Reducing operation-state sizes for subobject child operations", L"Author1985" }, { 1u, L"D3425R1: Reducing operation-state sizes for subobject child operations", L"Author1494" }, } },
    { 3427u, { { 0u, L"Hazard Pointer Synchronous Reclamation", L"Maged M" }, { 1u, L"Hazard Pointer Synchronous Reclamation", L"Maged M" }, } },
    { 3428u, { { 0u, L"Hazard Pointer Batches", L"Maged M" }, { 1u, L"Hazard Pointer Batches", L"Maged M" }, } },
    { 3429u, { { 0u, L"<meta> should minimize standard librarydependencies", L"Jonathan M\u00FCller" }, { 1u, L"<meta> should minimize standard librarydependencies", L"Jonathan M\u00FCller" }, } },
    { 3430u, { { 0u, L"simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R0]", L"Matthias Kretz" }, { 1u, L"simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R1]", L"Matthias Kretz" }, { 2u, L"simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R2]", L"Matthias Kretz" }, { 3u, L"simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R3]", L"Matthias Kretz" }, } },
    { 3431u, { { 0u, L"Deprecate `const`-qualifier on begin/end of views", L"Jonathan M\u00FCller" }, } },
    { 3433u, { { 0u, L"Allocator Support for Operation States", L"Dietmar Khl" }, } },
    { 3435u, { { 0u, L"Reflection and meta-programming", L"Jean-Baptiste VALLON" }, } },
    { 3436u, { { 0u, L"Title837", L"Herb Sutter" }, { 1u, L"Title1319", L"Herb Sutter" }, } },
    { 3437u, { { 0u, L"Title770", L"Herb Sutter" }, { 1u, L"Title246", L"Herb Sutter" }, } },
    { 3438u, { { 0u, L"Make integral overloads of std::to_string constexpr", L"Andreas Fertig" }, } },
    { 3439u, { { 0u, L"Title1611", L"Herb Sutter" }, { 1u, L"Title109", L"Herb Sutter" }, } },
    { 3440u, { { 0u, L"Add n_elements named constructor to std::simd", L"Daniel Towner" }, } },
    { 3441u, { { 0u, L"Rename <code>simd_split</code> to <code>simd_chunk</code>", L"Daniel Towner" }, { 1u, L"Rename <code>simd_split</code> to <code>simd_chunk</code>", L"Daniel Towner" }, { 2u, L"Rename <code>simd_split</code> to <code>simd_chunk</code>", L"Daniel Towner" }, } },
    { 3442u, { { 0u, L"Title643", L"Author796" }, { 1u, L"Title595", L"Author738" }, } },
    { 3443u, { { 0u, L"P3443R0 - Reflection on SG21s 2024 Process", L"Ran Regev" }, } },
    { 3444u, { { 0u, L"Memory Safety without Lifetime Parameters", L"Sean Baxter" }, } },
    { 3445u, { { 0u, L"Add utilities for easier type/bit casting in std::simd", L"Daniel Towner" }, } },
    { 3446u, { { 0u, L"Title1164", L"Author1497" }, } },
    { 3447u, { { 0u, L"Title284", L"Author335" }, } },
    { 3449u, { { 0u, L"constexpr std::generator", L"Hana Dusikova" }, { 1u, L"constexpr generator", L"Hana Dusikova" }, } },
    { 3450u, { { 0u, L"Extend std::is_within_lifetime", L"Barry Revzin" }, } },
    { 3451u, { { 0u, L"A Suggestion for Reflection Access Control", L"Barry Revzin" }, } },
    { 3454u, { { 0u, L"Revising Atomic Max/Min Operations", L"Michael Wong" }, } },
    { 3455u, { { 0u, L"SG14 2024/05/22 P3455R0.docx", L"Michael Wong" }, } },
    { 3456u, { { 0u, L"system_scheduler on Win32, Darwin and Linux", L"Author1968" }, } },
    { 3457u, { { 0u, L"SG19 2024/10/15 P3457R0.docx", L"Michael Wong" }, } },
    { 3460u, { { 0u, L"Implementors Notes", L"Author658" }, } },
    { 3465u, { { 0u, L"Title874", L"Herb Sutter" }, } },
    { 3466u, { { 0u, L"Title1518", L"Herb Sutter" }, { 1u, L"Title751", L"Herb Sutter" }, } },
    { 3467u, { { 0u, L"P3467R0R0: 2024-10 Library Evolution Polls", L"Inbal Levi" }, } },
    { 3468u, { { 0u, L"2024-10 Library Evolution Poll Outcomes", L"Inbal Levi" }, } },
    { 3469u, { { 0u, L"Virtual deducing", L"Mike Spertus" }, } },
    { 3470u, { { 0u, L"Interface-Unit-Only Module Library Support", L"Daniel Ruoso" }, } },
    { 3471u, { { 0u, L"Standard library hardening", L"Konstantin Varlamov" }, { 1u, L"Standard library hardening", L"Konstantin Varlamov" }, { 2u, L"Standard library hardening", L"Konstantin Varlamov" }, { 3u, L"Standard library hardening", L"Konstantin Varlamov" }, { 4u, L"Standard library hardening", L"Konstantin Varlamov" }, } },
    { 3472u, { { 0u, L"Make fiber_context::can_resume() const", L"\u00A0\u00A0" }, { 1u, L"Make fiber_context::can_resume() const", L"\u00A0\u00A0" }, } },
    { 3473u, { { 0u, L"Splicing Should Respect Access Control", L"Steve Downey" }, } },
    { 3474u, { { 0u, L"std::arguments", L"Jeremy Rifkin" }, } },
    { 3475u, { { 0u, L"Defang and deprecate memory_order::consume", L"Author2038" }, { 1u, L"Defang and deprecate memory_order::consume", L"Author1081" }, { 2u, L"Defang and deprecate memory_order::consume", L"Author1000" }, } },
    { 3476u, { { 0u, L"p2688r2", L"Author163" }, } },
    { 3477u, { { 0u, L"There are exactly 8 bits in a byte", L"JF Bastien" }, { 1u, L"There are exactly 8 bits in a byte", L"JF Bastien" }, { 2u, L"There are exactly 8 bits in a byte", L"JF Bastien" }, { 3u, L"There are exactly 8 bits in a byte", L"JF Bastien" }, { 4u, L"There are exactly 8 bits in a byte", L"JF Bastien" }, { 5u, L"There are exactly 8 bits in a byte", L"JF Bastien" }, } },
    { 3478u, { { 0u, L"p3478r0", L"Author1860" }, } },
    { 3479u, { { 0u, L"Enabling C pragma support in C++", L"Joshua Cranmer" }, } },
    { 3480u, { { 0u, L"std::simd is a range [P3480R0]", L"Matthias Kretz" }, { 1u, L"std::simd is a range [P3480R1]", L"Matthias Kretz" }, { 2u, L"std::simd is a range [P3480R2]", L"Matthias Kretz" }, { 3u, L"std::simd is a range [P3480R3]", L"Matthias Kretz" }, { 4u, L"std::simd is a range [P3480R4]", L"Matthias Kretz" }, } },
    { 3481u, { { 0u, L"Title1471", L"Author1907" }, { 1u, L"std::execution::bulk() issues", L"Lucian Radu" }, { 2u, L"std::execution::bulk() issues", L"Lucian Radu" }, { 3u, L"std::execution::bulk() issues", L"Lucian Radu" }, } },
    { 3482u, { { 0u, L"Design for C++ networking based on IETF TAPS", L"Thomas Rodgers" }, { 1u, L"Design for C++ networking based on IETF TAPS", L"Thomas Rodgers" }, } },
    { 3483u, { { 0u, L"Title951", L"Author1213" }, { 1u, L"Title1707", L"Author2231" }, } },
    { 3484u, { { 0u, L"Title1076", L"Author1384" }, { 1u, L"Title691", L"Author865" }, { 2u, L"Title695", L"Author870" }, } },
    { 3485u, { { 0u, L"Grouping using declarations with braces", L"Barry Revzin" }, } },
    { 3487u, { { 0u, L"Title1386", L"Author1786" }, } },
    { 3488u, { { 0u, L"Floating-Point Excess Precision [P3488R0]", L"Matthias Kretz" }, { 1u, L"Floating-Point Excess Precision [P3488R1]", L"Matthias Kretz" }, } },
    { 3489u, { { 0u, L"Title1465", L"Author1895" }, } },
    { 3490u, { { 0u, L"Justification for ranges as the output of parallel rangealgorithms", L"Alexey Kukanov" }, } },
    { 3491u, { { 0u, L"define_static_{string,object,array}", L"Wyatt Childers" }, { 1u, L"define_static_{string,object,array}", L"Wyatt Childers" }, { 2u, L"define_static_{string,object,array}", L"Wyatt Childers" }, } },
    { 3492u, { { 0u, L"Sized deallocation for placement new", L"Lauri Vasama" }, { 1u, L"Sized deallocation for placement new", L"Lauri Vasama" }, { 2u, L"Sized deallocation for placement new", L"Lauri Vasama" }, } },
    { 3493u, { { 0u, L"Ruminations on reflection and access", L"Author1414" }, } },
    { 3495u, { { 0u, L"Title912", L"Author1147" }, } },
    { 3496u, { { 0u, L"Immediate-Escalating Expressions", L"Barry Revzin" }, } },
    { 3497u, { { 0u, L"Title1394", L"Jan Wilmans" }, } },
    { 3498u, { { 0u, L"Title335", L"gdr@microsoft.com Audience" }, } },
    { 3499u, { { 0u, L"Title1220", L"Author1573" }, { 1u, L"Title285", L"Author338" }, } },
    { 3500u, { { 0u, L"P3500 v2", L"Author105" }, { 1u, L"P3500 Are Contracts \"safe\"?", L"Author241" }, } },
    { 3501u, { { 0u, L"The ad-dressing of cats", L"Author2031" }, } },
    { 3502u, { { 0u, L"p3502r0", L"Author488" }, } },
    { 3503u, { { 0u, L"Make type-erased allocator use in promise and packaged_taskconsistent", L"Nicolas Morales" }, { 1u, L"Make type-erased allocator use in `promise` and `packaged_task`consistent", L"Nicolas Morales" }, { 2u, L"Make type-erased allocator use in `promise` and `packaged_task`consistent", L"Nicolas Morales" }, } },
    { 3504u, { { 0u, L"C++ Standard Library Issues to be moved in Wrocaw, Nov. 2024", L"Author172" }, } },
    { 3505u, { { 0u, L"Fix the default floating-point representation in std::format", L"Victor Zverovich" }, } },
    { 3506u, { { 0u, L"Title583", L"gdr@microsoft.com Audience" }, } },
    { 3508u, { { 0u, L"Wording for \"constexpr for specialized memory algorithms\"", L"Giuseppe D'Angelo" }, } },
    { 3510u, { { 0u, L"Leftover properties of `this` in constructorpreconditions", L"Nathan Myers" }, { 1u, L"Leftover properties of `this` in constructorpreconditions", L"Nathan Myers" }, { 2u, L"Leftover properties of `this` in constructorpreconditions", L"Nathan Myers" }, } },
    { 3514u, { { 0u, L"\"RFC 3514: The Security Flag\" for C++", L"Steve Downey" }, } },
    { 3516u, { { 0u, L"Uninitialized algorithms for relocation", L"Louis Dionne" }, { 1u, L"Uninitialized algorithms for relocation", L"Louis Dionne" }, } },
    { 3517u, { { 0u, L"P3517R0", L"Author1368" }, } },
    { 3518u, { { 0u, L"constexpr type ordering (P2830R4)", L"Author1479" }, } },
    { 3519u, { { 0u, L"P3425 Reducing operation-state sizes for sub-object child operations", L"Author1343" }, } },
    { 3520u, { { 0u, L"Title1047", L"Author1353" }, } },
    { 3521u, { { 0u, L"Pattern Matching: Customization Point for Open SumTypes", L"Michael Park" }, } },
    { 3524u, { { 0u, L"Core \"ready\" Issues", L"Author774" }, } },
    { 3525u, { { 0u, L"Explicit Implicit Template Regions", L"Barry Revzin" }, } },
    { 3526u, { { 0u, L"Container truncation", L"Author1096" }, } },
    { 3527u, { { 0u, L"Pattern Matching: *variant-like* and `std::expected`", L"Michael Park" }, { 1u, L"Pattern Matching: *variant-like* and `std::expected`", L"Michael Park" }, } },
    { 3530u, { { 0u, L"Intrinsic for reading uninitialized memory", L"Boleyn Su" }, } },
    { 3533u, { { 0u, L"constexpr virtual inheritance", L"Hana Dusikova" }, { 1u, L"constexpr virtual inheritance", L"Hana Dusikova" }, { 2u, L"constexpr virtual inheritance", L"Hana Dusikova" }, } },
    { 3534u, { { 0u, L"Avoid UB When Compiling Code That Violates Library Specification", L"Alisdair Meredith" }, } },
    { 3537u, { { 0u, L"Concurrent Queues API - P0260R13", L"Author2191" }, { 1u, L"Concurrent Queues API - P0260R15 / P3537R1", L"Author1237" }, } },
    { 3539u, { { 1u, L"Consistent Function Label Naming for Sections", L"PaweB Benetkiewicz" }, } },
    { 3540u, { { 0u, L"#embed offset parameter", L"JeanHeyd Meneide" }, { 1u, L"#embed offset parameter", L"JeanHeyd Meneide" }, } },
    { 3541u, { { 0u, L"Violation handlers vs `noexcept`", L"\u00A0\u00A0" }, { 1u, L"Violation handlers vs `noexcept`", L"\u00A0\u00A0" }, } },
    { 3542u, { { 0u, L"Abolish the term \"converting constructor\"", L"Author1356" }, } },
    { 3543u, { { 0u, L"Response to Core Safety Profiles (P3081)", L"Mungo Gill" }, } },
    { 3544u, { { 0u, L"<code>ranges::to<view></code>", L"Author436" }, } },
    { 3546u, { { 0u, L"Title1010", L"Author1306" }, } },
    { 3547u, { { 0u, L"Modeling Access Control With Reflection", L"Dan Katz" }, { 1u, L"Modeling Access Control With Reflection", L"Dan Katz" }, } },
    { 3548u, { { 0u, L"Title876", L"Niall Douglas" }, } },
    { 3549u, { { 0u, L"Diverging Expressions", L"Bruno Cardoso" }, } },
    { 3550u, { { 0u, L"Imports cannot &", L"Alisdair Meredith" }, } },
    { 3552u, { { 0u, L"Add a Coroutine Lazy Type", L"Dietmar Khl" }, { 1u, L"Add a Coroutine Task Type", L"Dietmar Khl" }, } },
    { 3554u, { { 0u, L"Non-transient allocation with std::vector andstd::basic_string", L"Barry Revzin" }, } },
    { 3555u, { { 0u, L"An infinite range concept", L"Jonathan M\u00FCller" }, } },
    { 3556u, { { 0u, L"Input Files Are Source Files", L"Alisdair Meredith" }, } },
    { 3557u, { { 0u, L"High-Quality Sender Diagnostics with ConstexprExceptions", L"Eric Niebler" }, { 1u, L"High-Quality Sender Diagnostics with ConstexprExceptions", L"Eric Niebler" }, } },
    { 3558u, { { 0u, L"Title1213", L"Joshua Berne" }, { 1u, L"Title217", L"Joshua Berne" }, } },
    { 3559u, { { 0u, L"is_trivially_relocatable: One trait or two?", L"Arthur O'Dwyer" }, } },
    { 3560u, { { 0u, L"Error Handling in Reflection", L"Peter Dimov" }, } },
    { 3561u, { { 0u, L"coproducts.dvi", L"Author622" }, { 1u, L"coproducts.dvi", L"Author2200" }, { 2u, L"coproducts.dvi", L"Author1198" }, } },
    { 3564u, { { 0u, L"Make the concurrent forward progress guarantee usable in bulk", L"Mark Hoemmen" }, } },
    { 3565u, { { 0u, L"Virtual floating-point values", L"Author2177" }, } },
    { 3566u, { { 0u, L"P3566R0 - You shall not pass `char*` - Google Docs", L"Author256" }, } },
    { 3567u, { { 0u, L"flat_meow Fixes", L"Hui Xie" }, } },
    { 3568u, { { 0u, L"break label; and continue label;", L"Jan Schultke" }, { 1u, L"break label; and continue label;", L"Jan Schultke" }, } },
    { 3569u, { { 0u, L"SplitOutDefineAggregate", L"Shafik Yaghmour" }, } },
    { 3570u, { { 0u, L"optional variants in sender/receiver", L"Fabio Fracassi" }, } },
    { 3572u, { { 0u, L"Title1521", L"Bjarne Stroustrup" }, } },
    { 3573u, { { 0u, L"Title894", L"Michael Hava" }, } },
    { 3574u, { { 0u, L"Title1329", L"Author1724" }, } },
    { 3575u, { { 0u, L"SG14 2025/01/13 P3575R0.docx", L"Michael Wong" }, } },
    { 3576u, { { 0u, L"SG19 2025/1/13 P3576R0.docx", L"Michael Wong" }, } },
    { 3577u, { { 0u, L"Title902", L"Author1133" }, } },
    { 3578u, { { 0u, L"The \"Grandma Safety\" Paper", L"Author1525" }, } },
    { 3579u, { { 0u, L"Fix matching of non-type template parameters when matchingtemplate template parameters", L"Matheus Izvekov" }, { 1u, L"Fix matching of non-type template parameters when matchingtemplate template parameters", L"Matheus Izvekov" }, } },
    { 3580u, { { 0u, L"The Naming of Things", L"Author1857" }, } },
    { 3581u, { { 0u, L"Title1025", L"1" }, } },
    { 3582u, { { 0u, L"Observed a contract violation? Skip subsequent assertions!", L"\u00A0\u00A0" }, } },
    { 3583u, { { 0u, L"Contracts, Types & Functions", L"Jonas Persson" }, } },
    { 3584u, { { 0u, L"Title375", L"Mingxin Wang" }, } },
    { 3585u, { { 0u, L"`allocator_traits::is_internally_relocatable`", L"Pablo Halpern" }, } },
    { 3586u, { { 0u, L"The Plethora of Problems With Profiles", L"Corentin Jabot" }, } },
    { 3587u, { { 0u, L"Reconsider reflection access for C++26", L"Lauri Vasama" }, } },
    { 3588u, { { 0u, L"Allow static data members in local and unnamed classes", L"Brian Bi" }, } },
    { 3589u, { { 0u, L"Title1579", L"gdr@microsoft.com Audience" }, { 1u, L"Title181", L"gdr@microsoft.com Audience" }, } },
    { 3590u, { { 0u, L"Constexpr Coroutine Burdens", L"Daveed Vandevoorde" }, } },
    { 3591u, { { 0u, L"Title339", L"Joshua Berne" }, } },
    { 3592u, { { 0u, L"Title1452", L"Joshua Berne" }, } },
    { 3599u, { { 0u, L"Title900", L"Joshua Berne" }, } },
    { 3603u, { { 0u, L"Consteval-only Values and Consteval Variables", L"Barry Revzin" }, } },
    { 3605u, { { 0u, L"Title901", L"Author1131" }, } },
    { 3606u, { { 0u, L"On Overload Resolution, Exact Matches, and CleverImplementations", L"Corentin Jabot" }, } },
    { 3608u, { { 0u, L"Contracts and profiles: what can we reasonably ship in C++26", L"Author1980" }, } },
    { 3611u, { { 0u, L"Title1675", L"Author2180" }, } },
    { 3613u, { { 0u, L"On the beating of horses, and other matters", L"Tim Song" }, } },
    { 3614u, { { 0u, L"Do not remove nor postpone access_context::unchecked", L"Author231" }, } },
    { 3615u, { { 0u, L"C++ Standard Library Issues to be moved in Hagenberg, Feb. 2025", L"Author1722" }, } },
    { 3616u, { { 0u, L"Remove contracts on virtual functions for now", L"Author1759" }, } },
    { 3618u, { { 0u, L"Allow attaching main to the global module", L"Michael Spencer" }, } },
    { 3619u, { { 0u, L"Counter-examples for P2688R5", L"Author2030" }, { 1u, L"Counter-examples for P2688R5", L"Author246" }, } },
    { 3620u, { { 0u, L"Title1516", L"Author1953" }, } },
    { 3623u, { { 0u, L"Add noexcept to [iterator.range] (LWG 3537)", L"Arthur O'Dwyer" }, } },
    { 3625u, { { 0u, L"D3625 - either neither", L"Michael Florian" }, } },
    { 3626u, { { 0u, L"Title331", L"Author388" }, } },
    { 3627u, { { 0u, L"RCE-defense security profiles for existing C++ code", L"Author125" }, } },
    { 3628u, { { 0u, L"break label; and continue label;, tl; dr", L"Jan Schultke" }, } },
    { 3630u, { { 0u, L"PowerPoint-Prsentation", L"Jan Schultke" }, } },
    { 3632u, { { 0u, L"Title904", L"Author1136" }, { 1u, L"Title1698", L"Author2218" }, } },
    { 3633u, { { 0u, L"A Byte is a Byte", L"Author1107" }, } },
    { 3635u, { { 0u, L"Title1469", L"Nevin " }, } },
    { 3636u, { { 0u, L"P3636 No, inplace_vector shouldn't have an Allocator", L"Author268" }, } },
    { 3637u, { { 0u, L"Inherit std::meta::exception from std::exception - Google Docs", L"Author2114" }, } },
    { 3638u, { { 0u, L"Core \"ready\" Issues", L"Author541" }, } },
    { 3639u, { { 0u, L"The _BitInt Debate", L"Jan Schultke" }, } },
    { 3640u, { { 0u, L"Make contracts reliable by default", L"Jonas Persson" }, } },
    { 3641u, { { 0u, L"Rename std::observable to std::observable_checkpoint, and add a feature-test macro", L"Jan Schultke" }, } },
    { 3642u, { { 0u, L"Carry-less product: std::clmul", L"Jan Schultke" }, } },
    { 3643u, { { 0u, L"std::to_signed and std::to_unsigned", L"Jan Schultke" }, } },
    { 3650u, { { 0u, L"Title1307", L"Bjarne Stroustrup" }, } },
    { 3651u, { { 0u, L"Title697", L"Bjarne Stroustrup" }, } },
    { 3652u, { { 0u, L"Constexpr floating-point <charconv> functions", L"L\u00E9n\u00E1rd Szolnoki" }, { 1u, L"Constexpr floating-point <charconv> functions", L"L\u00E9n\u00E1rd Szolnoki" }, } },
    { 3654u, { { 0u, L"Title1630", L"Author2111" }, } },
    { 3655u, { { 0u, L"std::zstring_view", L"Author1418" }, } },
    { 3656u, { { 0u, L"Title868", L"Author1078" }, { 1u, L"Title845", L"Author1054" }, } },
    { 3657u, { { 0u, L"A Grammar for Whitespace Characters", L"Alisdair Meredith" }, } },
    { 3658u, { { 0u, L"Title318", L"Author376" }, } },
    { 3660u, { { 0u, L"Improve reference_wrapper Ergonomics", L"Jeremy Rifkin" }, } },
    { 3661u, { { 0u, L"Attributes, annotations, labels", L"\u00A0\u00A0" }, } },
    { 3662u, { { 0u, L"Improve Increment and Decrement Operator Syntax", L"Jeremy Rifkin" }, } },
    { 3663u, { { 0u, L"Future-proof submdspan_mapping?", L"Mark Hoemmen" }, } },
    { 3664u, { { 0u, L"Make `variant_size` SFINAE friendly", L"Zach Laine" }, } },
    { 3665u, { { 0u, L"Vertical Text Processing", L"Jeremy Rifkin" }, } },
    { 3667u, { { 0u, L"Title267", L"Author317" }, } },
    { 3668u, { { 0u, L"Defaulting Postfix Increment and Decrement Operations", L"Matthew Taylor" }, } },
    { 3669u, { { 0u, L"Non-Blocking Support for `std::execution`", L"Detlef Vollmann" }, } },
    { 3670u, { { 0u, L"Title1489", L"Corentin Jabot" }, } },
    { 3671u, { { 0u, L"Title1358", L"Corentin Jabot" }, } },
    { 3672u, { { 0u, L"Title1509", L"Corentin Jabot" }, } },
    { 4000u, { { 0u, L"TS or not TS", L"Author623" }, } },
};
