{
    {    1u, { { 0u, "Remove Deprecated Use of the register Keyword", "Author5573" }, { 1u, "Remove Deprecated Use of the register Keyword", "Author6093" }, } },
    {    2u, { { 0u, "Remove Deprecated operator++(bool)", "Author1871" }, { 1u, "Remove Deprecated operator++(bool)", "Author4206" }, } },
    {    3u, { { 0u, "Removing Deprecated Exception Specifications from C++17", "Author5316" }, { 1u, "Removing Deprecated Exception Specifications from C++17", "Author4391" }, { 2u, "Removing Deprecated Exception Specifications from C++17", "Author632" }, { 3u, "Removing Deprecated Exception Specifications from C++17", "Author336" }, { 4u, "Removing Deprecated Exception Specifications from C++17", "Author1470" }, { 5u, "Removing Deprecated Exception Specifications from C++17", "Author4154" }, } },
    {    4u, { { 0u, "Remove Deprecated iostreams aliases", "Author3455" }, { 1u, "Remove Deprecated iostreams aliases", "Author4630" }, } },
    {    5u, { { 0u, "Adopt 'not_fn' from Library Fundamentals 2 for C++17", "Author1537" }, { 1u, "Adopt 'not_fn' from Library Fundamentals 2 for C++17", "Author1149" }, { 2u, "Adopt 'not_fn' from Library Fundamentals 2 for C++17", "Author944" }, { 3u, "Adopt 'not_fn' from Library Fundamentals 2 for C++17", "Author416" }, { 4u, "Adopt 'not_fn' from Library Fundamentals 2 for C++17", "Author1582" }, } },
    {    6u, { { 0u, "Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17", "Author1888" }, } },
    {    7u, { { 0u, "Constant View: A proposal for a 'std::as_const' helper function template", "Author3413" }, { 1u, "Constant View: A proposal for a 'std::as_const' helper function template", "Author2760" }, } },
    {    8u, { { 0u, "Title1622", "Author6136" }, } },
    {    9u, { { 0u, "P0009r00 : Polymorphic Multidimensional Array View", "Author4674" }, { 1u, "P0009r1 : Polymorphic Multidimensional Array Reference", "Author2343" }, { 2u, "P0009r2 : Polymorphic Multidimensional Array Reference", "Author4216" }, { 3u, "P0009r3 : Polymorphic Multidimensional Array Reference", "Author855" }, { 4u, "P0009r4 : Polymorphic Multidimensional Array Reference", "Author2861" }, { 5u, "P0009r5 : Polymorphic Multidimensional Array Reference", "Author5966" }, { 8u, "<code>mdspan</code>: A Non-Owning Multidimensional Array Reference", "Author5897" }, { 9u, "<code>mdspan</code>: A Non-Owning Multidimensional Array Reference", "Author3852" }, { 10u, "MDSPAN", "Author3482" }, { 11u, "MDSPAN", "Author2776" }, { 12u, "MDSPAN", "Author1646" }, { 13u, "MDSPAN", "Author328" }, { 14u, "MDSPAN", "Author4599" }, { 15u, "MDSPAN", "Author1294" }, { 16u, "MDSPAN", "Author1316" }, { 17u, "MDSPAN", "Author4876" }, { 18u, "MDSPAN", "Author6014" }, } },
    {   10u, { { 0u, "concurrent random number", "Author2873" }, } },
    {   11u, { { 0u, "papers/P0011R0.md - Grip", "Author3422" }, } },
    {   12u, { { 0u, "Make exception-specifications be part of the type system, version 4", "Author57" }, { 1u, "Make exception-specifications be part of the type system, version 5", "Author1929" }, } },
    {   13u, { { 0u, "Logical Operator Type Traits", "Author1715" }, { 1u, "Logical Operator Type Traits (revision 1)", "Author5711" }, } },
    {   14u, { { 0u, "Multiline Optiion", "Author4994" }, { 1u, "Proposal to add the multiline option to std::regex for its ECMAScript engine", "Author1918" }, } },
    {   15u, { { 0u, "ISO/IEC JTC1/SC22/WG21p0015r0", "Author6191" }, } },
    {   17u, { { 0u, "Extension to aggregate initialization", "Author4844" }, { 1u, "Extension to aggregate initialization", "Author4326" }, } },
    {   18u, { { 0u, "P0018r00 : Lambda Capture of *this by Value", "Author3825" }, { 1u, "P0018r1 : Lambda Capture of *this by Value", "Author6297" }, { 2u, "Capturing <tt>*this</tt>", "Author212" }, { 3u, "Capturing <tt>*this</tt>", "Author2904" }, } },
    {   19u, { { 0u, "P0019r00 : Atomic View", "Author5955" }, { 1u, "P0019R1 : Atomic View", "Author2348" }, { 2u, "P0019r2 : Atomic View", "Author1638" }, { 3u, "P0019r3 : Atomic View", "Author3853" }, { 4u, "P0019r4 : Atomic View", "Author1131" }, { 5u, "P0019r5 : Atomic View", "Author3198" }, } },
    {   20u, { { 0u, "P0020r00 : Floating Point Atomic View", "Author1743" }, { 1u, "P0020r1 : Floating Point Atomic", "Author6343" }, { 2u, "P0020r2 : Floating Point Atomic", "Author5556" }, { 3u, "P0020r3 : Floating Point Atomic", "Author1698" }, { 4u, "P0020r4 : Floating Point Atomic", "Author1209" }, { 5u, "P0020r5 : Floating Point Atomic", "Author6090" }, } },
    {   21u, { { 0u, "C++ Technical Specification", "Author4465" }, } },
    {   22u, { { 0u, "Proxy Iterators for the Ranges Extensions", "Author325" }, { 1u, "Proxy Iterators for the Ranges Extensions", "Author81" }, { 2u, "Proxy Iterators for the Ranges Extensions", "Author4227" }, } },
    {   23u, { { 0u, "Title1510", "Author5712" }, } },
    {   24u, { { 0u, "Title115", "Author392" }, { 1u, "Title1616", "Author6116" }, { 2u, "Title1701", "Author6481" }, } },
    {   25u, { { 0u, "clamp: An algorithm to 'clamp' a value between a pair of boundary values (Draft) -", "Author4420" }, { 1u, "clamp: An algorithm to 'clamp' a value between a pair of boundary values -", "Author4575" }, } },
    {   26u, { { 0u, "P0026 - MultiRange-Based For Loop Proposal - v1.1.0", "Author915" }, } },
    {   27u, { { 0u, "named_template", "Author4137" }, } },
    {   28u, { { 0u, "Title421", "Author1512" }, { 1u, "Title43", "Author122" }, { 2u, "Title1588", "Author6020" }, { 3u, "Using scoped attributes", "Author2678" }, { 4u, "Using attribute namespaces without repetition", "Author6292" }, } },
    {   29u, { { 0u, "A Unified Proposal for Composable Hashing", "Author5699" }, } },
    {   30u, { { 0u, "Microsoft Word - P0030R0.docx", "Author4586" }, { 1u, "Title128", "Author444" }, } },
    {   31u, { { 0u, "A Proposal to Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access", "Author3445" }, } },
    {   32u, { { 0u, "Title1411", "Author5354" }, { 1u, "Title1548", "Author5862" }, { 2u, "P0032R2", "Author5346" }, { 3u, "Title1571", "Author5973" }, } },
    {   33u, { { 0u, "Re-enabling shared_from_this", "Author3824" }, { 1u, "Re-enabling shared_from_this", "Author3608" }, } },
    {   34u, { { 0u, "P0034 Civil Time", "Author3356" }, } },
    {   35u, { { 0u, "Dynamic memory allocation for over-aligned data", "Author42" }, { 1u, "Dynamic memory allocation for over-aligned data", "Author1931" }, { 2u, "Dynamic memory allocation for over-aligned data", "Author301" }, { 3u, "Dynamic memory allocation for over-aligned data", "Author3083" }, { 4u, "Dynamic memory allocation for over-aligned data", "Author4893" }, } },
    {   36u, { { 0u, "Title119", "Author408" }, } },
    {   37u, { { 0u, "Fixed_Point_Library_Proposal", "Author3631" }, { 1u, "Title479", "Author1756" }, { 2u, "Title164", "Author566" }, { 3u, "Title7", "Author20" }, { 4u, "Title1314", "Author4966" }, { 5u, "Title948", "Author3563" }, { 6u, "Title969", "Author3665" }, { 7u, "p0037r7", "Author5646" }, } },
    {   38u, { { 0u, "Untitled Document.md", "Author1765" }, } },
    {   39u, { { 0u, "Untitled Document.md", "Author6441" }, } },
    {   40u, { { 0u, "Untitled Document.md", "Author981" }, { 1u, "P0040R1", "Author3829" }, { 2u, "P0040R2", "Author4375" }, { 3u, "P0040R3", "Author2291" }, } },
    {   41u, { { 0u, "Untitled Document.md", "Author2470" }, } },
    {   42u, { { 0u, "recover_cast.pages", "Author2655" }, } },
    {   43u, { { 0u, "function_container.pages", "Author4641" }, } },
    {   44u, { { 0u, "unwinding_state.pages", "Author2745" }, } },
    {   45u, { { 0u, "function.pages", "Author1643" }, { 1u, "function.pages", "Author3978" }, } },
    {   46u, { { 0u, "Change is_transparent to metafunction", "Author4346" }, { 1u, "Change is_transparent to metafunction (Revision 1)", "Author3056" }, } },
    {   47u, { { 0u, "Title453", "Author1653" }, } },
    {   48u, { { 0u, "Title646", "Author2383" }, } },
    {   50u, { { 0u, "Title186", "Author663" }, } },
    {   51u, { { 0u, "Title1476", "Author5594" }, { 1u, "Title168", "Author580" }, { 2u, "P0051R2", "Author2700" }, { 3u, "p0051r3", "Author2963" }, } },
    {   52u, { { 0u, "Title1089", "Author4068" }, { 1u, "Title835", "Author3085" }, { 2u, "Title1002", "Author3792" }, { 3u, "C++ International Standard", "Author2420" }, { 4u, "Title614", "Author2246" }, { 5u, "Title716", "Author2632" }, { 9u, "Title452", "Author1651" }, { 10u, "Title218", "Author771" }, } },
    {   53u, { { 0u, "C++ Synchronized Buffered Ostream", "Author6179" }, { 1u, "C++ Synchronized Buffered Ostream", "Author1721" }, { 2u, "C++ Synchronized Buffered Ostream", "Author4543" }, { 3u, "DRAFT C++ Synchronized Buffered Ostream", "Author1358" }, { 4u, "DRAFT C++ Synchronized Buffered Ostream", "Author5077" }, { 5u, "Title1445", "Author5484" }, } },
    {   54u, { { 0u, "D0054_ReportsFromTheField", "Author2436" }, } },
    {   55u, { { 0u, "D0055_BetterTogether", "Author1414" }, { 1u, "D0055_BetterTogether", "Author3679" }, } },
    {   56u, { { 0u, "D0056_SoftKeywords", "Author4403" }, } },
    {   57u, { { 0u, "C++ Technical Specification", "Author312" }, { 1u, "C++ Technical Specification", "Author5272" }, { 2u, "C++ Technical Specification", "Author579" }, { 3u, "C++ Technical Specification", "Author3376" }, { 4u, "C++ Technical Specification", "Author1602" }, { 5u, "C++ Technical Specification", "Author2363" }, } },
    {   58u, { { 0u, "An Interface for Abstracting Execution | P0058R0", "Author3882" }, { 1u, "An Interface for Abstracting Execution | P0058R1", "Author1692" }, } },
    {   59u, { { 0u, "Title598", "Author2188" }, { 1u, "Title881", "Author3245" }, { 2u, "Title1138", "Author4244" }, { 3u, "Title928", "Author3464" }, { 4u, "Title1156", "Author4319" }, } },
    {   60u, { { 0u, "Function Object-Based Overloading of Operator Dot", "Author12" }, } },
    {   61u, { { 0u, "Feature-testing preprocessor predicates for C++17", "Author5839" }, { 1u, "Feature-testing preprocessor predicates for C++17", "Author3350" }, } },
    {   62u, { { 0u, "When should compilers optimize atomics?", "Author3484" }, { 1u, "When should compilers optimize atomics?", "Author5750" }, } },
    {   63u, { { 0u, "C++17 should refer to C11 instead of C99", "Author1271" }, { 1u, "C++17 should refer to C11 instead of C99", "Author402" }, { 2u, "C++17 should refer to C11 instead of C99", "Author2526" }, { 3u, "C++17 should refer to C11 instead of C99", "Author5664" }, } },
    {   65u, { { 0u, "movable-il.pages", "Author1952" }, } },
    {   66u, { { 0u, "values.pages", "Author4624" }, } },
    {   67u, { { 0u, "Elementary string conversions", "Author3891" }, { 1u, "Elementary string conversions, revision 1", "Author4467" }, { 2u, "Elementary string conversions, revision 2", "Author3073" }, { 3u, "Elementary string conversions, revision 2", "Author6450" }, { 4u, "Elementary string conversions, revision 4", "Author1618" }, { 5u, "Elementary string conversions, revision 5", "Author4089" }, } },
    {   68u, { { 0u, "Title1268", "Author4788" }, } },
    {   69u, { { 0u, "Title1067", "Author4009" }, } },
    {   70u, { { 0u, "D0070_ReturnBeforeAwait", "Author5311" }, } },
    {   71u, { { 0u, "D0071_KeywordsForCoroutines", "Author106" }, } },
    {   72u, { { 0u, "Title1472", "Author5586" }, { 1u, "Title1496", "Author5674" }, } },
    {   73u, { { 0u, "Title675", "Author2510" }, { 1u, "Title973", "Author3675" }, { 2u, "Title937", "Author3525" }, } },
    {   74u, { { 0u, "Making std::owner_less more flexible", "Author4014" }, } },
    {   75u, { { 0u, "Title1481", "Author5612" }, { 1u, "Template Library for Parallel For Loops", "Author2756" }, { 2u, "Template Library for Parallel For Loops", "Author3591" }, } },
    {   76u, { { 0u, "Title231", "Author822" }, { 1u, "Vector and Wavefront Policies", "Author118" }, { 2u, "Vector and Wavefront Policies", "Author5483" }, { 3u, "Vector and Wavefront Policies", "Author154" }, { 4u, "Vector and Wavefront Policies", "Author2318" }, } },
    {   77u, { { 0u, "is_callable, the missing INVOKE related trait", "Author4366" }, { 1u, "is_callable, the missing INVOKE related trait", "Author4025" }, { 2u, "is_callable, the missing INVOKE related trait", "Author4976" }, } },
    {   78u, { { 0u, "Title338", "Author1180" }, } },
    {   79u, { { 0u, "Title743", "Author2712" }, } },
    {   80u, { { 0u, "Title991", "Author3747" }, } },
    {   81u, { { 0u, "Title1051", "Author3959" }, } },
    {   82u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author5834" }, { 1u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author4348" }, { 2u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author5442" }, } },
    {   83u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author937" }, { 1u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author2176" }, { 2u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author4888" }, { 3u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author1557" }, } },
    {   84u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author3625" }, { 1u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author3232" }, { 2u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author1254" }, } },
    {   85u, { { 0u, "Oo... adding a coherent character sequence to start octal-literals", "Author3173" }, } },
    {   86u, { { 0u, "Variant design review.", "Author1855" }, } },
    {   87u, { { 0u, "Variant: a type-safe union without undefined behavior (v2).", "Author3659" }, } },
    {   88u, { { 0u, "Variant: a type-safe union that is rarely invalid (v5).", "Author4669" }, { 1u, "Variant: a type-safe union (v6).", "Author2713" }, { 2u, "Variant: a type-safe union for C++17 (v7).", "Author2395" }, { 3u, "Variant: a type-safe union for C++17 (v8).", "Author4790" }, } },
    {   89u, { { 0u, "On the Effective Use Of Memory Allocators", "Author849" }, { 1u, "On Quantifying Memory-Allocation Strategies (Revision 2)", "Author657" }, } },
    {   90u, { { 0u, "ISO/IEC JTC1/SC22/WG21p0090r0", "Author5270" }, } },
    {   91u, { { 0u, "Template parameter deduction for constructors (Rev. 2)", "Author3426" }, { 1u, "Template argument deduction for class templates (Rev. 4)", "Author5783" }, { 2u, "Template argument deduction for class templates (Rev. 5)", "Author4437" }, { 3u, "Template argument deduction for class templates (Rev. 6)", "Author776" }, { 4u, "Template argument deduction for class templates (Rev. 7)", "Author334" }, } },
    {   92u, { { 0u, "Polishing chrono", "Author1207" }, { 1u, "Polishing chrono", "Author5570" }, } },
    {   93u, { { 0u, "Title1251", "Author4704" }, } },
    {   94u, { { 0u, "Title280", "Author1003" }, } },
    {   95u, { { 0u, "Title1591", "Author6031" }, { 1u, "Title1447", "Author5493" }, { 2u, "language_variant", "Author1283" }, } },
    {   96u, { { 0u, "Feature-testing recommendations for C++", "Author2125" }, { 1u, "Feature-testing recommendations for C++", "Author3326" }, { 2u, "Feature-testing recommendations for C++", "Author2105" }, { 3u, "Feature-testing recommendations for C++", "Author2465" }, { 4u, "Feature-testing recommendations for C++", "Author2726" }, { 5u, "Feature-testing recommendations for C++", "Author6207" }, } },
    {   97u, { { 0u, "Use Cases for Thread-Local Storage", "Author2763" }, } },
    {   98u, { { 0u, "Title1079", "Author4047" }, { 1u, "Title636", "Author2315" }, } },
    {   99u, { { 0u, "A low-level API for stackful context switching", "Author6109" }, { 1u, "A low-level API for stackful context switching", "Author638" }, } },
    {  100u, { { 0u, "Comparison in C++", "Author1039" }, { 1u, "Comparison in C++", "Author2297" }, { 2u, "Comparison in C++", "Author2273" }, } },
    {  101u, { { 0u, "An Outline of a C++ Numbers Technical Specification", "Author1763" }, } },
    {  102u, { { 0u, "C++ Parametric Number Type Aliases", "Author1033" }, } },
    {  103u, { { 0u, "Overflow-Detecting and Double-Wide Arithmetic Operations", "Author5406" }, { 1u, "Overflow-Detecting and Double-Wide Arithmetic Operations", "Author1596" }, } },
    {  104u, { { 0u, "Multi-Word Integer Operations and Types", "Author3717" }, { 1u, "Multi-Word Integer Operations and Types", "Author3630" }, } },
    {  105u, { { 0u, "Rounding and Overflow in C++", "Author343" }, { 1u, "Rounding and Overflow in C++", "Author5854" }, } },
    {  106u, { { 0u, "C++ Binary Fixed-Point Arithmetic", "Author3261" }, } },
    {  107u, { { 0u, "Title926", "Author3460" }, } },
    {  108u, { { 0u, "Skeleton Proposal for Thread-Local Storage (TLS)", "Author1578" }, { 1u, "Skeleton Proposal for Thread-Local Storage (TLS)", "Author3130" }, } },
    {  109u, { { 0u, "Function Aliases + Extended Inheritance = Opaque Typedefs", "Author1877" }, } },
    {  110u, { { 0u, "P0110: Implementing the strong guarantee for variant<> assignment", "Author1553" }, } },
    {  112u, { { 0u, "Networking Library (Revision 6)", "Author4338" }, { 1u, "Networking Library (Revision 7)", "Author755" }, } },
    {  113u, { { 0u, "Executors and Asynchronous Operations, Revision 2", "Author1752" }, } },
    {  114u, { { 0u, "Microsoft Word - Resumable Expressions rev 2.docm", "Author4259" }, } },
    {  116u, { { 0u, "Boolean conversion for Standard Library types", "Author6447" }, } },
    {  117u, { { 0u, "Generic to_string/to_wstring functions", "Author342" }, } },
    {  118u, { { 0u, "Title564", "Author2069" }, } },
    {  119u, { { 0u, "Title133", "Author463" }, { 1u, "Title212", "Author752" }, { 2u, "Title1066", "Author4007" }, } },
    {  120u, { { 0u, "constexpr unions and common initial sequences", "Author1551" }, } },
    {  121u, { { 0u, "C++ Technical Specification", "Author4675" }, } },
    {  122u, { { 0u, "Title256", "Author919" }, { 1u, "Microsoft Word - P0122R1", "Author5499" }, { 2u, "Microsoft Word - P0122R2.docx", "Author2230" }, { 3u, "Microsoft Word - D0122R3.docx", "Author4587" }, { 4u, "Microsoft Word - P0122R3", "Author3317" }, { 5u, "Microsoft Word - P0122R3", "Author2513" }, } },
    {  123u, { { 0u, "Title1230", "Author4618" }, { 1u, "Microsoft Word - P0123R1", "Author1409" }, { 2u, "Microsoft Word - P0123R2.docx", "Author5995" }, } },
    {  124u, { { 0u, "Linux-Kernel Memory Model", "Author6083" }, { 1u, "Linux-Kernel Memory Model", "Author5312" }, { 2u, "Linux-Kernel Memory Model", "Author391" }, { 3u, "Linux-Kernel Memory Model", "Author5890" }, { 4u, "Linux-Kernel Memory Model", "Author2922" }, { 5u, "Linux-Kernel Memory Model", "Author2978" }, { 6u, "Linux-Kernel Memory Model", "Author694" }, { 7u, "Linux-Kernel Memory Model", "Author4769" }, { 8u, "Linux-Kernel Memory Model", "Author3652" }, } },
    {  125u, { { 0u, "Untitled Document.md", "Author5517" }, } },
    {  126u, { { 0u, "Title288", "Author1034" }, { 1u, "Untitled", "Author1195" }, { 2u, "synchronic", "Author593" }, } },
    {  127u, { { 0u, "Declaring non-type template arguments with auto", "Author4070" }, { 1u, "Declaring non-type template arguments with auto", "Author423" }, { 2u, "Declaring non-type template parameters with auto", "Author4969" }, } },
    {  128u, { { 0u, "constexpr_if", "Author3695" }, { 1u, "constexpr if", "Author6421" }, } },
    {  129u, { { 0u, "We cannot (realistically) get rid of throwing moves", "Author1104" }, } },
    {  130u, { { 0u, "Title17", "Author55" }, } },
    {  131u, { { 0u, "Title819", "Author3022" }, } },
    {  132u, { { 0u, "Non-throwing container operations", "Author4325" }, { 1u, "Non-throwing container operations", "Author3876" }, } },
    {  133u, { { 0u, "Putting noexcept(auto) on hold, again", "Author4320" }, } },
    {  134u, { { 0u, "Introducing a name for brace-or-equal-initializers for non-static data members", "Author2981" }, } },
    {  135u, { { 0u, "Guaranteed copy elision through simplified value categories", "Author1950" }, { 1u, "Wording for guaranteed copy elision through simplified value categories", "Author3660" }, } },
    {  136u, { { 0u, "N4429: Rewording inheriting constructors (core issue 1941 et al)", "Author2056" }, { 1u, "Rewording inheriting constructors (core issue 1941 et al)", "Author856" }, } },
    {  137u, { { 0u, "Core Issue 1776: Replacement of class objects containing reference members", "Author456" }, { 1u, "Core Issue 1776: Replacement of class objects containing reference members (et al)", "Author6487" }, } },
    {  138u, { { 0u, "Title717", "Author2634" }, { 1u, "Title126", "Author438" }, { 2u, "Title513", "Author1870" }, } },
    {  141u, { { 0u, "Title1353", "Author5126" }, } },
    {  142u, { { 0u, "Title1244", "Author4678" }, } },
    {  143u, { { 0u, "Title455", "Author1665" }, { 1u, "Title1551", "Author5880" }, { 2u, "Title1576", "Author5991" }, } },
    {  144u, { { 0u, "Title481", "Author1760" }, { 1u, "Title258", "Author929" }, { 2u, "Title533", "Author1940" }, } },
    {  145u, { { 0u, "Title1271", "Author4802" }, { 1u, "Title84", "Author248" }, { 2u, "Title1052", "Author3960" }, { 3u, "Title1515", "Author5724" }, } },
    {  146u, { { 0u, "Regular Void", "Author5113" }, { 1u, "Regular Void (Revision 1)", "Author3880" }, } },
    {  147u, { { 0u, "The Use and Implementation of Contracts", "Author2933" }, } },
    {  148u, { { 0u, "Title669", "Author2492" }, } },
    {  149u, { { 0u, "Title400", "Author1427" }, { 1u, "Title1261", "Author4748" }, } },
    {  151u, { { 0u, "Title81", "Author243" }, } },
    {  152u, { { 0u, "P0152R0 constexpr atomic<T>::is_always_lock_free", "Author3109" }, { 1u, "P0152R1 constexpr atomic<T>::is_always_lock_free", "Author2015" }, } },
    {  153u, { { 0u, "P0153R0 std::atomic_object_fence(mo, T&&...)", "Author5480" }, } },
    {  154u, { { 0u, "P0154R0 constexpr std::hardware_{constructive,destructive}_interference_size", "Author4735" }, { 1u, "P0154R1 constexpr std::hardware_{constructive,destructive}_interference_size", "Author1503" }, } },
    {  155u, { { 0u, "P0155R0 | Task Block R5", "Author2232" }, } },
    {  156u, { { 0u, "Variadic lock_guard (Rev. 2)", "Author5678" }, { 1u, "Variadic lock_guard (Rev. 4)", "Author3777" }, { 2u, "Variadic lock_guard (Rev. 5)", "Author5990" }, } },
    {  157u, { { 0u, "Handling Disappointment in C++", "Author6237" }, } },
    {  158u, { { 0u, "papers/P0158R0.md - Grip", "Author3292" }, } },
    {  159u, { { 0u, "Technical Specification for C++ Extensions for Concurrency, DTS", "Author2357" }, } },
    {  160u, { { 0u, "Wording for removing defaults for unary folds", "Author5223" }, } },
    {  161u, { { 0u, "Title1539", "Author5819" }, } },
    {  162u, { { 0u, "Microsoft Word - Response to P0055R0.docm", "Author2958" }, } },
    {  163u, { { 0u, "shared_ptr::weak_type", "Author1532" }, } },
    {  164u, { { 0u, "Core Motions", "Author6219" }, } },
    {  165u, { { 0u, "C++ Standard Library Issues to be moved in Kona", "Author4392" }, { 1u, "C++ Standard Library Issues to be moved in Jacksonville", "Author5708" }, { 2u, "C++ Standard Library Issues to be moved in Oulu", "Author4035" }, { 3u, "C++ Standard Library Issues to be moved in Issaquah", "Author3423" }, { 4u, "C++ Standard Library Issues to be moved in Kona", "Author4843" }, } },
    {  166u, { { 0u, "Title144", "Author497" }, } },
    {  167u, { { 0u, "Core \"ready\" Issues", "Author6048" }, { 1u, "Core \"ready\" Issues", "Author3871" }, { 2u, "Core \"ready\" Issues", "Author4275" }, } },
    {  169u, { { 0u, "regex with Unicode character types", "Author4871" }, } },
    {  170u, { { 0u, "Title822", "Author3037" }, { 1u, "Title1343", "Author5107" }, } },
    {  171u, { { 0u, "P0171_ResponseToP0114", "Author3976" }, } },
    {  172u, { { 0u, "Abominable Function Types", "Author1713" }, } },
    {  174u, { { 0u, "Deprecating Vestigial Library Parts in C++17", "Author2307" }, { 1u, "Deprecating Vestigial Library Parts in C++17", "Author4268" }, { 2u, "Deprecating Vestigial Library Parts in C++17", "Author5156" }, } },
    {  175u, { { 0u, "Synopses for the C library", "Author276" }, { 1u, "Synopses for the C library", "Author4649" }, } },
    {  177u, { { 0u, "Cleaning up allocator_traits", "Author3458" }, { 1u, "Cleaning up allocator_traits", "Author4715" }, { 2u, "Cleaning up allocator_traits", "Author2859" }, } },
    {  178u, { { 0u, "Allocators and swap", "Author4099" }, { 1u, "Allocators and swap", "Author2539" }, } },
    {  180u, { { 0u, "Reserve a New Library Namespace Future Standardization", "Author3670" }, { 1u, "Reserve a New Library Namespace Future Standardization", "Author5411" }, { 2u, "Reserve a New Library Namespace for Future Standardization", "Author2764" }, } },
    {  181u, { { 0u, "Ordered By Default", "Author5658" }, { 1u, "Ordered By Default", "Author6405" }, } },
    {  184u, { { 0u, "Generalizing the Range-Based For Loop", "Author6211" }, } },
    {  185u, { { 0u, "Adding [nothrow-]swappable traits (Revision 2)", "Author1986" }, { 1u, "Adding [nothrow-]swappable traits (Revision 3)", "Author3147" }, } },
    {  186u, { { 0u, "Iterator Facade -", "Author5457" }, } },
    {  187u, { { 0u, "Title470", "Author1720" }, { 1u, "Title1024", "Author3864" }, } },
    {  188u, { { 0u, "Title611", "Author2234" }, { 1u, "Title1352", "Author5119" }, } },
    {  189u, { { 0u, "Title1333", "Author5063" }, { 1u, "Title1690", "Author6437" }, } },
    {  190u, { { 0u, "Title411", "Author1459" }, { 1u, "Title107", "Author355" }, { 2u, "Title586", "Author2145" }, { 3u, "Title799", "Author2926" }, { 4u, "Title521", "Author1890" }, } },
    {  191u, { { 1u, "VirtualMemberFunctionPointerComparison", "Author992" }, } },
    {  192u, { { 0u, "Title389", "Author1393" }, { 1u, "Title867", "Author3196" }, { 4u, "`short float` and fixed-size floating point types", "Author3649" }, } },
    {  193u, { { 0u, "P0193R0 Where is Vectorization in C++", "Author2618" }, { 1u, "P0193R1 Where is Vectorization in C++", "Author1001" }, } },
    {  194u, { { 0u, "Title1448", "Author5501" }, { 1u, "P0194R1 Static reflection", "Author2476" }, { 2u, "P0194R2 Static reflection", "Author1467" }, { 3u, "Static reflection", "Author952" }, { 4u, "Static reflection", "Author685" }, { 5u, "Static reflection", "Author6015" }, } },
    {  195u, { { 0u, "Title1608", "Author6101" }, { 1u, "Title233", "Author832" }, { 2u, "Pack expansions in using-declarations", "Author2967" }, } },
    {  196u, { { 0u, "P0196R0", "Author4631" }, { 1u, "P0196R1", "Author3583" }, { 2u, "P0196R2", "Author5885" }, { 3u, "p0196r3", "Author2211" }, { 4u, "p0196r4", "Author3470" }, { 5u, "p0196r5", "Author1505" }, } },
    {  197u, { { 0u, "P0197R0", "Author666" }, } },
    {  198u, { { 0u, "P0198R0", "Author6452" }, } },
    {  199u, { { 0u, "P0199R0", "Author3450" }, } },
    {  200u, { { 0u, "A Proposal to Add YCombinator to the Standard Library", "Author1965" }, } },
    {  201u, { { 0u, "Title1245", "Author4683" }, { 1u, "Title461", "Author1689" }, { 2u, "Title166", "Author576" }, { 3u, "Title1498", "Author5676" }, { 4u, "Title930", "Author3492" }, { 5u, "Title297", "Author1056" }, { 6u, "<code>polymorphic_value</code>: A Polymorphic Value Type for C++", "Author3510" }, } },
    {  202u, { { 0u, "A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <cstring> Headers", "Author3381" }, { 1u, "A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers", "Author6296" }, { 2u, "A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers", "Author398" }, { 3u, "A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers", "Author2044" }, } },
    {  203u, { { 0u, "Considerations for the design of expressive portable SIMD vectors", "Author3479" }, } },
    {  205u, { { 0u, "P0205R0 Allow Seeding Random Number Engines with std::random_device", "Author4569" }, { 1u, "P0205R1 Efficient Seeding of Random Number Engines", "Author4162" }, } },
    {  206u, { { 0u, "Discussion about std::thread and RAII", "Author1573" }, { 1u, "A joining thread", "Author373" }, } },
    {  207u, { { 0u, "Ruminations on lambda captures", "Author157" }, } },
    {  208u, { { 0u, "Copy-Swap Helper", "Author2090" }, { 1u, "Copy-Swap Transaction", "Author2386" }, } },
    {  209u, { { 0u, "P0209r0 | make_from_tuple: apply for construction", "Author6063" }, { 1u, "P0209r1 | make_from_tuple: apply for construction", "Author911" }, { 2u, "P0209r2 | make_from_tuple: apply for construction", "Author2825" }, } },
    {  210u, { { 0u, "A light-weight, compact dynamic array", "Author4744" }, } },
    {  211u, { { 0u, "Allocator-aware library wrappers for dynamic allocation", "Author5069" }, { 1u, "Allocator-aware library wrappers for dynamic allocation", "Author5373" }, { 2u, "Allocator-aware library wrappers for dynamic allocation", "Author1385" }, { 3u, "Allocator-aware library wrappers for dynamic allocation", "Author2141" }, } },
    {  212u, { { 0u, "Title780", "Author2840" }, { 1u, "Title385", "Author1377" }, } },
    {  213u, { { 0u, "On the Effective Use Of Memory Allocators", "Author4254" }, } },
    {  214u, { { 0u, "Data-Parallel Vector Types & Operations [P0214R0]", "Author895" }, { 1u, "Data-Parallel Vector Types & Operations [P0214R1]", "Author2725" }, { 2u, "Data-Parallel Vector Types & Operations [P0214R2]", "Author1775" }, { 3u, "Data-Parallel Vector Types & Operations [P0214R3]", "Author6203" }, { 4u, "Data-Parallel Vector Types & Operations [P0214R4]", "Author2373" }, { 5u, "Data-Parallel Vector Types & Operations [P0214R5]", "Author5336" }, } },
    {  215u, { { 0u, "Title889", "Author3297" }, } },
    {  216u, { { 0u, "Title462", "Author1690" }, } },
    {  217u, { { 0u, "Wording for structured bindings", "Author1921" }, { 1u, "Wording for structured bindings", "Author5008" }, { 2u, "Wording for structured bindings", "Author2560" }, { 3u, "Wording for structured bindings", "Author1667" }, } },
    {  218u, { { 0u, "C++17 Filesystem -", "Author3251" }, { 1u, "C++17 Filesystem -", "Author2744" }, } },
    {  219u, { { 0u, "Relative Paths", "Author6238" }, { 1u, "Relative Paths", "Author3513" }, } },
    {  220u, { { 0u, "C++17 Fundamentals -", "Author1695" }, { 1u, "C++17 Fundamentals -", "Author2218" }, } },
    {  221u, { { 0u, "Default comparisons", "Author6431" }, { 1u, "Proposed wording for default comparisons, revision 3", "Author6182" }, { 2u, "Proposed wording for default comparisons, revision 4", "Author3222" }, } },
    {  222u, { { 0u, "Allowing Anonymous Structs as Return Values", "Author6012" }, } },
    {  223u, { { 0u, "Class Namespace", "Author4160" }, } },
    {  224u, { { 0u, "Implicit Return Type", "Author3549" }, } },
    {  225u, { { 0u, "Why I want Concepts, and why I want them sooner rather than later", "Author5762" }, } },
    {  226u, { { 0u, "Mathematical Special Functions for C++17, v4", "Author4991" }, { 1u, "Mathematical Special Functions for C++17, v5", "Author93" }, } },
    {  227u, { { 0u, "Title1440", "Author5466" }, } },
    {  228u, { { 0u, "Java Printing.pdf", "Author5067" }, { 3u, "unique_function: a move-only std::function", "Author4368" }, } },
    {  229u, { { 0u, "Title426", "Author1533" }, } },
    {  230u, { { 0u, "Title1272", "Author4804" }, } },
    {  231u, { { 0u, "Title909", "Author3389" }, } },
    {  232u, { { 0u, "Title1262", "Author4751" }, } },
    {  233u, { { 0u, "Title1403", "Author5308" }, { 1u, "Title276", "Author986" }, { 2u, "Title306", "Author1086" }, { 3u, "Title651", "Author2407" }, { 4u, "Title1637", "Author6215" }, { 5u, "Title1564", "Author5935" }, } },
    {  234u, { { 0u, "Title610", "Author2227" }, } },
    {  235u, { { 0u, "Title1700", "Author6480" }, } },
    {  236u, { { 0u, "Title1538", "Author5817" }, } },
    {  237u, { { 0u, "Title918", "Author3425" }, { 1u, "Wording for fundamental bit manipulation utilities", "Author5653" }, { 2u, "Wording for fundamental bit manipulation utilities", "Author3159" }, { 3u, "Wording for fundamental bit manipulation utilities", "Author479" }, { 4u, "Wording for fundamental bit manipulation utilities", "Author3839" }, { 5u, "Wording for fundamental bit manipulation utilities", "Author1417" }, { 9u, "P0237R9", "Author6058" }, { 10u, "P0237R10", "Author4839" }, } },
    {  238u, { { 0u, "Return type deduction and SFINAE", "Author4463" }, { 1u, "Return type deduction and SFINAE", "Author5271" }, } },
    {  239u, { { 0u, "Title1585", "Author6013" }, } },
    {  240u, { { 0u, "Why I want Concepts, but why they should come later rather than sooner", "Author6326" }, } },
    {  241u, { { 0u, "Remove Future-Related Explicit Specializations for Void", "Author5019" }, } },
    {  242u, { { 0u, "Standard Library Support for Void", "Author3812" }, } },
    {  244u, { { 0u, "Text_view: A C++ concepts and range based character encoding and code point enumeration library", "Author4354" }, { 1u, "Text_view: A C++ concepts and range based character encoding and code point enumeration library", "Author3102" }, { 2u, "Text_view: A C++ concepts and range based character encoding and code point enumeration library", "Author651" }, } },
    {  245u, { { 0u, "Hexadecimal floating literals for C++", "Author4451" }, { 1u, "Hexadecimal floating literals for C++", "Author5303" }, } },
    {  246u, { { 0u, "Title712", "Author2625" }, } },
    {  247u, { { 0u, "Title1243", "Author4671" }, } },
    {  248u, { { 0u, "Untitled", "Author6417" }, } },
    {  249u, { { 0u, "Input Devices for 2d GraPhics", "Author3650" }, { 2u, "Input Devices for 2d GraPhics", "Author5843" }, } },
    {  250u, { { 0u, "Wording improvements for initialization and thread ids (CWG 2046)", "Author4077" }, { 1u, "Wording improvements for initialization and thread ids (CWG 2046)", "Author1919" }, { 2u, "Wording improvements for initialization and thread ids (CWG 2046, 1784)", "Author547" }, { 3u, "D0250R3: Wording improvements for initialization and thread ids (CWG 2046, 1784)", "Author1745" }, } },
    {  251u, { { 0u, "Title593", "Author2168" }, } },
    {  252u, { { 0u, "Title189", "Author674" }, { 1u, "Title1093", "Author4085" }, { 2u, "Title1425", "Author5400" }, } },
    {  253u, { { 0u, "BMH Wording", "Author1380" }, { 1u, "P0253R1", "Author5701" }, } },
    {  254u, { { 0u, "Integrating string_view", "Author6209" }, { 1u, "Integrating string_viewR1", "Author4140" }, { 2u, "Integrating string_viewR2", "Author6069" }, } },
    {  255u, { { 0u, "C++ International Standard", "Author5183" }, } },
    {  256u, { { 0u, "C++ International Standard", "Author5104" }, } },
    {  257u, { { 0u, "Microsoft Word - P0257R0", "Author5041" }, { 1u, "Microsoft Word - P0257R1.docx", "Author2901" }, } },
    {  258u, { { 0u, "is_contiguous_layout", "Author5925" }, { 1u, "is_contiguous_layout", "Author4176" }, { 2u, "P0258R2 has_unique_object_representations - wording", "Author6427" }, } },
    {  259u, { { 0u, "Title1560", "Author5909" }, } },
    {  260u, { { 0u, "C++ Concurrent Queues", "Author823" }, { 1u, "C++ Concurrent Queues", "Author5628" }, { 2u, "C++ Concurrent Queues", "Author2537" }, { 3u, "C++ Concurrent Queues", "Author2467" }, { 4u, "C++ Concurrent Queues", "Author540" }, { 5u, "C++ Concurrent Queues", "Author1023" }, { 6u, "C++ Concurrent Queues", "Author504" }, { 7u, "C++ Concurrent Queues", "Author4203" }, { 8u, "C++ Concurrent Queues", "Author4305" }, { 9u, "C++ Concurrent Queues", "Author2615" }, { 10u, "C++ Concurrent Queues", "Author1696" }, { 11u, "C++ Concurrent Queues", "Author3750" }, { 12u, "C++ Concurrent Queues", "Author5595" }, { 13u, "C++ Concurrent Queues", "Author411" }, { 14u, "C++ Concurrent Queues", "Author1498" }, { 15u, "C++ Concurrent Queues", "Author5080" }, { 16u, "C++ Concurrent Queues", "Author3371" }, { 17u, "C++ Concurrent Queues", "Author4406" }, } },
    {  261u, { { 0u, "C++ Distributed Counters", "Author3931" }, { 1u, "C++ Distributed Counters", "Author189" }, { 2u, "C++ Distributed Counters", "Author5645" }, { 3u, "C++ Distributed Counters", "Author529" }, { 4u, "C++ Distributed Counters", "Author1755" }, } },
    {  262u, { { 0u, "A Class for Status and Optional Value", "Author4566" }, { 1u, "A Class for Status and Optional Value", "Author1939" }, } },
    {  263u, { { 0u, "Core \"tentatively ready\" Issues", "Author4288" }, { 1u, "Core \"tentatively ready\" Issues", "Author3557" }, } },
    {  264u, { { 0u, "auto operator= considered dangerous", "Author1568" }, } },
    {  265u, { { 0u, "Title821", "Author3033" }, } },
    {  266u, { { 0u, "Lifting Restrictions on requires-Expressions", "Author5509" }, { 1u, "Lifting Restrictions on requires-Expressions", "Author3360" }, { 2u, "Lifting Restrictions on requires-Expressions", "Author4709" }, } },
    {  267u, { { 0u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author5670" }, { 1u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author4670" }, { 2u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author3312" }, { 3u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author3390" }, { 4u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author1028" }, { 5u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author2641" }, { 8u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author3509" }, { 9u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author5190" }, { 10u, "A Proposal to Add 2D Graphics Rendering and Display to C++", "Author2367" }, } },
    {  268u, { { 0u, "Title438", "Author1583" }, } },
    {  269u, { { 0u, "Title406", "Author1447" }, } },
    {  270u, { { 0u, "Removing C dependencies from signal handler wording", "Author4340" }, { 1u, "Removing C dependencies from signal handler wording", "Author5615" }, { 2u, "Removing C dependencies from signal handler wording", "Author2586" }, { 3u, "Removing C dependencies from signal handler wording", "Author892" }, } },
    {  271u, { { 0u, "Title949", "Author3566" }, } },
    {  272u, { { 0u, "Title784", "Author2867" }, { 1u, "Title887", "Author3283" }, } },
    {  273u, { { 0u, "Title1141", "Author4267" }, { 1u, "Title861", "Author3175" }, } },
    {  274u, { { 0u, "P0274R0 Clump - A Vector-like Contiguous Sequence Container with Embedded Storage.pages", "Author2903" }, } },
    {  275u, { { 0u, "A Proposal to add Classes and Functions Required for Dynamic Library Load", "Author910" }, { 1u, "A Proposal to add Classes and Functions Required for Dynamic Library Load", "Author3272" }, { 2u, "A Proposal to add Classes and Functions Required for Dynamic Library Load", "Author4865" }, { 3u, "A Proposal to add Classes and Functions Required for Dynamic Library Load", "Author6062" }, { 4u, "A Proposal to add Classes and Functions Required for Dynamic Library Load", "Author5042" }, } },
    {  276u, { { 0u, "A Proposal to add Attribute [[visible]]", "Author5083" }, } },
    {  277u, { { 0u, "Title252", "Author905" }, { 1u, "Title741", "Author2705" }, } },
    {  278u, { { 0u, "P0278r0 - volatile solutions", "Author2759" }, } },
    {  279u, { { 0u, "Read-Copy Update (RCU) for C++", "Author2833" }, { 1u, "Title578", "Author2115" }, } },
    {  280u, { { 0u, "Initialize unspecified aggregate members with direct list initialization", "Author5882" }, } },
    {  281u, { { 0u, "Remove comma elision in variadic function declarations", "Author2727" }, } },
    {  282u, { { 0u, "Const-preserving overloads for the strtox family of functions", "Author1469" }, } },
    {  283u, { { 0u, "Title1582", "Author6008" }, { 1u, "Title1299", "Author4913" }, { 2u, "Standard and non-standard attributes", "Author5283" }, } },
    {  284u, { { 0u, "Unqualified enumerators in case labels", "Author32" }, } },
    {  285u, { { 0u, "Using customization points to unify executors", "Author4432" }, } },
    {  286u, { { 0u, "A networking library extension to support co_await-based coroutines", "Author2496" }, } },
    {  287u, { { 0u, "Title1188", "Author4447" }, } },
    {  288u, { { 0u, "unique_function.pages", "Author3592" }, { 1u, "unique_function.pages", "Author4012" }, { 4u, "any_invocable", "Author6449" }, { 5u, "any_invocable", "Author1640" }, { 6u, "any_invocable", "Author2112" }, { 7u, "any_invocable", "Author2088" }, { 8u, "move_only_function", "Author193" }, { 9u, "move_only_function", "Author2910" }, } },
    {  289u, { { 0u, "Title16", "Author53" }, } },
    {  290u, { { 0u, "apply() for synchronized_value<T>", "Author4146" }, { 1u, "apply() for synchronized_value<T>", "Author3025" }, { 2u, "apply() for synchronized_value<T>", "Author3090" }, { 3u, "apply() for synchronized_value<T>", "Author3065" }, { 4u, "apply() for synchronized_value<T>", "Author34" }, } },
    {  292u, { { 0u, "constexpr if: A slightly different syntax", "Author3854" }, { 1u, "constexpr if: A slightly different syntax", "Author4091" }, { 2u, "constexpr if: A slightly different syntax", "Author494" }, } },
    {  293u, { { 0u, "Title1077", "Author4038" }, } },
    {  295u, { { 0u, "Adopt Selected Library Fundamentals V2 Components for C++17", "Author1260" }, } },
    {  296u, { { 0u, "Forward progress guarantees: Base definitions", "Author6284" }, { 1u, "Forward progress guarantees: Base definitions", "Author10" }, { 2u, "Forward progress guarantees: Base definitions", "Author2882" }, } },
    {  298u, { { 0u, "Microsoft Word - P0298R0.docx", "Author322" }, { 1u, "Microsoft Word - D0298R1.docx", "Author3930" }, { 2u, "Microsoft Word - P0298R2.docx", "Author5495" }, { 3u, "Microsoft Word - D0298R3", "Author2390" }, } },
    {  299u, { { 0u, "Forward progress guarantees for the Parallelism TS v2", "Author3949" }, { 1u, "Forward progress guarantees for Parallelism TS features", "Author2897" }, } },
    {  301u, { { 0u, "Wording for Unified Call Syntax", "Author5618" }, { 1u, "Wording for Unified Call Syntax (revision 1)", "Author2124" }, } },
    {  302u, { { 0u, "Deprecating Allocator Support in std::function", "Author4101" }, { 1u, "Removing Allocator Support in std::function (rev 1)", "Author3393" }, } },
    {  303u, { { 0u, "C++ International Standard", "Author2937" }, } },
    {  304u, { { 0u, "C++ Standard Library Issues Resolved Directly", "Author2674" }, { 1u, "C++ Standard Library Issues Resolved Directly In Issaquah", "Author1154" }, } },
    {  305u, { { 0u, "If statement with initializer", "Author4189" }, { 1u, "Selection statements with initializer", "Author3373" }, } },
    {  306u, { { 0u, "Comma omission and comma deletion", "Author2660" }, { 1u, "Comma omission and comma deletion", "Author572" }, { 2u, "Comma omission and comma deletion", "Author2852" }, { 3u, "Comma omission and comma deletion", "Author3157" }, { 4u, "Comma omission and comma deletion", "Author5567" }, } },
    {  307u, { { 0u, "Title713", "Author2626" }, { 2u, "Title856", "Author3161" }, } },
    {  308u, { { 0u, "Title1275", "Author4819" }, } },
    {  309u, { { 0u, "Title300", "Author1071" }, } },
    {  310u, { { 0u, "Node allocators", "Author3658" }, } },
    {  311u, { { 0u, "A Unified Vision for Manipulating Tuple-like Objects", "Author1332" }, } },
    {  312u, { { 0u, "Microsoft Word - Pointers to Members.docx", "Author3124" }, { 1u, "Make Pointers to Members Callable", "Author5883" }, } },
    {  313u, { { 0u, "Comparison operators in fold-expressions", "Author5855" }, } },
    {  314u, { { 0u, "Title435", "Author1576" }, } },
    {  315u, { { 0u, "Title1636", "Author6212" }, { 1u, "Title787", "Author2878" }, { 2u, "Title55", "Author151" }, { 3u, "Title985", "Author3728" }, { 4u, "Title1492", "Author5662" }, } },
    {  316u, { { 0u, "allocate_unique and allocator_delete", "Author1507" }, } },
    {  317u, { { 0u, "Directory Entry Caching", "Author5462" }, { 1u, "Directory Entry Caching", "Author3191" }, } },
    {  318u, { { 0u, "p0318r0", "Author852" }, { 1u, "p0318r1", "Author4504" }, } },
    {  319u, { { 0u, "p0319r0", "Author4418" }, { 1u, "p0319r1", "Author4937" }, { 2u, "p0319r2", "Author1461" }, } },
    {  320u, { { 0u, "p0320r0", "Author90" }, { 1u, "p0320r1", "Author4507" }, } },
    {  322u, { { 0u, "P0322r0 : exception_list", "Author3152" }, } },
    {  323u, { { 0u, "p0323r0", "Author1784" }, { 1u, "p0323r1", "Author652" }, { 2u, "p0323r2", "Author4592" }, { 3u, "p0323r3", "Author6104" }, { 4u, "p0323r4: std::expected", "Author5667" }, { 5u, "p0323r5: std::expected", "Author2900" }, { 7u, "std::expected", "Author2673" }, { 8u, "std::expected", "Author6067" }, { 9u, "std::expected", "Author4711" }, { 10u, "std::expected", "Author177" }, { 11u, "std::expected", "Author489" }, { 12u, "std::expected", "Author2078" }, } },
    {  324u, { { 0u, "One Concept Definition Syntax", "Author3493" }, } },
    {  325u, { { 0u, "Propose to adopt make_array in C++17", "Author1170" }, { 1u, "Propose to adopt make_array into the IS", "Author1682" }, { 2u, "to_array from LFTS with updates - HackMD", "Author3193" }, { 3u, "to_array from LFTS with updates - HackMD", "Author6434" }, { 4u, "to_array from LFTS with updates - HackMD", "Author2941" }, } },
    {  326u, { { 0u, "p0326r0", "Author1127" }, } },
    {  327u, { { 0u, "p0327r0", "Author1609" }, { 1u, "p0327r1", "Author4065" }, { 2u, "p0327r2", "Author1276" }, { 3u, "p0327r3", "Author5924" }, } },
    {  329u, { { 0u, "Title1695", "Author6451" }, { 1u, "Title1123", "Author4197" }, { 2u, "Title947", "Author3554" }, { 3u, "Title698", "Author2575" }, { 4u, "Title26", "Author83" }, } },
    {  330u, { { 0u, "Title225", "Author792" }, { 1u, "Title56", "Author152" }, { 2u, "Literal Suffixes for ptrdiff_t and size_t", "Author296" }, { 3u, "Literal Suffixes for ptrdiff_t and size_t", "Author6154" }, { 4u, "Literal Suffixes for ptrdiff_t and size_t", "Author2588" }, { 6u, "Literal Suffixes for ptrdiff_t and size_t", "Author5170" }, { 7u, "Literal Suffixes for ptrdiff_t and size_t", "Author3440" }, { 8u, "Literal Suffix for (signed) size_t", "Author4612" }, } },
    {  331u, { { 0u, "P0331r0 : Motivation and Examples for Multidimensional Array", "Author4533" }, } },
    {  332u, { { 0u, "P0332r0 : Relaxed Incomplete Multidimensional Array Type Declaration", "Author3417" }, { 1u, "P0332r1 : Relaxed Incomplete Multidimensional Array Type Declaration", "Author4141" }, { 2u, "p0332R2: Relaxed Incomplete Multidimensional Array Type Declaration", "Author1231" }, } },
    {  333u, { { 0u, "P0333r0 : Improving Parallel Algorithm Exception Handling", "Author6234" }, } },
    {  334u, { { 0u, "P0334r0 : Immutable Persistent Containers", "Author1562" }, } },
    {  335u, { { 0u, "Context Tokens for Parallel Algorithms", "Author1280" }, { 1u, "Context Tokens for Parallel Algorithms", "Author4502" }, } },
    {  336u, { { 0u, "Better Names for Parallel Execution Policies in C++17", "Author5801" }, { 1u, "Better Names for Parallel Execution Policies in C++17", "Author4132" }, } },
    {  337u, { { 0u, "P0337r0 | Delete operator= for polymorphic_allocator", "Author1214" }, } },
    {  338u, { { 0u, "p0338r0", "Author5500" }, { 1u, "p0338r1", "Author1152" }, { 2u, "p0338r2", "Author2845" }, { 3u, "p0338r3", "Author2468" }, } },
    {  339u, { { 0u, "polymorphic_allocator<void> as a vocabulary type", "Author1487" }, { 1u, "polymorphic_allocator<> as a vocabulary type", "Author3148" }, { 2u, "polymorphic_allocator<> as a vocabulary type", "Author3738" }, { 3u, "polymorphic_allocator<> as a vocabulary type", "Author2162" }, { 4u, "polymorphic_allocator<> as a vocabulary type", "Author4324" }, { 5u, "polymorphic_allocator<> as a vocabulary type", "Author2564" }, { 6u, "polymorphic_allocator<> as a vocabulary type", "Author1330" }, } },
    {  340u, { { 0u, "P0340R0", "Author14" }, { 1u, "Making std::underlying_type SFINAE-friendly", "Author2426" }, { 2u, "D0340R2: Making std::underlying_type SFINAE-friendly", "Author4365" }, { 3u, "Making std::underlying_type SFINAE-friendly", "Author39" }, } },
    {  341u, { { 0u, "Leveraging parameter packs outside of templates", "Author6068" }, } },
    {  342u, { { 0u, "Timing barriers", "Author432" }, { 1u, "Title1502", "Author5692" }, { 2u, "pessimize_hint", "Author4170" }, } },
    {  343u, { { 0u, "p0343r0", "Author447" }, { 1u, "p0343r1", "Author1898" }, } },
    {  345u, { { 0u, "Allowing any unsigned integral type as parameter type for literal operators", "Author422" }, } },
    {  346u, { { 0u, "A <random> Nomenclature Tweak", "Author283" }, { 1u, "A <random> Nomenclature Tweak", "Author6293" }, } },
    {  347u, { { 0u, "P0347R0", "Author5257" }, { 1u, "Simplifying simple uses of <random>", "Author4855" }, } },
    {  348u, { { 0u, "Validity testing issues", "Author878" }, } },
    {  349u, { { 0u, "Assumptions about the size of datapar [P0349R0]", "Author1000" }, } },
    {  350u, { { 0u, "Integrating datapar with parallel algorithms and executors [P0350R0]", "Author5807" }, { 1u, "Integrating simd with parallel algorithms [P0350R1]", "Author1483" }, { 2u, "Integrating simd with parallel algorithms [P0350R2]", "Author5332" }, { 3u, "Integrating simd with parallel algorithms [P0350R3]", "Author4845" }, { 4u, "Integrating simd with parallel algorithms [P0350R4]", "Author5660" }, } },
    {  352u, { { 0u, "Title1339", "Author5089" }, { 1u, "Title1083", "Author4054" }, } },
    {  353u, { { 0u, "Unicode Encoding conversions", "Author4681" }, { 1u, "Unicode Encoding conversions", "Author3511" }, } },
    {  354u, { { 0u, "Title924", "Author3454" }, } },
    {  355u, { { 0u, "Extending <chrono> to Calendars and Time Zones", "Author5327" }, { 1u, "Extending <chrono> to Calendars and Time Zones", "Author6084" }, { 2u, "Extending <chrono> to Calendars and Time Zones", "Author3920" }, { 3u, "Extending <chrono> to Calendars and Time Zones", "Author2975" }, { 4u, "Extending <chrono> to Calendars and Time Zones", "Author963" }, { 5u, "Extending <chrono> to Calendars and Time Zones", "Author4450" }, } },
    {  356u, { { 0u, "Simplified partial function application", "Author2843" }, { 1u, "Simplified partial function application", "Author2231" }, { 2u, "Simplified partial function application", "Author428" }, { 3u, "Simplified partial function application", "Author766" }, { 4u, "Simplified partial function application", "Author3742" }, { 5u, "Simplified partial function application", "Author835" }, } },
    {  357u, { { 0u, "'reference_wrapper' for incomplete types", "Author6360" }, { 1u, "'reference_wrapper' for incomplete types", "Author2017" }, { 2u, "'reference_wrapper' for incomplete types", "Author5714" }, { 3u, "'reference_wrapper' for incomplete types", "Author5898" }, } },
    {  358u, { { 0u, "Fixes for 'not_fn'", "Author5096" }, { 1u, "Fixes for 'not_fn'", "Author6059" }, } },
    {  359u, { { 0u, "Title588", "Author2153" }, } },
    {  360u, { { 0u, "Title916", "Author3416" }, } },
    {  361u, { { 0u, "Title1424", "Author5398" }, { 1u, "Title1417", "Author5380" }, } },
    {  362u, { { 0u, "Title796", "Author2920" }, } },
    {  363u, { { 0u, "Title1096", "Author4095" }, } },
    {  364u, { { 0u, "Title1200", "Author4491" }, } },
    {  365u, { { 0u, "Title1558", "Author5904" }, } },
    {  366u, { { 0u, "Title1398", "Author5294" }, } },
    {  367u, { { 0u, "Title1310", "Author4954" }, } },
    {  369u, { { 0u, "Title1221", "Author4577" }, } },
    {  370u, { { 0u, "Ranges TS Design Updates Omnibus", "Author5189" }, { 1u, "Ranges TS Design Updates Omnibus", "Author4336" }, { 2u, "Ranges TS Design Updates Omnibus", "Author5847" }, { 3u, "Ranges TS Design Updates Omnibus", "Author4174" }, } },
    {  371u, { { 0u, "Temporarily deprecate memory_order_consume", "Author5982" }, { 1u, "Temporarily discourage memory_order_consume", "Author5597" }, } },
    {  372u, { { 0u, "P0372R0 - A type for utf-8 data", "Author3605" }, } },
    {  373u, { { 0u, "Title899", "Author3354" }, } },
    {  374u, { { 0u, "Title840", "Author3097" }, } },
    {  375u, { { 0u, "Title803", "Author2945" }, } },
    {  376u, { { 0u, "A Single Generalization of std::invoke, std::apply, and std::visit", "Author1882" }, } },
    {  377u, { { 0u, "std::integral_constant with a Deduced Value Type", "Author3133" }, } },
    {  379u, { { 0u, "Why a joining thread from P0206 is a Bad Idea", "Author1206" }, } },
    {  380u, { { 0u, "Title323", "Author1132" }, { 1u, "Title559", "Author2052" }, } },
    {  381u, { { 0u, "Title1511", "Author5713" }, { 1u, "Title683", "Author2542" }, } },
    {  382u, { { 0u, "Comments on P0119: Overload sets as function arguments", "Author5253" }, } },
    {  384u, { { 0u, "Core \"tentatively ready\" Issues", "Author4984" }, } },
    {  385u, { { 0u, "Title1697", "Author6466" }, { 1u, "Title1378", "Author5202" }, { 2u, "Title932", "Author3497" }, } },
    {  386u, { { 0u, "Title146", "Author502" }, { 2u, "Title541", "Author1963" }, } },
    {  387u, { { 0u, "Memory Model Issues for Concurrent Data Structures", "Author4436" }, { 1u, "Memory Model Issues for Concurrent Data Structures", "Author4271" }, } },
    {  388u, { { 0u, "Proposal: conversions to arrays of unknown bound", "Author6353" }, { 1u, "Proposal: conversions to arrays of unknown bound", "Author4728" }, { 2u, "Proposal: conversions to arrays of unknown bound", "Author1691" }, { 3u, "Proposal: conversions to arrays of unknown bound", "Author2447" }, { 4u, "Proposal: conversions to arrays of unknown bound", "Author6239" }, } },
    {  389u, { { 0u, "Proposal: template keyword in unqualified-ids", "Author4515" }, } },
    {  390u, { { 0u, "ISO/IEC JTC1/SC22/WG21p0390r0", "Author2063" }, } },
    {  391u, { { 0u, "Introducing the term \"templated entity\"", "Author6374" }, } },
    {  392u, { { 0u, "Microsoft Word - P0392_stringview4path_160623.docx", "Author2892" }, } },
    {  393u, { { 3u, "Variant: relational operators.", "Author3252" }, } },
    {  394u, { { 4u, "Hotel Parallelifornia: terminate() for Parallel Algorithms Exception Handling", "Author1456" }, } },
    {  396u, { { 0u, "C++ Concepts Active Issues List (Snapshot of Revision 4)", "Author3176" }, } },
    {  397u, { { 0u, "C++ Standard Library Priority 1 Issues Resolved Directly In Oulu", "Author3098" }, } },
    {  398u, { { 0u, "Core issue 1518: Explicit default constructors and copy-list-initialization", "Author1985" }, } },
    {  399u, { { 0u, "Networking TS & Threadpool", "Author4528" }, } },
    {  400u, { { 0u, "P0400R0 2016-06-25", "Author3873" }, } },
    {  401u, { { 0u, "Extensions to the Allocator interface", "Author1502" }, { 1u, "Providing size feedback in the Allocator interface", "Author3803" }, { 2u, "Providing size feedback in the Allocator interface", "Author4622" }, { 3u, "Providing size feedback in the Allocator interface", "Author4177" }, { 4u, "Providing size feedback in the Allocator interface", "Author3512" }, { 5u, "Providing size feedback in the Allocator interface", "Author2180" }, { 6u, "Providing size feedback in the Allocator interface", "Author2320" }, } },
    {  403u, { { 0u, "Literal suffixes for basic_string_view", "Author3637" }, { 1u, "Literal suffixes for basic_string_view", "Author2354" }, } },
    {  404u, { { 0u, "Matching Types: 404 Syntax Not found", "Author3912" }, } },
    {  405u, { { 0u, "Wording for Networking TS changes discussed in Kona", "Author1717" }, } },
    {  406u, { { 1u, "Intrusive Containers", "Author4666" }, } },
    {  407u, { { 0u, "Title1022", "Author3859" }, { 1u, "Title1106", "Author4142" }, { 2u, "Title430", "Author1556" }, } },
    {  408u, { { 0u, "Title265", "Author955" }, { 1u, "Title1431", "Author5427" }, { 2u, "Title52", "Author144" }, { 3u, "Title742", "Author2709" }, { 4u, "Title1654", "Author6289" }, { 5u, "Title1184", "Author4413" }, { 6u, "Title1095", "Author4092" }, { 7u, "Title298", "Author1057" }, } },
    {  409u, { { 0u, "Allow lambda capture [=, this]", "Author6168" }, { 1u, "Allow lambda capture [=, this]", "Author5338" }, { 2u, "Allow lambda capture [=, this]", "Author807" }, } },
    {  411u, { { 0u, "Separating Library Requirements and Preconditions", "Author5600" }, } },
    {  412u, { { 0u, "Benchmarking Primitives", "Author60" }, } },
    {  413u, { { 0u, "Updating Parallel Execution Policy Names in the Parallelism TS", "Author3064" }, } },
    {  414u, { { 0u, "Merging shared_ptr changes from Library Fundamentals to C++17", "Author3729" }, { 1u, "Merging shared_ptr changes from Library Fundamentals to C++17", "Author2817" }, { 2u, "Merging shared_ptr changes from Library Fundamentals to C++17", "Author1173" }, } },
    {  415u, { { 0u, "Constexpr for std::complex", "Author454" }, { 1u, "Constexpr for std::complex", "Author4611" }, } },
    {  416u, { { 0u, "dot P0416", "Author5954" }, { 1u, "Title657", "Author2430" }, } },
    {  417u, { { 0u, "ISO 10646:2014", "Author3189" }, { 1u, "ISO 10646:2014", "Author1021" }, } },
    {  418u, { { 1u, "P0418r1: Fail or succeed: there is no atomic lattice", "Author1816" }, { 2u, "P0418r2: Fail or succeed: there is no atomic lattice", "Author2323" }, } },
    {  421u, { { 0u, "Title401", "Author1428" }, } },
    {  422u, { { 0u, "Out-of-Thin-Air Execution is Vacuous", "Author5969" }, } },
    {  423u, { { 0u, "Variable templates for Networking TS traits", "Author5011" }, } },
    {  424u, { { 0u, "Title450", "Author1645" }, { 1u, "Title47", "Author133" }, { 2u, "Title527", "Author1912" }, } },
    {  425u, { { 0u, "Title1225", "Author4594" }, } },
    {  426u, { { 0u, "Constexpr for std::char_traits", "Author4663" }, { 1u, "Constexpr for std::char_traits", "Author3491" }, } },
    {  428u, { { 0u, "Title567", "Author2075" }, { 1u, "Title1150", "Author4301" }, { 2u, "Title858", "Author3166" }, } },
    {  429u, { { 0u, "Title1232", "Author4621" }, { 1u, "Title1300", "Author4924" }, { 2u, "Title718", "Author2635" }, { 3u, "Title580", "Author2118" }, { 4u, "A Standard flatmap", "Author4317" }, { 5u, "A Standard flatmap", "Author5333" }, { 6u, "A Standard flatmap", "Author759" }, { 7u, "A Standard flatmap", "Author1364" }, { 8u, "A Standard flatmap", "Author1885" }, { 9u, "A Standard flatmap", "Author5809" }, } },
    {  430u, { { 0u, "Microsoft Word - open LWG issue (Autosaved).docx", "Author6228" }, { 1u, "Microsoft Word - P0430R1.docx", "Author4285" }, { 2u, "Title1208", "Author4530" }, } },
    {  431u, { { 0u, "ISO/IEC JTC1/SC22/WG21p0431r0", "Author5192" }, } },
    {  432u, { { 0u, "Title857", "Author3162" }, } },
    {  433u, { { 0u, "Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", "Author4882" }, { 1u, "Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", "Author483" }, { 2u, "Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", "Author3408" }, { 3u, "Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library", "Author857" }, } },
    {  434u, { { 0u, "P0434 Portable Interrupt Library", "Author5369" }, } },
    {  435u, { { 0u, "Resolving LWG Issues re common_type", "Author1554" }, { 1u, "Resolving LWG Issues re common_type", "Author226" }, } },
    {  436u, { { 0u, "An Extensible Approach to Obtaining Selected Operators", "Author5687" }, { 1u, "An Extensible Approach to Obtaining Selected Operators", "Author2946" }, } },
    {  437u, { { 0u, "Numeric Traits for the Next Standard Library", "Author52" }, { 1u, "Numeric Traits for the Standard Library", "Author453" }, } },
    {  438u, { { 0u, "Toward a <random> Technical Specification", "Author5323" }, } },
    {  439u, { { 0u, "Make std::memory_order a scoped enumeration", "Author326" }, } },
    {  440u, { { 0u, "P0440r0 : Floating Point Atomic View", "Author760" }, { 1u, "P0440r1 : Floating Point Atomic View", "Author829" }, } },
    {  441u, { { 0u, "Ranges: Merging Writable and MoveWritable", "Author6286" }, { 1u, "Ranges: Merging Writable and MoveWritable", "Author1685" }, } },
    {  443u, { { 0u, "Title517", "Author1883" }, { 1u, "Title655", "Author2427" }, { 2u, "Title90", "Author274" }, { 3u, "Title692", "Author2557" }, { 4u, "Title882", "Author3250" }, { 5u, "Title30", "Author96" }, { 9u, "Title734", "Author2682" }, { 10u, "Title820", "Author3031" }, { 11u, "A Unified Executors Proposal for C++ | P0443R11", "Author323" }, { 12u, "A Unified Executors Proposal for C++ | P0443R12", "Author624" }, { 13u, "A Unified Executors Proposal for C++ | P0443R13", "Author4921" }, { 14u, "A Unified Executors Proposal for C++ | P0443R14", "Author2826" }, } },
    {  444u, { { 0u, "P0444", "Author3038" }, } },
    {  445u, { { 0u, "Title1355", "Author5130" }, } },
    {  446u, { { 0u, "Title271", "Author974" }, } },
    {  447u, { { 0u, "Introduction of std::colony to the standard library", "Author4729" }, { 1u, "Title222", "Author777" }, { 2u, "Title800", "Author2935" }, { 3u, "Title1524", "Author5745" }, { 4u, "Introduction of std::colony to the standard library", "Author608" }, { 8u, "Introduction of std::colony to the standard library", "Author6125" }, { 9u, "Introduction of std::colony to the standard library", "Author2194" }, { 10u, "Introduction of std::colony to the standard library", "Author3228" }, { 11u, "Introduction of std::colony to the standard library", "Author1390" }, { 12u, "Introduction of std::colony to the standard library", "Author6030" }, { 13u, "Introduction of std::colony to the standard library", "Author3263" }, { 14u, "Introduction of std::colony to the standard library", "Author1879" }, { 15u, "Introduction of std::hive to the standard library", "Author4634" }, { 16u, "Introduction of std::hive to the standard library", "Author869" }, { 17u, "Introduction of std::hive to the standard library", "Author2590" }, { 18u, "Introduction of std::hive to the standard library", "Author569" }, { 19u, "Introduction of std::hive to the standard library", "Author6137" }, { 20u, "Introduction of std::hive to the standard library", "Author3611" }, { 21u, "Introduction of std::hive to the standard library", "Author3559" }, { 22u, "Introduction of std::hive to the standard library", "Author5744" }, { 23u, "Introduction of std::hive to the standard library", "Author5322" }, { 24u, "Introduction of std::hive to the standard library", "Author2461" }, { 25u, "Introduction of std::hive to the standard library", "Author3150" }, { 26u, "Introduction of std::hive to the standard library", "Author6157" }, { 27u, "Introduction of std::hive to the standard library", "Author5290" }, { 28u, "Introduction of std::hive to the standard library", "Author269" }, } },
    {  448u, { { 0u, "Title417", "Author1494" }, { 1u, "Title1578", "Author6001" }, { 2u, "Title12", "Author38" }, { 3u, "Title617", "Author2254" }, { 4u, "Title984", "Author3727" }, } },
    {  451u, { { 0u, "P0451r0: Future-Proofing Parallel Algorithms Exception Handling", "Author4005" }, } },
    {  452u, { { 0u, "P0452r0: Binary-Binary transform_reduce(): The Missing Overload", "Author2753" }, { 1u, "P0452r1: Unifying <numeric> Parallel Algorithms", "Author2772" }, } },
    {  454u, { { 0u, "P0454r0: Wording for a Minimal mdspan<>", "Author5351" }, } },
    {  457u, { { 0u, "String Prefix and Suffix Checking", "Author3368" }, { 1u, "String Prefix and Suffix Checking", "Author724" }, { 2u, "String Prefix and Suffix Checking", "Author3428" }, } },
    {  458u, { { 0u, "Checking for Existence of an Element in Associative Containers", "Author720" }, { 1u, "Checking for Existence of an Element in Associative Containers", "Author1989" }, { 2u, "Checking for Existence of an Element in Associative Containers", "Author5210" }, } },
    {  459u, { { 0u, "Working Draft, C++ Extensions for Ranges", "Author4165" }, } },
    {  460u, { { 0u, "Title1240", "Author4653" }, } },
    {  461u, { { 0u, "Title1494", "Author5669" }, { 1u, "Title1254", "Author4710" }, { 2u, "Title847", "Author3126" }, } },
    {  462u, { { 0u, "Title1031", "Author3899" }, { 1u, "Title1506", "Author5700" }, } },
    {  463u, { { 0u, "endian", "Author4381" }, { 1u, "endian", "Author4286" }, } },
    {  464u, { { 0u, "Title344", "Author1200" }, { 1u, "Revisiting the meaning of foo(ConceptName,ConceptName)", "Author6406" }, { 2u, "Revisiting the meaning of foo(ConceptName,ConceptName)", "Author236" }, } },
    {  465u, { { 0u, "Title943", "Author3541" }, } },
    {  466u, { { 0u, "Title23", "Author79" }, { 1u, "Title1303", "Author4935" }, { 2u, "Title656", "Author2429" }, { 3u, "Title1383", "Author5233" }, { 4u, "Title198", "Author690" }, { 5u, "Title1172", "Author4374" }, } },
    {  467u, { { 0u, "Iterator Concerns for Parallel Algorithms", "Author1558" }, { 1u, "Iterator Concerns for Parallel Algorithms", "Author4983" }, { 2u, "Iterator Concerns for Parallel Algorithms", "Author2951" }, } },
    {  468u, { { 0u, "P0468R0 : An Intrusive Smart Pointer", "Author4402" }, { 1u, "An Intrusive Smart Pointer", "Author5000" }, } },
    {  469u, { { 0u, "Sample in place", "Author2561" }, } },
    {  471u, { { 0u, "Title1331", "Author5061" }, } },
    {  472u, { { 0u, "Title1691", "Author6439" }, { 1u, "P0472R1 - Put std::monostate in <utility>", "Author4897" }, { 2u, "P0472R2 - Put std::monostate in <utility>", "Author3500" }, { 3u, "P0472R3 - Put std::monostate in <utility>", "Author2995" }, } },
    {  473u, { { 0u, "Title342", "Author1189" }, } },
    {  474u, { { 0u, "Comparison in C++: Basic Facilities", "Author6496" }, } },
    {  475u, { { 0u, "LWG 2511: guaranteed copy elision for piecewise construction", "Author528" }, { 1u, "LWG 2511: guaranteed copy elision for piecewise construction (rev. 1)", "Author3078" }, } },
    {  476u, { { 0u, "P0476r0: Bit-casting object representations", "Author284" }, { 1u, "P0476r1: Bit-casting object representations", "Author4021" }, { 2u, "p0476r2: Bit-casting object representations", "Author2222" }, } },
    {  477u, { { 0u, "std::monostate_function<>", "Author3281" }, } },
    {  478u, { { 0u, "Title1652", "Author6281" }, } },
    {  479u, { { 0u, "Attributes for Likely and Unlikely Branches", "Author5157" }, { 1u, "Attributes for Likely and Unlikely Statements", "Author1789" }, { 2u, "Attributes for Likely and Unlikely Statements", "Author5164" }, { 4u, "Proposed wording for likely and unlikely attributes (Revision 4)", "Author1824" }, { 5u, "Proposed wording for likely and unlikely attributes (Revision 5)", "Author4232" }, } },
    {  480u, { { 0u, "Explicit type checking with structured bindings", "Author3906" }, { 1u, "Structured bindings with explicit types", "Author6086" }, } },
    {  481u, { { 0u, "Title637", "Author2316" }, } },
    {  482u, { { 0u, "char8_t: A type for UTF-8 characters and strings", "Author3407" }, { 1u, "char8_t: A type for UTF-8 characters and strings (Revision 1)", "Author2453" }, { 2u, "char8_t: A type for UTF-8 characters and strings (Revision 2)", "Author3988" }, { 3u, "char8_t: A type for UTF-8 characters and strings (Revision 3)", "Author5299" }, { 4u, "char8_t: A type for UTF-8 characters and strings (Revision 4)", "Author3027" }, { 5u, "char8_t: A type for UTF-8 characters and strings (Revision 5)", "Author2917" }, { 6u, "char8_t: A type for UTF-8 characters and strings (Revision 6)", "Author4743" }, } },
    {  483u, { { 0u, "Title1438", "Author5453" }, } },
    {  484u, { { 0u, "Title439", "Author1594" }, { 1u, "Title1281", "Author4840" }, } },
    {  485u, { { 0u, "Title1234", "Author4635" }, } },
    {  486u, { { 0u, "Title1108", "Author4153" }, } },
    {  487u, { { 0u, "Fixing operator>>(basic_istream&, CharT*) (LWG 2499)", "Author6475" }, { 1u, "Fixing operator>>(basic_istream&, CharT*) (LWG 2499)", "Author3197" }, } },
    {  488u, { { 0u, "Title95", "Author310" }, } },
    {  489u, { { 0u, "Title1565", "Author5938" }, } },
    {  490u, { { 0u, "Core language changes addressing National Body comments for CD C++17", "Author3816" }, } },
    {  492u, { { 0u, "Filesystem NB Comments C++17", "Author6251" }, { 1u, "Filesystem NB Comments C++17", "Author1920" }, { 2u, "Filesystem NB Comments C++17", "Author6392" }, } },
    {  493u, { { 0u, "Title1231", "Author4619" }, { 1u, "Title1009", "Author3807" }, { 2u, "Title1512", "Author5716" }, { 3u, "Atomic minimum/maximum", "Author5031" }, { 4u, "Atomic minimum/maximum", "Author2704" }, { 5u, "Atomic minimum/maximum", "Author2950" }, } },
    {  494u, { { 0u, "Title27", "Author87" }, } },
    {  495u, { { 0u, "Concurrency Safety in C++ Data Structures", "Author4361" }, } },
    {  497u, { { 0u, "Fixes to shared_ptr support for arrays", "Author4654" }, } },
    {  500u, { { 0u, "Title545", "Author1987" }, } },
    {  501u, { { 0u, "Title896", "Author3336" }, { 1u, "Title1159", "Author4330" }, { 2u, "Title753", "Author2749" }, { 3u, "Title484", "Author1767" }, } },
    {  502u, { { 0u, "P0502r0: Throwing out of a parallel algorithm terminatesbut how?", "Author2807" }, } },
    {  503u, { { 0u, "Correcting library usage of \"literal type\"", "Author3860" }, } },
    {  504u, { { 0u, "Revisiting in-place tag types for any/optional/variant", "Author4246" }, } },
    {  505u, { { 0u, "Wording for GB 50", "Author5372" }, } },
    {  506u, { { 0u, "Title1367", "Author5177" }, { 1u, "Title1546", "Author5848" }, { 2u, "Title929", "Author3486" }, } },
    {  507u, { { 0u, "Core Issue 1343: Sequencing of non-class initialization", "Author102" }, } },
    {  508u, { { 0u, "Wording for GB 58", "Author5540" }, } },
    {  509u, { { 1u, "P0509R1", "Author4693" }, } },
    {  510u, { { 0u, "Disallowing references, incomplete types, arrays, and Empty Variants", "Author889" }, } },
    {  511u, { { 0u, "Deduction guide for", "Author2114" }, { 1u, "Deduction guide for std::array", "Author2292" }, } },
    {  512u, { { 0u, "Title914", "Author3414" }, } },
    {  513u, { { 0u, "Title1277", "Author4824" }, } },
    {  514u, { { 0u, "D0514R0", "Author5907" }, { 1u, "D0514R1", "Author3708" }, { 2u, "D0514R1", "Author5205" }, { 3u, "D0514R1", "Author4446" }, { 4u, "D0514R1", "Author718" }, } },
    {  515u, { { 0u, "Title8", "Author23" }, { 1u, "Title1446", "Author5489" }, { 2u, "Title571", "Author2092" }, { 3u, "Title1012", "Author3811" }, } },
    {  516u, { { 0u, "P0516r0: Clarify That shared_futures Copy Operations have Wide Contracts", "Author4541" }, } },
    {  517u, { { 0u, "P0517r0: Make future_error Constructible", "Author3845" }, } },
    {  518u, { { 0u, "p0518r0: Allowing copies as arguments to function objects given to parallel algorithms in response to CH11", "Author5059" }, { 1u, "P0518r1: Allowing copies as arguments to function objects given to parallel algorithms in response to CH11", "Author2172" }, } },
    {  519u, { { 0u, "Core \"ready\" Issues", "Author4359" }, } },
    {  520u, { { 0u, "Core \"tentatively ready\" Issues", "Author729" }, } },
    {  521u, { { 0u, "P0521r0: Proposed Resolution for CA 14 (shared_ptr use_count/unique)", "Author934" }, } },
    {  522u, { { 0u, "DR: Matching of template template-arguments excludes compatible templates", "Author3577" }, } },
    {  523u, { { 0u, "Wording for CH 10: Complexity of parallel algorithms", "Author3321" }, { 1u, "Wording for CH 10: Complexity of parallel algorithms", "Author3231" }, } },
    {  527u, { { 0u, "Untitled Document.md", "Author4245" }, { 1u, "Title1419", "Author5383" }, } },
    {  528u, { { 0u, "P0528r0: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", "Author2506" }, { 1u, "p0528r1: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", "Author4419" }, { 2u, "p0528R2: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", "Author4620" }, { 3u, "The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange", "Author1547" }, } },
    {  529u, { { 0u, "Title615", "Author2247" }, } },
    {  532u, { { 0u, "Microsoft Word - P0532R0_onlaunder_170114.docx", "Author268" }, } },
    {  533u, { { 0u, "Title1020", "Author3856" }, { 1u, "Title1115", "Author4175" }, { 2u, "Title239", "Author844" }, { 3u, "Title1324", "Author5020" }, { 4u, "Title706", "Author2603" }, { 5u, "Title1185", "Author4416" }, { 6u, "Title642", "Author2349" }, { 7u, "Title1540", "Author5824" }, { 8u, "Title253", "Author906" }, { 9u, "Title736", "Author2694" }, } },
    {  534u, { { 0u, "call/cc: A low-level API for stackful context switching", "Author6178" }, { 1u, "call/cc: A low-level API for stackful context switching", "Author3436" }, { 2u, "call/cc: A low-level API for stackful context switching", "Author5609" }, { 3u, "call/cc: A low-level API for stackful context switching", "Author2738" }, } },
    {  535u, { { 0u, "Generalized Unpacking and Parameter Pack Slicing", "Author2964" }, } },
    {  536u, { { 0u, "Implicit Return Type and Allowing Anonymous Types as Return Values", "Author4798" }, } },
    {  537u, { { 0u, "Allow Attributes on Template Explicit Instantiations", "Author909" }, } },
    {  538u, { { 0u, "A Qualified Replacement for #pragma once", "Author1177" }, } },
    {  539u, { { 0u, "A Proposal to add wide_int Class", "Author6115" }, { 1u, "A Proposal to add wide_int Class", "Author4723" }, { 2u, "A Proposal to add wide_int Class", "Author346" }, { 3u, "A Proposal to add wide_int Class", "Author4164" }, { 4u, "A Proposal to add wide_int Class", "Author5306" }, { 5u, "A Proposal to add wideint Template Class", "Author2413" }, } },
    {  540u, { { 0u, "A Proposal to Add split/join of string/string_view to the Standard Library", "Author3218" }, { 1u, "A Proposal to Add split/join of string/string_view to the Standard Library", "Author6065" }, } },
    {  541u, { { 0u, "Ranges TS: Post-Increment on Input and Output Iterators", "Author1688" }, { 1u, "Ranges TS: Post-Increment on Input and Output Iterators", "Author1741" }, } },
    {  542u, { { 0u, "Support for contract based programming in C++", "Author5863" }, { 1u, "Support for contract based programming in C++", "Author1590" }, { 2u, "Support for contract based programming in C++", "Author1781" }, { 3u, "Support for contract based programming in C++", "Author4613" }, { 4u, "Support for contract based programming in C++", "Author1392" }, { 5u, "Support for contract based programming in C++", "Author1324" }, } },
    {  543u, { { 0u, "Saturation arithmetic", "Author2311" }, { 1u, "Saturation arithmetic", "Author5827" }, { 2u, "Saturation arithmetic", "Author2977" }, { 3u, "Saturation arithmetic", "Author5899" }, } },
    {  544u, { { 0u, "User Injection of Filesystems", "Author1248" }, } },
    {  545u, { { 0u, "Title778", "Author2831" }, } },
    {  546u, { { 0u, "P0546r0 : Span - foundation for the future", "Author5292" }, { 1u, "P0546r1 : Span - foundation for the future", "Author3002" }, { 2u, "P0546r2 : Span - foundation for the future", "Author5469" }, } },
    {  547u, { { 0u, "Ranges TS: Assorted Object Concept Fixes", "Author4409" }, { 1u, "Ranges TS: Assorted Object Concept Fixes", "Author948" }, { 2u, "Ranges TS: Assorted Object Concept Fixes", "Author2045" }, } },
    {  548u, { { 0u, "commontype and duration", "Author1479" }, { 1u, "commontype and duration", "Author307" }, } },
    {  549u, { { 0u, "Adjuncts to std::hash", "Author3429" }, { 1u, "Adjuncts to std::hash", "Author2540" }, { 2u, "Adjuncts to std::hash", "Author3032" }, { 3u, "Adjuncts to std::hash", "Author2622" }, { 4u, "Adjuncts to std::hash", "Author4858" }, { 5u, "Adjuncts to std::hash", "Author1683" }, { 6u, "Adjuncts to std::hash", "Author2370" }, { 7u, "Adjuncts to std::hash", "Author2886" }, } },
    {  550u, { { 0u, "Transformation Trait uncvref", "Author4202" }, { 1u, "Transformation Trait uncvref", "Author2233" }, { 2u, "Transformation Trait removecvref", "Author4583" }, } },
    {  551u, { { 0u, "Thou Shalt Not Specialize std Function Templates!", "Author2585" }, { 1u, "Thou Shalt Not Specialize std Function Templates!", "Author2054" }, { 2u, "Thou Shalt Not Specialize std Function Templates!", "Author1700" }, { 3u, "Thou Shalt Not Specialize std Function Templates!", "Author2906" }, } },
    {  552u, { { 0u, "enableif vs. requires: A Case Study", "Author429" }, } },
    {  553u, { { 0u, "Bit operations", "Author125" }, { 1u, "Bit operations", "Author446" }, { 2u, "Bit operations", "Author1852" }, { 3u, "Bit operations", "Author5155" }, { 4u, "Bit operations", "Author5689" }, } },
    {  554u, { { 0u, "Title752", "Author2743" }, { 1u, "p0554r1", "Author2701" }, } },
    {  555u, { { 0u, "string_view for source_location", "Author3107" }, } },
    {  556u, { { 0u, "Integral power-of-2 operations", "Author3527" }, { 1u, "Integral power-of-2 operations", "Author5273" }, { 2u, "Integral power-of-2 operations", "Author4460" }, { 3u, "Integral power-of-2 operations", "Author1785" }, } },
    {  557u, { { 0u, "Title535", "Author1945" }, } },
    {  558u, { { 0u, "Title719", "Author2638" }, { 1u, "Title303", "Author1077" }, } },
    {  559u, { { 0u, "Title1192", "Author4466" }, } },
    {  560u, { { 0u, "Class template deduction guides for \"diamond operators\"", "Author2708" }, } },
    {  561u, { { 0u, "An RAII Interface for Deferred Reclamation", "Author5999" }, { 1u, "An RAII Interface for Deferred Reclamation", "Author6304" }, { 2u, "An RAII Interface for Deferred Reclamation", "Author3791" }, { 3u, "An RAII Interface for Deferred Reclamation", "Author6499" }, { 4u, "An RAII Interface for Deferred Reclamation", "Author520" }, { 5u, "An RAII Interface for Deferred Reclamation", "Author135" }, { 6u, "An RAII Interface for Deferred Reclamation", "Author2093" }, } },
    {  562u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author1464" }, { 1u, "Initialization List Symmetry", "Author5093" }, { 2u, "Initialization List Symmetry", "Author2810" }, } },
    {  563u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author5710" }, } },
    {  564u, { { 0u, "Wording for three-way comparisons", "Author2732" }, } },
    {  565u, { { 0u, "P0565", "Author1111" }, } },
    {  566u, { { 0u, "Title358", "Author1259" }, { 1u, "Title1366", "Author5171" }, { 2u, "Title329", "Author1143" }, { 3u, "Title361", "Author1265" }, { 4u, "Title1013", "Author3814" }, { 5u, "Title1375", "Author5197" }, } },
    {  567u, { { 0u, "index.html", "Author1603" }, { 1u, "P0567r1.html", "Author4098" }, } },
    {  568u, { { 0u, "Title866", "Author3194" }, } },
    {  569u, { { 0u, "Title350", "Author1217" }, } },
    {  570u, { { 0u, "Title1174", "Author4380" }, } },
    {  571u, { { 0u, "P0571r0: Type Requirements for <numeric> Algorithms", "Author3935" }, { 1u, "p0571r1: Type Requirements for <numeric> Algorithms", "Author2377" }, { 2u, "Type Requirements for `<numeric>` Algorithms", "Author5911" }, } },
    {  572u, { { 0u, "p0572r0: bit_sizeof and bit_offsetof", "Author108" }, { 1u, "p0572r1: bit_sizeof and bit_offsetof", "Author2880" }, { 2u, "p0572R2: Static reflection of bit fields", "Author4637" }, } },
    {  573u, { { 0u, "abbreviated lambdas", "Author1395" }, { 1u, "Abbreviated Lambdas for Fun and Profit", "Author1829" }, { 2u, "Abbreviated Lambdas for Fun and Profit", "Author2266" }, } },
    {  574u, { { 0u, "Algorithm Complexity Constraints and Parallel Overloads", "Author4899" }, { 1u, "P0574r1: Algorithm Complexity Constraints and Parallel Overloads", "Author1664" }, } },
    {  575u, { { 0u, "Core \"ready\" Issues", "Author1372" }, { 1u, "Core \"ready\" Issues", "Author597" }, { 2u, "Core \"ready\" Issues", "Author6402" }, } },
    {  576u, { { 0u, "Core \"tentatively ready\" Issues", "Author2286" }, { 1u, "Core \"tentatively ready\" Issues", "Author2214" }, } },
    {  577u, { { 0u, "Title483", "Author1764" }, { 1u, "Title1250", "Author4701" }, } },
    {  578u, { { 0u, "Title1703", "Author6489" }, { 1u, "Title1070", "Author4019" }, } },
    {  579u, { { 0u, "Constexpr for <experimental/ranges/iterator>", "Author4082" }, { 1u, "Constexpr for <experimental/ranges/iterator>", "Author5475" }, } },
    {  581u, { { 0u, "Title1457", "Author5528" }, { 1u, "Title1400", "Author5301" }, } },
    {  582u, { { 0u, "Title830", "Author3066" }, } },
    {  583u, { { 0u, "Title542", "Author1977" }, } },
    {  584u, { { 0u, "Title1350", "Author5117" }, } },
    {  586u, { { 0u, "Safe integral comparisons", "Author387" }, { 1u, "Safe integral comparisons", "Author313" }, { 2u, "Safe integral comparisons", "Author3087" }, } },
    {  587u, { { 0u, "Title395", "Author1410" }, } },
    {  588u, { { 0u, "Title76", "Author230" }, { 1u, "Simplifying implicit lambda capture", "Author4929" }, } },
    {  589u, { { 0u, "p0589r0", "Author3754" }, } },
    {  590u, { { 0u, "p0590r0", "Author2993" }, } },
    {  591u, { { 0u, "P0591r0 | Utility functions to implement uses-allocator construction", "Author5298" }, { 1u, "P0591r1 | Utility functions to implement uses-allocator construction", "Author5200" }, { 2u, "P0591r2 | Utility functions to implement uses-allocator construction", "Author124" }, { 3u, "P0591r3 | Utility functions to implement uses-allocator construction", "Author358" }, { 4u, "P0591r4 | Utility functions to implement uses-allocator construction", "Author1960" }, } },
    {  592u, { { 0u, "To boldly suggest an overall plan for C++20", "Author3199" }, { 1u, "To boldly suggest an overall plan for C++23", "Author2848" }, { 2u, "To boldly suggest an overall plan for C++23", "Author5403" }, { 3u, "To boldly suggest an overall plan for C++23", "Author6386" }, { 4u, "To boldly suggest an overall plan for C++23", "Author4351" }, { 5u, "To boldly suggest an overall plan for C++26", "Author6357" }, } },
    {  593u, { { 0u, "What to do with buffers that are not arrays, and undefined behavior thereof?", "Author3758" }, { 1u, "p0593r1: Implicit creation of objects for low-level object manipulation", "Author1862" }, { 2u, "p0593r2: Implicit creation of objects for low-level object manipulation", "Author3024" }, { 3u, "Implicit creation of objects for low-level object manipulation", "Author2593" }, { 4u, "Implicit creation of objects for low-level object manipulation", "Author9" }, { 5u, "Implicit creation of objects for low-level object manipulation", "Author1030" }, { 6u, "Implicit creation of objects for low-level object manipulation", "Author6218" }, } },
    {  594u, { { 0u, "Relative comparisons and std::less<T*>", "Author4805" }, } },
    {  595u, { { 0u, "Title994", "Author3755" }, { 1u, "std::is_constant_evaluated", "Author3826" }, { 2u, "std::is_constant_evaluated", "Author1350" }, } },
    {  596u, { { 0u, "Title478", "Author1747" }, { 1u, "Title772", "Author2806" }, } },
    {  597u, { { 0u, "Title77", "Author231" }, } },
    {  598u, { { 0u, "Title1702", "Author6486" }, } },
    {  599u, { { 0u, "Microsoft Word - P0599R0_hash_noexcept_170206.docx", "Author865" }, { 1u, "P0599R1 noexcept for hash functions (US140)", "Author2331" }, } },
    {  600u, { { 0u, "Microsoft Word - P0600R0_nodiscard_in_the_library_170206.docx", "Author2699" }, { 1u, "P0600R1 [[nodiscard]] in the library", "Author3656" }, } },
    {  601u, { { 0u, "Establishing a direction for SIMD-enabled functions", "Author4048" }, } },
    {  602u, { { 0u, "variant and optional should propagate copy/move triviality", "Author199" }, { 1u, "variant and optional should propagate copy/move triviality", "Author2198" }, { 2u, "variant and optional should propagate copy/move triviality", "Author5133" }, { 3u, "variant and optional should propagate copy/move triviality", "Author4036" }, { 4u, "variant and optional should propagate copy/move triviality", "Author5614" }, } },
    {  603u, { { 0u, "ISO/IEC JTC1/SC22/WG21p0603r0", "Author5623" }, } },
    {  604u, { { 0u, "Resolving GB 55, US 84, US 85, US 86", "Author241" }, } },
    {  606u, { { 0u, "Title498", "Author1805" }, } },
    {  607u, { { 0u, "Inline Variables for the Standard Library", "Author837" }, } },
    {  608u, { { 0u, "A sane variant converting constructor (LEWG 227)", "Author626" }, { 1u, "A sane variant converting constructor - HackMD", "Author123" }, { 2u, "(Foswiki login) Html < Wg21rapperswil2018/StrawPolls < Foswiki", "Author3227" }, { 3u, "A sane variant converting constructor - HackMD", "Author2711" }, } },
    {  609u, { { 0u, "Title988", "Author3736" }, { 1u, "Title1029", "Author3889" }, { 2u, "Title1005", "Author3797" }, { 3u, "Title1651", "Author6280" }, } },
    {  610u, { { 0u, "C++ Standard Library \"Review\" Issues Resolved in Kona", "Author4284" }, } },
    {  611u, { { 0u, "More Better Operators", "Author2569" }, } },
    {  612u, { { 0u, "NB comment CH 2: volatile", "Author1374" }, } },
    {  613u, { { 0u, "GB15: Issue 2011 resolution", "Author5055" }, } },
    {  614u, { { 0u, "Range-based for statements with initializer", "Author2464" }, { 1u, "Range-based for statements with initializer", "Author2025" }, } },
    {  615u, { { 0u, "Renaming for structured bindings", "Author5359" }, } },
    {  616u, { { 0u, "Title825", "Author3048" }, } },
    {  618u, { { 0u, "Deprecating <codecvt>", "Author5766" }, } },
    {  619u, { { 0u, "Reviewing Deprecated Facilities of C++17 for C++20", "Author1758" }, { 1u, "Reviewing Deprecated Facilities of C++17 for C++20", "Author5124" }, { 2u, "Reviewing Deprecated Facilities of C++17 for C++20", "Author4909" }, { 3u, "Reviewing Deprecated Facilities of C++17 for C++20", "Author2568" }, { 4u, "Reviewing Deprecated Facilities of C++17 for C++20", "Author4692" }, } },
    {  620u, { { 0u, "Drafting for class template argument deduction issues", "Author3689" }, } },
    {  621u, { { 0u, "Ready Ranges TS Issues", "Author2829" }, } },
    {  622u, { { 0u, "Core \"ready\" Issues", "Author4760" }, } },
    {  623u, { { 0u, "P0623r0: Final C++17 Parallel Algorithms Fixes", "Author2192" }, } },
    {  624u, { { 0u, "Title422", "Author1514" }, { 1u, "Title827", "Author3055" }, { 2u, "Title1085", "Author4060" }, } },
    {  625u, { { 0u, "C++ Standard Library Issues Resolved Directly In Kona", "Author3619" }, } },
    {  627u, { { 0u, "Attribute to mark unreachable code", "Author5799" }, { 1u, "Unreachable Attribute R1", "Author1527" }, { 3u, "Title1283", "Author4847" }, { 5u, "Title449", "Author1630" }, { 6u, "Title147", "Author505" }, } },
    {  629u, { { 0u, "Title1661", "Author6316" }, } },
    {  630u, { { 0u, "To boldly suggest a pub crawl for C++ Toronto", "Author2452" }, } },
    {  631u, { { 0u, "Title1572", "Author5974" }, { 1u, "Title761", "Author2784" }, { 2u, "Title886", "Author3279" }, { 3u, "Title1602", "Author6079" }, { 4u, "Title622", "Author2272" }, { 5u, "Title676", "Author2512" }, { 6u, "Title923", "Author3451" }, { 7u, "Title1222", "Author4579" }, { 8u, "Title1242", "Author4667" }, } },
    {  632u, { { 0u, "Proposal of [[uninitialized]] attribute", "Author5471" }, } },
    {  633u, { { 0u, "Title710", "Author2620" }, } },
    {  634u, { { 0u, "Untitled", "Author1096" }, { 1u, "Down with typename!", "Author2479" }, { 2u, "Down with typename!", "Author5266" }, { 3u, "Down with typename!", "Author65" }, } },
    {  635u, { { 0u, "p0635r0 - c_array addition proposal (090617).pages", "Author4833" }, } },
    {  636u, { { 0u, "Changes between C++14 and C++17", "Author5081" }, { 1u, "Changes between C++14 and C++17", "Author728" }, { 2u, "Changes between C++14 and C++17", "Author1353" }, { 3u, "Changes between C++14 and C++17", "Author2035" }, } },
    {  637u, { { 0u, "Capture *this with initializer", "Author4281" }, } },
    {  638u, { { 0u, "Title859", "Author3168" }, } },
    {  639u, { { 0u, "Changing attack vector of the constexpr_vector", "Author4952" }, } },
    {  640u, { { 0u, "Title1133", "Author4230" }, } },
    {  641u, { { 0u, "Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)", "Author1371" }, { 1u, "Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)", "Author3594" }, { 2u, "Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)", "Author5318" }, } },
    {  642u, { { 0u, "Title1249", "Author4699" }, { 1u, "Title530", "Author1927" }, { 2u, "Title1062", "Author3987" }, { 3u, "Title1018", "Author3846" }, { 4u, "Title73", "Author222" }, } },
    {  643u, { { 0u, "Title154", "Author532" }, } },
    {  644u, { { 0u, "Forward without forward", "Author3342" }, { 1u, "Forward without forward", "Author3080" }, } },
    {  645u, { { 0u, "Text Formatting", "Author2576" }, { 1u, "Text Formatting", "Author6149" }, { 2u, "Text Formatting", "Author1468" }, { 3u, "Text Formatting", "Author5696" }, { 4u, "Text Formatting", "Author175" }, { 5u, "Text Formatting", "Author3253" }, { 7u, "Text Formatting", "Author2746" }, { 9u, "Text Formatting", "Author5697" }, { 10u, "Text Formatting", "Author3061" }, } },
    {  646u, { { 0u, "Title619", "Author2260" }, { 1u, "Title1237", "Author4647" }, } },
    {  647u, { { 0u, "Title1235", "Author4638" }, { 1u, "Title1065", "Author4006" }, } },
    {  648u, { { 0u, "p0648r0", "Author4382" }, } },
    {  649u, { { 0u, "p0649r0", "Author5021" }, } },
    {  650u, { { 0u, "p0650r0", "Author2606" }, { 1u, "p0650r1", "Author4818" }, { 2u, "p0650r2", "Author6173" }, } },
    {  651u, { { 0u, "Switch the Ranges TS to Use Variable Concepts", "Author714" }, { 1u, "Switch the Ranges TS to Use Variable Concepts", "Author4500" }, } },
    {  652u, { { 0u, "Concurrent associative data structure with unsynchronized view", "Author3463" }, { 1u, "Concurrent associative data structure with unsynchronized view", "Author2633" }, { 2u, "Concurrent associative data structure with unsynchronized view", "Author3590" }, { 3u, "Concurrent associative data structure with unsynchronized view", "Author6052" }, } },
    {  653u, { { 0u, "pointer_traits utility to convert to raw pointer", "Author3139" }, { 1u, "Utility to convert a pointer to a raw pointer", "Author4733" }, { 2u, "Utility to convert a pointer to a raw pointer", "Author6325" }, } },
    {  654u, { { 0u, "Title1371", "Author5188" }, } },
    {  655u, { { 0u, "visit<R>: Explicit Return Type for visit", "Author5719" }, { 1u, "visit<R>: Explicit Return Type for visit", "Author1866" }, } },
    {  656u, { { 0u, "Reducing <ratio>", "Author372" }, } },
    {  657u, { { 0u, "Deprecate Certain Declarations in the Global Namespace", "Author5619" }, { 1u, "Deprecate Certain Declarations in the Global Namespace", "Author4369" }, { 2u, "Deprecate Certain Declarations in the Global Namespace", "Author5577" }, } },
    {  658u, { { 0u, "P0658R0 -- Proposal for adding alias declarations to concepts", "Author2589" }, { 1u, "wg21 | For documenting all WG21-related proposals", "Author2796" }, } },
    {  659u, { { 0u, "Microsoft Word - P0659R0_futurestatus_draft_170613.docx", "Author6117" }, } },
    {  660u, { { 0u, "P0660R0", "Author2571" }, { 2u, "P0660R3", "Author3940" }, { 3u, "P0660R3", "Author808" }, { 4u, "C++ International Standard", "Author3607" }, { 5u, "C++ International Standard", "Author1425" }, { 6u, "P0660R6 A Cooperatively Interruptible Joining Thread, Rev 6", "Author1191" }, { 7u, "P0660R7 Interrupt Tokens and a Joining Thread, Rev 7", "Author5601" }, { 8u, "C++ International Standard", "Author2275" }, { 9u, "P0660R9", "Author43" }, { 10u, "P0660", "Author214" }, } },
    {  661u, { { 0u, "Title773", "Author2808" }, } },
    {  662u, { { 0u, "Working Draft, C++ Extensions for Ranges", "Author2549" }, } },
    {  663u, { { 0u, "Ranges TS Ready Issues for the July 2017 (Toronto) meeting", "Author1457" }, } },
    {  664u, { { 0u, "C++ Coroutine TS Issues", "Author682" }, { 1u, "C++ Coroutine TS Issues", "Author6151" }, { 2u, "C++ Coroutine TS Issues", "Author143" }, { 3u, "C++ Coroutine TS Issues", "Author436" }, { 4u, "C++ Coroutine TS Issues", "Author3740" }, { 5u, "C++ Coroutine TS Issues", "Author1235" }, { 6u, "C++ Coroutine TS Issues", "Author2552" }, { 7u, "C++ Coroutine TS Issues", "Author6165" }, { 8u, "C++ Coroutine TS Issues", "Author6502" }, } },
    {  665u, { { 0u, "Title41", "Author120" }, { 1u, "Title878", "Author3240" }, } },
    {  666u, { { 0u, "C++ Latches and Barriers", "Author4030" }, { 1u, "P0666R1", "Author5452" }, { 2u, "P0666R2", "Author3084" }, } },
    {  667u, { { 0u, "Moving std::future extensions forward", "Author1281" }, } },
    {  668u, { { 0u, "Moving std::future extensions forward", "Author4081" }, { 1u, "Revising the C++ memory model", "Author1482" }, { 2u, "Revising the C++ memory model", "Author3663" }, { 3u, "Revising the C++ memory model", "Author3866" }, { 4u, "Revising the C++ memory model", "Author4623" }, { 5u, "Revising the C++ memory model", "Author921" }, } },
    {  669u, { { 0u, "Title473", "Author1726" }, } },
    {  670u, { { 0u, "Static reflection of functions", "Author5094" }, { 1u, "Static reflection of functions", "Author4223" }, { 2u, "Static reflection of functions", "Author1043" }, { 3u, "Function reflection", "Author4135" }, { 4u, "Function reflection", "Author864" }, } },
    {  671u, { { 0u, "Parametric Functions", "Author5099" }, { 1u, "Function Arguments That Speak", "Author4544" }, { 2u, "Self-explanatory Function Arguments", "Author5454" }, } },
    {  672u, { { 0u, "Title63", "Author172" }, } },
    {  673u, { { 0u, "Title367", "Author1298" }, } },
    {  674u, { { 0u, "Extending make_shared to Support Arrays", "Author2444" }, { 1u, "Extending make_shared to Support Arrays", "Author2312" }, } },
    {  675u, { { 0u, "Title1667", "Author6332" }, } },
    {  676u, { { 0u, "future_proposal_P0676R0", "Author2583" }, } },
    {  678u, { { 0u, "Title1266", "Author4784" }, } },
    {  679u, { { 0u, "Title607", "Author2221" }, } },
    {  680u, { { 0u, "Title653", "Author2419" }, } },
    {  681u, { { 0u, "Title1228", "Author4614" }, } },
    {  682u, { { 0u, "Repairing elementary string conversions (LWG 2955)", "Author5287" }, { 1u, "Repairing elementary string conversions (LWG 2955)", "Author3686" }, } },
    {  683u, { { 0u, "Default member initializers for bit-fields", "Author2421" }, { 1u, "Default member initializers for bit-fields (revision 1)", "Author5070" }, } },
    {  684u, { { 0u, "Title182", "Author650" }, { 1u, "Title659", "Author2445" }, { 2u, "Title1101", "Author4113" }, } },
    {  685u, { { 0u, "Title263", "Author945" }, } },
    {  686u, { { 0u, "Title261", "Author938" }, } },
    {  687u, { { 0u, "Title1041", "Author3925" }, } },
    {  688u, { { 0u, "Title1166", "Author4353" }, } },
    {  689u, { { 0u, "Title1618", "Author6124" }, } },
    {  690u, { { 0u, "p0690r0: Tearable Atomics", "Author5033" }, { 1u, "p0690r1: Tearable Atomics", "Author4908" }, } },
    {  691u, { { 0u, "Title272", "Author976" }, } },
    {  692u, { { 0u, "Access Checking on Specializations", "Author5630" }, { 1u, "Access Checking on Specializations", "Author6310" }, } },
    {  694u, { { 0u, "Title828", "Author3059" }, } },
    {  695u, { { 0u, "Title1368", "Author5178" }, } },
    {  696u, { { 0u, "Remove abbreviated functions and template-introduction syntax from the Concepts TS", "Author1536" }, { 1u, "Remove abbreviated functions and template-introduction syntax from the Concepts TS", "Author818" }, } },
    {  697u, { { 0u, "Title32", "Author99" }, } },
    {  698u, { { 0u, "C++ Standard Library Issues to be moved in Toronto", "Author4807" }, } },
    {  699u, { { 0u, "C++ Standard Library Issues Resolved Directly In Toronto", "Author827" }, } },
    {  700u, { { 0u, "Title277", "Author996" }, } },
    {  701u, { { 0u, "P0701r0: Back to the std2::future", "Author4803" }, { 1u, "p0701r1: Back to the std2::future Part II", "Author3800" }, { 2u, "p0701r2: Back to the std2::future Part II", "Author5518" }, } },
    {  702u, { { 0u, "Language support for Constructor Template Argument Deduction", "Author4213" }, { 1u, "Language support for Constructor Template Argument Deduction", "Author5497" }, } },
    {  703u, { { 0u, "Title1107", "Author4147" }, } },
    {  704u, { { 0u, "Fixing const-qualified pointers to members", "Author1369" }, { 1u, "Fixing const-qualified pointers to members", "Author3411" }, } },
    {  705u, { { 0u, "Title1504", "Author5694" }, } },
    {  706u, { { 0u, "Efficient headers for modules (or not)", "Author2014" }, } },
    {  707u, { { 0u, "Title1704", "Author6490" }, { 1u, "Title1170", "Author4364" }, { 2u, "Title206", "Author739" }, { 3u, "Title1360", "Author5152" }, { 4u, "Title242", "Author866" }, { 5u, "Title356", "Author1246" }, } },
    {  709u, { { 0u, "Title970", "Author3668" }, { 1u, "Title755", "Author2757" }, { 2u, "Title1631", "Author6199" }, { 3u, "Title316", "Author1108" }, { 4u, "Title673", "Author2507" }, } },
    {  710u, { { 0u, "Core \"ready\" Issues", "Author2398" }, { 1u, "Core \"ready\" Issues", "Author6102" }, } },
    {  711u, { { 0u, "Core \"tentatively ready\" Issues", "Author6471" }, } },
    {  712u, { { 0u, "p0712", "Author5808" }, } },
    {  713u, { { 0u, "Untitled", "Author6321" }, { 1u, "Title1336", "Author5076" }, } },
    {  714u, { { 0u, "Title812", "Author3000" }, } },
    {  715u, { { 0u, "Title1118", "Author4182" }, } },
    {  716u, { { 0u, "Title1328", "Author5044" }, } },
    {  717u, { { 0u, "Title93", "Author305" }, { 1u, "Title315", "Author1106" }, } },
    {  718u, { { 0u, "Revising atomic_shared_ptr for C++20", "Author5122" }, { 2u, "Revising atomic_shared_ptr for C++20", "Author4342" }, } },
    {  721u, { { 0u, "Title1444", "Author5479" }, } },
    {  722u, { { 0u, "ISO/IEC JTC1/SC22/WG21p0722r0", "Author669" }, { 1u, "Title808", "Author2980" }, { 2u, "Efficient sized delete for variable sized classes", "Author3805" }, { 3u, "Efficient sized delete for variable sized classes", "Author3881" }, } },
    {  723u, { { 0u, "Response to Clarifying the status of feature test macros", "Author2790" }, } },
    {  724u, { { 0u, "Merge the Concepts TS Working Draft into the C++20 working draft", "Author2441" }, } },
    {  725u, { { 0u, "Remove the requirement for constrained-type-specifiers to be deduced to the same type from the Concepts TS", "Author2067" }, } },
    {  726u, { { 0u, "Does the Concepts TS Improve on C++17?", "Author3547" }, } },
    {  727u, { { 0u, "Core Issue 1299: Temporary objects vs temporary expressions", "Author5950" }, } },
    {  728u, { { 0u, "Wording for Networking PDTS ballot comment 005", "Author1429" }, } },
    {  729u, { { 0u, "Proposed wording for Networking TS NB comment GB 9", "Author3999" }, } },
    {  730u, { { 0u, "Options for addressing requires-clause syntax ambiguities", "Author3273" }, { 1u, "requires-clause syntax ambiguities: wording to apply custom grammar", "Author3986" }, } },
    {  731u, { { 0u, "Title1014", "Author3817" }, } },
    {  732u, { { 0u, "Title1227", "Author4609" }, { 1u, "Title963", "Author3624" }, { 2u, "Title1645", "Author6247" }, } },
    {  734u, { { 0u, "C++ Technical Specification", "Author4724" }, } },
    {  735u, { { 0u, "Interaction of memory_order_consume with release sequences", "Author5173" }, { 1u, "Interaction of memory_order_consume with release sequences", "Author5864" }, } },
    {  736u, { { 0u, "Nameless parameters and unutterable specializations", "Author1529" }, { 1u, "Nameless parameters and unutterable specializations", "Author4250" }, } },
    {  737u, { { 0u, "P0737r0 : Execution Context of Execution Agents", "Author1338" }, } },
    {  738u, { { 0u, "I Stream, You Stream, We All Stream for istream_iterator", "Author2179" }, { 1u, "I Stream, You Stream, We All Stream for istream_iterator", "Author4535" }, { 2u, "I Stream, You Stream, We All Stream for istream_iterator", "Author91" }, } },
    {  739u, { { 0u, "Some improvements to class template argument deduction integration into the standard library", "Author628" }, } },
    {  740u, { { 0u, "Ranges TS Immediate Issues from the July 2017 (Toronto) meeting", "Author1624" }, } },
    {  742u, { { 0u, "Wording for Networking PDTS ballot comment resolutions", "Author1037" }, } },
    {  745u, { { 0u, "Title482", "Author1761" }, { 1u, "Title1295", "Author4894" }, } },
    {  746u, { { 0u, "Wording for Networking PDTS ballot comment 011 (US-10)", "Author2185" }, } },
    {  747u, { { 0u, "Wording for Networking PDTS ballot comments 026 (GB-15) and 027 (GB-16)", "Author3358" }, { 1u, "Wording for Networking PDTS ballot comment 026 (GB-15), but not 027 (GB-16)", "Author5720" }, } },
    {  748u, { { 0u, "Wording for Networking PDTS ballot comments on reentrancy", "Author2101" }, } },
    {  749u, { { 0u, "Title748", "Author2730" }, } },
    {  750u, { { 0u, "p0750r0: Consume", "Author1297" }, { 1u, "p0750r1: Consume", "Author4659" }, } },
    {  752u, { { 0u, "Title1064", "Author4004" }, } },
    {  753u, { { 0u, "Title724", "Author2648" }, { 1u, "Title1308", "Author4948" }, { 2u, "Title1194", "Author4469" }, } },
    {  754u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author2815" }, { 1u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author5835" }, { 2u, "Version Header 06 P0754R2", "Author1948" }, } },
    {  756u, { { 0u, "Lambda syntax should be more liberal in what it accepts", "Author4951" }, } },
    {  757u, { { 0u, "regex_iterator should be iterable", "Author2471" }, } },
    {  758u, { { 0u, "Implicit conversion traits and utility functions", "Author5665" }, { 1u, "Implicit conversion traits and utility functions", "Author3593" }, } },
    {  759u, { { 0u, "fpos requirements", "Author5875" }, { 1u, "fpos requirements", "Author4270" }, } },
    {  761u, { { 0u, "Title1586", "Author6017" }, { 1u, "Title883", "Author3254" }, { 2u, "Title826", "Author3053" }, } },
    {  762u, { { 0u, "Title432", "Author1570" }, } },
    {  766u, { { 0u, "Fixing small-ish functionality gaps in constraints", "Author4626" }, { 1u, "Fixing small-ish functionality gaps in constraints", "Author3731" }, } },
    {  767u, { { 0u, "Expunge POD", "Author1413" }, { 1u, "Deprecate POD", "Author3113" }, } },
    {  768u, { { 0u, "Library Support for the Spaceship (Comparison) Operator", "Author4863" }, { 1u, "Library Support for the Spaceship (Comparison) Operator", "Author2089" }, } },
    {  769u, { { 0u, "shift proposal P0769R0.pages", "Author6002" }, { 1u, "shift proposal P0769R1.pages", "Author4256" }, { 2u, "shift proposal P0769R2.pages", "Author3984" }, } },
    {  770u, { { 0u, "Title1033", "Author3908" }, } },
    {  771u, { { 0u, "Title560", "Author2055" }, { 1u, "Title66", "Author188" }, } },
    {  772u, { { 0u, "Title511", "Author1863" }, { 1u, "Title1178", "Author4394" }, } },
    {  773u, { { 0u, "Towards meaningful fancy pointers", "Author5222" }, } },
    {  774u, { { 0u, "Module Declaration Location", "Author3444" }, } },
    {  775u, { { 0u, "Module Partitions", "Author998" }, } },
    {  776u, { { 0u, "Rebase the Parallelism TS onto the C++17 Standard", "Author1444" }, { 1u, "Rebase the Parallelism TS onto the C++17 Standard", "Author908" }, } },
    {  777u, { { 0u, "Treating Unnecessary decay", "Author1475" }, { 1u, "Treating Unnecessary decay", "Author6236" }, } },
    {  778u, { { 0u, "Module Names", "Author2130" }, } },
    {  779u, { { 0u, "Title630", "Author2299" }, } },
    {  780u, { { 0u, "Pack expansion in lambda init-capture", "Author2001" }, { 1u, "Pack expansion in lambda init-capture", "Author5284" }, { 2u, "Pack expansion in lambda init-capture", "Author3726" }, } },
    {  781u, { { 0u, "A Modern C++ Signature for Main", "Author2651" }, } },
    {  782u, { { 0u, "A Case for Simplifying/Improving Natural Syntax Concepts", "Author1142" }, { 1u, "Title1071", "Author4020" }, { 2u, "Title1473", "Author5588" }, } },
    {  783u, { { 0u, "P0783: Continuations without overcomplicating the future", "Author623" }, } },
    {  784u, { { 0u, "Title79", "Author237" }, { 1u, "Title67", "Author198" }, { 2u, "Title807", "Author2971" }, { 3u, "More constexpr containers", "Author2563" }, { 4u, "More constexpr containers", "Author320" }, { 5u, "More constexpr containers", "Author821" }, { 6u, "More constexpr containers", "Author3181" }, { 7u, "More constexpr containers", "Author6192" }, } },
    {  785u, { { 0u, "Runtime-sized arrays and a C++ wrapper", "Author1463" }, } },
    {  786u, { { 0u, "p0786r0", "Author2722" }, { 1u, "p0786r1", "Author5521" }, } },
    {  787u, { { 0u, "Proclaimed Ownership Declarations", "Author4272" }, } },
    {  788u, { { 0u, "Standard Library Specification in a Concepts and Contracts World", "Author897" }, { 1u, "Standard Library Specification in a Concepts and Contracts World", "Author2385" }, { 2u, "Standard Library Specification in a Concepts and Contracts World", "Author3387" }, { 3u, "Standard Library Specification in a Concepts and Contracts World", "Author5775" }, } },
    {  789u, { { 0u, "Range Adaptors and Utilities", "Author2290" }, { 1u, "Range Adaptors and Utilities", "Author2494" }, { 2u, "Range Adaptors and Utilities", "Author5861" }, { 3u, "Range Adaptors and Utilities", "Author4691" }, } },
    {  790u, { { 0u, "library-operator-spaceship", "Author780" }, { 1u, "Title162", "Author563" }, { 2u, "Title1634", "Author6206" }, } },
    {  791u, { { 0u, "Title662", "Author2460" }, } },
    {  792u, { { 0u, "Title359", "Author1262" }, { 1u, "Untitled", "Author1109" }, { 2u, "Untitled", "Author5740" }, { 3u, "Untitled", "Author6422" }, { 4u, "Untitled", "Author2160" }, { 5u, "function_ref: a non-owning reference to a Callable", "Author6394" }, { 6u, "function_ref: a type-erased callable reference - HackMD", "Author6429" }, { 7u, "function_ref: a type-erased callable reference - HackMD", "Author4753" }, { 8u, "function_ref: a type-erased callable reference - HackMD", "Author4109" }, { 9u, "function_ref: a type-erased callable reference - HackMD", "Author1751" }, { 10u, "function_ref: a type-erased callable reference - HackMD", "Author5953" }, { 11u, "function_ref: a type-erased callable reference - HackMD", "Author4752" }, { 12u, "function_ref: a type-erased callable reference - HackMD", "Author4848" }, { 13u, "function_ref: a type-erased callable reference - HackMD", "Author4591" }, { 14u, "function_ref: a type-erased callable reference - HackMD", "Author308" }, } },
    {  793u, { { 0u, "Title1566", "Author5939" }, } },
    {  794u, { { 0u, "Title1666", "Author6330" }, } },
    {  795u, { { 0u, "Title42", "Author121" }, } },
    {  796u, { { 0u, "Title919", "Author3435" }, { 1u, "Title14", "Author48" }, { 2u, "Title798", "Author2923" }, { 3u, "Title468", "Author1710" }, } },
    {  797u, { { 0u, "Title54", "Author147" }, { 1u, "Title262", "Author942" }, { 2u, "Title1298", "Author4912" }, } },
    {  798u, { { 0u, "p0798r0: Monadic operations for std::optional", "Author4797" }, { 2u, "p0798R2: Monadic operations for std::optional", "Author5777" }, { 3u, "p0798R3: Monadic operations for std::optional", "Author3858" }, { 4u, "p0798R4: Monadic operations for std::optional", "Author3620" }, { 6u, "p0798R6: Monadic operations for std::optional", "Author5603" }, { 8u, "Monadic operations for std::optional", "Author3629" }, } },
    {  799u, { { 0u, "Title142", "Author495" }, { 1u, "Baseline for Ed 2 of TR 24772", "Author5029" }, } },
    {  800u, { { 0u, "wg21 | For documenting all WG21-related proposals", "Author5886" }, } },
    {  801u, { { 0u, "Title966", "Author3641" }, } },
    {  802u, { { 0u, "Standard Library Concepts -", "Author62" }, } },
    {  803u, { { 0u, "Endian RFC", "Author4125" }, } },
    {  804u, { { 0u, "Impact of the Modules TS on the C++ tools ecosystem", "Author6345" }, } },
    {  805u, { { 0u, "Title723", "Author2647" }, { 1u, "Comparing Containers", "Author5492" }, { 2u, "Comparing Containers", "Author2809" }, } },
    {  806u, { { 0u, "Deprecate Implicit Capture of this", "Author6409" }, { 1u, "Deprecate implicit capture of this via [=]", "Author6482" }, { 2u, "Deprecate implicit capture of this via [=]", "Author3401" }, } },
    {  807u, { { 0u, "An Adjective Syntax for Concepts", "Author5933" }, } },
    {  808u, { { 0u, "Title1600", "Author6073" }, } },
    {  809u, { { 0u, "Title1252", "Author4706" }, } },
    {  810u, { { 0u, "Title1482", "Author5624" }, } },
    {  811u, { { 0u, "Well-behaved interpolation for numbers and pointers", "Author987" }, { 1u, "Well-behaved interpolation for numbers and pointers", "Author3636" }, { 2u, "Well-behaved interpolation for numbers and pointers", "Author5622" }, { 3u, "Well-behaved interpolation for numbers and pointers", "Author6307" }, } },
    {  812u, { { 0u, "copy-list-initialization is inherently un-=", "Author4008" }, } },
    {  813u, { { 0u, "Microsoft Word - P0813R0_retval_construct.docx", "Author3220" }, { 1u, "P0813R1", "Author5114" }, } },
    {  814u, { { 0u, "Microsoft Word - P0814R0_hash_combine.docx", "Author6135" }, { 2u, "Microsoft Word - P0814R2_hash_combine.docx", "Author5833" }, } },
    {  815u, { { 0u, "C++ Standard Library Issues to be moved in Albuquerque", "Author2428" }, } },
    {  816u, { { 0u, "Title221", "Author775" }, } },
    {  817u, { { 0u, "Core \"ready\" Issues", "Author3894" }, } },
    {  818u, { { 0u, "Core \"tentatively ready\" Issues", "Author6071" }, { 1u, "Core \"tentatively ready\" Issues", "Author1820" }, } },
    {  819u, { { 0u, "Microsoft Word - P0819R0_feature_macros.docx", "Author6317" }, } },
    {  820u, { { 0u, "Title895", "Author3334" }, { 1u, "Title1340", "Author5095" }, { 2u, "Title193", "Author679" }, { 3u, "Title1545", "Author5846" }, { 4u, "Title151", "Author523" }, } },
    {  821u, { { 0u, "Title1322", "Author5014" }, } },
    {  822u, { { 0u, "Title977", "Author3692" }, } },
    {  824u, { { 0u, "Title1038", "Author3919" }, { 1u, "Summary of SG14 discussion on <system_error>", "Author811" }, } },
    {  825u, { { 0u, "A friendlier tuple get", "Author3132" }, { 1u, "A friendlier tuple get", "Author2253" }, } },
    {  826u, { { 0u, "SFINAE-friendly std::bind", "Author2916" }, } },
    {  827u, { { 0u, "Title305", "Author1084" }, } },
    {  828u, { { 0u, "Title1642", "Author6226" }, { 1u, "Title1309", "Author4950" }, } },
    {  829u, { { 0u, "Title618", "Author2259" }, { 1u, "Title959", "Author3603" }, { 2u, "Title299", "Author1069" }, { 3u, "Title1532", "Author5774" }, { 4u, "Title1255", "Author4726" }, } },
    {  830u, { { 0u, "Microsoft Word - P0830R0_requires_in_lib.docx", "Author6038" }, } },
    {  831u, { { 0u, "Keep alias syntax extendable", "Author3703" }, } },
    {  832u, { { 0u, "Module TS Wording Does Not Support Intended Use Case", "Author5264" }, } },
    {  834u, { { 0u, "p0834r0: Lifting overload sets into objects", "Author4045" }, } },
    {  835u, { { 0u, "Adopt SD-6 feature macros into the C++20 working draft", "Author1172" }, } },
    {  836u, { { 0u, "Title1267", "Author4785" }, { 1u, "Title1288", "Author4868" }, } },
    {  837u, { { 0u, "Ruminations on modular macros", "Author3340" }, } },
    {  838u, { { 0u, "Title226", "Author800" }, } },
    {  839u, { { 0u, "Recursive lambdas", "Author2714" }, } },
    {  840u, { { 0u, "Language support for empty objects", "Author2368" }, { 1u, "Language support for empty objects", "Author2768" }, { 2u, "Language support for empty objects", "Author3542" }, } },
    {  841u, { { 0u, "ModulesAtScale", "Author1895" }, } },
    {  842u, { { 0u, "Unknown Exports by Example", "Author3076" }, } },
    {  843u, { { 0u, "fixed_capacity_vector", "Author616" }, { 1u, "P0843r1: fixed_capacity_vector", "Author5154" }, { 2u, "static_vector", "Author4554" }, { 3u, "README.md - Grip", "Author596" }, { 4u, "README.md - Grip", "Author5542" }, { 5u, "static_vector", "Author142" }, { 6u, "static_vector", "Author5849" }, { 7u, "inplace_vector", "Author3202" }, { 8u, "inplace_vector", "Author6259" }, { 9u, "`inplace_vector`", "Author290" }, { 10u, "inplace_vector", "Author5458" }, { 11u, "`inplace_vector`", "Author3397" }, { 12u, "`inplace_vector`", "Author565" }, { 13u, "`inplace_vector` - HackMD", "Author5582" }, { 14u, "`inplace_vector` - HackMD", "Author4331" }, } },
    {  844u, { { 0u, "Type functions and beyond", "Author2524" }, } },
    {  845u, { { 0u, "Common Subset of C++03 and C++17: Binders", "Author3079" }, } },
    {  846u, { { 0u, "ADL and Function Templates that are not Visible", "Author4904" }, } },
    {  847u, { { 0u, "p0847R0: Deducing this", "Author1991" }, { 1u, "Deducing this", "Author4742" }, { 2u, "Deducing this", "Author4438" }, { 4u, "Deducing this", "Author30" }, { 5u, "Deducing this", "Author5252" }, { 6u, "Deducing this", "Author2989" }, { 7u, "Deducing this", "Author1334" }, } },
    {  848u, { { 0u, "Conditionally Trivial Special Member Functions", "Author4080" }, { 1u, "Conditionally Trivial Special Member Functions", "Author3442" }, { 2u, "Conditionally Trivial Special Member Functions", "Author1407" }, { 3u, "Conditionally Trivial Special Member Functions", "Author2741" }, } },
    {  849u, { { 0u, "auto(x): DECAY_COPY in the language - HackMD", "Author2319" }, { 1u, "auto(x): decay-copy in the language - HackMD", "Author1910" }, { 2u, "auto(x): decay-copy in the language", "Author2369" }, { 3u, "auto(x): decay-copy in the language - HackMD", "Author813" }, { 4u, "auto(x): decay-copy in the language - HackMD", "Author2491" }, { 5u, "auto(x): decay-copy in the language - HackMD", "Author2565" }, { 6u, "auto(x): decay-copy in the language - HackMD", "Author1089" }, { 7u, "auto(x): decay-copy in the language - HackMD", "Author5636" }, { 8u, "auto(x): decay-copy in the language - HackMD", "Author3766" }, } },
    {  851u, { { 0u, "simd<T> is neither a product type nor a container type [P0851R0]", "Author3474" }, } },
    {  856u, { { 0u, "p0856r0: Restrict Access Property for <code>mdspan</code> and <code>span</code>", "Author6483" }, } },
    {  857u, { { 0u, "Wording for functionality gaps in constraints", "Author3601" }, } },
    {  858u, { { 0u, "Constexpr iterator requirements", "Author2443" }, } },
    {  859u, { { 0u, "Core Issue 1581: When are constexpr member functions defined?", "Author2410" }, } },
    {  860u, { { 0u, "P0860r0 : Atomic Access Property for span and mdspan", "Author2761" }, { 1u, "p0860R1: Atomic Access Property for mdspan", "Author3234" }, } },
    {  863u, { { 0u, "Title1439", "Author5455" }, { 1u, "Title1001", "Author3781" }, } },
    {  864u, { { 0u, "C++ Standard Library Issues Resolved Directly In Albuquerque", "Author1908" }, } },
    {  866u, { { 0u, "Title65", "Author183" }, } },
    {  867u, { { 0u, "'Module Interface' is Misleading", "Author5174" }, } },
    {  868u, { { 0u, "Title19", "Author68" }, { 1u, "Title1635", "Author6208" }, { 2u, "Title539", "Author1957" }, } },
    {  870u, { { 0u, "A proposal for a type trait to detect narrowing conversions", "Author4596" }, { 1u, "A proposal for a type trait to detect narrowing conversions", "Author2019" }, { 2u, "A proposal for a type trait to detect narrowing conversions", "Author751" }, { 3u, "A proposal for a type trait to detect narrowing conversions", "Author5753" }, { 4u, "A proposal for a type trait to detect narrowing conversions", "Author2347" }, { 5u, "A proposal for a type trait to detect narrowing conversions", "Author2302" }, } },
    {  873u, { { 0u, "p0873R0: A plea for a consistent, terse and intuitive declaration syntax", "Author2137" }, { 1u, "p0873R1: A plea for a consistent, terse and intuitive declaration syntax", "Author227" }, } },
    {  874u, { { 0u, "p0874R0: Syntax to anonymously refer to the current declaration contexts", "Author2888" }, } },
    {  876u, { { 0u, "fibers without scheduler", "Author2132" }, { 2u, "fibers without scheduler", "Author1355" }, { 3u, "fibers without scheduler", "Author1241" }, { 5u, "fiberswithoutscheduler", "Author1249" }, { 6u, "fiberswithoutscheduler", "Author4220" }, { 8u, "fiberswithoutscheduler", "Author2412" }, { 9u, "fiberswithoutscheduler", "Author500" }, { 10u, "fiberswithoutscheduler", "Author5627" }, { 11u, "fiberswithoutscheduler", "Author2087" }, { 12u, "fiberswithoutscheduler", "Author6403" }, { 13u, "fiberswithoutscheduler", "Author1403" }, { 14u, "fiberswithoutscheduler", "Author5370" }, { 15u, "fiberswithoutscheduler", "Author3790" }, { 16u, "fiberswithoutscheduler", "Author1270" }, { 17u, "fiberswithoutscheduler", "Author229" }, { 18u, "fiberswithoutscheduler", "Author2604" }, { 19u, "fiberswithoutscheduler", "Author451" }, { 20u, "fiberswithoutscheduler", "Author5585" }, } },
    {  877u, { { 0u, "A proposal for modular macros", "Author1592" }, } },
    {  878u, { { 0u, "Copy elision for subobjects", "Author4703" }, } },
    {  879u, { { 0u, "Constexpr for swap and swap related functions", "Author1477" }, } },
    {  880u, { { 0u, "Numbers interaction", "Author6460" }, { 1u, "Numbers interaction", "Author633" }, { 2u, "Numbers interaction", "Author3427" }, } },
    {  881u, { { 0u, "A Proposal to add stack trace library", "Author4323" }, { 1u, "A Proposal to add stack trace library", "Author3203" }, { 2u, "A Proposal to add stack trace library", "Author3778" }, { 3u, "A Proposal to add stacktrace library", "Author3767" }, { 4u, "A Proposal to add stacktrace library", "Author384" }, { 5u, "A Proposal to add stacktrace library", "Author4995" }, { 6u, "A Proposal to add stacktrace library", "Author5788" }, { 7u, "A Proposal to add stacktrace library", "Author1770" }, } },
    {  882u, { { 0u, "User-defined Literals for std::filesystem::path - HackMD", "Author190" }, } },
    {  883u, { { 0u, "Microsoft Word - P0883R0_atomicinit.docx", "Author3775" }, { 1u, "P0883R1", "Author5404" }, { 2u, "P0883R2 Fixing Atomic Initialization", "Author4407" }, } },
    {  884u, { { 0u, "Microsoft Word - P0884R0_noexceptpolicy.docx", "Author703" }, } },
    {  886u, { { 0u, "Title702", "Author2594" }, } },
    {  887u, { { 0u, "Title1705", "Author6491" }, { 1u, "Title241", "Author854" }, } },
    {  888u, { { 0u, "C++ Standard Library Issues to be moved in Jacksonville", "Author6455" }, } },
    {  889u, { { 0u, "Ultimate copy elision", "Author3979" }, { 1u, "Ultimate copy elision", "Author5142" }, } },
    {  891u, { { 0u, "Title227", "Author801" }, { 1u, "Everyone Deserves a Little Order", "Author1242" }, { 2u, "Make strong_order a Customization Point!", "Author726" }, } },
    {  892u, { { 0u, "explicit(bool)", "Author1194" }, { 1u, "explicit(bool)", "Author5998" }, { 2u, "explicit(bool)", "Author4273" }, } },
    {  893u, { { 0u, "Chaining Comparisons", "Author5668" }, { 1u, "Chaining Comparisons", "Author5558" }, } },
    {  894u, { { 0u, "Title111", "Author377" }, { 1u, "Title92", "Author294" }, } },
    {  895u, { { 0u, "Microsoft Word - P0895R0_renamingcell.docx", "Author1810" }, } },
    {  896u, { { 0u, "Range Adaptors and Utilities", "Author3698" }, { 1u, "Standard Library Concepts", "Author2501" }, { 2u, "Merge the Ranges TS", "Author1834" }, { 3u, "Merge the Ranges TS", "Author2236" }, { 4u, "Merge the Ranges TS", "Author1118" }, } },
    {  897u, { { 0u, "Title574", "Author2103" }, } },
    {  898u, { { 0u, "Standard Library Concepts", "Author6000" }, { 1u, "Standard Library Concepts", "Author2248" }, { 2u, "Standard Library Concepts", "Author4237" }, { 3u, "Standard Library Concepts", "Author5810" }, } },
    {  899u, { { 0u, "LWG 3016 is Not a Defect", "Author5378" }, { 1u, "LWG 3016 is Not a Defect", "Author5555" }, } },
    {  900u, { { 0u, "p0900r0: An Ontology for Properties of <code>mdspan</code>", "Author1122" }, } },
    {  901u, { { 0u, "p0901r0: Size feedback in operator new", "Author3296" }, { 1u, "Size feedback in operator new", "Author3701" }, { 2u, "Size feedback in operator new", "Author250" }, { 3u, "Size feedback in operator new", "Author3877" }, { 4u, "Size feedback in operator new", "Author6032" }, { 5u, "Size feedback in operator new", "Author1867" }, { 6u, "Size feedback in operator new", "Author4293" }, { 7u, "Size feedback in operator new", "Author3745" }, { 8u, "Size feedback in operator new", "Author4825" }, { 9u, "Size feedback in operator new", "Author3957" }, { 10u, "Size feedback in operator new", "Author1641" }, { 11u, "Size feedback in operator new", "Author3374" }, } },
    {  902u, { { 0u, "p0902r0: Move-only iterators", "Author1288" }, } },
    {  903u, { { 0u, "Title398", "Author1424" }, { 1u, "Title1105", "Author4139" }, { 2u, "Title223", "Author781" }, } },
    {  904u, { { 0u, "Title10", "Author27" }, } },
    {  905u, { { 0u, "Symmetry for spaceship", "Author1926" }, { 1u, "Symmetry for spaceship", "Author293" }, } },
    {  906u, { { 0u, "Improvement suggestions for the Modules TS", "Author383" }, { 1u, "Improvement suggestions for the Modules TS", "Author793" }, } },
    {  907u, { { 0u, "p0907r0: Signed Integers are Twos Complement", "Author5180" }, { 1u, "p0907R1: Signed Integers are Twos Complement", "Author524" }, { 2u, "p0907R2: Signed Integers are Twos Complement", "Author5001" }, { 3u, "Signed Integers are Twos Complement", "Author5691" }, { 4u, "Signed Integers are Twos Complement", "Author4200" }, } },
    {  908u, { { 0u, "p0908r0: Offsetof for Pointers to Members", "Author575" }, } },
    {  909u, { { 0u, "Module TS Supports Legacy Integration", "Author3209" }, } },
    {  911u, { { 0u, "Title1140", "Author4261" }, { 1u, "Title1006", "Author3801" }, } },
    {  912u, { { 0u, "Title1280", "Author4838" }, { 1u, "Title1581", "Author6005" }, { 2u, "Title129", "Author455" }, { 3u, "Title500", "Author1811" }, { 4u, "Abstract", "Author2046" }, { 5u, "P0912R5 - Merge Coroutines TS into C++20 working draft", "Author5181" }, } },
    {  913u, { { 0u, "Add symmetric coroutine control transfer", "Author2358" }, { 1u, "Add symmetric coroutine control transfer", "Author6401" }, } },
    {  914u, { { 0u, "Add parameter preview to coroutine promise constructor", "Author2605" }, { 1u, "Add parameter preview to coroutine promise constructor", "Author3694" }, } },
    {  915u, { { 0u, "Untitled", "Author5150" }, } },
    {  916u, { { 0u, "Naming implementation-defined simd_abi tag types [P0916R0]", "Author458" }, } },
    {  917u, { { 0u, "Making operator?: overloadable [P0917R0]", "Author1509" }, { 1u, "Making operator?: overloadable [P0917R1]", "Author4133" }, { 2u, "Making operator?: overloadable [P0917R2]", "Author4552" }, { 3u, "Making operator?: overloadable [P0917R3]", "Author5016" }, } },
    {  918u, { { 0u, "Title420", "Author1501" }, { 1u, "Title1347", "Author5111" }, { 2u, "Title85", "Author253" }, } },
    {  919u, { { 0u, "p0919r0: Heterogeneous lookup for unordered containers", "Author1443" }, { 1u, "p0919R1: Heterogeneous lookup for unordered containers", "Author1971" }, { 2u, "Heterogeneous lookup for unordered containers", "Author2924" }, { 3u, "Heterogeneous lookup for unordered containers", "Author6275" }, } },
    {  920u, { { 0u, "Precalculated hash values in lookup", "Author2779" }, { 1u, "Precalculated hash values in lookup", "Author1649" }, { 2u, "Precalculated hash values in lookup", "Author2021" }, } },
    {  921u, { { 0u, "Title776", "Author2824" }, { 2u, "Title6", "Author19" }, } },
    {  922u, { { 0u, "Title70", "Author208" }, } },
    {  923u, { { 0u, "Modules:Dependent ADL", "Author4628" }, { 1u, "Modules:Dependent ADL", "Author3119" }, } },
    {  924u, { { 0u, "Modules:Context-Sensitive Keyword", "Author5463" }, { 1u, "Modules:Context-Sensitive Keyword", "Author4356" }, } },
    {  925u, { { 0u, "Modules:Unqualified Using Declarations", "Author6500" }, } },
    {  927u, { { 0u, "Title811", "Author2991" }, { 1u, "Title145", "Author501" }, { 2u, "Title764", "Author2789" }, } },
    {  928u, { { 0u, "Title1547", "Author5852" }, { 1u, "Title1207", "Author4526" }, } },
    {  929u, { { 0u, "Checking for abstract class types", "Author3827" }, { 1u, "Checking for abstract class types", "Author499" }, { 2u, "Checking for abstract class types", "Author5942" }, } },
    {  930u, { { 0u, "Title1292", "Author4880" }, } },
    {  931u, { { 0u, "Title605", "Author2213" }, } },
    {  932u, { { 0u, "Title1113", "Author4172" }, { 1u, "Title625", "Author2284" }, } },
    {  933u, { { 0u, "Title1276", "Author4822" }, { 1u, "Title526", "Author1905" }, } },
    {  934u, { { 0u, "Title1464", "Author5560" }, } },
    {  935u, { { 0u, "Eradicating unnecessarily explicit default constructors from the standard library", "Author3893" }, } },
    {  936u, { { 0u, "Microsoft Word - P0936R0_boundparam.docx", "Author3667" }, } },
    {  937u, { { 0u, "Title163", "Author564" }, } },
    {  938u, { { 0u, "Title795", "Author2913" }, } },
    {  939u, { { 0u, "Title565", "Author2070" }, { 1u, "Title394", "Author1408" }, { 2u, "Title747", "Author2728" }, { 3u, "Title1030", "Author3892" }, { 4u, "Title112", "Author382" }, } },
    {  940u, { { 0u, "Title1279", "Author4834" }, { 1u, "Title608", "Author2223" }, { 2u, "Title1569", "Author5963" }, { 3u, "Title1598", "Author6061" }, } },
    {  941u, { { 0u, "Integrating feature-test macros into the C++ WD", "Author3841" }, { 1u, "Integrating feature-test macros into the C++ WD", "Author2244" }, { 2u, "Integrating feature-test macros into the C++ WD", "Author4551" }, } },
    {  942u, { { 0u, "Introducing a <smart_ptr> header", "Author3366" }, } },
    {  943u, { { 0u, "Support C atomics in C++", "Author3780" }, { 1u, "Support C atomics in C++", "Author3265" }, { 2u, "Support C atomics in C++", "Author3571" }, { 3u, "Support C atomics in C++", "Author5038" }, { 4u, "Support C atomics in C++", "Author3508" }, { 5u, "Support C atomics in C++", "Author5217" }, { 6u, "Support C atomics in C++", "Author1083" }, } },
    {  944u, { { 0u, "Contiguous Ranges", "Author2184" }, } },
    {  945u, { { 0u, "p0945r0: Generalizing alias declarations", "Author362" }, } },
    {  946u, { { 0u, "p0946r0: Towards consistency between <=> and other comparison operators", "Author299" }, } },
    {  947u, { { 0u, "p0947R0: Another take on Modules", "Author4233" }, { 1u, "Another take on Modules", "Author5868" }, } },
    {  949u, { { 0u, "Adding support for type-based metaprogramming to the standard library", "Author5034" }, } },
    {  952u, { { 0u, "A new specification for std::generate_canonical", "Author562" }, { 1u, "A new specification for std::generate_canonical", "Author286" }, { 2u, "A new specification for std::generate_canonical", "Author4547" }, } },
    {  953u, { { 0u, "constexpr reflexpr", "Author3793" }, { 1u, "constexpr reflexpr", "Author932" }, { 2u, "constexpr reflexpr", "Author2797" }, } },
    {  954u, { { 0u, "Title667", "Author2486" }, } },
    {  955u, { { 0u, "Title1019", "Author3847" }, } },
    {  956u, { { 0u, "Title715", "Author2631" }, } },
    {  957u, { { 0u, "Title1537", "Author5814" }, { 1u, "WG21 Paper P0957R1", "Author5248" }, { 2u, "Title1629", "Author6177" }, { 3u, "Title264", "Author953" }, { 4u, "Title671", "Author2504" }, { 5u, "Title1136", "Author4239" }, { 6u, "Title939", "Author3534" }, { 7u, "Title813", "Author3001" }, { 8u, "Title621", "Author2268" }, { 9u, "Title658", "Author2431" }, } },
    {  958u, { { 0u, "Networking TS changes to support proposed Executors TS", "Author5066" }, { 1u, "Networking TS changes to support proposed Executors TS", "Author4605" }, { 2u, "Networking TS changes to support proposed Executors TS", "Author1232" }, { 3u, "Networking TS changes to support proposed Executors TS", "Author4061" }, } },
    {  959u, { { 0u, "Title890", "Author3299" }, { 1u, "Title61", "Author163" }, { 2u, "Title532", "Author1932" }, } },
    {  960u, { { 0u, "Allow initializing aggregates from a parenthesized list of values", "Author3753" }, { 1u, "Allow initializing aggregates from a parenthesized list of values", "Author2328" }, { 2u, "Allow initializing aggregates from a parenthesized list of values", "Author4851" }, { 3u, "Allow initializing aggregates from a parenthesized list of values", "Author585" }, } },
    {  961u, { { 0u, "Relaxing the structured bindings customization point finding rules", "Author4397" }, { 1u, "Relaxing the structured bindings customization point finding rules", "Author5415" }, } },
    {  962u, { { 0u, "Relaxing the range-for loop customization point finding rules", "Author2582" }, { 1u, "Relaxing the range-for loop customization point finding rules", "Author2229" }, } },
    {  963u, { { 0u, "Structured binding declaration as a condition - HackMD", "Author167" }, { 1u, "Structured binding declaration as a _condition_ - HackMD", "Author380" }, { 2u, "Structured binding declaration as a _condition_ - HackMD", "Author4992" }, { 3u, "Structured binding declaration as a _condition_ - HackMD", "Author1126" }, } },
    {  964u, { { 0u, "Finding the right set of traits for simd<T> [P0964R0]", "Author1666" }, { 1u, "Finding the right set of traits for simd<T> [P0964R1]", "Author3714" }, { 2u, "Finding the right set of traits for simd<T> [P0964R2]", "Author2943" }, } },
    {  965u, { { 0u, "Initializers of objects with automatic and dynamic storage duration have funny inconsistencies", "Author4835" }, } },
    {  966u, { { 0u, "P0966r0: <code>string::reserve</code> Should Not Shrink", "Author280" }, { 1u, "p0966R1: <code>string::reserve</code> Should Not Shrink", "Author490" }, } },
    {  968u, { { 0u, "Core \"tentatively ready\" Issues", "Author4917" }, } },
    {  969u, { { 0u, "Title1273", "Author4808" }, } },
    {  970u, { { 0u, "Better, Safer Range Access Customization Points", "Author1320" }, { 1u, "Better, Safer Range Access Customization Points", "Author1007" }, } },
    {  972u, { { 0u, "Microsoft Word - d0972r0.docx", "Author3523" }, } },
    {  973u, { { 0u, "Title1008", "Author3806" }, } },
    {  974u, { { 0u, "A Function Returning Whether An Underlying Type Value Is a Valid Enumerator of a Given Enumeration", "Author5003" }, } },
    {  975u, { { 0u, "Title968", "Author3653" }, } },
    {  976u, { { 0u, "Title197", "Author688" }, } },
    {  977u, { { 0u, "Title1214", "Author4563" }, } },
    {  978u, { { 0u, "Title582", "Author2134" }, } },
    {  980u, { { 0u, "Title579", "Author2117" }, { 1u, "Title341", "Author1184" }, } },
    {  981u, { { 0u, "Title1203", "Author4505" }, } },
    {  982u, { { 0u, "Weaken release sequences", "Author3942" }, { 1u, "Weaken release sequences", "Author5340" }, } },
    {  983u, { { 0u, "Title278", "Author999" }, } },
    {  984u, { { 0u, "Title766", "Author2793" }, } },
    {  985u, { { 0u, "LWG Chair post-meeting report", "Author6340" }, { 1u, "LWG Chair post-meeting report", "Author1545" }, { 2u, "LWG Chair post-meeting report", "Author211" }, { 3u, "LWG Chair post-meeting report", "Author947" }, { 4u, "LWG Chair post-meeting report", "Author4401" }, } },
    {  986u, { { 0u, "Comparison of Modules Proposals", "Author5087" }, } },
    {  987u, { { 0u, "polymorphic_allocator<byte> instead of type-erasure", "Author3465" }, { 1u, "Microsoft Word - P0987_polyalloc_instead_of_erasure.docx", "Author5159" }, { 2u, "Microsoft Word - P0987R2_polyalloc_instead_of_erasure.docx", "Author3229" }, } },
    {  988u, { { 0u, "Title494", "Author1794" }, } },
    {  989u, { { 0u, "Title1032", "Author3901" }, } },
    {  990u, { { 0u, "Title18", "Author61" }, } },
    {  991u, { { 0u, "Title74", "Author224" }, } },
    {  992u, { { 0u, "Constexpr", "Author2216" }, } },
    {  993u, { { 0u, "Reflection", "Author1176" }, } },
    {  994u, { { 0u, "Title1609", "Author6103" }, } },
    {  995u, { { 0u, "p0995R0: Improving atomic_flag", "Author3269" }, { 1u, "Improving atomic_flag", "Author2242" }, } },
    {  996u, { { 1u, "Rebase Library Fundamentals TS on C++17", "Author6021" }, } },
    {  997u, { { 0u, "Title823", "Author3039" }, } },
    {  999u, { { 0u, "Title1346", "Author5110" }, } },
    { 1000u, { { 0u, "Title1055", "Author3966" }, { 1u, "Title993", "Author3752" }, { 2u, "Title1655", "Author6290" }, { 3u, "Title1433", "Author5432" }, { 4u, "Title440", "Author1595" }, { 5u, "Title693", "Author2566" }, { 6u, "Title1381", "Author5220" }, } },
    { 1001u, { { 0u, "Target Vectorization Policies from Parallelism V2 TS to C++20", "Author4597" }, { 1u, "Target Vectorization Policies from Parallelism V2 TS to C++20", "Author684" }, { 2u, "Target Vectorization Policies from Parallelism V2 TS to C++20", "Author4762" }, } },
    { 1002u, { { 0u, "Title334", "Author1164" }, { 1u, "Title572", "Author2097" }, } },
    { 1003u, { { 0u, "C++ Standard Library Issues Resolved Directly In Jacksonville", "Author49" }, } },
    { 1004u, { { 0u, "Title568", "Author2084" }, { 1u, "Title346", "Author1204" }, { 2u, "Title547", "Author1998" }, } },
    { 1005u, { { 0u, "p1005r0: namespace std { namespace fs = filesystem; }", "Author5337" }, { 1u, "`namespace std { namespace fs = filesystem; }`", "Author2642" }, } },
    { 1006u, { { 0u, "Title1264", "Author4773" }, { 1u, "Title854", "Author3146" }, } },
    { 1007u, { { 0u, "Title954", "Author3576" }, { 1u, "Title1306", "Author4945" }, { 2u, "Title1132", "Author4229" }, { 3u, "Title1426", "Author5401" }, } },
    { 1008u, { { 0u, "Title200", "Author706" }, { 1u, "Title983", "Author3723" }, } },
    { 1009u, { { 0u, "Title1379", "Author5214" }, { 1u, "Title1393", "Author5269" }, { 2u, "Title1628", "Author6163" }, } },
    { 1010u, { { 0u, "p1010R0: Container support for implicit lifetime types", "Author5321" }, { 1u, "Container support for implicit lifetime types", "Author3560" }, } },
    { 1011u, { { 0u, "Title591", "Author2163" }, } },
    { 1012u, { { 0u, "Title1647", "Author6252" }, { 1u, "Title1332", "Author5062" }, } },
    { 1013u, { { 0u, "Explicit concept expressions", "Author6361" }, { 1u, "Explicit concept expressions", "Author4332" }, } },
    { 1014u, { { 0u, "Unit type", "Author3682" }, } },
    { 1015u, { { 0u, "Title460", "Author1681" }, } },
    { 1016u, { { 0u, "P1016R0", "Author2911" }, } },
    { 1017u, { { 0u, "Title1692", "Author6445" }, } },
    { 1018u, { { 0u, "Evolution status after Jacksonville 2018", "Author6267" }, { 1u, "Evolution status after Rapperswil 2018", "Author1608" }, { 2u, "Evolution status after San Diego 2018", "Author3223" }, { 3u, "Evolution status after Kona 2019", "Author1274" }, { 4u, "Evolution status after Cologne 2019", "Author5391" }, { 5u, "Language Evolution status after Belfast 2019", "Author4247" }, { 6u, "Language Evolution status after Prague 2020", "Author5169" }, { 7u, "C++ Language Evolution status pandemic edition 2020/032020/10", "Author2293" }, { 8u, "C++ Language Evolution status pandemic edition 2020/112021/01", "Author1430" }, { 9u, "C++ Language Evolution status pandemic edition 2021/012021/03", "Author1362" }, { 10u, "C++ Language Evolution status pandemic edition 2021/04", "Author4475" }, { 11u, "C++ Language Evolution status pandemic edition 2021/05", "Author6193" }, { 12u, "C++ Language Evolution status pandemic edition 2021/062021/08", "Author5230" }, { 13u, "C++ Language Evolution status pandemic edition 2021/082021/09", "Author2597" }, { 14u, "C++ Language Evolution status pandemic edition 2021/092022/01", "Author4907" }, { 15u, "C++ Language Evolution status pandemic edition 2022/012022/02", "Author1340" }, { 16u, "C++ Language Evolution status pandemic edition 2022/022022/06", "Author263" }, { 17u, "C++ Language Evolution status pandemic edition 2022/062022/07", "Author6334" }, { 18u, "C++ Language Evolution status pandemic edition 2022/072022/11", "Author1257" }, { 19u, "C++ Language Evolution status", "Author3990" }, } },
    { 1019u, { { 0u, "Title722", "Author2644" }, { 1u, "Title423", "Author1520" }, { 2u, "Title1391", "Author5262" }, } },
    { 1020u, { { 0u, "Smart pointer creation with default initialization", "Author5352" }, { 1u, "Smart pointer creation with default initialization", "Author2053" }, } },
    { 1021u, { { 0u, "Extensions to Class Template Argument Deduction", "Author2689" }, { 1u, "Filling holes in Class Template Argument Deduction", "Author5616" }, { 2u, "Filling holes in Class Template Argument Deduction", "Author281" }, { 3u, "Filling holes in Class Template Argument Deduction", "Author474" }, { 4u, "Filling holes in Class Template Argument Deduction", "Author3165" }, { 5u, "Filling holes in Class Template Argument Deduction", "Author3291" }, { 6u, "Filling holes in Class Template Argument Deduction", "Author2780" }, } },
    { 1022u, { { 0u, "Title699", "Author2577" }, } },
    { 1023u, { { 0u, "Title369", "Author1308" }, } },
    { 1024u, { { 0u, "Title1658", "Author6302" }, { 1u, "Title1676", "Author6372" }, { 2u, "Title1144", "Author4282" }, { 3u, "Title103", "Author348" }, } },
    { 1025u, { { 0u, "Update The Reference To The Unicode Standard", "Author2434" }, { 1u, "Update The Reference To The Unicode Standard", "Author782" }, } },
    { 1026u, { { 0u, "Title229", "Author809" }, { 1u, "Title563", "Author2062" }, } },
    { 1028u, { { 0u, "Title1361", "Author5158" }, { 1u, "Title11", "Author36" }, { 2u, "Title536", "Author1946" }, { 3u, "Title91", "Author291" }, { 4u, "Title1049", "Author3951" }, { 5u, "Title1325", "Author5028" }, { 6u, "Title1522", "Author5738" }, } },
    { 1029u, { { 0u, "Title392", "Author1404" }, { 1u, "Title2", "Author3" }, { 2u, "Title1349", "Author5116" }, { 3u, "Title855", "Author3160" }, } },
    { 1030u, { { 0u, "Title1429", "Author5419" }, { 1u, "Title123", "Author418" }, { 2u, "Title283", "Author1013" }, { 3u, "Title1605", "Author6096" }, { 4u, "Title824", "Author3045" }, { 5u, "Title1500", "Author5684" }, { 6u, "Title196", "Author687" }, { 7u, "Title537", "Author1953" }, { 8u, "Title120", "Author413" }, } },
    { 1031u, { { 0u, "Title287", "Author1032" }, { 1u, "Title183", "Author656" }, { 2u, "Title592", "Author2164" }, } },
    { 1032u, { { 0u, "Misc constexpr bits", "Author5259" }, { 1u, "Misc constexpr bits", "Author3561" }, } },
    { 1033u, { { 0u, "P1033R0 Rangify the uninitialised memory algorithms!", "Author3247" }, { 1u, "P1033R1 Rangify the uninitialised memory algorithms!", "Author1011" }, } },
    { 1035u, { { 0u, "p1035R0: Input range adaptors", "Author5434" }, { 1u, "Input range adaptors", "Author2529" }, { 2u, "Input range adaptors", "Author2378" }, { 3u, "Input range adaptors", "Author5918" }, { 4u, "Input range adaptors", "Author4149" }, { 5u, "Input Range Adaptors", "Author3562" }, { 6u, "Input Range Adaptors", "Author3052" }, { 7u, "Input Range Adaptors", "Author5037" }, } },
    { 1037u, { { 0u, "Deep Integration of the Ranges TS", "Author1311" }, } },
    { 1039u, { { 0u, "I got you, FAM - Flexible Array Members for C++", "Author5468" }, } },
    { 1040u, { { 0u, "p1040R0: std::embed", "Author15" }, { 1u, "p1040R1: std::embed", "Author6254" }, { 2u, "std::embed", "Author5043" }, { 3u, "std::embed", "Author5873" }, { 4u, "std::embed", "Author2624" }, { 5u, "std::embed", "Author3996" }, { 6u, "std::embed", "Author3868" }, { 7u, "std::embed", "Author5888" }, } },
    { 1041u, { { 0u, "Title372", "Author1326" }, { 1u, "Make char16_t/char32_t string literals be UTF-16/32", "Author939" }, { 3u, "Make char16_t/char32_t string literals be UTF-16/32", "Author2338" }, { 4u, "Make char16_t/char32_t string literals be UTF-16/32", "Author5416" }, } },
    { 1042u, { { 0u, "__VA_OPT__ wording clarifications", "Author4608" }, { 1u, "__VA_OPT__ wording clarifications", "Author4603" }, } },
    { 1043u, { { 0u, "P1043r0 Narrow contracts in <code>string_view</code> versus P0903R1", "Author4075" }, } },
    { 1044u, { { 0u, "p1044R0: std::async() in an Executors World", "Author1511" }, } },
    { 1045u, { { 0u, "Title49", "Author136" }, { 1u, "`constexpr` Function Parameters", "Author5838" }, } },
    { 1046u, { { 0u, "Title469", "Author1711" }, { 1u, "Automatically Generate More Operators", "Author5078" }, { 2u, "Automatically Generate More Operators", "Author128" }, } },
    { 1048u, { { 0u, "Title194", "Author683" }, { 1u, "P1048R1", "Author4343" }, } },
    { 1050u, { { 0u, "Title1112", "Author4171" }, { 1u, "p1050r1", "Author4482" }, } },
    { 1051u, { { 0u, "p1051r0", "Author994" }, } },
    { 1052u, { { 0u, "Modules, Macros, and Build Systems", "Author2610" }, } },
    { 1053u, { { 0u, "p1053R0: Future-proofing continuations for executors", "Author4857" }, { 1u, "Future-proofing continuations for executors", "Author6454" }, } },
    { 1054u, { { 0u, "p1054R0: A Unified Futures Proposal for C++", "Author257" }, } },
    { 1055u, { { 0u, "Title281", "Author1005" }, } },
    { 1056u, { { 0u, "Add coroutine task type", "Author1826" }, { 1u, "Add coroutine lazy type", "Author3412" }, } },
    { 1059u, { { 0u, "p1059R0: Adapting Asio to use std::expected", "Author4720" }, } },
    { 1061u, { { 0u, "Structured Bindings can introduce a Pack", "Author519" }, { 1u, "Structured Bindings can introduce a Pack", "Author1212" }, { 2u, "Structured Bindings can introduce a Pack", "Author1944" }, { 3u, "Structured Bindings can introduce a Pack", "Author2131" }, { 4u, "Structured Bindings can introduce a Pack", "Author223" }, { 5u, "Structured Bindings can introduce a Pack", "Author5049" }, { 6u, "Structured Bindings can introduce a Pack", "Author4421" }, { 7u, "Structured Bindings can introduce a Pack", "Author662" }, { 8u, "Structured Bindings can introduce a Pack", "Author4636" }, { 9u, "Structured Bindings can introduce a Pack", "Author2446" }, { 10u, "Structured Bindings can introduce a Pack", "Author4318" }, } },
    { 1062u, { { 0u, "p1062R0: Diet Graphics", "Author748" }, } },
    { 1063u, { { 0u, "Title1626", "Author6156" }, { 1u, "Title1680", "Author6390" }, { 2u, "Title758", "Author2769" }, } },
    { 1064u, { { 0u, "Allowing Virtual Function Calls in Constant Expressions", "Author3105" }, } },
    { 1065u, { { 0u, "constexpr INVOKE", "Author3737" }, { 1u, "constexpr INVOKE", "Author89" }, { 2u, "constexpr INVOKE", "Author4228" }, } },
    { 1066u, { { 0u, "p1066R0: How to catch an exception_ptr without even try-ing", "Author105" }, { 1u, "How to catch an exception_ptr without even try-ing", "Author2662" }, } },
    { 1067u, { { 0u, "C++ Dependency Management: Package Consumption vs Development", "Author3704" }, } },
    { 1068u, { { 0u, "Title448", "Author1629" }, { 1u, "Title1418", "Author5382" }, { 2u, "Title1696", "Author6458" }, { 3u, "Title228", "Author804" }, { 4u, "Title1176", "Author4387" }, { 5u, "Title782", "Author2862" }, { 6u, "P1068R6.docx", "Author851" }, { 7u, "P1068R7.docx", "Author1548" }, { 8u, "P1068R8", "Author3743" }, { 9u, "P1068R9", "Author983" }, { 10u, "P1068R10", "Author1973" }, { 11u, "P1068R11", "Author3288" }, } },
    { 1069u, { { 0u, "Refining standard library support for Class Template Argument Deduction", "Author2310" }, { 1u, "Inferencing heap objects", "Author5680" }, } },
    { 1070u, { { 0u, "Title270", "Author970" }, } },
    { 1071u, { { 0u, "Title1183", "Author4411" }, } },
    { 1072u, { { 0u, "Title1204", "Author4513" }, { 1u, "Optimized Initialization for basic_string and vector", "Author129" }, { 2u, "basic_string::resize_default_init", "Author916" }, { 3u, "basic_string::resize_default_init", "Author6169" }, { 4u, "basic_string::resize_default_init", "Author6255" }, { 5u, "basic_string::resize_default_init", "Author5928" }, { 6u, "basic_string::resize_and_overwrite", "Author5929" }, { 7u, "basic_string::resize_and_overwrite", "Author1082" }, { 8u, "basic_string::resize_and_overwrite", "Author2457" }, { 9u, "basic_string::resize_and_overwrite", "Author171" }, { 10u, "basic_string::resize_and_overwrite", "Author5988" }, } },
    { 1073u, { { 0u, "Title1460", "Author5533" }, { 1u, "Title429", "Author1549" }, { 2u, "Title1021", "Author3857" }, { 3u, "Title1040", "Author3923" }, } },
    { 1074u, { { 0u, "Title1229", "Author4616" }, } },
    { 1076u, { { 0u, "Editorial clause reorganization", "Author16" }, { 1u, "Editorial clause reorganization", "Author587" }, } },
    { 1077u, { { 0u, "Allowing Virtual Destructors to be \"Trivial\"", "Author4328" }, } },
    { 1079u, { { 0u, "Title737", "Author2697" }, } },
    { 1080u, { { 0u, "SG16: Unicode meeting summaries 2018/03/28 - 2018/04/25", "Author3394" }, } },
    { 1081u, { { 0u, "P1081R0", "Author3822" }, } },
    { 1082u, { { 0u, "C++ Standard Library Issues to be moved in Rapperswil", "Author1676" }, } },
    { 1083u, { { 0u, "Title1104", "Author4128" }, { 1u, "P1083r1 | Move resource_adaptor from Library TS to the C++ WP", "Author54" }, { 2u, "P1083r2 | Move resource_adaptor from Library TS to the C++ WP", "Author1399" }, { 3u, "P1083r3 | Move resource_adaptor from Library TS to the C++ WP", "Author4601" }, { 4u, "Title612", "Author2235" }, { 5u, "Title757", "Author2766" }, { 6u, "Title13", "Author40" }, { 7u, "Title976", "Author3683" }, { 8u, "Move `resource_adaptor` from Library TS to the C++ WP", "Author4094" }, } },
    { 1084u, { { 0u, "Today's return-type-requirements Are Insufficient", "Author3851" }, { 1u, "Today's return-type-requirements Are Insufficient", "Author1309" }, { 2u, "Today's return-type-requirements Are Insufficient", "Author5449" }, } },
    { 1085u, { { 0u, "Title1648", "Author6257" }, { 1u, "Title1427", "Author5417" }, { 2u, "Title1597", "Author6060" }, } },
    { 1086u, { { 0u, "Title370", "Author1313" }, } },
    { 1087u, { { 0u, "C++ Modules", "Author4238" }, } },
    { 1089u, { { 0u, "Title660", "Author2450" }, { 2u, "Title1456", "Author5525" }, } },
    { 1090u, { { 0u, "Aggregate initialization in the presence of deleted constructors", "Author506" }, } },
    { 1091u, { { 0u, "Title816", "Author3014" }, { 1u, "Title492", "Author1787" }, { 2u, "Extending structured bindings to be more like variable declarations", "Author2942" }, { 3u, "Extending structured bindings to be more like variable declarations", "Author2133" }, } },
    { 1093u, { { 0u, "Title1195", "Author4471" }, } },
    { 1094u, { { 0u, "Nested Inline Namespaces", "Author5115" }, { 1u, "Nested Inline Namespaces", "Author6170" }, { 2u, "Nested Inline Namespaces", "Author5326" }, } },
    { 1095u, { { 0u, "Title1499", "Author5683" }, } },
    { 1096u, { { 0u, "Title1057", "Author3972" }, } },
    { 1097u, { { 0u, "Named character escapes", "Author538" }, { 1u, "Title1171", "Author4371" }, { 2u, "Named character escapes", "Author2974" }, } },
    { 1099u, { { 0u, "p1099R0: Using Enum", "Author3690" }, { 2u, "p1099R2: Using Enum", "Author1041" }, { 3u, "Using Enum", "Author4169" }, { 4u, "Using Enum", "Author2381" }, { 5u, "Using Enum", "Author126" }, } },
    { 1100u, { { 0u, "Efficient composition with DynamicBuffer", "Author2972" }, } },
    { 1101u, { { 0u, "Vector Length Agnostic SIMD", "Author1613" }, } },
    { 1102u, { { 0u, "Down with ()!", "Author4444" }, { 1u, "Down with <code>()</code>!", "Author254" }, { 2u, "Down with ()!", "Author2664" }, } },
    { 1103u, { { 0u, "C++ Technical Specification", "Author4087" }, { 1u, "Merging Modules", "Author5914" }, { 2u, "Merging Modules", "Author4428" }, { 3u, "Merging Modules", "Author3431" }, } },
    { 1105u, { { 0u, "Leaving no room for a lower-level language: A C++ Subset", "Author4311" }, { 1u, "Leaving no room for a lower-level language: A C++ Subset", "Author5989" }, } },
    { 1108u, { { 0u, "web_view", "Author2879" }, { 1u, "web_view", "Author2258" }, { 2u, "web_view", "Author3926" }, { 3u, "web_view", "Author3377" }, { 4u, "web_view", "Author3530" }, } },
    { 1109u, { { 0u, "P1109", "Author218" }, { 1u, "P1109R1", "Author5815" }, } },
    { 1110u, { { 0u, "A placeholder with no name", "Author3205" }, } },
    { 1111u, { { 0u, "Resolutions to NB Comments on the Parallelism TS v2", "Author5012" }, } },
    { 1112u, { { 0u, "Microsoft Word - cppprop3d.doc", "Author2791" }, { 1u, "Microsoft Word - p1112r1.doc", "Author6362" }, { 2u, "Microsoft Word - p1112r2.doc", "Author1422" }, { 3u, "Microsoft Word - p1112r3.doc", "Author5498" }, { 4u, "Microsoft Word - p1112r4.doc", "Author4919" }, { 5u, "Microsoft Word - p1112r5.doc", "Author6123" }, } },
    { 1113u, { { 0u, "Core \"ready\" Issues", "Author4136" }, } },
    { 1114u, { { 0u, "Core \"tentatively ready\" Issues", "Author1897" }, } },
    { 1115u, { { 0u, "Title319", "Author1119" }, { 1u, "Title348", "Author1210" }, { 2u, "Title872", "Author3216" }, { 3u, "Title507", "Author1845" }, } },
    { 1116u, { { 0u, "Title1544", "Author5844" }, } },
    { 1118u, { { 0u, "Title550", "Author2016" }, } },
    { 1119u, { { 0u, "ABI for std::hardware_{constructive,destructive}_interference_size", "Author3403" }, } },
    { 1120u, { { 0u, "Consistency improvements for <=> and other comparison operators", "Author2109" }, } },
    { 1121u, { { 0u, "Title832", "Author3070" }, { 1u, "Title131", "Author461" }, { 2u, "Title28", "Author88" }, { 3u, "Hazard Pointers", "Author426" }, } },
    { 1122u, { { 0u, "Title1491", "Author5657" }, { 1u, "Title1152", "Author4306" }, { 2u, "Title677", "Author2515" }, { 3u, "Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)", "Author3477" }, { 4u, "Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)", "Author35" }, } },
    { 1123u, { { 0u, "Editorial Guidance for merging P0019r8 and P0528r3", "Author5599" }, } },
    { 1128u, { { 0u, "Summer 2018 WG21 Batavia LWG Meeting Information", "Author3213" }, } },
    { 1130u, { { 1u, "Module Resource Requirement Propagation", "Author745" }, } },
    { 1131u, { { 0u, "Core Issue 2292: simple-template-id is ambiguous between class-name and type-name", "Author5375" }, { 1u, "Core Issue 2292: simple-template-id is ambiguous between class-name and type-name", "Author3481" }, { 2u, "Core Issue 2292: simple-template-id is ambiguous between class-name and type-name", "Author3654" }, } },
    { 1132u, { { 0u, "p1132R0: out_ptr - a scalable output pointer abstraction", "Author5984" }, { 1u, "out_ptr - a scalable output pointer abstraction", "Author3177" }, { 2u, "out_ptr - a scalable output pointer abstraction", "Author4555" }, { 3u, "out_ptr - a scalable output pointer abstraction", "Author4732" }, { 4u, "out_ptr - a scalable output pointer abstraction", "Author5213" }, { 5u, "out_ptr - a scalable output pointer abstraction", "Author2927" }, { 6u, "out_ptr - a scalable output pointer abstraction", "Author1244" }, { 7u, "out_ptr - a scalable output pointer abstraction", "Author979" }, { 8u, "out_ptr - a scalable output pointer abstraction", "Author2361" }, } },
    { 1133u, { { 0u, "Networking TS Associations For Call Wrappers", "Author5549" }, } },
    { 1135u, { { 0u, "The C++20 Synchronization Library", "Author5291" }, { 1u, "The C++20 Synchronization Library", "Author28" }, { 2u, "The C++20 Synchronization Library", "Author1213" }, { 3u, "The C++20 Synchronization Library", "Author3023" }, { 4u, "The C++20 Synchronization Library", "Author3210" }, { 5u, "The C++20 Synchronization Library", "Author4015" }, { 6u, "The C++20 Synchronization Library", "Author2295" }, } },
    { 1136u, { { 0u, "Title1202", "Author4496" }, } },
    { 1137u, { { 0u, "SG16: Unicode meeting summaries 2018/05/16 - 2018/06/20", "Author460" }, } },
    { 1138u, { { 0u, "Title805", "Author2957" }, } },
    { 1139u, { { 0u, "Address wording issues related to ISO 10646", "Author1995" }, { 1u, "Address wording issues related to ISO 10646", "Author3409" }, { 2u, "Address wording issues related to ISO 10646", "Author3285" }, } },
    { 1141u, { { 0u, "Yet another approach for constrained declarations", "Author802" }, { 1u, "Yet another approach for constrained declarations", "Author668" }, { 2u, "Yet another approach for constrained declarations", "Author3998" }, } },
    { 1142u, { { 0u, "Thoughts on a conservative terse syntax for constraints", "Author3258" }, } },
    { 1143u, { { 0u, "Title1182", "Author4410" }, { 1u, "Title745", "Author2719" }, { 2u, "Title529", "Author1916" }, } },
    { 1144u, { { 0u, "Object relocation in terms of move plus destroy", "Author2686" }, { 1u, "Object relocation in terms of move plus destroy", "Author3965" }, { 2u, "Object relocation in terms of move plus destroy", "Author3030" }, { 3u, "Object relocation in terms of move plus destroy", "Author3531" }, { 4u, "Object relocation in terms of move plus destroy", "Author1574" }, { 5u, "Object relocation in terms of move plus destroy", "Author6033" }, { 6u, "Object relocation in terms of move plus destroy", "Author1267" }, { 7u, "std::is_trivially_relocatable", "Author4112" }, { 8u, "std::is_trivially_relocatable", "Author6055" }, { 9u, "std::is_trivially_relocatable", "Author3834" }, { 10u, "std::is_trivially_relocatable", "Author6461" }, { 11u, "std::is_trivially_relocatable", "Author3596" }, { 12u, "std::is_trivially_relocatable", "Author3954" }, } },
    { 1145u, { { 0u, "Buffer Sequence Adaptors", "Author3006" }, } },
    { 1147u, { { 0u, "Printing `volatile` Pointers", "Author1780" }, { 1u, "Printing `volatile` Pointers", "Author1806" }, } },
    { 1148u, { { 0u, "Cleaning up [strings]", "Author3421" }, } },
    { 1149u, { { 0u, "Constexpr regex", "Author1496" }, } },
    { 1152u, { { 0u, "Deprecating <code>volatile</code>", "Author75" }, { 1u, "Deprecating <code>volatile</code>", "Author6244" }, { 2u, "Deprecating <code>volatile</code>", "Author950" }, { 3u, "Deprecating <code>volatile</code>", "Author1729" }, { 4u, "Deprecating <code>volatile</code>", "Author2173" }, } },
    { 1153u, { { 0u, "Copying volatile subobjects is not trivial", "Author1273" }, } },
    { 1154u, { { 0u, "Type traits for structural comparison", "Author6040" }, { 1u, "Type traits for structural comparison", "Author3357" }, { 2u, "Type traits for structural comparison", "Author3836" }, } },
    { 1155u, { { 0u, "More implicit moves", "Author542" }, { 1u, "More implicit moves", "Author1793" }, { 2u, "More implicit moves", "Author4874" }, { 3u, "More implicit moves", "Author1823" }, } },
    { 1156u, { { 0u, "Merged Modules and Tooling", "Author6272" }, } },
    { 1157u, { { 0u, "Multi-argument constrained-parameter - HackMD", "Author4123" }, } },
    { 1158u, { { 0u, "Concept-defined placeholder types - HackMD", "Author2864" }, } },
    { 1159u, { { 0u, "Title1100", "Author4107" }, } },
    { 1160u, { { 0u, "P1160R0", "Author3612" }, { 1u, "Microsoft Word - P1160R1", "Author5160" }, } },
    { 1161u, { { 0u, "Deprecate uses of the comma operator in subscripting expressions", "Author25" }, { 1u, "Deprecate uses of the comma operator in subscripting expressions", "Author3702" }, { 2u, "Deprecate uses of the comma operator in subscripting expressions", "Author1067" }, { 3u, "Deprecate uses of the comma operator in subscripting expressions", "Author3934" }, } },
    { 1163u, { { 0u, "Title211", "Author750" }, } },
    { 1164u, { { 0u, "Microsoft Word - D1164R0_create_directory_180824.docx", "Author3495" }, { 1u, "Microsoft Word - P1164R1R1_create_directory_190222.docx", "Author3257" }, } },
    { 1165u, { { 0u, "Title184", "Author658" }, { 1u, "Make stateful allocator propagation more consistent for `operator+(basic_string)`", "Author5717" }, } },
    { 1166u, { { 0u, "Title408", "Author1451" }, } },
    { 1167u, { { 0u, "Improving function templates with Class Template Argument Deduction", "Author5759" }, } },
    { 1168u, { { 0u, "How to make Terse Notation soar with Class Template Argument Deduction", "Author3595" }, } },
    { 1169u, { { 0u, "static operator()", "Author5405" }, { 1u, "static `operator()`", "Author2346" }, { 2u, "static `operator()`", "Author737" }, { 3u, "static operator()", "Author3008" }, { 4u, "static operator()", "Author2458" }, } },
    { 1170u, { { 0u, "Overload sets as function parameters", "Author6470" }, } },
    { 1171u, { { 0u, "Title377", "Author1346" }, } },
    { 1172u, { { 0u, "Title569", "Author2085" }, { 1u, "Title1356", "Author5134" }, } },
    { 1175u, { { 0u, "a simple and practical optional reference for C++", "Author5841" }, } },
    { 1177u, { { 0u, "Title1027", "Author3885" }, { 1u, "Title1161", "Author4337" }, } },
    { 1178u, { { 0u, "C++ Compile", "Author5286" }, } },
    { 1179u, { { 0u, "Title1120", "Author4184" }, { 1u, "Title327", "Author1138" }, } },
    { 1180u, { { 0u, "Response to P1156", "Author3855" }, } },
    { 1181u, { { 0u, "Proposing <code>unless</code>", "Author3472" }, } },
    { 1182u, { { 0u, "New names for the power-of-2 templates (and their header)", "Author1619" }, } },
    { 1184u, { { 0u, "A Module Mapper", "Author1610" }, { 1u, "A Module Mapper", "Author6347" }, { 2u, "A Module Mapper", "Author5857" }, } },
    { 1185u, { { 0u, "<=> != ==", "Author3850" }, { 1u, "<=> != ==", "Author1577" }, { 2u, "<=> != ==", "Author3995" }, } },
    { 1186u, { { 0u, "When do you actually use <=>?", "Author3211" }, { 1u, "When do you actually use <=>?", "Author2071" }, { 2u, "When do you actually use <=>?", "Author3017" }, { 3u, "When do you actually use <=>?", "Author5679" }, } },
    { 1187u, { { 0u, "A type trait for std::compare_3way()'s type", "Author6246" }, } },
    { 1188u, { { 0u, "Library utilities for <=>", "Author235" }, } },
    { 1189u, { { 0u, "Adding <=> to library", "Author1782" }, } },
    { 1190u, { { 0u, "Title386", "Author1381" }, } },
    { 1191u, { { 0u, "Title1260", "Author4745" }, } },
    { 1192u, { { 0u, "p1192R0: Experience report - integrating Executors with Parallel Algorithms", "Author6380" }, { 1u, "p1192R1: Experience report - integrating Executors with Parallel Algorithms", "Author2502" }, } },
    { 1193u, { { 0u, "Explicitly Specified Returns for (Implicit) Conversions", "Author5632" }, } },
    { 1194u, { { 0u, "P1194: The Compromise Executors Proposal: A lazy simplification of P0443", "Author5903" }, } },
    { 1195u, { { 0u, "Making <system_error> constexpr", "Author4127" }, } },
    { 1196u, { { 0u, "Value-based std::error_category comparison", "Author5206" }, } },
    { 1197u, { { 0u, "A non-allocating overload of error_category::message()", "Author6270" }, } },
    { 1198u, { { 0u, "Adding error_category::failed()", "Author899" }, } },
    { 1199u, { { 0u, "A simple proposal for unifying generic and object-oriented programming", "Author2871" }, } },
    { 1200u, { { 0u, "Title1641", "Author6225" }, } },
    { 1201u, { { 0u, "variant direct comparisons with held types", "Author5182" }, } },
    { 1202u, { { 0u, "Title415", "Author1486" }, { 1u, "Title213", "Author753" }, { 2u, "Title178", "Author631" }, { 3u, "Asymmetric Fences", "Author6348" }, { 4u, "P1202R4", "Author6384" }, { 5u, "P1202R5", "Author396" }, } },
    { 1203u, { { 0u, "Modular main()", "Author5805" }, } },
    { 1204u, { { 0u, "Canonical Project Structure", "Author3586" }, } },
    { 1205u, { { 0u, "Teleportation via <code>co_await</code>", "Author1706" }, } },
    { 1206u, { { 0u, "Title509", "Author1854" }, { 1u, "Title137", "Author475" }, { 2u, "Title1374", "Author5195" }, { 3u, "Title680", "Author2523" }, { 4u, "Title962", "Author3614" }, { 5u, "Title804", "Author2948" }, { 6u, "Title1543", "Author5840" }, { 7u, "Title1387", "Author5247" }, } },
    { 1207u, { { 0u, "Movability of Single-pass Iterators", "Author6266" }, { 1u, "Movability of Single-pass Iterators", "Author5830" }, { 2u, "Title1660", "Author6315" }, { 3u, "Title553", "Author2032" }, { 4u, "Title304", "Author1079" }, } },
    { 1208u, { { 0u, "Adopt source_location from Library Fundamentals V3 for C++20", "Author3310" }, { 1u, "Adopt source_location from Library Fundamentals V3 for C++20", "Author1045" }, { 3u, "Title1682", "Author6395" }, { 4u, "Title972", "Author3673" }, { 5u, "Title877", "Author3239" }, { 6u, "Title22", "Author78" }, } },
    { 1209u, { { 0u, "Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20", "Author4988" }, } },
    { 1210u, { { 0u, "Completing the Rebase of Library Fundamentals, Version 3, Working Draft", "Author6344" }, } },
    { 1212u, { { 0u, "Modules and Freestanding", "Author4915" }, } },
    { 1213u, { { 0u, "Global Module Fragment is Unnecessary", "Author1851" }, { 1u, "Global Module Fragment is Unnecessary", "Author4772" }, } },
    { 1214u, { { 0u, "Pointer to Member Functions and Member Objects are just Callables!", "Author6430" }, } },
    { 1217u, { { 0u, "Out-of-thin-air, revisited, again", "Author517" }, { 1u, "Out-of-thin-air, revisited, again", "Author3430" }, { 2u, "Out-of-thin-air, revisited, again", "Author196" }, } },
    { 1218u, { { 0u, "Redefinitions in Legacy Imports", "Author278" }, } },
    { 1219u, { { 0u, "Homogeneous variadic function parameters", "Author3813" }, { 1u, "Homogeneous variadic function parameters", "Author654" }, { 2u, "Homogeneous variadic function parameters", "Author2847" }, } },
    { 1220u, { { 0u, "Controlling When Inline Functions are Emitted", "Author509" }, } },
    { 1221u, { { 0u, "Title1293", "Author4886" }, { 1u, "Title1643", "Author6233" }, } },
    { 1222u, { { 0u, "Title488", "Author1773" }, { 1u, "A Standard flatset", "Author1799" }, { 2u, "A Standard flatset", "Author3941" }, { 3u, "A Standard flatset", "Author756" }, { 4u, "A Standard flatset", "Author3799" }, } },
    { 1223u, { { 0u, "Title1110", "Author4158" }, { 1u, "Title1210", "Author4545" }, { 2u, "findast", "Author2645" }, { 3u, "findlast", "Author1750" }, { 4u, "findlast", "Author1336" }, { 5u, "findlast", "Author5486" }, } },
    { 1224u, { { 0u, "C++ Standard Library Issues to be moved in San Diego", "Author2169" }, } },
    { 1225u, { { 0u, "Feedback on 2D Graphics", "Author1893" }, } },
    { 1227u, { { 0u, "p1227R0: Signed size() functions", "Author145" }, { 1u, "p1227R1: Signed ssize() functions, unsigned size() functions", "Author3971" }, { 2u, "Signed ssize() functions, unsigned size() functions", "Author2480" }, } },
    { 1228u, { { 1u, "A proposal to add an efficient string concatenation routine to the Standard Library (P1228)", "Author6253" }, } },
    { 1229u, { { 0u, "p1229R0: Labelled Parameters", "Author3524" }, } },
    { 1230u, { { 0u, "Title1409", "Author5348" }, } },
    { 1231u, { { 0u, "Title434", "Author1572" }, } },
    { 1232u, { { 0u, "p1232_integrating_executors_with_the_standard_library.md - Grip", "Author424" }, } },
    { 1233u, { { 0u, "Title906", "Author3383" }, { 1u, "Shift-by-negative in `shift_left` and `shift_right`", "Author4793" }, } },
    { 1235u, { { 0u, "Title1103", "Author4119" }, } },
    { 1236u, { { 0u, "Alternative Wording for P0907R4 Signed Integers are Two's Complement", "Author543" }, { 1u, "Alternative Wording for P0907R4 Signed Integers are Two's Complement", "Author6387" }, } },
    { 1237u, { { 0u, "SG16: Unicode meeting summaries 2018/07/11 - 2018/10/03", "Author4823" }, } },
    { 1238u, { { 0u, "SG16: Unicode Direction", "Author4322" }, { 1u, "SG16: Unicode Direction", "Author2204" }, } },
    { 1239u, { { 0u, "Placed Before", "Author2607" }, } },
    { 1240u, { { 0u, "Title1380", "Author5215" }, { 1u, "Title1056", "Author3967" }, { 2u, "Scalable Reflection", "Author5620" }, } },
    { 1241u, { { 0u, "p1241_in_support_of_coroutines.md - Grip", "Author2928" }, } },
    { 1242u, { { 0u, "Title1327", "Author5039" }, { 1u, "Title915", "Author3415" }, } },
    { 1243u, { { 0u, "P1243R0 - Rangify New Algorithms", "Author5865" }, { 1u, "P1243R1 - Rangify New Algorithms", "Author4750" }, { 2u, "P1243R2 - Rangify New Algorithms", "Author492" }, { 3u, "P1243R3 - Rangify New Algorithms", "Author3898" }, { 4u, "P1243R4", "Author6274" }, } },
    { 1244u, { { 0u, "Title1474", "Author5589" }, } },
    { 1245u, { { 0u, "<code>export module containing [[attribute]];</code>", "Author1639" }, } },
    { 1246u, { { 0u, "The <code>no_float</code> function attribute", "Author6099" }, } },
    { 1247u, { { 0u, "Disabling static destructors: introducing <code>no_destroy</code> and <code>always_destroy</code> attributes", "Author2252" }, } },
    { 1248u, { { 0u, "Fixing 'Relation's", "Author1185" }, { 1u, "Remove 'CommonReference' requirement from 'StrictWeakOrdering'", "Author277" }, } },
    { 1249u, { { 0u, "std::forward from std::initializer_list", "Author437" }, } },
    { 1250u, { { 0u, "Title433", "Author1571" }, } },
    { 1251u, { { 0u, "Title321", "Author1124" }, { 1u, "Title94", "Author309" }, } },
    { 1252u, { { 0u, "Merge the Ranges TS", "Author3751" }, { 1u, "Merge the Ranges TS", "Author3399" }, { 2u, "Merge the Ranges TS", "Author6258" }, } },
    { 1253u, { { 0u, "Title956", "Author3580" }, } },
    { 1254u, { { 0u, "Notes on C++ Package Management", "Author3720" }, } },
    { 1255u, { { 0u, "A view of 0 or 1 elements: <code>view::maybe</code>", "Author5478" }, { 1u, "A view of 0 or 1 elements: <code>view::maybe</code>", "Author2752" }, { 2u, "A view of 0 or 1 elements: <code>view::maybe</code>", "Author1140" }, { 3u, "A view of 0 or 1 elements: <code>view::maybe</code>", "Author115" }, { 4u, "A view of 0 or 1 elements: <code>view::maybe</code>", "Author1441" }, { 5u, "A view of 0 or 1 elements: views::maybe", "Author1728" }, { 6u, "A view of 0 or 1 elements:", "Author5307" }, { 7u, "A view of 0 or 1 elements: `views::maybe`", "Author5412" }, { 8u, "Title275", "Author982" }, { 9u, "Title566", "Author2073" }, { 10u, "Title82", "Author244" }, { 11u, "Title1396", "Author5282" }, { 12u, "Title1086", "Author4062" }, { 13u, "Title810", "Author2990" }, { 14u, "Title1209", "Author4536" }, } },
    { 1256u, { { 0u, "Title1341", "Author5100" }, } },
    { 1257u, { { 0u, "Implementation experience on trying to implement concurrent data and control structures with executors", "Author512" }, } },
    { 1258u, { { 0u, "Title927", "Author3462" }, } },
    { 1259u, { { 0u, "Title732", "Author2677" }, { 1u, "Merge most of Networking TS into C++ Working Draft", "Author64" }, } },
    { 1260u, { { 0u, "Pattern Matching", "Author1458" }, } },
    { 1261u, { { 0u, "Title454", "Author1660" }, } },
    { 1263u, { { 0u, "Title1657", "Author6300" }, } },
    { 1264u, { { 0u, "Title100", "Author332" }, { 1u, "Title1416", "Author5371" }, { 2u, "Title1129", "Author4219" }, } },
    { 1267u, { { 0u, "Title201", "Author715" }, } },
    { 1269u, { { 0u, "Three Years with the Networking TS", "Author486" }, } },
    { 1271u, { { 0u, "P1271r0 | Move resource_adaptor from Library TS to the C++ WP", "Author2629" }, } },
    { 1272u, { { 0u, "Byteswapping for fun&&nuf", "Author3313" }, { 1u, "Byteswapping for fun&&nuf", "Author6459" }, { 2u, "Byteswapping for fun&&nuf", "Author1418" }, { 3u, "Byteswapping for fun&&nuf", "Author2449" }, { 4u, "Byteswapping for fun&&nuf", "Author5413" }, } },
    { 1273u, { { 0u, "86 The Absurd (From Exceptions)", "Author6369" }, } },
    { 1274u, { { 0u, "Bang For The Buck", "Author1329" }, } },
    { 1275u, { { 0u, "Desert Sessions: Improving hostile environment interactions", "Author3333" }, } },
    { 1276u, { { 0u, "Void Main", "Author485" }, } },
    { 1277u, { { 0u, "Subscripts On Parade", "Author3522" }, } },
    { 1278u, { { 0u, "offsetof For the Modern Era", "Author2684" }, } },
    { 1279u, { { 0u, "std::breakpoint", "Author3104" }, } },
    { 1280u, { { 0u, "Integer Width Literals", "Author5324" }, { 1u, "Integer Width Literals", "Author4032" }, { 2u, "Integer Width Literals", "Author3759" }, } },
    { 1281u, { { 0u, "Feature Presentation", "Author3798" }, } },
    { 1282u, { { 0u, "Ceci Nest Pas Une Pipe: Adding a workflow operator to C++", "Author1633" }, } },
    { 1283u, { { 0u, "Sharing is Caring", "Author6140" }, } },
    { 1284u, { { 0u, "Allowing Inlining of Replaceable Functions", "Author2528" }, } },
    { 1285u, { { 0u, "Improving Completeness Requirements for Type Traits", "Author743" }, } },
    { 1286u, { { 0u, "Contra CWG DR1778", "Author3207" }, { 1u, "Contra CWG DR1778", "Author2518" }, { 2u, "Contra CWG DR1778", "Author6039" }, } },
    { 1287u, { { 0u, "Title1124", "Author4201" }, } },
    { 1288u, { { 0u, "Title1673", "Author6366" }, } },
    { 1289u, { { 0u, "Title99", "Author330" }, { 1u, "Title1397", "Author5289" }, } },
    { 1290u, { { 0u, "Title1493", "Author5666" }, { 1u, "Title121", "Author414" }, { 2u, "Title1573", "Author5979" }, { 3u, "Title726", "Author2653" }, } },
    { 1291u, { { 0u, "std::ranges::less<> Should Be More!", "Author3135" }, } },
    { 1292u, { { 0u, "Customization Point Functions", "Author5360" }, } },
    { 1293u, { { 0u, "ostream_joiner", "Author4755" }, { 1u, "ostream_joiner", "Author6089" }, { 2u, "ostream_joiner", "Author4702" }, } },
    { 1294u, { { 0u, "Microsoft Word - N3254.docx", "Author4768" }, } },
    { 1295u, { { 0u, "Spaceship library update", "Author173" }, } },
    { 1296u, { { 0u, "Title862", "Author3178" }, } },
    { 1298u, { { 0u, "Reserve more freedom for atomic_ref implementers", "Author5715" }, } },
    { 1299u, { { 0u, "Module Preamble is Unnecessary", "Author3953" }, { 1u, "Module Preamble is Unnecessarily Fragile", "Author2836" }, { 3u, "Module Preamble is Unnecessarily Fragile", "Author845" }, } },
    { 1300u, { { 0u, "Remember the FORTRAN", "Author6141" }, } },
    { 1301u, { { 0u, "nodiscard should have a reason", "Author4756" }, { 1u, "[[nodiscard(\"should have a reason\")]]", "Author4672" }, { 2u, "[[nodiscard(\"should have a reason\")]]", "Author2795" }, { 3u, "[[nodiscard(\"should have a reason\")]]", "Author410" }, { 4u, "[[nodiscard(\"should have a reason\")]]", "Author5451" }, } },
    { 1302u, { { 0u, "Implicit Module Partition Lookup", "Author2953" }, { 1u, "Implicit Module Partition Lookup", "Author5079" }, } },
    { 1303u, { { 0u, "Inline Module Partitions", "Author2119" }, } },
    { 1304u, { { 0u, "Simplifying Extern Template", "Author762" }, } },
    { 1305u, { { 0u, "Deprecate The Addressof Operator", "Author3320" }, } },
    { 1306u, { { 0u, "Title351", "Author1225" }, { 1u, "Title1531", "Author5771" }, { 2u, "Expansion statements r2", "Author3519" }, { 3u, "P1306 (Expansion statements)", "Author1846" }, } },
    { 1307u, { { 0u, "Title1023", "Author3862" }, } },
    { 1308u, { { 0u, "pattern_matching", "Author378" }, } },
    { 1310u, { { 0u, "Title88", "Author264" }, } },
    { 1312u, { { 0u, "Title425", "Author1523" }, } },
    { 1313u, { { 0u, "Let's Talk About Package Specification", "Author989" }, } },
    { 1314u, { { 0u, "unique_val", "Author5956" }, { 1u, "unique_val", "Author3789" }, } },
    { 1315u, { { 0u, "secure_val", "Author69" }, { 1u, "secure_val", "Author3664" }, { 2u, "secure_clear", "Author6185" }, { 3u, "secure_clear", "Author774" }, { 4u, "secure_clear", "Author796" }, { 5u, "secure_clear", "Author2500" }, { 6u, "secure_clear (update to N2599)", "Author1128" }, { 7u, "secure_clear", "Author2209" }, } },
    { 1316u, { { 0u, "Title1517", "Author5726" }, } },
    { 1317u, { { 0u, "Title785", "Author2876" }, { 1u, "Title504", "Author1833" }, } },
    { 1318u, { { 0u, "Title885", "Author3271" }, } },
    { 1319u, { { 0u, "Changes between C++11 and C++14", "Author2996" }, } },
    { 1320u, { { 0u, "Allowing contract predicates on non-first declarations", "Author788" }, { 1u, "Allowing contract predicates on non-first declarations", "Author620" }, { 2u, "Allowing contract predicates on non-first declarations", "Author2257" }, } },
    { 1321u, { { 0u, "UB in contract violations", "Author4516" }, } },
    { 1322u, { { 0u, "Networking TS enhancement to enable custom I/O executors", "Author4372" }, { 1u, "Networking TS enhancement to enable custom I/O executors", "Author2856" }, { 2u, "Networking TS enhancement to enable custom I/O executors", "Author806" }, { 3u, "Networking TS enhancement to enable custom I/O executors", "Author5728" }, } },
    { 1323u, { { 0u, "Contract postconditions and return type deduction", "Author3632" }, { 1u, "Contract postconditions and return type deduction", "Author4388" }, { 2u, "Contract postconditions and return type deduction", "Author1975" }, } },
    { 1324u, { { 0u, "[RE] Yet another", "Author2853" }, { 1u, "[RE]YetAnother", "Author4241" }, } },
    { 1327u, { { 0u, "Allowing dynamic_cast, polymorphic typeid in Constant Expressions", "Author5512" }, { 1u, "Allowing dynamic_cast, polymorphic typeid in Constant Expressions", "Author3680" }, } },
    { 1328u, { { 0u, "Making std::type_info::operator== constexpr", "Author2341" }, { 1u, "Making std::type_info::operator== constexpr", "Author1627" }, } },
    { 1329u, { { 0u, "Title793", "Author2909" }, } },
    { 1330u, { { 0u, "Title679", "Author2521" }, } },
    { 1331u, { { 0u, "Title1437", "Author5447" }, { 1u, "Title80", "Author240" }, { 2u, "Title1646", "Author6249" }, } },
    { 1332u, { { 0u, "Title703", "Author2596" }, } },
    { 1333u, { { 0u, "Title1466", "Author5563" }, } },
    { 1334u, { { 0u, "Title413", "Author1481" }, } },
    { 1335u, { { 0u, "Title581", "Author2126" }, } },
    { 1337u, { { 0u, "Title1413", "Author5357" }, } },
    { 1338u, { { 0u, "P1338", "Author2396" }, { 1u, "P1338R1", "Author6107" }, } },
    { 1339u, { { 0u, "Title1392", "Author5263" }, { 1u, "Title704", "Author2599" }, } },
    { 1341u, { { 0u, "Microsoft Word - Unifying asynchronous APIs in C++ standard library.docx", "Author959" }, } },
    { 1342u, { { 0u, "Microsoft Word - Unified Coroutines.docx", "Author2750" }, } },
    { 1344u, { { 0u, "Title1069", "Author4017" }, { 1u, "Title208", "Author746" }, } },
    { 1347u, { { 0u, "Modules: ADL & Internal Linkage", "Author5548" }, { 1u, "Modules: ADL & Internal Linkage", "Author3556" }, } },
    { 1348u, { { 0u, "An Executor Property for Occupancy of Execution Agents", "Author4523" }, } },
    { 1349u, { { 0u, "Better Integration of Sender Executors", "Author4485" }, } },
    { 1350u, { { 0u, "Core \"tentatively ready\" Issues", "Author3498" }, } },
    { 1351u, { { 0u, "Intrusive smart pointer feedback", "Author1066" }, } },
    { 1353u, { { 0u, "Missing Feature Test Macros", "Author5681" }, } },
    { 1354u, { { 0u, "SG7 Guidelines for Review of Proposals", "Author1808" }, } },
    { 1355u, { { 0u, "Exposing a narrow contract for ceil2", "Author412" }, { 1u, "Exposing a narrow contract for ceil2", "Author1744" }, { 2u, "Exposing a narrow contract for ceil2", "Author5268" }, } },
    { 1356u, { { 0u, "C++ Coroutine TS Issues", "Author3068" }, } },
    { 1357u, { { 0u, "Traits for [Un]bounded Arrays", "Author1830" }, { 1u, "Traits for [Un]bounded Arrays", "Author5796" }, } },
    { 1358u, { { 0u, "Core \"ready\" Issues", "Author4604" }, } },
    { 1359u, { { 0u, "Core \"tentatively ready\" Issues", "Author877" }, } },
    { 1360u, { { 0u, "Title1004", "Author3796" }, } },
    { 1361u, { { 0u, "Integration of chrono with text formatting", "Author2837" }, { 1u, "Integration of chrono with text formatting", "Author1518" }, { 2u, "Integration of chrono with text formatting", "Author1044" }, } },
    { 1362u, { { 0u, "Title1338", "Author5088" }, } },
    { 1364u, { { 0u, "Title247", "Author884" }, } },
    { 1365u, { { 0u, "Title1507", "Author5704" }, } },
    { 1367u, { { 0u, "Title1699", "Author6478" }, { 1u, "Title105", "Author352" }, } },
    { 1368u, { { 0u, "Multiplication and division of fixed-point numbers", "Author2514" }, { 1u, "Multiplication and division of fixed-point numbers", "Author4236" }, } },
    { 1369u, { { 0u, "Guidelines for Formulating Library Semantics Specifications", "Author1925" }, } },
    { 1370u, { { 0u, "Title387", "Author1382" }, { 1u, "Generic numerical algorithm development with(out) <code>numeric_limits</code>", "Author1224" }, } },
    { 1371u, { { 0u, "Pattern Matching", "Author730" }, { 1u, "Pattern Matching", "Author3035" }, { 2u, "Pattern Matching", "Author4033" }, { 3u, "Pattern Matching", "Author2023" }, } },
    { 1372u, { { 0u, "Giving <code>atomic_ref</code> implementers more flexibility by providing customization points for non-lock-free implementation", "Author258" }, } },
    { 1373u, { { 0u, "Title833", "Author3072" }, } },
    { 1374u, { { 0u, "Resolving LWG #2307 for C++20: Consistently Explicit Constructors", "Author1519" }, } },
    { 1375u, { { 0u, "More Constrained: Apples or Oranges? On the road to semantic constraint matching", "Author3685" }, { 1u, "More Constrained: Apples or Oranges? On the road to semantic constraint matching", "Author3904" }, { 2u, "More Constrained: Apples or Oranges? On the road to semantic constraint matching", "Author581" }, } },
    { 1376u, { { 0u, "Summary of freestanding evening session discussions", "Author1221" }, } },
    { 1377u, { { 0u, "Summary of Dec 2018 SG14 freestanding discussions", "Author2440" }, } },
    { 1378u, { { 0u, "std::string_literal", "Author4959" }, } },
    { 1380u, { { 0u, "Ambiguity and Insecurities with Three-Way Comparison", "Author1227" }, { 1u, "Ambiguity and Insecurities with Three-Way Comparison", "Author6161" }, } },
    { 1381u, { { 0u, "Reference capture of structured bindings", "Author1738" }, { 1u, "Reference capture of structured bindings", "Author4313" }, } },
    { 1382u, { { 0u, "Title1226", "Author4606" }, { 1u, "Title944", "Author3544" }, } },
    { 1383u, { { 0u, "Title1620", "Author6130" }, { 1u, "Title1420", "Author5385" }, { 2u, "Title330", "Author1144" }, } },
    { 1385u, { { 0u, "[linear.algebra]R0: A proposal to add linear algebra support to the C++ standard library", "Author2306" }, { 1u, "[linear.algebra]R1: A proposal to add linear algebra support to the C++ standard library", "Author4809" }, { 2u, "[linear.algebra]R2: A proposal to add linear algebra support to the C++ standard library", "Author2301" }, { 3u, "A proposal to add linear algebra support to the C++ standard library", "Author555" }, { 4u, "A proposal to add linear algebra support to the C++ standard library", "Author4771" }, { 5u, "A proposal to add linear algebra support to the C++ standard library", "Author476" }, { 6u, "A proposal to add linear algebra support to the C++ standard library", "Author6498" }, { 7u, "Untitled document", "Author1448" }, } },
    { 1386u, { { 0u, "Title1059", "Author3981" }, { 1u, "Title1557", "Author5901" }, { 2u, "Title584", "Author2140" }, } },
    { 1388u, { { 0u, "Title1497", "Author5675" }, } },
    { 1389u, { { 0u, "Standing Document for SG20: Guidelines for Teaching C++ to Beginners", "Author4985" }, { 1u, "Standing Document for SG20: Guidelines for Teaching C++ to Beginners", "Author2947" }, } },
    { 1390u, { { 0u, "Suggested Reflection TS NB Resolutions", "Author680" }, { 1u, "Reflection TS NB comment resolutions: summary and rationale", "Author6371" }, } },
    { 1391u, { { 0u, "Title1388", "Author5249" }, { 1u, "Title768", "Author2798" }, { 2u, "Title185", "Author661" }, { 3u, "Title1216", "Author4568" }, { 4u, "Title1621", "Author6134" }, } },
    { 1392u, { { 0u, "Differences Between Functions and Function Templates", "Author1981" }, } },
    { 1393u, { { 0u, "properties", "Author4757" }, } },
    { 1394u, { { 0u, "Title846", "Author3123" }, { 1u, "Title251", "Author904" }, { 2u, "Title1639", "Author6220" }, { 3u, "Title117", "Author403" }, { 4u, "Title599", "Author2189" }, } },
    { 1395u, { { 0u, "Modules: Partitions Are Not a Panacea", "Author6227" }, } },
    { 1401u, { { 0u, "Title1017", "Author3843" }, { 1u, "constexpr_bool_conv_r1", "Author6188" }, { 2u, "Title738", "Author2698" }, { 3u, "Narrowing contextual conversions to bool", "Author267" }, { 4u, "Narrowing contextual conversions to bool", "Author4439" }, { 5u, "Narrowing contextual conversions to bool", "Author1673" }, } },
    { 1402u, { { 0u, "Title897", "Author3345" }, } },
    { 1403u, { { 0u, "Experience Report: Implementing a Coroutines TS Frontend to an Existing Tasking Library", "Author1935" }, } },
    { 1404u, { { 0u, "Title354", "Author1229" }, { 1u, "bad_alloc_r1", "Author1115" }, } },
    { 1405u, { { 0u, "C++20 Executors are Resilient to ABI Breakage | P1405R0", "Author783" }, } },
    { 1406u, { { 0u, "Add more std::hash specializations", "Author5640" }, { 1u, "Title1236", "Author4643" }, } },
    { 1407u, { { 0u, "P1407R0_SignedIntOverflow", "Author6336" }, { 1u, "P1407R1_SignedIntOverflow", "Author5919" }, } },
    { 1408u, { { 0u, "Title157", "Author541" }, } },
    { 1410u, { { 0u, "Title1665", "Author6327" }, } },
    { 1411u, { { 0u, "Title139", "Author487" }, } },
    { 1412u, { { 0u, "Title1098", "Author4100" }, } },
    { 1413u, { { 0u, "Title587", "Author2152" }, { 1u, "Title419", "Author1499" }, { 2u, "Title907", "Author3386" }, { 3u, "Title1528", "Author5765" }, } },
    { 1415u, { { 0u, "Title158", "Author545" }, { 1u, "Title1092", "Author4079" }, } },
    { 1416u, { { 0u, "Title1369", "Author5184" }, } },
    { 1417u, { { 0u, "Title347", "Author1208" }, } },
    { 1419u, { { 0u, "Title118", "Author404" }, } },
    { 1421u, { { 0u, "Title873", "Author3217" }, } },
    { 1422u, { { 0u, "SG16: Unicode meeting summaries 2018/10/17 - 2019/01/09", "Author2898" }, } },
    { 1423u, { { 0u, "char8_t backward compatibility remediation", "Author4725" }, { 1u, "char8_t backward compatibility remediation", "Author6122" }, { 2u, "char8_t backward compatibility remediation", "Author2167" }, { 3u, "char8_t backward compatibility remediation", "Author3082" }, } },
    { 1424u, { { 0u, "'constexpr' feature macro concerns", "Author3734" }, { 1u, "'constexpr' feature macro concerns", "Author4494" }, } },
    { 1425u, { { 0u, "Title380", "Author1349" }, { 1u, "Title1011", "Author3810" }, { 2u, "Title561", "Author2057" }, { 3u, "Title600", "Author2190" }, { 4u, "Title1689", "Author6428" }, } },
    { 1426u, { { 0u, "Title1165", "Author4352" }, } },
    { 1427u, { { 0u, "Title1542", "Author5837" }, } },
    { 1428u, { { 0u, "Title639", "Author2334" }, } },
    { 1429u, { { 0u, "Title25", "Author82" }, { 1u, "Title1650", "Author6278" }, { 2u, "Title1550", "Author5869" }, { 3u, "Title888", "Author3289" }, } },
    { 1430u, { { 0u, "Title343", "Author1197" }, { 1u, "Title1423", "Author5396" }, } },
    { 1433u, { { 0u, "Title1587", "Author6018" }, } },
    { 1434u, { { 0u, "Discussing Pointer Provenance", "Author1736" }, } },
    { 1436u, { { 0u, "d1436r0.html", "Author4358" }, { 1u, "d1436r1.html", "Author5583" }, { 2u, "d1436r2.html", "Author3903" }, { 3u, "Title431", "Author1559" }, } },
    { 1438u, { { 0u, "P1438R0 - A Rational Number Library for C++", "Author4832" }, { 1u, "P1438R1 - A Rational Number Library for C++", "Author5731" }, } },
    { 1439u, { { 0u, "Charset Transcoding, Transformation, and Transliteration", "Author5896" }, { 1u, "Charset Transcoding, Transformation, and Transliteration", "Author872" }, } },
    { 1440u, { { 0u, "is_clamped", "Author907" }, } },
    { 1441u, { { 0u, "Title865", "Author3188" }, { 1u, "Title1526", "Author5751" }, } },
    { 1442u, { { 0u, "A Medley of Networking TS improvements", "Author5552" }, } },
    { 1443u, { { 0u, "Title762", "Author2785" }, } },
    { 1444u, { { 0u, "Title1153", "Author4307" }, } },
    { 1445u, { { 0u, "Title1670", "Author6338" }, } },
    { 1446u, { { 0u, "html5 Reconsider the Networking TS for inclusion in C++20", "Author5317" }, } },
    { 1447u, { { 0u, "constexpr C++ is not constexpr C", "Author3677" }, } },
    { 1448u, { { 0u, "Title1404", "Author5325" }, } },
    { 1449u, { { 0u, "Title1117", "Author4179" }, } },
    { 1450u, { { 0u, "P1450R0", "Author702" }, { 1u, "http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1450r1.pdfP1450R1", "Author6367" }, { 2u, "http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1450r2.pdfP1450R2", "Author5276" }, { 3u, "P1450R3", "Author3725" }, } },
    { 1452u, { { 0u, "On the non-uniform semantics of return-type-requirements", "Author4925" }, { 1u, "On the non-uniform semantics of return-type-requirements", "Author6230" }, { 2u, "On the non-uniform semantics of return-type-requirements", "Author634" }, } },
    { 1453u, { { 0u, "Modularizing the Standard Library is a Reorganization Opportunity", "Author5755" }, } },
    { 1456u, { { 0u, "Move-only views", "Author2129" }, { 1u, "Move-only views", "Author4116" }, } },
    { 1457u, { { 0u, "C++ Standard Library Issues to be moved in Kona", "Author1287" }, } },
    { 1458u, { { 0u, "C++ International Standard", "Author4104" }, { 1u, "C++ International Standard", "Author3075" }, } },
    { 1459u, { { 0u, "C++ International Standard", "Author712" }, { 1u, "C++ International Standard", "Author1219" }, } },
    { 1460u, { { 0u, "Mandating the Standard Library: Clause 20", "Author2207" }, { 1u, "Mandating the Standard Library: Clause 20", "Author3528" }, } },
    { 1462u, { { 0u, "Mandating the Standard Library: Clause 20 - Strings library", "Author397" }, { 1u, "Mandating the Standard Library: Clause 20 - Strings library", "Author1814" }, } },
    { 1463u, { { 0u, "C++ International Standard", "Author5358" }, { 1u, "C++ International Standard", "Author933" }, } },
    { 1464u, { { 0u, "C++ International Standard", "Author1130" }, { 1u, "C++ International Standard", "Author5460" }, } },
    { 1465u, { { 0u, "Title573", "Author2099" }, } },
    { 1466u, { { 0u, "chrono fixes", "Author2668" }, { 1u, "chrono fixes", "Author6479" }, { 2u, "chrono fixes", "Author4607" }, { 3u, "chrono fixes", "Author3598" }, } },
    { 1467u, { { 0u, "Extended floating-point types", "Author6385" }, { 1u, "Extended floating-point types", "Author5064" }, { 2u, "Extended floating-point types", "Author2544" }, { 3u, "Extended floating-point types", "Author4263" }, { 4u, "Extended floating-point types and standard names", "Author448" }, { 5u, "Extended floating-point types and standard names", "Author1397" }, { 6u, "Extended floating-point types and standard names", "Author507" }, { 7u, "Extended floating-point types and standard names", "Author5546" }, { 8u, "Extended floating-point types and standard names", "Author5013" }, { 9u, "Extended floating-point types and standard names", "Author1567" }, } },
    { 1468u, { { 0u, "Fixed-layout floating-point type aliases", "Author5962" }, { 1u, "Fixed-layout floating-point type aliases", "Author3396" }, { 2u, "Fixed-layout floating-point type aliases", "Author5685" }, { 3u, "Fixed-layout floating-point type aliases", "Author5604" }, { 4u, "Fixed-layout floating-point type aliases", "Author2609" }, } },
    { 1469u, { { 0u, "Disallow _ Usage in C++20 for Pattern Matching in C++23", "Author698" }, } },
    { 1470u, { { 0u, "Title1365", "Author5168" }, } },
    { 1471u, { { 0u, "html5 The trouble with coroutine_traits", "Author5377" }, } },
    { 1472u, { { 0u, "Title1501", "Author5686" }, } },
    { 1473u, { { 0u, "Move-only views", "Author6465" }, } },
    { 1474u, { { 0u, "Move-only views", "Author4499" }, { 1u, "Amazing Stuff", "Author4188" }, } },
    { 1477u, { { 0u, "Title1080", "Author4049" }, { 1u, "Title190", "Author675" }, } },
    { 1478u, { { 0u, "P1478: Byte-wise atomic memcpy", "Author3545" }, { 1u, "Byte-wise atomic memcpy", "Author21" }, { 2u, "Byte-wise atomic memcpy", "Author763" }, { 3u, "Byte-wise atomic memcpy", "Author3446" }, { 4u, "Byte-wise atomic memcpy", "Author5539" }, { 5u, "Byte-wise atomic memcpy", "Author3700" }, { 6u, "Byte-wise atomic memcpy", "Author4700" }, { 7u, "Byte-wise atomic memcpy", "Author4846" }, { 8u, "Byte-wise atomic memcpy", "Author5948" }, } },
    { 1479u, { { 0u, "ostringstream wrapper", "Author3309" }, } },
    { 1481u, { { 0u, "constexpr structured bindings", "Author6088" }, } },
    { 1482u, { { 0u, "Modules Feedback", "Author2813" }, } },
    { 1484u, { { 1u, "Title1198", "Author4483" }, } },
    { 1485u, { { 0u, "Better keywords for the Coroutines TS", "Author5568" }, { 1u, "Better keywords for the Coroutines", "Author5261" }, } },
    { 1486u, { { 0u, "Title880", "Author3244" }, { 1u, "Title1312", "Author4956" }, } },
    { 1487u, { { 0u, "Title728", "Author2659" }, } },
    { 1490u, { { 0u, "P1490r0 Contract-Related Issues", "Author5368" }, } },
    { 1491u, { { 0u, "Title1520", "Author5732" }, } },
    { 1492u, { { 0u, "Title714", "Author2627" }, } },
    { 1493u, { { 0u, "Title96", "Author316" }, } },
    { 1494u, { { 0u, "Partial program correctness", "Author5242" }, { 1u, "Partial program correctness", "Author1237" }, { 2u, "Partial program correctness", "Author3385" }, { 3u, "Partial program correctness", "Author3565" }, { 4u, "Partial program correctness", "Author2351" }, { 5u, "Partial program correctness", "Author4582" }, } },
    { 1496u, { { 0u, "Formatting of negative zero", "Author270" }, { 1u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author150" }, { 2u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author4076" }, } },
    { 1498u, { { 0u, "Constrained Internal Linkage for Modules", "Author63" }, { 1u, "Constrained Internal Linkage for Modules", "Author2353" }, } },
    { 1502u, { { 0u, "Standard library header units for C++20", "Author2598" }, { 1u, "Standard library header units for C++20", "Author5647" }, } },
    { 1505u, { { 0u, "C++ International Standard", "Author2781" }, { 1u, "C++ International Standard", "Author1566" }, } },
    { 1510u, { { 0u, "Core \"tentatively ready\" Issues", "Author5193" }, } },
    { 1517u, { { 0u, "Contract Requirements for Iterative High-Assurance Systems", "Author1817" }, } },
    { 1518u, { { 0u, "Stop overconstraining allocators in container deduction guides", "Author1252" }, { 1u, "Stop overconstraining allocators in container deduction guides", "Author3543" }, { 2u, "Stop overconstraining allocators in container deduction guides", "Author2628" }, } },
    { 1520u, { { 0u, "Title1125", "Author4204" }, } },
    { 1522u, { { 0u, "Iterator Difference Type and Integer Overflow", "Author2197" }, { 1u, "Iterator Difference Type and Integer Overflow", "Author5393" }, } },
    { 1523u, { { 0u, "Views and Size Types", "Author4922" }, { 1u, "Views and Size Types", "Author1275" }, } },
    { 1525u, { { 0u, "One-Way execute is a Poor Basis Operation", "Author70" }, { 1u, "One-Way is a Poor Basis Operation", "Author5227" }, } },
    { 1601u, { { 0u, "Recommendations for Specifying ``Hidden Friends''", "Author5002" }, } },
    { 1602u, { { 0u, "Make Me A Module", "Author2100" }, } },
    { 1604u, { { 0u, "The inline keyword is not in line with the design of modules.", "Author5024" }, { 1u, "The inline keyword is not in line with the design of modules.", "Author3304" }, } },
    { 1605u, { { 0u, "Member Layout Control", "Author2203" }, } },
    { 1606u, { { 0u, "Title29", "Author94" }, } },
    { 1607u, { { 0u, "Title50", "Author137" }, { 1u, "Title763", "Author2787" }, } },
    { 1609u, { { 0u, "C++ Should Support Just-in-Time Compilation", "Author5889" }, { 1u, "C++ Should Support Just-in-Time Compilation", "Author3997" }, { 2u, "C++ Should Support Just-in-Time Compilation", "Author6414" }, { 3u, "C++ Should Support Just-in-Time Compilation", "Author5494" }, } },
    { 1610u, { { 0u, "D1610 Rename await_resume() to await_result().md", "Author3626" }, } },
    { 1611u, { { 0u, "Rod-Kona-P1611", "Author1159" }, } },
    { 1612u, { { 0u, "Relocate Endian's Specification", "Author1234" }, { 1u, "Relocate Endian's Specification", "Author6271" }, } },
    { 1614u, { { 0u, "The Mothership Has Landed Adding <=> to the Library", "Author2998" }, { 1u, "The Mothership has Landed", "Author1762" }, { 2u, "The Mothership has Landed", "Author178" }, } },
    { 1616u, { { 0u, "Using unconstrained template template parameters with constrained templates", "Author4443" }, { 1u, "Using unconstrained template template parameters with constrained templates", "Author567" }, } },
    { 1619u, { { 0u, "Title1694", "Author6448" }, { 1u, "Title291", "Author1046" }, { 2u, "Title1348", "Author5112" }, } },
    { 1622u, { { 0u, "C++ International Standard", "Author3505" }, { 1u, "C++ International Standard", "Author535" }, { 2u, "P1622R2", "Author1019" }, { 3u, "P1622R3", "Author4427" }, } },
    { 1624u, { { 0u, "Resolving technical issues in parameter mapping equivalence and related problems", "Author4705" }, { 1u, "Resolving technical issues in parameter mapping equivalence and related problems", "Author901" }, } },
    { 1625u, { { 0u, "Contracts: why the house is not on fire (i.e. why the status quo is tolerable)", "Author3821" }, } },
    { 1628u, { { 0u, "Title524", "Author1901" }, } },
    { 1629u, { { 0u, "Standard Text Encoding", "Author3914" }, { 1u, "Transcoding the - Standard Text Encoding", "Author409" }, } },
    { 1630u, { { 0u, "Spaceship needs a tune-up", "Author4645" }, { 1u, "Spaceship needs a tune-up", "Author3815" }, } },
    { 1631u, { { 0u, "Title1126", "Author4207" }, { 1u, "Title1503", "Author5693" }, } },
    { 1633u, { { 0u, "Amendments to the C++20 Synchronization Library", "Author2376" }, { 1u, "Amendments to the C++20 Synchronization Library", "Author1662" }, } },
    { 1634u, { { 0u, "Naming guidelines for modules", "Author4754" }, } },
    { 1635u, { { 0u, "Title409", "Author1452" }, } },
    { 1636u, { { 0u, "Formatters for library types", "Author1804" }, { 1u, "Formatters for library types", "Author3938" }, { 2u, "Formatters for library types", "Author789" }, } },
    { 1638u, { { 0u, "Title1685", "Author6412" }, { 1u, "Title441", "Author1598" }, } },
    { 1639u, { { 0u, "Title83", "Author246" }, } },
    { 1640u, { { 0u, "Error size benchmarking", "Author3533" }, { 1u, "Error size benchmarking: Redux", "Author4789" }, } },
    { 1641u, { { 0u, "Freestanding Library: Rewording the Status Quo", "Author814" }, { 1u, "D1641R1.0: Freestanding Library: Rewording the Status Quo", "Author3647" }, { 2u, "Freestanding Library: Rewording the Status Quo", "Author2391" }, { 3u, "Freestanding Library: Rewording the Status Quo", "Author265" }, } },
    { 1642u, { { 0u, "Freestanding Library: Easy [utilities]", "Author5829" }, { 1u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author6352" }, { 2u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author1658" }, { 3u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author2454" }, { 4u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author6464" }, { 5u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author3026" }, { 6u, "P1642R6 Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author2212" }, { 7u, "P1642R7 Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author4111" }, { 8u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author3137" }, { 9u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author4938" }, { 10u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author3179" }, { 11u, "Freestanding Library: Easy [utilities], [ranges], and [iterators]", "Author3905" }, } },
    { 1643u, { { 0u, "Add wait/notify to atomic_ref<T>", "Author510" }, { 1u, "Add wait/notify to atomic_ref<T>", "Author5047" }, } },
    { 1644u, { { 0u, "Add wait/notify to atomic<shared_ptr<T>>", "Author3535" }, } },
    { 1645u, { { 0u, "constexpr for <numeric> algorithms", "Author3496" }, { 1u, "constexpr for <numeric> algorithms", "Author5356" }, } },
    { 1648u, { { 0u, "Title1359", "Author5151" }, { 1u, "Title1428", "Author5418" }, { 2u, "Title266", "Author957" }, } },
    { 1649u, { { 0u, "Title447", "Author1626" }, } },
    { 1650u, { { 0u, "Output std::chrono::days with 'd' suffix", "Author5650" }, } },
    { 1651u, { { 0u, "bind_front should not unwrap reference_wrapper", "Author1202" }, } },
    { 1652u, { { 0u, "Printf corner cases in std::format - HackMD", "Author5254" }, { 1u, "Printf corner cases in std::format - HackMD", "Author3628" }, } },
    { 1654u, { { 0u, "ABI breakage - summary of initial comments", "Author4379" }, { 1u, "ABI breakage - summary of initial comments", "Author1506" }, } },
    { 1655u, { { 0u, "LEWG Omnibus Design Policy Paper", "Author4067" }, } },
    { 1656u, { { 0u, "\"Throws: Nothing\" should be noexcept", "Author2006" }, { 1u, "\"Throws: Nothing\" should be noexcept", "Author5559" }, { 2u, "\"Throws: Nothing\" should be noexcept", "Author2715" }, } },
    { 1657u, { { 0u, "Title257", "Author927" }, } },
    { 1658u, { { 0u, "Suggestions for Consensus on Executors | P1658", "Author13" }, } },
    { 1659u, { { 0u, "starts_with and ends_with", "Author1694" }, { 1u, "starts_with and ends_with", "Author1081" }, { 2u, "starts_with and ends_with", "Author2866" }, { 3u, "starts_with and ends_with", "Author2562" }, } },
    { 1660u, { { 0u, "A Compromise Executor Design Sketch", "Author2919" }, } },
    { 1661u, { { 0u, "Remove dedicated precalculated hash lookup interface", "Author3896" }, { 1u, "Remove dedicated precalculated hash lookup interface", "Author220" }, } },
    { 1662u, { { 0u, "Title1155", "Author4314" }, } },
    { 1663u, { { 0u, "Title125", "Author431" }, } },
    { 1664u, { { 0u, "reconstructible_range - a concept for putting ranges back together", "Author4685" }, { 1u, "reconstructible_range - a concept for putting ranges back together", "Author2477" }, { 2u, "reconstructible_range - a concept for putting ranges back together", "Author116" }, { 3u, "reconstructible_range - a concept for putting ranges back together", "Author3550" }, { 4u, "reconstructible_range - a concept for putting ranges back together", "Author2965" }, { 5u, "reconstructible_range - a concept for putting ranges back together", "Author4570" }, { 6u, "reconstructible_range - a concept for putting ranges back together", "Author5613" }, { 7u, "reconstructible_range - a concept for putting ranges back together", "Author2851" }, } },
    { 1665u, { { 0u, "Title324", "Author1134" }, } },
    { 1666u, { { 0u, "SG16: Unicode meeting summaries 2019/01/23 - 2019/05/22", "Author920" }, } },
    { 1667u, { { 0u, "Concept-aware `noexcept` specifiers", "Author891" }, } },
    { 1668u, { { 0u, "Enabling Constexpr Intrinsics By Permitting Unevaluated inline-asm in Constexpr Functions", "Author4964" }, { 1u, "Enabling Constexpr Intrinsics By Permitting Unevaluated inline-asm in Constexpr Functions", "Author4126" }, } },
    { 1669u, { { 0u, "Callsite Based Inlining Hints: [[always_inline]] and [[never_inline]]", "Author6472" }, } },
    { 1670u, { { 0u, "Title224", "Author791" }, } },
    { 1671u, { { 0u, "Title850", "Author3134" }, } },
    { 1672u, { { 0u, "Title1490", "Author5654" }, } },
    { 1673u, { { 0u, "Title467", "Author1707" }, { 1u, "Title320", "Author1120" }, { 2u, "Title1296", "Author4903" }, { 3u, "Title1217", "Author4572" }, { 4u, "D1673R4R4: D1673R4: A free function linear algebra interface based on the BLAS", "Author2308" }, { 5u, "P1673R5R5: P1673R5: A free function linear algebra interface based on the BLAS", "Author1513" }, { 6u, "P1673R6: A free function linear algebra interface based on the BLAS", "Author1063" }, { 7u, "A free function linear algebra interface based on the BLAS", "Author1937" }, { 8u, "A free function linear algebra interface based on the BLAS", "Author4235" }, { 9u, "A free function linear algebra interface based on the BLAS", "Author1012" }, { 10u, "A free function linear algebra interface based on the BLAS", "Author3945" }, { 11u, "A free function linear algebra interface based on the BLAS", "Author2938" }, { 12u, "A free function linear algebra interface based on the BLAS", "Author110" }, { 13u, "A free function linear algebra interface based on the BLAS", "Author2834" }, } },
    { 1674u, { { 0u, "Title1122", "Author4194" }, { 1u, "Title1421", "Author5386" }, { 2u, "Evolving a Standard C++ Linear Algebra Library from the BLAS", "Author5845" }, } },
    { 1675u, { { 0u, "Title594", "Author2170" }, { 1u, "rethrow_exception must be allowed to copy", "Author1058" }, { 2u, "rethrow_exception must be allowed to copy", "Author4763" }, } },
    { 1676u, { { 0u, "Title1462", "Author5541" }, } },
    { 1677u, { { 0u, "Cancellation is not an Error", "Author3456" }, { 1u, "Cancellation is not an Error", "Author2658" }, { 2u, "Cancellation is serendipitous-success", "Author2104" }, } },
    { 1678u, { { 0u, "Callbacks and Composition", "Author3324" }, { 1u, "Callbacks and Composition", "Author1976" }, { 2u, "Callbacks and Composition", "Author4157" }, } },
    { 1679u, { { 0u, "String Contains function", "Author4971" }, { 1u, "String Contains function", "Author1250" }, { 2u, "string contains function", "Author4872" }, { 3u, "string contains function", "Author6095" }, } },
    { 1680u, { { 0u, "p1680r0", "Author3019" }, } },
    { 1681u, { { 0u, "Title1116", "Author4178" }, } },
    { 1682u, { { 0u, "std::to_underlying for enumerations", "Author1961" }, { 1u, "std::to_underlying for enumerations", "Author3476" }, { 2u, "std::to_underlying for enumerations", "Author2983" }, { 3u, "std::to_underlying for enumerations", "Author3302" }, } },
    { 1683u, { { 0u, "References for Standard Library Vocabulary Types - an optional<> case study", "Author2263" }, } },
    { 1684u, { { 0u, "mdarray: An Owning Multidimensional Array Analog of mdspan", "Author3043" }, { 1u, "mdarray: An Owning Multidimensional Array Analog of mdspan", "Author546" }, { 2u, "mdarray: An Owning Multidimensional Array Analog of mdspan", "Author5387" }, { 3u, "mdarray: An Owning Multidimensional Array Analog of mdspan", "Author4277" }, { 4u, "mdarray: An Owning Multidimensional Array Analog of mdspan", "Author3808" }, { 5u, "mdarray: An Owning Multidimensional Array Analog of mdspan", "Author2929" }, } },
    { 1685u, { { 0u, "Microsoft Word - P1685_replaceable_default_resource.docx", "Author4651" }, } },
    { 1686u, { { 0u, "C++ International Standard", "Author3286" }, { 1u, "C++ International Standard", "Author553" }, { 2u, "Mandating the Standard Library: Clause 27 - Time library", "Author1552" }, } },
    { 1687u, { { 0u, "Summary of the Tooling Study Groups Pre-Cologne Telecons on Modules Tooling Interactions", "Author561" }, { 1u, "Summary of the Tooling Study Groups Modules Ecosystem Technical Report Telecons", "Author2335" }, } },
    { 1688u, { { 0u, "Towards a C++ Ecosystem Technical Report", "Author4665" }, } },
    { 1689u, { { 0u, "Format for describing dependencies of source files", "Author4396" }, { 1u, "Format for describing dependencies of source files", "Author3319" }, { 2u, "Format for describing dependencies of source files", "Author975" }, { 3u, "Format for describing dependencies of source files", "Author2687" }, { 4u, "Format for describing dependencies of source files", "Author1031" }, { 5u, "Format for describing dependencies of source files", "Author1821" }, } },
    { 1690u, { { 0u, "Refinement Proposal for P0919 Heterogeneous lookup for unordered containers", "Author1637" }, { 1u, "Refinement Proposal for P0919 Heterogeneous lookup for unordered containers", "Author914" }, } },
    { 1696u, { { 0u, "Refinement proposal for P0920 Precalculated hash values in lookup", "Author3143" }, } },
    { 1697u, { { 0u, "Require a diagnostic for \"declaration changes meaning\"", "Author4210" }, } },
    { 1700u, { { 0u, "Audience Tables", "Author870" }, } },
    { 1701u, { { 0u, "Inline Namespaces: Fragility Bites", "Author3515" }, { 1u, "Inline Namespaces: Fragility Bites", "Author778" }, { 2u, "Inline Namespaces: Fragility Bites", "Author2394" }, } },
    { 1702u, { { 0u, "Title783", "Author2865" }, } },
    { 1703u, { { 0u, "Recognizing Header Unit Imports Requires Full Preprocessing", "Author3044" }, { 1u, "Recognizing Header Unit Imports Requires Full Preprocessing", "Author3432" }, } },
    { 1704u, { { 0u, "axiom_level_contract_statements", "Author4881" }, } },
    { 1705u, { { 0u, "Enumerating Core Undefined Behavior", "Author434" }, { 1u, "Enumerating Core Undefined Behavior", "Author5688" }, } },
    { 1706u, { { 0u, "Title1435", "Author5439" }, { 1u, "Title631", "Author2300" }, { 2u, "Title735", "Author2683" }, { 3u, "Programming Language Vulnerabilities for Safety Critical C++", "Author2049" }, } },
    { 1708u, { { 0u, "Title1422", "Author5392" }, { 1u, "Title1656", "Author6298" }, { 2u, "Title132", "Author462" }, { 3u, "Title289", "Author1035" }, { 4u, "Title760", "Author2775" }, { 5u, "Title75", "Author225" }, { 6u, "Title1321", "Author5010" }, { 7u, "Title442", "Author1599" }, { 8u, "Title1058", "Author3980" }, { 9u, "Title1099", "Author4103" }, } },
    { 1709u, { { 0u, "Title538", "Author1955" }, { 1u, "Title451", "Author1647" }, { 2u, "Title946", "Author3551" }, { 3u, "Graph Proposal", "Author2122" }, { 4u, "Title921", "Author3439" }, { 5u, "Title936", "Author3521" }, } },
    { 1710u, { { 0u, "Adding a global contract assumption mode", "Author5527" }, } },
    { 1711u, { { 0u, "Title33", "Author101" }, } },
    { 1713u, { { 0u, "Title345", "Author1201" }, } },
    { 1714u, { { 0u, "NTTP are incomplete without float, double, and long double!", "Author5057" }, { 1u, "NTTP are incomplete without float, double, and long double!", "Author5389" }, } },
    { 1715u, { { 0u, "Loosen restrictions on \"_t\" typedefs.", "Author1186" }, { 1u, "Loosen restrictions on \"_t\" typedefs.", "Author6349" }, } },
    { 1716u, { { 0u, "ranges compare algorithm are over-constrained", "Author2077" }, { 1u, "ranges compare algorithm are over-constrained", "Author5565" }, { 2u, "ranges compare algorithm are over-constrained", "Author4399" }, { 3u, "ranges compare algorithm are over-constrained", "Author710" }, } },
    { 1717u, { { 0u, "Title750", "Author2740" }, } },
    { 1718u, { { 0u, "Mandating the Standard Library: Clause 25", "Author2988" }, { 1u, "Mandating the Standard Library: Clause 25", "Author1008" }, { 2u, "Mandating the Standard Library: Clause 25", "Author5798" }, } },
    { 1719u, { { 0u, "Mandating the Standard Library: Clause 26", "Author3468" }, { 1u, "Mandating the Standard Library: Clause 26", "Author6351" }, { 2u, "Mandating the Standard Library: Clause 26", "Author92" }, } },
    { 1720u, { { 0u, "Mandating the Standard Library: Clause 28", "Author3277" }, { 1u, "Mandating the Standard Library: Clause 28", "Author1065" }, { 2u, "Mandating the Standard Library: Clause 28", "Author238" }, } },
    { 1721u, { { 0u, "Mandating the Standard Library: Clause 29", "Author4953" }, { 1u, "Mandating the Standard Library: Clause 29", "Author6221" }, { 2u, "Mandating the Standard Library: Clause 29", "Author590" }, } },
    { 1722u, { { 0u, "Mandating the Standard Library: Clause 25", "Author1321" }, { 1u, "Mandating the Standard Library: Clause 30", "Author285" }, { 2u, "Mandating the Standard Library: Clause 30", "Author6400" }, } },
    { 1723u, { { 0u, "Mandating the Standard Library: Clause 25", "Author5256" }, { 1u, "Mandating the Standard Library: Clause 31", "Author376" }, { 2u, "Mandating the Standard Library: Clause 31", "Author1145" }, } },
    { 1724u, { { 0u, "C++ Standard Library Issues to be moved in Cologne", "Author3861" }, } },
    { 1725u, { { 0u, "Modular Topic Design", "Author66" }, { 1u, "Modular Topic Design", "Author3330" }, } },
    { 1726u, { { 0u, "Title836", "Author3091" }, { 1u, "Title1377", "Author5201" }, { 2u, "Title576", "Author2111" }, { 3u, "Title1258", "Author4736" }, { 4u, "Title259", "Author930" }, { 5u, "P1726R5 Pointer lifetime-end zap", "Author2511" }, } },
    { 1727u, { { 0u, "Issues with current flat_map proposal", "Author2932" }, } },
    { 1728u, { { 0u, "contracts_explained", "Author3114" }, } },
    { 1729u, { { 0u, "Text Parsing", "Author1962" }, { 1u, "Text Parsing", "Author1705" }, { 2u, "Text Parsing", "Author570" }, { 3u, "Text Parsing", "Author4716" }, { 4u, "Text Parsing", "Author4129" }, { 5u, "Text Parsing", "Author1068" }, } },
    { 1730u, { { 0u, "Title668", "Author2490" }, } },
    { 1731u, { { 0u, "Microsoft Word - P1731R0_memory_helpers.docx", "Author4459" }, { 1u, "Title1390", "Author5258" }, } },
    { 1732u, { { 0u, "Title51", "Author139" }, { 1u, "Title174", "Author612" }, { 2u, "Title950", "Author3568" }, { 3u, "Title21", "Author76" }, { 4u, "Title952", "Author3573" }, } },
    { 1733u, { { 0u, "User-friendly and Evolution-friendly Reflection: A Compromise", "Author2178" }, } },
    { 1734u, { { 0u, "Title378", "Author1347" }, } },
    { 1735u, { { 0u, "Title682", "Author2541" }, } },
    { 1736u, { { 0u, "Title774", "Author2811" }, } },
    { 1737u, { { 0u, "Title1614", "Author6112" }, } },
    { 1738u, { { 0u, "The Executor Concept Hierarchy Needs a Single Root", "Author5690" }, } },
    { 1739u, { { 0u, "Title333", "Author1156" }, { 1u, "Title496", "Author1800" }, { 2u, "Avoid template bloat for forwarding ranges in combination with subrange-y view adaptors.", "Author4470" }, { 3u, "Avoid template bloat for safe_ranges in combination with subrange-y view adaptors.", "Author6323" }, { 4u, "Avoid template bloat for s in combination with subrange-y view adaptors.", "Author3267" }, } },
    { 1743u, { { 0u, "Title1074", "Author4024" }, } },
    { 1744u, { { 0u, "Title1233", "Author4633" }, } },
    { 1745u, { { 0u, "Title214", "Author754" }, } },
    { 1746u, { { 0u, "Feedback on <a data-link-type=\"biblio\" href=\"#biblio-p1386r2\">[P1386R2]</a> std::audio", "Author1684" }, { 1u, "D1746R1: Feedback on <a data-link-type=\"biblio\" href=\"#biblio-p1386r2\">[P1386R2]</a> std::audio", "Author1701" }, } },
    { 1747u, { { 0u, "Dont use `char8_t` and `std::u8string` yet in P1389", "Author1675" }, } },
    { 1748u, { { 0u, "Fill in [delay.cpp] TODO in P1389", "Author3221" }, { 1u, "Fill in [delay.cpp] TODO in P1389", "Author940" }, } },
    { 1749u, { { 0u, "Access control for reflection", "Author6022" }, } },
    { 1750u, { { 0u, "D1750R0 A Proposal to Add Process Management to the C++ Standard Library", "Author4973" }, { 1u, "P1750R1 A Proposal to Add Process Management to the C++ Standard Library", "Author1489" }, } },
    { 1751u, { { 0u, "p1751r0", "Author2869" }, } },
    { 1753u, { { 0u, "Name Lookup Should ``Find the First Thing of That Name''", "Author2020" }, } },
    { 1754u, { { 0u, "Title1672", "Author6363" }, { 1u, "Title310", "Author1098" }, } },
    { 1759u, { { 0u, "Native handle from file streams", "Author1296" }, { 1u, "Native handle from file streams", "Author3944" }, { 2u, "Native handle from file streams", "Author6081" }, { 3u, "Native handles and file streams", "Author153" }, { 4u, "Native handles and file streams", "Author1840" }, { 5u, "Native handles and file streams", "Author880" }, { 6u, "Native handles and file streams", "Author5971" }, } },
    { 1760u, { { 0u, "Title1662", "Author6319" }, } },
    { 1761u, { { 0u, "Title156", "Author539" }, } },
    { 1762u, { { 0u, "Title967", "Author3642" }, } },
    { 1764u, { { 0u, "Title543", "Author1979" }, } },
    { 1766u, { { 0u, "Mitigating minor modules maladies", "Author2240" }, { 1u, "Mitigating minor modules maladies", "Author3212" }, } },
    { 1767u, { { 0u, "Packaging C++ Modules", "Author58" }, } },
    { 1768u, { { 0u, "Title97", "Author321" }, } },
    { 1769u, { { 0u, "The \"default\" contract build-level and continuation-mode should be implementation-defined", "Author6359" }, } },
    { 1770u, { { 0u, "On vectors, tensors, matrices, and hypermatrices", "Author2487" }, } },
    { 1771u, { { 0u, "Title548", "Author2008" }, { 1u, "Title340", "Author1183" }, } },
    { 1772u, { { 0u, "P1772R0", "Author1642" }, { 1u, "P1772R1", "Author6438" }, } },
    { 1773u, { { 0u, "Title363", "Author1282" }, } },
    { 1774u, { { 0u, "Title570", "Author2091" }, { 1u, "Title313", "Author1101" }, { 2u, "Title672", "Author2505" }, { 3u, "Title491", "Author1779" }, { 4u, "Title1607", "Author6100" }, { 5u, "Title670", "Author2498" }, { 6u, "Title1693", "Author6446" }, { 7u, "Title98", "Author329" }, { 8u, "Title733", "Author2681" }, } },
    { 1779u, { { 0u, "ABI isolation for member functions", "Author3982" }, { 1u, "ABI isolation for member functions", "Author2613" }, { 2u, "ABI isolation for member functions", "Author3696" }, { 3u, "ABI isolation for member functions", "Author5052" }, } },
    { 1780u, { { 0u, "D1780R0: Modular Relaxed Dependencies: A new approach to the Out-Of-Thin-Air Problem", "Author3600" }, } },
    { 1782u, { { 0u, "Local contract restrictions", "Author1139" }, { 1u, "Local contract restrictions", "Author861" }, } },
    { 1786u, { { 0u, "Title1247", "Author4697" }, } },
    { 1787u, { { 0u, "Declarations and where to find them", "Author4968" }, { 1u, "Declarations and where to find them", "Author5635" }, { 2u, "Declarations and where to find them", "Author1303" }, { 3u, "Declarations and where to find them", "Author2979" }, { 4u, "Declarations and where to find them", "Author1162" }, { 5u, "Declarations and where to find them", "Author568" }, { 6u, "Declarations and where to find them", "Author4520" }, } },
    { 1788u, { { 0u, "Title1223", "Author4588" }, { 2u, "Title1082", "Author4053" }, { 3u, "Title633", "Author2305" }, } },
    { 1789u, { { 0u, "Library Support for Expansion Statements", "Author990" }, { 1u, "Library Support for Expansion Statements", "Author1050" }, } },
    { 1790u, { { 0u, "Networking TS changes to enable better DynamicBuffer composition", "Author2885" }, { 1u, "Networking TS changes to enable better DynamicBuffer composition", "Author960" }, } },
    { 1791u, { { 0u, "Evolution of the P0443 Unified Executors Proposal to accommodate new requirements", "Author5758" }, } },
    { 1792u, { { 0u, "Simplifying and generalising Sender/Receiver for asynchronous operations", "Author705" }, } },
    { 1793u, { { 0u, "Proposal Template", "Author2846" }, } },
    { 1795u, { { 0u, "p1795r0.html", "Author3989" }, { 1u, "d1795r1.html", "Author2706" }, { 2u, "Title243", "Author874" }, } },
    { 1796u, { { 0u, "Effective types: examples (P1796R0)", "Author1942" }, } },
    { 1797u, { { 0u, "C/C++ Memory Object Model Papers - Introduction (P1797R0)", "Author2283" }, } },
    { 1798u, { { 0u, "Title986", "Author3732" }, } },
    { 1801u, { { 0u, "Title1241", "Author4664" }, } },
    { 1803u, { { 0u, "packexpr(args, I) -- compile-time friendly pack inspection", "Author4398" }, } },
    { 1807u, { { 0u, "Title38", "Author113" }, } },
    { 1808u, { { 0u, "Contra P0339 \"`polymorphic_allocator<>` as a vocabulary type\"", "Author4453" }, } },
    { 1810u, { { 0u, "A Quick Look at What P1754 Will Change", "Author5917" }, } },
    { 1811u, { { 0u, "Relaxing redefinition restrictions for re-exportation robustness", "Author2362" }, } },
    { 1812u, { { 0u, "Title1190", "Author4456" }, } },
    { 1813u, { { 0u, "A Concept Design for the Numeric Algorithms", "Author5026" }, } },
    { 1814u, { { 0u, "Wording for Class Template Argument Deduction for Alias Templates", "Author1018" }, } },
    { 1815u, { { 0u, "Translation-unit-local entities", "Author2269" }, { 1u, "Translation-unit-local entities", "Author3036" }, { 2u, "Translation-unit-local entities", "Author525" }, } },
    { 1816u, { { 0u, "Title791", "Author2896" }, } },
    { 1818u, { { 0u, "Narrowing and Widening Conversions", "Author627" }, { 1u, "Narrowing and Widening Conversions", "Author2883" }, } },
    { 1819u, { { 0u, "Untitled", "Author514" }, } },
    { 1820u, { { 0u, "p1820r0.html", "Author3993" }, } },
    { 1823u, { { 0u, "d1823r0", "Author5328" }, } },
    { 1825u, { { 0u, "Title314", "Author1103" }, } },
    { 1830u, { { 0u, "Title514", "Author1873" }, { 1u, "Title1575", "Author5983" }, } },
    { 1831u, { { 0u, "Deprecating <code>volatile</code>: library", "Author6341" }, { 1u, "Deprecating <code>volatile</code>: library", "Author3338" }, } },
    { 1832u, { { 0u, "p1832r0", "Author4615" }, } },
    { 1837u, { { 0u, "Remove NTTPs of class type from C++20", "Author375" }, } },
    { 1838u, { { 0u, "Title1479", "Author5607" }, } },
    { 1839u, { { 0u, "Accessing Object Representations", "Author6007" }, { 1u, "Accessing Object Representations", "Author599" }, { 2u, "Accessing Object Representations", "Author2812" }, { 3u, "Accessing Object Representations", "Author2388" }, { 4u, "Accessing Object Representations", "Author3770" }, { 5u, "Title1087", "Author4063" }, { 6u, "Accessing object representations", "Author3907" }, { 7u, "Accessing object representations", "Author6139" }, } },
    { 1840u, { { 0u, "Rod-Cologne", "Author6180" }, } },
    { 1841u, { { 0u, "Wording for Individually Specializable Numeric Traits", "Author552" }, { 1u, "Wording for Individually Specializable Numeric Traits", "Author4190" }, { 2u, "Wording for Individually Specializable Numeric Traits", "Author1474" }, { 3u, "Wording for Individually Specializable Numeric Traits", "Author5789" }, } },
    { 1842u, { { 0u, "Generalized Module (Dependency?) Mapper", "Author4657" }, } },
    { 1843u, { { 0u, "comparison and hasher requirements", "Author4425" }, } },
    { 1844u, { { 0u, "Enhancement of regex", "Author699" }, { 1u, "Enhancement of regex", "Author4560" }, } },
    { 1845u, { { 0u, "2019-09-21 Denver Tooling Meeting", "Author1062" }, } },
    { 1846u, { { 0u, "p1846r0", "Author2985" }, } },
    { 1847u, { { 0u, "Microsoft Word - P1847R0.doc", "Author2973" }, { 1u, "Microsoft Word - P1847R1.doc", "Author925" }, { 2u, "Microsoft Word - P1847R2.doc", "Author5926" }, { 3u, "Microsoft Word - P1847R3.doc", "Author1606" }, { 4u, "Microsoft Word - P1847R4.doc", "Author2155" }, } },
    { 1848u, { { 0u, "Microsoft Word - P1848R0.doc", "Author2637" }, } },
    { 1851u, { { 0u, "Guidelines For snake_case Concept Naming", "Author1253" }, } },
    { 1854u, { { 0u, "Title1443", "Author5476" }, { 1u, "Title869", "Author3201" }, { 2u, "Title602", "Author2196" }, { 3u, "Title58", "Author156" }, { 4u, "Title1131", "Author4224" }, } },
    { 1855u, { { 0u, "Make <compare> freestanding", "Author4658" }, } },
    { 1856u, { { 0u, "P1856R0", "Author4240" }, } },
    { 1857u, { { 0u, "<code>remove.dots.in.module.names</code>", "Author817" }, { 1u, "Modules Dependency Discovery", "Author1190" }, { 2u, "Modules Dependency Discovery", "Author4040" }, { 3u, "Modules Dependency Discovery", "Author3974" }, } },
    { 1858u, { { 0u, "Generalized pack declaration and usage", "Author5046" }, { 1u, "Generalized pack declaration and usage", "Author6256" }, { 2u, "Generalized pack declaration and usage", "Author2534" }, } },
    { 1859u, { { 0u, "Standard terminology character sets and encodings", "Author2360" }, } },
    { 1860u, { { 0u, "C++ Networking Must Be Secure By Default", "Author5203" }, } },
    { 1861u, { { 0u, "D1861R0: Secure Connections in Networking TS", "Author3783" }, { 1u, "Secure Networking in C++", "Author6282" }, } },
    { 1862u, { { 0u, "Title301", "Author1074" }, { 1u, "Title1344", "Author5108" }, } },
    { 1863u, { { 0u, "Title996", "Author3763" }, { 1u, "Title1461", "Author5535" }, } },
    { 1864u, { { 0u, "Defining Target Tuplets", "Author1437" }, } },
    { 1865u, { { 0u, "Add max() to latch and barrier", "Author3293" }, { 1u, "Add max() to latch and barrier", "Author4431" }, } },
    { 1868u, { { 0u, "width: clarifying units of width and precision in std::format", "Author450" }, { 1u, "width: clarifying units of width and precision in std::format", "Author2968" }, { 2u, "width: clarifying units of width and precision in std::format", "Author2630" }, } },
    { 1869u, { { 0u, "Rename 'condition_variable_any' interruptible wait methods", "Author2435" }, { 1u, "Rename 'condition_variable_any' interruptible wait methods", "Author618" }, } },
    { 1870u, { { 0u, "forwarding-range<T> is too subtle", "Author2264" }, { 1u, "forwarding-range<T> is too subtle", "Author2844" }, } },
    { 1871u, { { 0u, "Should concepts be enabled or disabled?", "Author3074" }, { 1u, "Concept traits should be named after concepts", "Author44" }, } },
    { 1872u, { { 0u, "Title1486", "Author5637" }, } },
    { 1873u, { { 0u, "<code>remove.dots.in.module.names</code>", "Author3419" }, { 1u, "<code>remove.dots.in.module.names</code>", "Author4986" }, } },
    { 1874u, { { 0u, "Dynamic Initialization Order of Non-Local Variables in Modules", "Author3973" }, { 1u, "Dynamic Initialization Order of Non-Local Variables in Modules", "Author1314" }, } },
    { 1875u, { { 0u, "Title1604", "Author6092" }, { 1u, "Title689", "Author2551" }, { 2u, "Title650", "Author2405" }, } },
    { 1876u, { { 0u, "All The Module Names", "Author4441" }, { 1u, "All The Module Names", "Author6121" }, } },
    { 1877u, { { 0u, "Saving Private Ranges: Recovering Lost Information from Comparison and Predicate Algorithms", "Author3453" }, } },
    { 1878u, { { 0u, "Constraining Readable Types", "Author3047" }, { 1u, "Constraining Readable Types", "Author6456" }, } },
    { 1879u, { { 0u, "Please Don't Rewrite My String Literals", "Author2894" }, } },
    { 1880u, { { 0u, "uNstring Arguments Shall Be UTF-N Encoded", "Author204" }, } },
    { 1881u, { { 0u, "Epochs: a backward-compatible language evolution mechanism", "Author3741" }, { 1u, "Epochs: a backward-compatible language evolution mechanism", "Author5025" }, } },
    { 1882u, { { 0u, "Title604", "Author2205" }, } },
    { 1883u, { { 0u, "Title942", "Author3540" }, { 1u, "Title797", "Author2921" }, { 2u, "Title1574", "Author5981" }, } },
    { 1884u, { { 0u, "Private Module Fragment: An Inconsistent Boundary", "Author4257" }, } },
    { 1885u, { { 0u, "Title849", "Author3129" }, { 1u, "Title1206", "Author4525" }, { 2u, "Title437", "Author1580" }, { 3u, "Title209", "Author747" }, { 4u, "Title558", "Author2042" }, { 5u, "Title1590", "Author6027" }, { 6u, "Title965", "Author3639" }, { 7u, "Title1044", "Author3936" }, { 8u, "Title794", "Author2912" }, { 9u, "Title1289", "Author4870" }, { 10u, "Title1239", "Author4652" }, { 11u, "Title694", "Author2567" }, { 12u, "Title1410", "Author5350" }, } },
    { 1886u, { { 0u, "Error speed benchmarking", "Author3049" }, } },
    { 1887u, { { 0u, "Title169", "Author598" }, { 1u, "Title1372", "Author5191" }, } },
    { 1888u, { { 0u, "Title1160", "Author4335" }, } },
    { 1889u, { { 0u, "C++ Numerics Work In Progress", "Author4150" }, { 1u, "C++ Numerics Work In Progress", "Author298" }, } },
    { 1890u, { { 0u, "C++ Numerics Work In Progress Issues", "Author3278" }, } },
    { 1891u, { { 0u, "Title53", "Author146" }, } },
    { 1892u, { { 0u, "Title317", "Author1112" }, { 1u, "Title1706", "Author6492" }, } },
    { 1893u, { { 0u, "Title1053", "Author3962" }, } },
    { 1894u, { { 0u, "Title1688", "Author6425" }, } },
    { 1895u, { { 0u, "Title555", "Author2037" }, } },
    { 1896u, { { 0u, "SG16: Unicode meeting summaries 2019/06/12 - 2019/09/25", "Author1972" }, } },
    { 1897u, { { 0u, "Towards C++23 executors: A proposal for an initial set of algorithms", "Author1060" }, { 1u, "Towards C++23 executors: A proposal for an initial set of algorithms", "Author4529" }, { 2u, "Towards C++23 executors: A proposal for an initial set of algorithms", "Author5175" }, { 3u, "Towards C++23 executors: A proposal for an initial set of algorithms", "Author1611" }, } },
    { 1898u, { { 0u, "Forward progress delegation for executors", "Author5349" }, { 1u, "Forward progress delegation for executors", "Author799" }, } },
    { 1899u, { { 0u, "strideview", "Author4932" }, { 1u, "`stride_view`", "Author5424" }, { 2u, "stride_view", "Author4289" }, { 3u, "stride_view", "Author3171" }, } },
    { 1900u, { { 0u, "Concepts-Adjacent Problems", "Author5023" }, } },
    { 1901u, { { 0u, "P1901R0 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers", "Author2696" }, { 1u, "P1901R1 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers", "Author4389" }, { 2u, "P1901R2 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers", "Author4000" }, } },
    { 1902u, { { 0u, "Missing feature-test macros 2018-2019", "Author2930" }, { 1u, "Missing feature-test macros 2017-2019", "Author4829" }, } },
    { 1905u, { { 0u, "Title999", "Author3769" }, } },
    { 1906u, { { 0u, "Title1219", "Author4574" }, } },
    { 1907u, { { 0u, "Inconsistencies with non-type template parameters", "Author1416" }, { 1u, "Inconsistencies with non-type template parameters", "Author3779" }, } },
    { 1908u, { { 0u, "Title379", "Author1348" }, { 1u, "Title1583", "Author6009" }, { 2u, "Title1180", "Author4405" }, } },
    { 1909u, { { 0u, "Title1149", "Author4297" }, } },
    { 1910u, { { 0u, "Title1442", "Author5474" }, } },
    { 1911u, { { 0u, "Title1189", "Author4448" }, } },
    { 1912u, { { 0u, "Title700", "Author2578" }, { 1u, "Title286", "Author1022" }, } },
    { 1913u, { { 0u, "Comments on Audio Devices", "Author405" }, } },
    { 1914u, { { 0u, "P1914R0", "Author4377" }, } },
    { 1915u, { { 0u, "Expected Feedback from simd in the Parallelism TS 2 [P1915R0]", "Author2710" }, } },
    { 1916u, { { 0u, "Title106", "Author354" }, } },
    { 1917u, { { 0u, "C++ Standard Library Issues to be moved in Belfast", "Author4996" }, } },
    { 1919u, { { 0u, "Title255", "Author917" }, { 1u, "Title396", "Author1411" }, { 2u, "Title554", "Author2036" }, { 3u, "Title1335", "Author5071" }, } },
    { 1920u, { { 0u, "Title1259", "Author4740" }, } },
    { 1921u, { { 0u, "Title508", "Author1850" }, } },
    { 1922u, { { 0u, "Title908", "Author3388" }, } },
    { 1923u, { { 0u, "Title853", "Author3141" }, } },
    { 1924u, { { 0u, "Title801", "Author2940" }, } },
    { 1925u, { { 0u, "Title551", "Author2024" }, } },
    { 1926u, { { 0u, "Title1668", "Author6333" }, } },
    { 1927u, { { 0u, "Title244", "Author875" }, } },
    { 1928u, { { 0u, "Merge data-parallel types from the Parallelism TS 2 [P1928R0]", "Author5970" }, { 1u, "Merge data-parallel types from the Parallelism TS 2 [P1928R1]", "Author6025" }, { 2u, "Merge data-parallel types from the Parallelism TS 2 [P1928R2]", "Author2121" }, { 3u, "Merge data-parallel types from the Parallelism TS 2 [P1928R3]", "Author2193" }, { 4u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R4]", "Author503" }, { 5u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R5]", "Author73" }, { 6u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R6]", "Author6057" }, { 7u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R7]", "Author3204" }, { 8u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R8]", "Author2695" }, { 9u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R9]", "Author4595" }, { 10u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R10]", "Author719" }, { 11u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R11]", "Author2994" }, { 12u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R12]", "Author3606" }, { 13u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R13]", "Author3131" }, { 14u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R14]", "Author4998" }, { 15u, "std::simd merge data-parallel types from the Parallelism TS 2 [P1928R15]", "Author2581" }, } },
    { 1929u, { { 0u, "Title307", "Author1088" }, } },
    { 1930u, { { 0u, "Title648", "Author2389" }, } },
    { 1932u, { { 0u, "Title711", "Author2621" }, } },
    { 1933u, { { 0u, "Suggestions for bulk_execute | P1933", "Author4884" }, } },
    { 1934u, { { 0u, "Amazing Stuff", "Author2060" }, } },
    { 1935u, { { 0u, "A C++ Approach to Physical Units", "Author493" }, { 1u, "A C++ Approach to Physical Units", "Author2961" }, { 2u, "A C++ Approach to Physical Units", "Author1421" }, } },
    { 1936u, { { 0u, "Title1294", "Author4891" }, } },
    { 1937u, { { 0u, "Fixing inconsistencies between `constexpr` and `consteval` functions", "Author2475" }, { 1u, "Fixing inconsistencies between `constexpr` and `consteval` functions", "Author1182" }, { 2u, "Fixing inconsistencies between `constexpr` and `consteval` functions", "Author5436" }, } },
    { 1938u, { { 0u, "if consteval", "Author5135" }, { 1u, "if-consteval", "Author6119" }, { 2u, "`if consteval`", "Author5965" }, { 3u, "`if consteval`", "Author5673" }, } },
    { 1943u, { { 0u, "Networking TS changes to improve completion token flexibility and performance", "Author4918" }, } },
    { 1944u, { { 0u, "Title875", "Author3225" }, { 1u, "Title549", "Author2012" }, } },
    { 1945u, { { 0u, "Making More Objects Contiguous", "Author5729" }, } },
    { 1946u, { { 0u, "Allow defaulting comparisons by value", "Author1597" }, } },
    { 1947u, { { 0u, "Title1640", "Author6224" }, } },
    { 1948u, { { 0u, "Title195", "Author686" }, } },
    { 1949u, { { 0u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author207" }, { 1u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author1051" }, { 2u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author1356" }, { 3u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author4217" }, { 4u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author991" }, { 5u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author6144" }, { 6u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author1822" }, { 7u, "C++ Identifier Syntax using Unicode Standard Annex 31", "Author3305" }, } },
    { 1950u, { { 0u, "<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++", "Author2138" }, { 1u, "<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++", "Author1384" }, { 2u, "<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++", "Author2533" }, } },
    { 1951u, { { 0u, "Default Arguments for pair's Forwarding Constructor", "Author4055" }, { 1u, "Default Arguments for pair's Forwarding Constructor", "Author4042" }, } },
    { 1953u, { { 0u, "Title806", "Author2962" }, } },
    { 1955u, { { 0u, "Top Level Is Constant Evaluated", "Author5296" }, { 1u, "Top Level Is Constant Evaluated", "Author1299" }, } },
    { 1956u, { { 0u, "P1956R0", "Author3757" }, { 1u, "P1956R1", "Author2707" }, } },
    { 1957u, { { 0u, "Converting from T* to bool should be considered narrowing (re: US 212) - HackMD", "Author3643" }, { 1u, "Converting from T* to bool should be considered narrowing (re: US 212) - HackMD", "Author180" }, { 2u, "Converting from T* to bool should be considered narrowing (re: US 212) - HackMD", "Author5120" }, } },
    { 1958u, { { 0u, "C++ Concurrent Buffer Queue", "Author5487" }, } },
    { 1959u, { { 0u, "Remove std::weak_equality and std::strong_equality", "Author3617" }, } },
    { 1960u, { { 0u, "NB Comment Changes Reviewed by SG1", "Author4737" }, } },
    { 1961u, { { 0u, "Harmonizing the definitions of total order for pointers", "Author1401" }, } },
    { 1962u, { { 0u, "Title1533", "Author5779" }, } },
    { 1963u, { { 0u, "P1963R0 Fixing US 313", "Author140" }, } },
    { 1964u, { { 0u, "Casting convertible_to<bool> considered harmful", "Author4813" }, { 1u, "Wording for boolean-testable", "Author4315" }, { 2u, "Wording for boolean-testable", "Author1974" }, } },
    { 1965u, { { 0u, "Blanket Wording for Specifying ``Hidden Friends''", "Author5300" }, } },
    { 1967u, { { 0u, "Preprocessor embed", "Author4980" }, { 1u, "Preprocessor embed - Binary Resource Inclusion", "Author1307" }, { 2u, "Preprocessor embed - Binary Resource Inclusion", "Author896" }, { 3u, "Preprocessor embed - Binary Resource Inclusion | r4", "Author2018" }, { 4u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author2028" }, { 5u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author1550" }, { 6u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author3046" }, { 7u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author673" }, { 8u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author1251" }, { 9u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author4677" }, { 10u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author5723" }, { 11u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author5754" }, { 12u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author3604" }, { 13u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author5695" }, { 14u, "#embed - a scannable, tooling-friendly binary resource inclusion mechanism", "Author233" }, } },
    { 1968u, { { 0u, "Core \"tentatively ready\" Issues", "Author6494" }, } },
    { 1969u, { { 0u, "Core \"ready\" Issues", "Author784" }, } },
    { 1970u, { { 0u, "Consistency for size() functions", "Author836" }, { 1u, "Consistency for size() functions", "Author770" }, { 2u, "Consistency for size() functions: Add ranges::ssize", "Author1238" }, } },
    { 1971u, { { 0u, "Core NB Comment Resolutions", "Author4029" }, } },
    { 1972u, { { 0u, "US105 Check satisfaction of constraints for non-templates when forming pointer to function", "Author518" }, } },
    { 1973u, { { 0u, "Rename _default_init Functions", "Author6273" }, { 1u, "Rename _default_init Functions", "Author1560" }, } },
    { 1974u, { { 0u, "Non-transient constexpr allocation using", "Author4400" }, } },
    { 1975u, { { 0u, "Fixing the wording of parenthesized aggregate-initialization", "Author4562" }, } },
    { 1976u, { { 0u, "Fixed-size 'span' construction from dynamic-size range", "Author825" }, { 1u, "Fixed-size 'span' construction from dynamic-size range", "Author5361" }, { 2u, "Fixed-size 'span' construction from dynamic-size range", "Author3348" }, } },
    { 1978u, { { 0u, "Rename `_default_init` functions and do nothing more", "Author4786" }, } },
    { 1979u, { { 0u, "Title87", "Author256" }, } },
    { 1980u, { { 0u, "Drafting for CA096: Declaration matching for non-dependent requires-clauses", "Author5593" }, } },
    { 1981u, { { 0u, "Rename leap to leap_second", "Author4262" }, } },
    { 1982u, { { 0u, "Rename link to time_zone_link", "Author1092" }, } },
    { 1983u, { { 0u, "Wording for GB301, US296, US292, US291, and US283", "Author5196" }, } },
    { 1985u, { { 0u, "Universal Template Parameters", "Author2393" }, { 1u, "Universal Template Parameters", "Author637" }, { 3u, "Universal Template Parameters", "Author2786" }, } },
    { 1988u, { { 0u, "Allow Templates in Local Classes", "Author400" }, { 1u, "Allow Templates in Local Classes", "Author700" }, } },
    { 1989u, { { 0u, "Title138", "Author484" }, { 1u, "Title472", "Author1725" }, { 2u, "Title161", "Author558" }, } },
    { 1990u, { { 0u, "Title502", "Author1819" }, { 1u, "Title510", "Author1856" }, } },
    { 1991u, { { 0u, "Rod-Belfast-P1991", "Author4455" }, } },
    { 1993u, { { 0u, "Restore factories to bulk_execute | P1993R0", "Author3739" }, { 1u, "Restore shared state to bulk_execute | P1993R1", "Author3786" }, } },
    { 1994u, { { 0u, "elements_view needs its own sentinel", "Author949" }, { 1u, "elements_view needs its own sentinel", "Author6064" }, } },
    { 1995u, { { 0u, "P1995R0 Contract Use Cases", "Author4506" }, { 1u, "P1995R1 Contract Use Cases", "Author4648" }, } },
    { 1996u, { { 0u, "Title1555", "Author5895" }, } },
    { 1997u, { { 0u, "Relaxing Restrictions on Arrays", "Author2819" }, { 1u, "Relaxing Restrictions on Arrays", "Author5374" }, } },
    { 1998u, { { 0u, "Title616", "Author2251" }, { 1u, "Title1224", "Author4589" }, } },
    { 1999u, { { 0u, "Process proposal: double-check evolutionary material via a Tentatively Ready status", "Author4958" }, } },
    { 2000u, { { 0u, "Title971", "Author3672" }, { 1u, "Title1627", "Author6159" }, { 2u, "Title232", "Author826" }, { 3u, "P2000r3: Direction for ISO C++", "Author3294" }, { 4u, "P2000r4: Direction for ISO C++", "Author3887" }, } },
    { 2002u, { { 0u, "Defaulted comparison specification fixes", "Author5545" }, { 1u, "Defaulted comparison specification fixes", "Author1616" }, } },
    { 2003u, { { 0u, "Fixing Internal and External Linkage Entities in Header Units", "Author2038" }, } },
    { 2004u, { { 0u, "Numbers and their Scopes", "Author3259" }, } },
    { 2005u, { { 0u, "2D Graphics: A Brief Review", "Author6375" }, } },
    { 2006u, { { 0u, "Title407", "Author1449" }, { 1u, "Eliminating heap-allocations in sender/receiver with connect()/start() as basis operations", "Author708" }, } },
    { 2007u, { { 0u, "std::from_chars should work with std::string_view", "Author2123" }, } },
    { 2008u, { { 0u, "Enable variable template template parameters", "Author4940" }, } },
    { 2009u, { { 0u, "SG16: Unicode meeting summaries 2019-10-09 through 2019-12-11", "Author5746" }, } },
    { 2010u, { { 0u, "Markdown To PDF", "Author5733" }, } },
    { 2011u, { { 0u, "A pipeline-rewrite operator", "Author5631" }, { 1u, "A pipeline-rewrite operator", "Author331" }, } },
    { 2012u, { { 0u, "P2012R0", "Author4999" }, { 1u, "Fix the rangebased for loop, Rev1", "Author4185" }, { 2u, "Fix the range-based for loop, Rev 2", "Author1073" }, } },
    { 2013u, { { 0u, "Freestanding Language: Optional <code>::operator new</code>", "Author4383" }, { 1u, "Freestanding Language: Optional <code>::operator new</code>", "Author761" }, { 2u, "Freestanding Language: Optional <code>::operator new</code>", "Author1670" }, { 3u, "Freestanding Language: Optional <code>::operator new</code>", "Author5446" }, { 4u, "Freestanding Language: Optional <code>::operator new</code>", "Author1125" }, { 5u, "Freestanding Language: Optional <code>::operator new</code>", "Author1493" }, } },
    { 2014u, { { 0u, "Title1046", "Author3943" }, { 1u, "Title1354", "Author5127" }, { 2u, "Proposed resolution for US061+US063 - aligned allocation of coroutine frames", "Author3784" }, } },
    { 2016u, { { 0u, "Title603", "Author2199" }, } },
    { 2017u, { { 0u, "Conditionally safe ranges", "Author2503" }, { 1u, "Conditionally borrowed ranges", "Author22" }, } },
    { 2019u, { { 0u, "Title1484", "Author5633" }, { 1u, "Title974", "Author3678" }, { 2u, "Title1568", "Author5957" }, { 3u, "Title843", "Author3108" }, { 4u, "Title1154", "Author4309" }, { 5u, "Title1529", "Author5767" }, { 6u, "Title958", "Author3599" }, { 7u, "Title749", "Author2731" }, { 8u, "Title1215", "Author4567" }, } },
    { 2020u, { { 0u, "Title308", "Author1090" }, } },
    { 2021u, { { 0u, "Negative zero strikes again", "Author2279" }, } },
    { 2022u, { { 0u, "Rangified version of lexicographical_compare_three_way", "Author4422" }, { 1u, "Rangified version of lexicographical_compare_three_way", "Author2751" }, { 2u, "Rangified version of lexicographical_compare_three_way", "Author4474" }, { 3u, "P2022R3 - Rangified version of lexicographical_compare_three_way", "Author213" }, } },
    { 2024u, { { 0u, "Bloomberg Analysis of Unified Executors", "Author1148" }, } },
    { 2025u, { { 0u, "Guaranteed copy elision for named return objects", "Author4310" }, { 1u, "Guaranteed copy elision for return variables", "Author5659" }, { 2u, "Guaranteed copy elision for return variables", "Author5176" }, } },
    { 2026u, { { 0u, "Title789", "Author2889" }, } },
    { 2027u, { { 0u, "Title980", "Author3713" }, } },
    { 2028u, { { 0u, "Title465", "Author1702" }, } },
    { 2029u, { { 0u, "Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", "Author4600" }, { 1u, "Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", "Author1240" }, { 2u, "Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", "Author71" }, { 3u, "Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", "Author5876" }, { 4u, "Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals", "Author5211" }, } },
    { 2030u, { { 0u, "Title1395", "Author5280" }, } },
    { 2031u, { { 0u, "Title1683", "Author6399" }, } },
    { 2032u, { { 0u, "P2032R0 Contract Use Cases", "Author3712" }, } },
    { 2033u, { { 0u, "Title352", "Author1226" }, } },
    { 2034u, { { 0u, "Title418", "Author1497" }, { 1u, "Title337", "Author1179" }, { 2u, "Title990", "Author3746" }, { 3u, "Partially Mutable Lambda Captures", "Author1872" }, { 4u, "Partially Mutable Lambda Captures", "Author1524" }, } },
    { 2035u, { { 0u, "Microsoft Word - AP0_value_prop.docx", "Author635" }, } },
    { 2036u, { { 0u, "Change scope of lambda trailing-return-type", "Author583" }, { 1u, "Change scope of lambda *trailing-return-type*", "Author1264" }, { 2u, "Change scope of lambda *trailing-return-type*", "Author3501" }, { 3u, "Change scope of lambda trailing-return-type", "Author2899" }, } },
    { 2037u, { { 0u, "P2037R0 String's gratuitous assignment", "Author1936" }, { 1u, "P2037R1 String's gratuitous assignment", "Author5747" }, } },
    { 2038u, { { 0u, "P2038R0 Proposed nomenclature for contract-related proposals", "Author1994" }, } },
    { 2039u, { { 0u, "Title934", "Author3507" }, } },
    { 2040u, { { 0u, "Title424", "Author1522" }, } },
    { 2041u, { { 0u, "Deleting variable templates", "Author4486" }, { 1u, "Title647", "Author2384" }, } },
    { 2042u, { { 0u, "P2042R0 Alternate names for make_shared_default_init", "Author3457" }, } },
    { 2043u, { { 0u, "Don't constexpr All The Things", "Author6148" }, } },
    { 2044u, { { 0u, "Title503", "Author1832" }, { 1u, "Title955", "Author3579" }, { 2u, "Title152", "Author530" }, } },
    { 2045u, { { 0u, "Missing Mandates for the standard library", "Author2482" }, { 1u, "Missing Mandates for the standard library", "Author262" }, } },
    { 2046u, { { 0u, "P1243R3 - Rangify New Algorithms", "Author3488" }, } },
    { 2047u, { { 0u, "An allocator-aware optional type", "Author2148" }, { 1u, "An allocator-aware optional type", "Author1847" }, { 2u, "An allocator-aware optional type", "Author931" }, { 3u, "An allocator-aware optional type", "Author5564" }, { 4u, "An allocator-aware optional type", "Author6210" }, { 5u, "An allocator-aware optional type", "Author5543" }, { 6u, "An allocator-aware optional type", "Author5040" }, { 7u, "An allocator-aware optional type", "Author1797" }, } },
    { 2048u, { { 0u, "Prohibit zero and NULL from being used as null pointer literals", "Author2918" }, } },
    { 2049u, { { 0u, "Title292", "Author1047" }, } },
    { 2050u, { { 0u, "Title721", "Author2640" }, } },
    { 2051u, { { 0u, "C++ Standard Library Issues to be moved in Prague", "Author1105" }, } },
    { 2052u, { { 0u, "Title678", "Author2517" }, } },
    { 2053u, { { 0u, "Title1134", "Author4231" }, { 1u, "Title1601", "Author6077" }, } },
    { 2054u, { { 0u, "Title215", "Author764" }, { 1u, "Title122", "Author415" }, } },
    { 2055u, { { 0u, "Title892", "Author3314" }, } },
    { 2057u, { { 0u, "Title274", "Author980" }, } },
    { 2058u, { { 0u, "Title110", "Author368" }, } },
    { 2059u, { { 0u, "Title456", "Author1669" }, } },
    { 2060u, { { 0u, "Title1130", "Author4222" }, } },
    { 2061u, { { 0u, "Title391", "Author1402" }, } },
    { 2062u, { { 0u, "Title834", "Author3081" }, } },
    { 2064u, { { 0u, "Title1577", "Author5992" }, } },
    { 2065u, { { 0u, "naming and aliases", "Author713" }, } },
    { 2066u, { { 0u, "Suggested draft TS for C++ Extensions for Transaction Memory Light", "Author5058" }, { 1u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author5068" }, { 2u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author3280" }, { 3u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author1178" }, { 4u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author4510" }, { 5u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author5945" }, { 6u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author903" }, { 7u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author5610" }, { 8u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author3170" }, { 9u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author2516" }, { 10u, "Suggested draft TS for C++ Extensions for Minimal Transactional Memory", "Author6080" }, } },
    { 2067u, { { 0u, "Title817", "Author3020" }, } },
    { 2068u, { { 0u, "Title207", "Author741" }, } },
    { 2069u, { { 0u, "Title815", "Author3005" }, } },
    { 2070u, { { 0u, "Title727", "Author2657" }, } },
    { 2071u, { { 0u, "Named universal character escapes", "Author6389" }, { 1u, "Named universal character escapes", "Author1628" }, { 2u, "Named universal character escapes", "Author2868" }, } },
    { 2072u, { { 0u, "Title191", "Author677" }, { 1u, "Title353", "Author1228" }, } },
    { 2073u, { { 0u, "Title24", "Author80" }, } },
    { 2074u, { { 0u, "Title522", "Author1892" }, } },
    { 2075u, { { 0u, "Title941", "Author3537" }, { 1u, "Title917", "Author3420" }, { 2u, "P2075R2.docx", "Author2456" }, { 3u, "P2075R3.docx", "Author5394" }, { 4u, "P2075R4.docx", "Author2619" }, { 5u, "P2075R5.docx", "Author4514" }, { 6u, "P2075R6.docx", "Author3828" }, } },
    { 2076u, { { 0u, "Previous disagreements on Contracts", "Author4225" }, } },
    { 2077u, { { 0u, "Title282", "Author1009" }, { 1u, "Heterogeneous erasure overloads for associative containers", "Author859" }, { 2u, "Heterogeneous erasure overloads for associative containers", "Author4192" }, { 3u, "Heterogeneous erasure overloads for associative containers", "Author4688" }, } },
    { 2078u, { { 0u, "Add new traits type std::is_complex<T>", "Author5224" }, } },
    { 2079u, { { 0u, "Title1330", "Author5060" }, { 1u, "Parallel Executor", "Author5978" }, { 2u, "System execution context", "Author1036" }, { 3u, "System execution context", "Author6376" }, { 4u, "System execution context", "Author5048" }, { 5u, "System execution context", "Author3699" }, { 6u, "System execution context", "Author6335" }, { 7u, "Parallel scheduler", "Author1783" }, } },
    { 2080u, { { 0u, "Polymorphic allocators: There is no such thing as One True Vocabulary Type", "Author1222" }, } },
    { 2081u, { { 0u, "Rebase the Library Fundamentals v3 TS on C++20", "Author4454" }, { 1u, "Rebase the Library Fundamentals v3 TS on C++20", "Author2116" }, } },
    { 2082u, { { 0u, "Title326", "Author1136" }, { 1u, "Title1625", "Author6153" }, } },
    { 2085u, { { 0u, "Consistent defaulted comparisons", "Author2693" }, } },
    { 2087u, { { 0u, "Reflection Naming: fix reflexpr", "Author4458" }, } },
    { 2088u, { { 0u, "Reflection Naming: Reification", "Author2661" }, } },
    { 2089u, { { 0u, "Function parameter constraints are fragile", "Author2011" }, } },
    { 2091u, { { 0u, "Issues with range access CPOs", "Author3609" }, } },
    { 2092u, { { 0u, "Title373", "Author1328" }, } },
    { 2093u, { { 0u, "Formatted output", "Author84" }, { 1u, "Formatted output", "Author3615" }, { 2u, "Formatted output", "Author1868" }, { 3u, "Formatted output", "Author6420" }, { 4u, "Formatted output", "Author4826" }, { 5u, "Formatted output", "Author2984" }, { 6u, "Formatted output", "Author5592" }, { 7u, "Formatted output", "Author2280" }, { 8u, "Formatted output", "Author5932" }, { 9u, "Formatted output", "Author1650" }, { 10u, "Formatted output", "Author4167" }, { 11u, "Formatted output", "Author141" }, { 12u, "Formatted output", "Author5179" }, { 13u, "Formatted output", "Author5309" }, { 14u, "Formatted output", "Author3618" }, } },
    { 2095u, { { 0u, "Resolve lambda init-capture pack grammar (CWG2378)", "Author2359" }, } },
    { 2096u, { { 0u, "Generalized wording for partial specializations", "Author1555" }, { 1u, "Generalized wording for partial specializations", "Author2271" }, { 2u, "Generalized wording for partial specializations", "Author5388" }, } },
    { 2098u, { { 0u, "Proposing std::isspecializationof", "Author1315" }, { 1u, "Proposing std::isspecializationof", "Author1528" }, } },
    { 2100u, { { 0u, "D2100R0: Keep unhandled_exception of a promise type mandatory - a response to US062 and FR066", "Author5185" }, } },
    { 2101u, { { 0u, "Models subsumes satisfies (Wording for US298 and US300)", "Author6265" }, } },
    { 2102u, { { 0u, "Make implicit expression variations more explicit (Wording for US185)", "Author317" }, } },
    { 2103u, { { 0u, "Core NB Comment Resolutions", "Author4580" }, } },
    { 2104u, { { 0u, "Resolution for GB046 - Disallow changing concept values", "Author2838" }, } },
    { 2106u, { { 0u, "Alternative wording for GB315 and GB316", "Author2538" }, } },
    { 2107u, { { 0u, "Core Issue 2436: US064 Copy semantics of coroutine parameters", "Author1419" }, } },
    { 2108u, { { 0u, "Core \"ready\" Issues", "Author1491" }, } },
    { 2109u, { { 0u, "US084: Disallow \"export import foo\" outside of module interface", "Author1586" }, } },
    { 2113u, { { 0u, "Proposed resolution for 2019 comment CA 112", "Author4943" }, } },
    { 2114u, { { 0u, "P2114R0 Minimal Contract Use Cases", "Author2186" }, } },
    { 2115u, { { 0u, "US069: Merging of multiple definitionsfor unnamed unscoped enumerations", "Author1739" }, } },
    { 2116u, { { 0u, "Remove tuple-like protocol support from fixed-extent span", "Author1712" }, } },
    { 2117u, { { 0u, "C++ Standard Library Issues Resolved Directly In Prague", "Author5591" }, } },
    { 2119u, { { 0u, "Feedback on P1708: Simple Statistical Functions", "Author4350" }, } },
    { 2120u, { { 0u, "Simplified structured bindings protocol with pack aliases", "Author6184" }, } },
    { 2123u, { { 0u, "Extending the Type System to Provide API and ABI Flexibility", "Author5985" }, } },
    { 2125u, { { 0u, "Title1562", "Author5930" }, } },
    { 2126u, { { 0u, "Microsoft Word - AP1_unleashing.docx", "Author1279" }, } },
    { 2127u, { { 0u, "Title501", "Author1812" }, } },
    { 2128u, { { 0u, "Title101", "Author337" }, { 1u, "Title519", "Author1887" }, { 2u, "Title627", "Author2288" }, { 3u, "Title664", "Author2472" }, { 4u, "Title684", "Author2543" }, { 5u, "Title1167", "Author4355" }, { 6u, "Title1525", "Author5748" }, } },
    { 2130u, { { 0u, "P2130-Rod-Prague", "Author3684" }, } },
    { 2131u, { { 0u, "Changes between C++17 and C++20", "Author6133" }, } },
    { 2133u, { { 0u, "Microsoft Word - incu.doc", "Author3837" }, } },
    { 2134u, { { 0u, "Microsoft Word - kaizen.doc", "Author4159" }, } },
    { 2135u, { { 1u, "Title1603", "Author6082" }, } },
    { 2136u, { { 0u, "invoke<R> - HackMD", "Author1490" }, { 1u, "invoke_r - HackMD", "Author3518" }, { 2u, "invoke_r - HackMD", "Author3180" }, { 3u, "invoke_r - HackMD", "Author5395" }, } },
    { 2137u, { { 0u, "Goals and priorities for C++", "Author1016" }, } },
    { 2138u, { { 0u, "Rules of Design<=>Wording engagement", "Author2296" }, { 1u, "Rules of Design<=>Wording engagement", "Author5825" }, { 2u, "Rules of Design<=>Specification engagement", "Author2382" }, { 3u, "Rules of Design<=>Specification engagement", "Author1284" }, { 4u, "Rules of Design<=>Specification engagement", "Author97" }, } },
    { 2139u, { { 0u, "Reviewing Deprecated Facilities of C++20 for C++23", "Author3872" }, { 1u, "Reviewing Deprecated Facilities of C++20 for C++23", "Author5243" }, { 2u, "Reviewing Deprecated Facilities of C++20 for C++23", "Author6243" }, } },
    { 2141u, { { 0u, "Aggregates are named tuples", "Author77" }, { 1u, "Aggregates are named tuples", "Author6436" }, { 2u, "Aggregates are named tuples", "Author1517" }, } },
    { 2142u, { { 1u, "Markdown To PDF", "Author2854" }, } },
    { 2145u, { { 0u, "Evolving C++ Remotely", "Author4102" }, { 1u, "Evolving C++ Remotely", "Author936" }, } },
    { 2146u, { { 0u, "Modern std::byte stream IO for C++", "Author6485" }, { 1u, "Modern std::byte stream IO for C++", "Author6279" }, { 2u, "Modern std::byte stream IO for C++", "Author6087" }, } },
    { 2148u, { { 0u, "Title381", "Author1363" }, } },
    { 2149u, { { 0u, "Title1097", "Author4096" }, } },
    { 2150u, { { 0u, "Down with typename in the Library!", "Author610" }, } },
    { 2152u, { { 0u, "Title160", "Author550" }, { 1u, "Title1157", "Author4327" }, } },
    { 2155u, { { 0u, "Title238", "Author843" }, } },
    { 2156u, { { 0u, "Title709", "Author2616" }, { 1u, "Title754", "Author2755" }, } },
    { 2159u, { { 0u, "Unbounded Decimal", "Author5381" }, { 1u, "P2159R1, A Big Decimal", "Author1757" }, } },
    { 2160u, { { 0u, "Locks lock lockables", "Author5721" }, { 1u, "Locks lock lockables", "Author347" }, } },
    { 2161u, { { 0u, "Title1679", "Author6383" }, { 1u, "Title1016", "Author3842" }, { 2u, "Title254", "Author912" }, } },
    { 2162u, { { 0u, "Inheriting from std::variant", "Author2437" }, { 1u, "Inheriting from `std::variant`", "Author5251" }, { 2u, "Inheriting from `std::variant`", "Author4815" }, } },
    { 2163u, { { 0u, "nativetuple/draft2.md at master accelerated/nativetuple GitHub", "Author1934" }, } },
    { 2164u, { { 0u, "Title245", "Author876" }, { 1u, "Title534", "Author1941" }, { 2u, "Title1513", "Author5718" }, { 3u, "Title1563", "Author5934" }, { 4u, "Title1708", "Author6501" }, { 5u, "Title495", "Author1798" }, { 6u, "Title499", "Author1807" }, { 7u, "Title1043", "Author3932" }, { 8u, "Title1050", "Author3958" }, { 9u, "Title1199", "Author4489" }, } },
    { 2165u, { { 0u, "Title279", "Author1002" }, { 1u, "Title893", "Author3322" }, { 2u, "Title851", "Author3138" }, { 3u, "Title1402", "Author5304" }, { 4u, "Title205", "Author734" }, } },
    { 2166u, { { 0u, "Title1663", "Author6320" }, { 1u, "Title779", "Author2835" }, } },
    { 2167u, { { 0u, "Proposed wording for LWG 2114", "Author5313" }, { 1u, "Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)", "Author3400" }, { 2u, "Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)", "Author4534" }, { 3u, "Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)", "Author5032" }, } },
    { 2168u, { { 0u, "Title1483", "Author5629" }, { 1u, "Title1181", "Author4408" }, { 2u, "Title383", "Author1366" }, { 3u, "Title172", "Author607" }, } },
    { 2169u, { { 0u, "Title1412", "Author5355" }, { 1u, "Title1039", "Author3921" }, { 2u, "Title428", "Author1542" }, { 3u, "Title322", "Author1129" }, { 4u, "Title520", "Author1889" }, } },
    { 2170u, { { 0u, "Feedback on designing the proposed `std::error` type", "Author46" }, } },
    { 2171u, { { 0u, "Rebasing the Networking TS on C++20", "Author6423" }, { 1u, "Rebasing the Networking TS on C++20", "Author5566" }, { 2u, "Rebasing the Networking TS on C++20", "Author5756" }, } },
    { 2172u, { { 0u, "Title1114", "Author4173" }, } },
    { 2173u, { { 0u, "Title759", "Author2771" }, { 1u, "Attributes on Lambda-Expressions", "Author3693" }, } },
    { 2174u, { { 0u, "Compound Literals - HackMD", "Author6453" }, { 1u, "Compound Literals - HackMD", "Author1017" }, } },
    { 2175u, { { 0u, "Composable cancellation for sender-based async operations", "Author4090" }, } },
    { 2176u, { { 0u, "A different take on inexpressible conditions", "Author2403" }, } },
    { 2178u, { { 0u, "Title155", "Author537" }, { 1u, "Title1311", "Author4955" }, } },
    { 2179u, { { 0u, "SG16: Unicode meeting summaries 2020-01-08 through 2020-05-27", "Author4370" }, } },
    { 2181u, { { 0u, "Correcting the Design of Bulk Execution", "Author3424" }, { 1u, "Correcting the Design of Bulk Execution", "Author2777" }, } },
    { 2182u, { { 0u, "Contract Support: Defining the Minimum Viable Feature Set", "Author2666" }, { 1u, "Contract Support: Defining the Minimum Viable Feature Set", "Author7" }, } },
    { 2183u, { { 0u, "Executors Review: Properties", "Author3233" }, } },
    { 2184u, { { 0u, "Title1301", "Author4927" }, } },
    { 2185u, { { 0u, "Contracts Use Case Categorization - HackMD", "Author6010" }, } },
    { 2186u, { { 0u, "Removing Garbage Collection Support", "Author5006" }, { 1u, "Removing Garbage Collection Support", "Author4875" }, { 2u, "Removing Garbage Collection Support", "Author4258" }, } },
    { 2187u, { { 0u, "Title294", "Author1052" }, { 3u, "Title767", "Author2794" }, { 4u, "Title1287", "Author4867" }, { 5u, "Title1527", "Author5761" }, } },
    { 2188u, { { 0u, "DXXXX: Zap the Zap: Pointers should just be bags of bits", "Author289" }, { 1u, "Zap the Zap: Pointers are sometimes just bags of bits", "Author5923" }, } },
    { 2191u, { { 0u, "Modules: ADL & GMFs do not play together well (anymore)", "Author5856" }, } },
    { 2192u, { { 0u, "Title57", "Author155" }, { 1u, "Title1094", "Author4088" }, { 2u, "Title368", "Author1301" }, { 3u, "Title1623", "Author6138" }, } },
    { 2193u, { { 0u, "Title666", "Author2484" }, { 1u, "Title404", "Author1436" }, } },
    { 2194u, { { 0u, "Title1592", "Author6035" }, } },
    { 2195u, { { 0u, "Electronic Straw Polls", "Author4734" }, { 1u, "Electronic Straw Polls", "Author913" }, { 2u, "Electronic Straw Polls", "Author2908" }, } },
    { 2196u, { { 0u, "P2196R0", "Author4252" }, } },
    { 2197u, { { 0u, "Formatting for std::complex", "Author5705" }, } },
    { 2198u, { { 0u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author5285" }, { 1u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author2723" }, { 2u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author2676" }, { 3u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author4264" }, { 4u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author3469" }, { 5u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author365" }, { 6u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author3062" }, { 7u, "Freestanding Feature-Test Macros and Implementation-Defined Extensions", "Author1768" }, } },
    { 2199u, { { 0u, "Concepts to Differentiate Types", "Author5578" }, } },
    { 2201u, { { 0u, "Mixed string literal concatenation", "Author3840" }, { 1u, "Mixed string literal concatenation", "Author1300" }, } },
    { 2202u, { { 0u, "Executors review Senders and Receivers", "Author819" }, } },
    { 2203u, { { 0u, "Title860", "Author3172" }, } },
    { 2205u, { { 0u, "Executors Review - Polymorphic Executor", "Author3878" }, } },
    { 2206u, { { 0u, "Executors Thread Pool review report", "Author1588" }, } },
    { 2207u, { { 0u, "Title1175", "Author4386" }, } },
    { 2209u, { { 0u, "Bulk schedule", "Author2408" }, } },
    { 2210u, { { 0u, "Superior String Splitting", "Author4226" }, { 1u, "Superior String Splitting", "Author161" }, { 2u, "Superior String Splitting", "Author5153" }, } },
    { 2211u, { { 0u, "Exhaustiveness Checking for Pattern Matching", "Author1584" }, } },
    { 2212u, { { 0u, "Relax Requirements for time_point::clock", "Author4524" }, { 1u, "Relax Requirements for time_point::clock", "Author2914" }, { 2u, "Relax Requirements for time_point::clock", "Author2652" }, } },
    { 2213u, { { 0u, "Title786", "Author2877" }, { 1u, "Title1119", "Author4183" }, } },
    { 2214u, { { 0u, "A Plan for C++23 Ranges", "Author2685" }, { 1u, "A Plan for C++23 Ranges", "Author3900" }, { 2u, "A Plan for C++23 Ranges", "Author3116" }, } },
    { 2215u, { { 0u, "Title1681", "Author6393" }, { 1u, "Title597", "Author2187" }, } },
    { 2216u, { { 0u, "std::format improvements", "Author4385" }, { 1u, "std::format improvements", "Author871" }, { 2u, "std::format improvements", "Author4898" }, { 3u, "std::format improvements", "Author2034" }, } },
    { 2217u, { { 0u, "SG16: Unicode meeting summaries 2020-06-10 through 2020-08-26", "Author1951" }, } },
    { 2218u, { { 0u, "Title1212", "Author4557" }, } },
    { 2219u, { { 0u, "P0433 Executors Issues Needing Resolution | P2219R0", "Author6043" }, } },
    { 2220u, { { 0u, "redefine properties in P0443", "Author4911" }, } },
    { 2221u, { { 0u, "define P0443 cpos with tag_invoke", "Author2646" }, } },
    { 2223u, { { 0u, "Title410", "Author1455" }, { 1u, "Title459", "Author1679" }, { 2u, "Title629", "Author2298" }, } },
    { 2224u, { { 0u, "A Better bulk_schedule", "Author5319" }, } },
    { 2226u, { { 0u, "A proposal for an idiom to move from an object and reset it to its default constructed state", "Author1923" }, } },
    { 2227u, { { 0u, "Update normative reference to POSIX", "Author4538" }, } },
    { 2228u, { { 0u, "Title982", "Author3716" }, } },
    { 2231u, { { 0u, "Missing `constexpr` in `std::optional` and `std::variant`", "Author1027" }, { 1u, "Missing `constexpr` in `std::optional` and `std::variant`", "Author5366" }, } },
    { 2232u, { { 0u, "Zero-Overhead Deterministic Exceptions: Catching Values", "Author261" }, } },
    { 2233u, { { 0u, "2020 Fall Library Evolution Polls", "Author2250" }, { 1u, "2020 Fall Library Evolution Polls", "Author165" }, { 2u, "D2233R2: 2020 Fall Library Evolution Polls", "Author3788" }, { 3u, "2020 Fall Library Evolution Polls", "Author6187" }, } },
    { 2234u, { { 0u, "P2234R0-UB_and_IF-NDR_Audit", "Author5816" }, { 1u, "P2234R1-UB_and_IF-NDR_Audit", "Author1357" }, } },
    { 2235u, { { 0u, "Disentangling schedulers and executors", "Author3520" }, } },
    { 2236u, { { 0u, "C++ Standard Library Issues to be moved in Virtual Plenary, Nov. 2020", "Author3830" }, } },
    { 2237u, { { 0u, "Title296", "Author1055" }, } },
    { 2238u, { { 0u, "Core \"tentatively ready\" Issues", "Author1064" }, } },
    { 2242u, { { 0u, "Non-literal variables (and labels and gotos) in constexpr functions", "Author6477" }, { 1u, "Non-literal variables (and labels and gotos) in constexpr functions", "Author2439" }, { 2u, "Non-literal variables (and labels and gotos) in constexpr functions", "Author2690" }, { 3u, "Non-literal variables (and labels and gotos) in constexpr functions", "Author3538" }, } },
    { 2244u, { { 0u, "Title1291", "Author4878" }, } },
    { 2245u, { { 0u, "Title1554", "Author5893" }, } },
    { 2246u, { { 0u, "Title891", "Author3301" }, { 1u, "Title414", "Author1485" }, } },
    { 2247u, { { 0u, "2020 Library Evolution Report", "Author4362" }, { 1u, "2020 Library Evolution Report", "Author6426" }, } },
    { 2248u, { { 0u, "Enabling list-initialization for algorithms", "Author4255" }, { 1u, "Enabling list-initialization for algorithms", "Author1894" }, { 2u, "Enabling list-initialization for algorithms", "Author5410" }, { 3u, "Enabling list-initialization for algorithms", "Author314" }, { 4u, "Enabling list-initialization for algorithms", "Author249" }, { 5u, "Enabling list-initialization for algorithms", "Author5409" }, { 6u, "Enabling list-initialization for algorithms", "Author1564" }, { 7u, "Enabling list-initialization for algorithms", "Author1697" }, { 8u, "Enabling list-initialization for algorithms", "Author6484" }, } },
    { 2249u, { { 0u, "Mixed comparisons for smart pointers", "Author4537" }, { 1u, "Mixed comparisons for smart pointers", "Author3490" }, { 2u, "Mixed comparisons for smart pointers", "Author5906" }, { 3u, "Mixed comparisons for smart pointers", "Author3329" }, { 4u, "Mixed comparisons for smart pointers", "Author5140" }, { 5u, "Mixed comparisons for smart pointers", "Author5431" }, { 6u, "Mixed comparisons for smart pointers", "Author2000" }, } },
    { 2250u, { { 0u, "Scheduler_Vs_Executor", "Author3089" }, } },
    { 2251u, { { 0u, "Title1414", "Author5362" }, { 1u, "Title1205", "Author4521" }, } },
    { 2253u, { { 0u, "SG16: Unicode meeting summaries 2020-09-09 through 2020-11-11", "Author2094" }, } },
    { 2254u, { { 0u, "Title1187", "Author4426" }, } },
    { 2255u, { { 0u, "A type trait to detect reference binding to temporary", "Author427" }, { 1u, "A type trait to detect reference binding to temporary", "Author2033" }, { 2u, "A type trait to detect reference binding to temporary", "Author3711" }, } },
    { 2257u, { { 0u, "Title839", "Author3094" }, } },
    { 2259u, { { 0u, "Repairing input range adaptors and counted_iterator", "Author4373" }, { 1u, "Repairing input range adaptors and counted_iterator", "Author848" }, } },
    { 2260u, { { 0u, "Title493", "Author1788" }, } },
    { 2262u, { { 0u, "2020 Fall Library Evolution Poll Outcomes", "Author2827" }, } },
    { 2263u, { { 0u, "A call for a WG21 managed chat service", "Author6174" }, { 1u, "A call for a WG21 managed chat service", "Author3863" }, } },
    { 2264u, { { 0u, "Make assert() macro user friendly for C and C++", "Author5504" }, { 1u, "Make assert() macro user friendly for C and C++", "Author968" }, { 2u, "Make assert() macro user friendly for C and C++", "Author5871" }, { 3u, "Make assert() macro user friendly for C and C++", "Author1906" }, { 4u, "Make assert() macro user friendly for C and C++", "Author1735" }, { 5u, "Make assert() macro user friendly for C and C++", "Author3335" }, { 6u, "Make assert() macro user friendly for C and C++", "Author4265" }, { 7u, "Make assert() macro user friendly for C and C++", "Author1993" }, } },
    { 2265u, { { 0u, "Title325", "Author1135" }, { 1u, "Title1436", "Author5443" }, } },
    { 2266u, { { 0u, "Simpler implicit move", "Author3506" }, { 1u, "Simpler implicit move", "Author4914" }, { 2u, "Simpler implicit move", "Author5975" }, { 3u, "Simpler implicit move", "Author5878" }, } },
    { 2267u, { { 0u, "Library Evolution Policies", "Author1795" }, { 1u, "Library Evolution Policies", "Author4211" }, } },
    { 2268u, { { 0u, "Freestanding Roadmap", "Author4713" }, } },
    { 2272u, { { 0u, "Title844", "Author3118" }, } },
    { 2273u, { { 0u, "Making std::unique_ptr constexpr", "Author4130" }, { 1u, "Making std::unique_ptr constexpr", "Author5503" }, { 2u, "Making std::unique_ptr constexpr", "Author2329" }, { 3u, "Making std::unique_ptr constexpr", "Author3010" }, } },
    { 2274u, { { 0u, "Title1109", "Author4156" }, } },
    { 2276u, { { 0u, "Fix std::cbegin(), ranges::cbegin, and provide const_iterator support for std::span", "Author6424" }, { 1u, "Microsoft Word - P2276R1_fix_cbegin_210909.docx", "Author840" }, } },
    { 2277u, { { 0u, "Packs outside of Templates", "Author6241" }, } },
    { 2278u, { { 0u, "`cbegin` should always return a constant iterator", "Author2265" }, { 1u, "cbegin should always return a constant iterator", "Author5145" }, { 2u, "cbegin should always return a constant iterator", "Author3952" }, { 3u, "cbegin should always return a constant iterator", "Author2255" }, { 4u, "cbegin should always return a constant iterator", "Author2013" }, } },
    { 2279u, { { 0u, "We need a language mechanism for customization points", "Author5920" }, } },
    { 2280u, { { 0u, "Using unknown references in constant expressions", "Author2050" }, { 1u, "Using unknown references in constant expressions", "Author3933" }, { 2u, "Using unknown pointers and references in constant expressions", "Author882" }, { 3u, "Using unknown pointers and references in constant expressions", "Author5757" }, { 4u, "Using unknown pointers and references in constant expressions", "Author3013" }, } },
    { 2281u, { { 0u, "Clarifying range adaptor objects", "Author4321" }, { 1u, "Clarifying range adaptor objects", "Author5851" }, } },
    { 2283u, { { 0u, "constexpr for specialized memory algorithms", "Author2267" }, { 1u, "constexpr for specialized memory algorithms", "Author697" }, { 2u, "constexpr for specialized memory algorithms", "Author1325" }, } },
    { 2285u, { { 0u, "Are default function arguments in the immediate context?", "Author574" }, } },
    { 2286u, { { 0u, "Formatting Ranges", "Author33" }, { 1u, "Formatting Ranges", "Author467" }, { 2u, "Formatting Ranges", "Author4877" }, { 3u, "Formatting Ranges", "Author2005" }, { 4u, "Formatting Ranges", "Author1375" }, { 5u, "Formatting Ranges", "Author606" }, { 6u, "Formatting Ranges", "Author1828" }, { 7u, "Formatting Ranges", "Author6166" }, { 8u, "Formatting Ranges", "Author704" }, } },
    { 2287u, { { 0u, "Designated-initializers for Base Classes", "Author4253" }, { 1u, "Designated-initializers for Base Classes", "Author648" }, { 2u, "Designated-initializers for Base Classes", "Author5643" }, { 3u, "Designated-initializers for Base Classes", "Author1290" }, { 4u, "Designated-initializers for Base Classes", "Author6242" }, } },
    { 2289u, { { 0u, "2021 Winter Library Evolution Polls", "Author831" }, } },
    { 2290u, { { 0u, "Title1357", "Author5139" }, { 1u, "Title546", "Author1997" }, { 2u, "Title1373", "Author5194" }, { 3u, "Title444", "Author1604" }, } },
    { 2291u, { { 0u, "Title781", "Author2849" }, { 1u, "Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header", "Author252" }, { 2u, "Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header", "Author812" }, { 3u, "Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header", "Author5265" }, } },
    { 2295u, { { 0u, "Title1351", "Author5118" }, { 1u, "Title204", "Author725" }, { 2u, "Title1148", "Author4295" }, { 3u, "Title466", "Author1704" }, { 4u, "Title730", "Author2665" }, { 5u, "Title1269", "Author4791" }, { 6u, "Title1401", "Author5302" }, } },
    { 2297u, { { 0u, "Title443", "Author1600" }, } },
    { 2299u, { { 0u, "`mdspan` and CTAD", "Author6026" }, { 1u, "`mdspan` and CTAD", "Author2531" }, { 2u, "`mdspan` and CTAD", "Author5274" }, { 3u, "`mdspan`s of All Dynamic Extents", "Author3588" }, { 4u, "mdspans of All Dynamic Extents", "Author1024" }, } },
    { 2300u, { { 0u, "`std::execution`", "Author5787" }, { 1u, "`std::execution`", "Author5441" }, { 2u, "`std::execution`", "Author1367" }, { 3u, "`std::execution`", "Author640" }, { 4u, "`std::execution`", "Author5902" }, { 5u, "`std::execution`", "Author4122" }, { 6u, "`std::execution`", "Author6474" }, { 7u, "`std::execution`", "Author883" }, { 8u, "`std::execution`", "Author2342" }, { 9u, "`std::execution`", "Author5860" }, { 10u, "`std::execution`", "Author4642" }, } },
    { 2301u, { { 0u, "Add a `pmr` alias for `std::stacktrace`", "Author3640" }, { 1u, "Add a `pmr` alias for `std::stacktrace`", "Author5786" }, } },
    { 2302u, { { 0u, "Prefer std::ranges::contains over std::basic_string_view::contains", "Author3718" }, { 1u, "`std::ranges::contains`", "Author3359" }, { 2u, "`std::ranges::contains`", "Author978" }, { 3u, "`std::ranges::contains`", "Author3307" }, { 4u, "`std::ranges::contains`", "Author6034" }, } },
    { 2303u, { { 0u, "Title1613", "Author6111" }, { 1u, "Title374", "Author1331" }, { 2u, "Title393", "Author1405" }, { 3u, "Title1177", "Author4393" }, { 4u, "Title497", "Author1802" }, } },
    { 2304u, { { 0u, "Title1382", "Author5228" }, { 1u, "Title302", "Author1076" }, { 2u, "Title562", "Author2059" }, { 3u, "Title405", "Author1439" }, } },
    { 2305u, { { 0u, "Title1320", "Author5007" }, { 1u, "Title1246", "Author4694" }, { 2u, "Title687", "Author2548" }, { 3u, "Title645", "Author2366" }, { 4u, "Title143", "Author496" }, { 5u, "Type inference for object definitions", "Author2907" }, } },
    { 2306u, { { 0u, "Title626", "Author2287" }, { 1u, "Title818", "Author3021" }, { 2u, "Title1556", "Author5900" }, { 3u, "Title203", "Author723" }, } },
    { 2307u, { { 0u, "Title654", "Author2422" }, { 1u, "Title938", "Author3529" }, { 2u, "Title1297", "Author4905" }, } },
    { 2308u, { { 0u, "Template parameter initialization", "Author1777" }, { 1u, "Template parameter initialization", "Author3657" }, } },
    { 2309u, { { 0u, "CORE:202101", "Author993" }, } },
    { 2310u, { { 0u, "Title989", "Author3744" }, { 1u, "Title1687", "Author6419" }, } },
    { 2311u, { { 0u, "Title729", "Author2663" }, { 1u, "Title1649", "Author6268" }, { 2u, "Title1463", "Author5557" }, } },
    { 2312u, { { 0u, "Title1632", "Author6201" }, { 1u, "Title1470", "Author5576" }, } },
    { 2313u, { { 0u, "Core \"tentatively ready\" Issues", "Author6231" }, } },
    { 2314u, { { 0u, "Character sets and encodings", "Author279" }, { 1u, "Character sets and encodings", "Author5491" }, { 2u, "Character sets and encodings", "Author2433" }, { 3u, "Character sets and encodings", "Author1657" }, { 4u, "Character sets and encodings", "Author2493" }, } },
    { 2315u, { { 0u, "C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2021", "Author2200" }, } },
    { 2316u, { { 0u, "Title176", "Author621" }, { 1u, "Title72", "Author216" }, { 2u, "Title40", "Author119" }, } },
    { 2317u, { { 0u, "Title953", "Author3575" }, } },
    { 2318u, { { 0u, "Title167", "Author578" }, { 1u, "Title1553", "Author5891" }, } },
    { 2319u, { { 0u, "Prevent path presentation problems", "Author5207" }, { 1u, "Prevent path presentation problems", "Author1359" }, { 2u, "Prevent path presentation problems", "Author5534" }, { 3u, "Prevent path presentation problems", "Author2003" }, { 4u, "Prevent path presentation problems", "Author304" }, } },
    { 2320u, { { 0u, "The Syntax of Static Reflection", "Author2818" }, } },
    { 2321u, { { 0u, "zip", "Author6299" }, { 1u, "zip", "Author1792" }, { 2u, "zip", "Author2805" }, } },
    { 2322u, { { 0u, "`ranges::fold`", "Author4308" }, { 1u, "`ranges::fold`", "Author4585" }, { 2u, "`ranges::fold`", "Author4684" }, { 3u, "`ranges::fold`", "Author3050" }, { 4u, "ranges::fold", "Author5218" }, { 5u, "ranges::fold", "Author3316" }, { 6u, "ranges::fold", "Author5936" }, } },
    { 2323u, { { 0u, "Title1121", "Author4187" }, } },
    { 2324u, { { 0u, "Title150", "Author522" }, { 1u, "Title293", "Author1048" }, { 2u, "Title964", "Author3634" }, } },
    { 2325u, { { 0u, "Views should not be required to be default constructible", "Author707" }, { 1u, "Views should not be required to be default constructible", "Author2601" }, { 2u, "Views should not be required to be default constructible", "Author1749" }, { 3u, "Views should not be required to be default constructible", "Author1379" }, } },
    { 2327u, { { 0u, "Title771", "Author2804" }, { 1u, "Title240", "Author846" }, } },
    { 2328u, { { 0u, "join_view should join all views of ranges", "Author1466" }, { 1u, "join_view should join all views of ranges", "Author4777" }, } },
    { 2329u, { { 0u, "Title457", "Author1671" }, } },
    { 2330u, { { 0u, "Title1459", "Author5530" }, } },
    { 2331u, { { 0u, "Title20", "Author72" }, } },
    { 2332u, { { 0u, "Establishing std::hive as replacement name for the proposed std::colony container", "Author5330" }, } },
    { 2333u, { { 0u, "2021 Winter Library Evolution Poll Outcomes", "Author6235" }, } },
    { 2334u, { { 0u, "Title1606", "Author6097" }, { 1u, "Title490", "Author1776" }, } },
    { 2337u, { { 0u, "Title1257", "Author4731" }, } },
    { 2338u, { { 0u, "Freestanding Library: Character primitives and the C library", "Author6350" }, { 1u, "Freestanding Library: Character primitives and the C library", "Author335" }, { 2u, "Freestanding Library: Character primitives and the C library", "Author2525" }, { 3u, "Freestanding Library: Character primitives and the C library", "Author3582" }, { 4u, "Freestanding Library: Character primitives and the C library", "Author417" }, } },
    { 2339u, { { 0u, "Contract violation handlers", "Author3768" }, } },
    { 2340u, { { 0u, "Clarifying the status of the C headers", "Author1827" }, { 1u, "Clarifying the status of the C headers", "Author3142" }, } },
    { 2342u, { { 0u, "Title71", "Author210" }, } },
    { 2345u, { { 0u, "Relaxing Requirements of Moved-From Objects", "Author6311" }, } },
    { 2347u, { { 0u, "Title1146", "Author4291" }, { 1u, "Title362", "Author1268" }, { 2u, "Title1201", "Author4493" }, } },
    { 2348u, { { 0u, "Title37", "Author112" }, { 1u, "Title516", "Author1875" }, { 2u, "Title913", "Author3410" }, { 3u, "Title45", "Author130" }, } },
    { 2350u, { { 0u, "constexpr class", "Author219" }, { 1u, "constexpr class", "Author967" }, { 2u, "constexpr class", "Author3994" }, } },
    { 2351u, { { 0u, "nodiscard casts", "Author3804" }, } },
    { 2352u, { { 0u, "SG16: Unicode meeting summaries 2020-12-09 through 2021-03-24", "Author6314" }, } },
    { 2353u, { { 0u, "Title814", "Author3003" }, } },
    { 2355u, { { 0u, "Postfix fold expressions", "Author271" }, { 1u, "Postfix fold expressions", "Author2669" }, { 2u, "Postfix fold expressions", "Author2157" }, } },
    { 2356u, { { 0u, "Title1449", "Author5505" }, } },
    { 2358u, { { 0u, "Defining Contracts", "Author3339" }, } },
    { 2360u, { { 0u, "Extend init-statement to allow alias-declaration", "Author3057" }, } },
    { 2361u, { { 0u, "Title688", "Author2550" }, { 1u, "Title1078", "Author4043" }, { 2u, "Title1480", "Author5608" }, { 3u, "Title349", "Author1211" }, { 4u, "Title609", "Author2225" }, { 5u, "Title188", "Author670" }, { 6u, "Title1653", "Author6283" }, } },
    { 2362u, { { 0u, "Title523", "Author1899" }, { 1u, "Title136", "Author471" }, { 2u, "Title171", "Author604" }, { 3u, "Title1495", "Author5671" }, } },
    { 2363u, { { 0u, "Extending associative containers with the remaining heterogeneous overloads", "Author5239" }, { 1u, "Extending associative containers with the remaining heterogeneous overloads", "Author1075" }, { 2u, "Extending associative containers with the remaining heterogeneous overloads", "Author956" }, { 3u, "Extending associative containers with the remaining heterogeneous overloads", "Author4590" }, { 4u, "Extending associative containers with the remaining heterogeneous overloads", "Author2488" }, { 5u, "Extending associative containers with the remaining heterogeneous overloads", "Author2217" }, } },
    { 2367u, { { 0u, "Remove misuses of list-initialization from Clause 24", "Author2177" }, } },
    { 2368u, { { 0u, "2021 Spring Library Evolution Polls", "Author3553" }, { 1u, "2021 Spring Library Evolution Polls", "Author3379" }, } },
    { 2370u, { { 0u, "Stacktrace from exception", "Author6120" }, { 1u, "Stacktrace from exception", "Author50" }, { 2u, "Stacktrace from exception", "Author6476" }, } },
    { 2372u, { { 0u, "Fixing locale handling in chrono formatters", "Author711" }, { 1u, "Fixing locale handling in chrono formatters", "Author1544" }, { 2u, "Fixing locale handling in chrono formatters", "Author3865" }, { 3u, "Fixing locale handling in chrono formatters", "Author1621" }, } },
    { 2374u, { { 0u, "XXXXR0: views::cartesian_product", "Author3380" }, { 1u, "views::cartesian_product", "Author2735" }, { 2u, "views::cartesian_product", "Author6098" }, { 3u, "`views::cartesian_product`", "Author4696" }, { 4u, "`views::cartesian_product`", "Author2108" }, } },
    { 2375u, { { 0u, "Title328", "Author1141" }, { 1u, "Title512", "Author1869" }, } },
    { 2376u, { { 0u, "Title388", "Author1389" }, } },
    { 2377u, { { 0u, "[[nodiscard]] in the Standard Library: Clause 23 Iterators library", "Author1663" }, } },
    { 2378u, { { 0u, "Title175", "Author614" }, { 1u, "Title556", "Author2039" }, } },
    { 2380u, { { 0u, "Paper", "Author5086" }, { 1u, "Paper R1", "Author2076" }, } },
    { 2381u, { { 0u, "Pattern Matching with Exception Handling", "Author1327" }, } },
    { 2382u, { { 0u, "Bright Blue", "Author622" }, } },
    { 2384u, { { 0u, "2021 Spring Library Evolution Poll Outcomes", "Author4148" }, { 1u, "2021 Spring Library Evolution Poll Outcomes", "Author5952" }, } },
    { 2385u, { { 0u, "C++ Standard Library Issues to be moved in Virtual Plenary, June 2021", "Author5879" }, } },
    { 2386u, { { 0u, "Core \"ready\" Issues", "Author3946" }, } },
    { 2387u, { { 0u, "Pipe support for user-defined range adaptors", "Author3635" }, { 1u, "Pipe support for user-defined range adaptors", "Author6269" }, { 2u, "Pipe support for user-defined range adaptors", "Author2530" }, { 3u, "Pipe support for user-defined range adaptors", "Author2321" }, } },
    { 2388u, { { 0u, "Abort-only contract support", "Author672" }, { 1u, "Minimum Contract Support: either Ignore or Check_and_abort", "Author1727" }, { 2u, "Minimum Contract Support: either Ignore or Check_and_abort", "Author1476" }, { 3u, "Minimum Contract Support: either No_eval or Eval_and_abort", "Author6213" }, { 4u, "Minimum Contract Support: either No_eval or Eval_and_abort", "Author2106" }, } },
    { 2389u, { { 0u, "dextents Index Type Parameter", "Author6223" }, { 1u, "dextents Index Type Parameter", "Author174" }, { 2u, "dextents Index Type Parameter", "Author1988" }, } },
    { 2390u, { { 0u, "Title1478", "Author5605" }, { 1u, "Title842", "Author3106" }, { 2u, "Title173", "Author609" }, } },
    { 2391u, { { 0u, "Title1541", "Author5831" }, } },
    { 2392u, { { 0u, "Title234", "Author833" }, { 1u, "Title1256", "Author4727" }, { 2u, "Title744", "Author2717" }, { 3u, "Title1091", "Author4072" }, } },
    { 2393u, { { 0u, "Cleaning up integer-class types", "Author3372" }, { 1u, "Cleaning up integer-class types", "Author853" }, } },
    { 2395u, { { 0u, "WG21 2021-06 Virtual Meeting Record of Discussion.docx", "Author5656" }, } },
    { 2396u, { { 0u, "Concurrency TS 2 fixes", "Author1220" }, { 1u, "P2396R1", "Author2402" }, } },
    { 2397u, { { 0u, "SG16: Unicode meeting summaries 2021-04-14 through 2021-05-26", "Author371" }, } },
    { 2400u, { { 0u, "Library Evolution Report: 2020-10-27 to 2021-02-16", "Author3096" }, { 1u, "Library Evolution Report: 2021-02-23 to 2021-05-25", "Author4707" }, { 2u, "Library Evolution Report: 2021-06-01 to 2021-09-20", "Author1193" }, { 3u, "Library Evolution Report: 2021-09-28 to 2022-01-25", "Author4931" }, } },
    { 2401u, { { 0u, "Add a conditional noexcept specification to std::exchange", "Author6145" }, } },
    { 2402u, { { 0u, "PowerPoint Presentation", "Author1306" }, } },
    { 2403u, { { 0u, "Slide 1", "Author4928" }, } },
    { 2404u, { { 0u, "Title382", "Author1365" }, { 1u, "Title1218", "Author4573" }, { 2u, "Title1238", "Author4650" }, { 3u, "Title124", "Author420" }, } },
    { 2405u, { { 0u, "Title46", "Author132" }, } },
    { 2406u, { { 0u, "Fix `counted_iterator` interaction with input iterators", "Author2423" }, { 1u, "Fix `counted_iterator` interaction with input iterators", "Author1809" }, { 2u, "Add `lazy_counted_iterator`", "Author2072" }, { 3u, "Add `lazy_counted_iterator`", "Author5074" }, { 4u, "Add `lazy_counted_iterator`", "Author1040" }, { 5u, "Add `lazy_counted_iterator`", "Author3623" }, } },
    { 2407u, { { 0u, "Freestanding Library: Partial Classes", "Author860" }, { 1u, "Freestanding Library: Partial Classes", "Author4962" }, { 2u, "Freestanding Library: Partial Classes", "Author4511" }, { 3u, "Freestanding Library: Partial Classes", "Author4852" }, { 4u, "Freestanding Library: Partial Classes", "Author2239" }, { 5u, "Freestanding Library: Partial Classes", "Author2128" }, } },
    { 2408u, { { 0u, "Ranges views as inputs to non-Ranges algorithms", "Author3237" }, { 1u, "Ranges views as inputs to non-Ranges algorithms", "Author3597" }, { 2u, "Ranges iterators as inputs to non-Ranges algorithms", "Author1243" }, { 3u, "Ranges iterators as inputs to non-Ranges algorithms", "Author5823" }, { 4u, "Ranges iterators as inputs to non-Ranges algorithms", "Author498" }, { 5u, "Ranges iterators as inputs to non-Ranges algorithms", "Author1323" }, } },
    { 2409u, { { 0u, "Requirements for Usage of C++ Modules at Bloomberg", "Author5606" }, } },
    { 2410u, { { 0u, "Title1384", "Author5234" }, } },
    { 2411u, { { 0u, "Title681", "Author2532" }, } },
    { 2412u, { { 0u, "Title1191", "Author4457" }, } },
    { 2413u, { { 0u, "Remove unsafe conversions of unique_ptr<T>", "Author5968" }, { 1u, "Remove unsafe conversions of unique_ptr<T>", "Author5993" }, } },
    { 2414u, { { 0u, "P2414R0 Pointer lifetime-end zap proposed solutions", "Author4680" }, { 1u, "P2414R1 Pointer lifetime-end zap proposed solutions", "Author3110" }, { 2u, "P2414R2 Pointer lifetime-end zap proposed solutions", "Author2082" }, { 3u, "P2414R3 Pointer lifetime-end zap proposed solutions: atomics and volatile", "Author881" }, { 4u, "P2414R4 Pointer lifetime-end zap proposed solutions: atomics and volatile", "Author4294" }, { 5u, "P2414R5 Pointer lifetime-end zap proposed solutions: atomics and volatile", "Author1070" }, { 6u, "P2414R6 Pointer lifetime-end zap proposed solutions: atomics and volatile", "Author353" }, } },
    { 2415u, { { 0u, "What is a `view`?", "Author468" }, { 1u, "What is a `view`?", "Author533" }, { 2u, "What is a view?", "Author4780" }, } },
    { 2416u, { { 0u, "Title1559", "Author5908" }, { 1u, "Title871", "Author3215" }, { 2u, "Title1659", "Author6313" }, } },
    { 2417u, { { 0u, "Title1453", "Author5516" }, { 1u, "Title180", "Author639" }, { 2u, "Title1363", "Author5166" }, } },
    { 2418u, { { 0u, "Add support for <code>std::generator</code>-like types to <code>std::format</code>", "Author4509" }, { 1u, "Add support for <code>std::generator</code>-like types to <code>std::format</code>", "Author4820" }, { 2u, "Add support for <code>std::generator</code>-like types to <code>std::format</code>", "Author1042" }, } },
    { 2419u, { { 0u, "Clarify handling of encodings in localized formatting of chrono types", "Author5237" }, { 1u, "Clarify handling of encodings in localized formatting of chrono types", "Author5437" }, { 2u, "Clarify handling of encodings in localized formatting of chrono types", "Author4655" }, } },
    { 2420u, { { 0u, "2021 Summer Library Evolution Polls", "Author4821" }, } },
    { 2422u, { { 0u, "Remove nodiscard annotations from the standard library specification", "Author595" }, { 1u, "Remove nodiscard annotations from the standard library specification", "Author5390" }, } },
    { 2423u, { { 0u, "C++ Liaison CFP C Summary", "Author4920" }, } },
    { 2424u, { { 0u, "Abbreviated Parameters", "Author5743" }, } },
    { 2425u, { { 0u, "Expression Function Body", "Author2547" }, } },
    { 2428u, { { 0u, "Title1570", "Author5967" }, } },
    { 2429u, { { 0u, "Title1168", "Author4360" }, } },
    { 2430u, { { 0u, "SenderReceiverPartial", "Author5005" }, } },
    { 2431u, { { 0u, "Slide 1", "Author3687" }, } },
    { 2432u, { { 0u, "P2432R0", "Author1114" }, { 1u, "Fix istream_view, Rev 1", "Author4776" }, } },
    { 2434u, { { 0u, "Nondeterministic pointer provenance", "Author1754" }, { 1u, "Nondeterministic pointer provenance", "Author3274" }, { 2u, "Nondeterministic pointer provenance", "Author3086" }, { 3u, "Nondeterministic pointer provenance", "Author5106" }, } },
    { 2435u, { { 0u, "2021 Summer Library Evolution Poll Outcomes", "Author4497" }, { 1u, "2021 Summer Library Evolution Poll Outcomes", "Author1462" }, } },
    { 2436u, { { 0u, "2021 September Library Evolution Polls", "Author4531" }, } },
    { 2437u, { { 0u, "Title705", "Author2600" }, { 1u, "Title829", "Author3063" }, } },
    { 2438u, { { 0u, "std::string::substr() &&", "Author2007" }, { 1u, "std::string::substr() &&", "Author3502" }, { 2u, "std::string::substr() &&", "Author2739" }, } },
    { 2439u, { { 0u, "What is a view?", "Author6388" }, } },
    { 2440u, { { 0u, "ranges::iota, ranges::shift_left, and ranges::shift_right", "Author2729" }, { 1u, "ranges::iota, ranges::shift_left, and ranges::shift_right", "Author338" }, } },
    { 2441u, { { 0u, "views::join_with", "Author1165" }, { 1u, "views::join_with", "Author221" }, { 2u, "views::join_with", "Author1719" }, } },
    { 2442u, { { 0u, "Windowing range adaptors: views::chunk and views::slide", "Author4316" }, { 1u, "Windowing range adaptors: views::chunk and views::slide", "Author194" }, } },
    { 2443u, { { 0u, "views::chunk_by", "Author4011" }, { 1u, "views::chunk_by", "Author4766" }, } },
    { 2444u, { { 0u, "TheAsioAsyncModel", "Author6041" }, } },
    { 2445u, { { 0u, "std::forward_like", "Author5532" }, { 1u, "std::forward_like", "Author560" }, } },
    { 2446u, { { 0u, "views::move", "Author5245" }, { 1u, "views::all_move", "Author2783" }, { 2u, "views::as_rvalue", "Author3902" }, } },
    { 2447u, { { 0u, "std::span and the missing constructor", "Author1433" }, { 1u, "std::span and the missing constructor", "Author4349" }, { 2u, "std::span and the missing constructor", "Author282" }, { 3u, "<code>std::span</code> over an initializer list", "Author341" }, { 4u, "<code>std::span</code> over an initializer list", "Author1716" }, { 5u, "<code>std::span</code> over an initializer list", "Author2206" }, { 6u, "<code>std::span</code> over an initializer list", "Author4578" }, } },
    { 2448u, { { 0u, "Relaxing some constexpr restrictions", "Author4770" }, { 1u, "Relaxing some constexpr restrictions", "Author3369" }, { 2u, "Relaxing some constexpr restrictions", "Author2327" }, } },
    { 2450u, { { 0u, "C++ Standard Library Issues to be moved in Virtual Plenary, Oct. 2021", "Author3963" }, } },
    { 2451u, { { 0u, "2021 September Library Evolution Poll Outcomes", "Author2519" }, } },
    { 2452u, { { 0u, "2021 October Library Evolution and Concurrency Polls on Networking and Executors", "Author5238" }, } },
    { 2453u, { { 0u, "2021 October Library Evolution and Concurrency Networking and Executors Poll Outcomes", "Author4430" }, } },
    { 2454u, { { 0u, "2021 November Library Evolution Polls", "Author5148" }, } },
    { 2455u, { { 0u, "2021 November Library Evolution Poll Outcomes", "Author4" }, } },
    { 2456u, { { 0u, "2021 December Library Evolution Polls", "Author1907" }, } },
    { 2457u, { { 0u, "2021 December Library Evolution Poll Outcomes", "Author4761" }, } },
    { 2458u, { { 0u, "2022 January Library Evolution Polls", "Author4695" }, { 1u, "2022 January Library Evolution Polls", "Author923" }, } },
    { 2459u, { { 0u, "2022 January Library Evolution Poll Outcomes", "Author1718" }, } },
    { 2460u, { { 0u, "Title165", "Author571" }, { 1u, "Title1508", "Author5706" }, { 2u, "Title1", "Author2" }, } },
    { 2461u, { { 0u, "Closure-Based Syntax for Contracts", "Author997" }, { 1u, "Closure-Based Syntax for Contracts", "Author1446" }, } },
    { 2462u, { { 0u, "Core \"ready\" Issues", "Author344" }, } },
    { 2463u, { { 0u, "AsioAsyncModel", "Author2326" }, } },
    { 2464u, { { 0u, "Ruminations on networking and executors", "Author2401" }, } },
    { 2465u, { { 0u, "Title463", "Author1693" }, { 1u, "Title68", "Author201" }, { 2u, "Title199", "Author696" }, { 3u, "Title159", "Author549" }, } },
    { 2466u, { { 0u, "The notes on contract annotations", "Author5641" }, } },
    { 2467u, { { 0u, "Support exclusive mode for fstreams", "Author630" }, { 1u, "Support exclusive mode for fstreams", "Author6091" }, } },
    { 2468u, { { 0u, "The Equality Operator You Are Looking For", "Author2442" }, { 1u, "P2468R1R1: The Equality Operator You Are Looking For", "Author3671" }, { 2u, "The Equality Operator You Are Looking For", "Author573" }, } },
    { 2469u, { { 0u, "Response to P2464", "Author1343" }, } },
    { 2470u, { { 0u, "Slide 1", "Author2029" }, } },
    { 2471u, { { 0u, "NetTS, ASIO and Sender Library Design Comparison", "Author2469" }, { 1u, "NetTS, ASIO and Sender Library Design Comparison", "Author1508" }, } },
    { 2472u, { { 0u, "make_function_ref: A More Functional function_ref", "Author1396" }, { 1u, "make_function_ref_more_functional", "Author2774" }, { 2u, "make_function_ref_more_functional", "Author1029" }, { 3u, "make function_ref more functional - HackMD", "Author5240" }, } },
    { 2473u, { { 0u, "Title1084", "Author4056" }, { 1u, "Distributing C++ Module Libraries", "Author6443" }, } },
    { 2474u, { { 0u, "`views::repeat`", "Author3722" }, { 1u, "`views::repeat`", "Author3584" }, { 2u, "`views::repeat`", "Author5376" }, } },
    { 2475u, { { 0u, "WG21 2021-10 Virtual Meeting Record of Discussion.docx", "Author1999" }, } },
    { 2477u, { { 0u, "Allow programmer to control and detect coroutine elision by static constexpr bool should_elide() and coroutine_handle::elided()", "Author1155" }, { 1u, "Allow programmer to control and detect coroutine elision by static constexpr bool must_elide() and coroutine_handle::elided()", "Author6277" }, { 2u, "Allow programmer to control and detect coroutine elision", "Author6346" }, { 3u, "Allow programmers to control coroutine elision", "Author5866" }, } },
    { 2478u, { { 0u, "_Thread_local for better C++ interoperability with C", "Author3956" }, } },
    { 2479u, { { 0u, "Title36", "Author109" }, } },
    { 2480u, { { 0u, "Response to P2471", "Author2858" }, } },
    { 2481u, { { 0u, "Forwarding reference to specific type/template", "Author6128" }, { 1u, "Forwarding reference to specific type/template", "Author4124" }, { 2u, "Forwarding reference to specific type/template", "Author259" }, } },
    { 2483u, { { 0u, "Support Non-copyable Types for `single_view`", "Author3844" }, } },
    { 2484u, { { 0u, "Extending support for class types as non-type template parameters", "Author2375" }, } },
    { 2485u, { { 0u, "Do not add value_exists and value_or to C++23", "Author3572" }, } },
    { 2486u, { { 0u, "Structured naming for function object and CPO values", "Author4682" }, { 1u, "Structured naming for function object and CPO values", "Author3558" }, } },
    { 2487u, { { 0u, "Attribute-like syntax for contract annotations", "Author1917" }, { 1u, "Is attribute-like syntax adequate for contract annotations?", "Author3144" }, } },
    { 2489u, { { 0u, "Library Evolution Plan for Completing C++23", "Author1205" }, } },
    { 2490u, { { 0u, "Zero-overhead exception stacktraces", "Author5236" }, { 3u, "Zero-overhead exception stacktraces", "Author4120" }, } },
    { 2491u, { { 0u, "Text encodings follow-up", "Author300" }, } },
    { 2492u, { { 0u, "Attending C++ Standards Committee Meetings During a Pandemic", "Author2874" }, } },
    { 2493u, { { 0u, "Missing feature test macros for C++20 core papers", "Author1169" }, } },
    { 2494u, { { 0u, "Relaxing range adaptors to allow for move only types", "Author1373" }, { 1u, "Relaxing range adaptors to allow for move only types", "Author4304" }, { 2u, "Relaxing range adaptors to allow for move only types", "Author5053" }, } },
    { 2495u, { { 0u, "Title1669", "Author6337" }, { 1u, "Title366", "Author1293" }, { 2u, "Title1485", "Author5634" }, { 3u, "Title1137", "Author4243" }, } },
    { 2497u, { { 0u, "Testing for success or failure of <charconv> functions", "Author327" }, } },
    { 2498u, { { 0u, "Title1060", "Author3983" }, { 1u, "Title1536", "Author5791" }, } },
    { 2499u, { { 0u, "`string_view` range constructor should be `explicit`", "Author170" }, } },
    { 2500u, { { 0u, "C++17 parallel algorithms and P2300", "Author5216" }, { 1u, "C++ parallel algorithms and P2300", "Author962" }, { 2u, "C++ parallel algorithms and P2300", "Author6373" }, } },
    { 2501u, { { 0u, "Undo the rename of views::move and views::as_const", "Author203" }, } },
    { 2502u, { { 0u, "Title725", "Author2649" }, { 1u, "Title1163", "Author4344" }, { 2u, "Title3", "Author6" }, } },
    { 2504u, { { 0u, "Computations as a global solution to concurrency", "Author4442" }, } },
    { 2505u, { { 0u, "P2505R0 Monadic Functions for <code>std::expected</code>", "Author4490" }, { 1u, "P2505R1 Monadic Functions for <code>std::expected</code>", "Author3895" }, { 2u, "P2505R2 Monadic Functions for <code>std::expected</code>", "Author4144" }, { 3u, "P2505R3 Monadic Functions for <code>std::expected</code>", "Author943" }, { 4u, "P2505R4 Monadic Functions for <code>std::expected</code>", "Author2314" }, { 5u, "P2505R5 Monadic Functions for <code>std::expected</code>", "Author441" }, } },
    { 2506u, { { 0u, "P2506", "Author3164" }, } },
    { 2507u, { { 0u, "Title371", "Author1318" }, { 1u, "Title978", "Author3707" }, } },
    { 2508u, { { 0u, "Expose std::$basic-format-string$<charT, Args...>", "Author480" }, { 1u, "Expose std::$basic-format-string$<charT, Args...>", "Author5802" }, { 2u, "Expose std::$basic-format-string$<charT, Args...>", "Author2881" }, } },
    { 2509u, { { 0u, "A proposal for a type trait to detect value-preserving conversions", "Author1674" }, } },
    { 2510u, { { 0u, "Title531", "Author1928" }, { 1u, "Title1677", "Author6378" }, { 2u, "Title336", "Author1175" }, { 3u, "Title1615", "Author6114" }, } },
    { 2511u, { { 0u, "Beyond operator(): NTTP callables in type-erased call wrappers - HackMD", "Author184" }, { 1u, "Beyond operator(): NTTP callables in type-erased call wrappers - HackMD", "Author3578" }, { 2u, "Beyond operator(): NTTP callables in type-erased call wrappers - HackMD", "Author1839" }, } },
    { 2512u, { { 0u, "SG16: Unicode meeting summaries 2021-06-09 through 2021-12-15", "Author5964" }, } },
    { 2513u, { { 0u, "char8_t Compatibility and Portability Fixes", "Author6435" }, { 1u, "char8_t Compatibility and Portability Fix", "Author4208" }, { 2u, "char8_t Compatibility and Portability Fix", "Author185" }, { 3u, "D2513R3: char8_t Compatibility and Portability Fix", "Author5927" }, { 4u, "char8_t Compatibility and Portability Fix", "Author4689" }, } },
    { 2514u, { { 0u, "std::breakpoint", "Author186" }, } },
    { 2515u, { { 0u, "std::is_debugger_present", "Author867" }, } },
    { 2516u, { { 0u, "<code>string_view</code> is implicitly convertible from what?", "Author5922" }, } },
    { 2517u, { { 0u, "Add a conditional noexcept specification to std::apply", "Author3158" }, { 1u, "Add a conditional noexcept specification to std::apply", "Author4013" }, } },
    { 2520u, { { 0u, "move_iterator<T*> should be a random access iterator", "Author3433" }, } },
    { 2521u, { { 0u, "Contract support Working Paper", "Author5221" }, { 1u, "Contract support Working Paper", "Author200" }, { 2u, "Contract support Working Paper", "Author2110" }, { 3u, "Contract support Record of SG21 consensus", "Author2282" }, { 4u, "Contract support Record of SG21 consensus", "Author798" }, { 5u, "Contract support Record of SG21 consensus", "Author4069" }, } },
    { 2523u, { { 0u, "Request for re-inclusion of std::hive proposal in C++23", "Author2166" }, } },
    { 2524u, { { 0u, "Title1102", "Author4118" }, } },
    { 2525u, { { 0u, "Title848", "Author3127" }, } },
    { 2527u, { { 0u, "std::variant_alternative_index and std::variant_alternative_index_v", "Author442" }, { 1u, "std::variant_alternative_index and std::tuple_element_index", "Author1442" }, { 2u, "std::variant_alternative_index and std::tuple_element_index", "Author4901" }, { 3u, "std::variant_alternative_index and std::tuple_element_index", "Author4274" }, } },
    { 2528u, { { 0u, "P2528R0", "Author339" }, } },
    { 2529u, { { 0u, "generator<T> should have T&& reference_type", "Author3833" }, } },
    { 2530u, { { 0u, "Why Hazard Pointers Should be in C++26", "Author647" }, { 1u, "Why Hazard Pointers Should be in C++26", "Author1541" }, { 2u, "Why Hazard Pointers Should be in C++26", "Author5551" }, { 3u, "Why Hazard Pointers Should be in C++26", "Author4548" }, } },
    { 2531u, { { 0u, "C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2022", "Author4487" }, } },
    { 2532u, { { 0u, "Removing exception_ptr from the Receiver Concepts", "Author4152" }, } },
    { 2533u, { { 0u, "Core \"ready\" Issues", "Author6072" }, } },
    { 2534u, { { 0u, "function_ref in the wild", "Author958" }, } },
    { 2535u, { { 0u, "Title458", "Author1672" }, } },
    { 2536u, { { 0u, "Microsoft Word - Distributing C++ Module Libraries with dependencies json files.docx", "Author6413" }, } },
    { 2537u, { { 0u, "Relax va_start Requirements to Match C", "Author2151" }, { 1u, "Relax va_start Requirements to Match C", "Author302" }, { 2u, "Relax va_start Requirements to Match C", "Author3504" }, } },
    { 2538u, { { 0u, "ADL-proof std::projected", "Author1352" }, { 1u, "ADL-proof std::projected", "Author162" }, } },
    { 2539u, { { 0u, "Should the output of std::print to a terminal be synchronized with the underlying stream?", "Author2748" }, { 1u, "Should the output of std::print to a terminal be synchronized with the underlying stream?", "Author4842" }, { 2u, "Should the output of std::print to a terminal be synchronized with the underlying stream?", "Author4074" }, { 3u, "Should the output of std::print to a terminal be synchronized with the underlying stream?", "Author5084" }, { 4u, "Should the output of std::print to a terminal be synchronized with the underlying stream?", "Author4810" }, } },
    { 2540u, { { 0u, "Empty Product for certain Views", "Author5146" }, { 1u, "Empty Product for certain Views", "Author740" }, } },
    { 2541u, { { 0u, "Consider renaming remove_quals.docx", "Author4939" }, } },
    { 2542u, { { 0u, "`views::concat`", "Author536" }, { 1u, "`views::concat`", "Author4168" }, { 2u, "`views::concat`", "Author2081" }, { 3u, "`views::concat`", "Author2830" }, { 4u, "`views::concat`", "Author2219" }, { 5u, "`views::concat`", "Author544" }, { 6u, "`views::concat`", "Author187" }, { 7u, "`views::concat`", "Author5760" }, { 8u, "`views::concat`", "Author3555" }, } },
    { 2544u, { { 0u, "C++ exceptions are becoming more and more problematic", "Author1167" }, } },
    { 2545u, { { 0u, "Why RCU Should be in C++26", "Author619" }, { 1u, "Why RCU Should be in C++26", "Author1911" }, { 2u, "Why RCU Should be in C++26", "Author3661" }, { 3u, "Why RCU Should be in C++26", "Author4058" }, { 4u, "Read-Copy Update (RCU)", "Author709" }, } },
    { 2546u, { { 0u, "Debugging Support", "Author4097" }, { 1u, "Debugging Support", "Author1291" }, { 2u, "Debugging Support", "Author5212" }, { 3u, "Debugging Support", "Author3884" }, { 4u, "Debugging Support", "Author315" }, { 5u, "Debugging Support", "Author664" }, } },
    { 2547u, { { 0u, "P2547R0 - Language support for customisable functions", "Author303" }, { 1u, "Language Support for Customisable Functions", "Author797" }, } },
    { 2548u, { { 0u, "Title528", "Author1915" }, { 1u, "Title790", "Author2893" }, { 2u, "Title1455", "Author5523" }, { 3u, "Title48", "Author134" }, { 4u, "Title1315", "Author4972" }, { 5u, "Title1026", "Author3879" }, { 6u, "Title1034", "Author3910" }, } },
    { 2549u, { { 0u, "std::unexpected<E> should have error() as member accessor", "Author1256" }, { 1u, "std::unexpected<E> should have error() as member accessor", "Author1187" }, } },
    { 2550u, { { 0u, "ranges::copy should say output_iterator somewhere", "Author5937" }, } },
    { 2551u, { { 0u, "Clarify intent of P1841 numeric traits [P2551R0]", "Author4121" }, { 1u, "Clarify intent of P1841 numeric traits [P2551R1]", "Author4280" }, { 2u, "Clarify intent of P1841 numeric traits [P2551R2]", "Author3969" }, } },
    { 2552u, { { 0u, "Title925", "Author3459" }, { 1u, "Title590", "Author2161" }, { 2u, "Title403", "Author1435" }, { 3u, "Title436", "Author1579" }, } },
    { 2553u, { { 0u, "Make mdspan size_type controllable", "Author3051" }, { 1u, "Make mdspan size_type controllable", "Author2154" }, } },
    { 2554u, { { 0u, "C-Array Interoperability of MDSpan", "Author6146" }, } },
    { 2555u, { { 0u, "DxxxxR0: Naming improvements for std::execution", "Author4828" }, { 1u, "Naming improvements for std::execution", "Author4205" }, } },
    { 2557u, { { 0u, "WG21 2022-02 Virtual Meeting Record of Discussion.docx", "Author4488" }, } },
    { 2558u, { { 0u, "Add @, $, and ` to the basic character set", "Author5987" }, { 1u, "Add @, $, and ` to the basic character set", "Author5428" }, { 2u, "Add @, $, and ` to the basic character set", "Author3125" }, } },
    { 2559u, { { 0u, "Plan for Concurrency Technical Specification Version 2", "Author4900" }, { 1u, "Plan for Concurrency Technical Specification Version 2", "Author1378" }, } },
    { 2560u, { { 0u, "Title515", "Author1874" }, } },
    { 2561u, { { 0u, "operator??", "Author3948" }, { 1u, "An error propagation operator", "Author1521" }, { 2u, "A control flow operator", "Author394" }, } },
    { 2562u, { { 0u, "Title1364", "Author5167" }, { 1u, "Title179", "Author636" }, } },
    { 2564u, { { 0u, "consteval needs to propagate up", "Author1534" }, { 1u, "consteval needs to propagate up", "Author5826" }, { 2u, "consteval needs to propagate up", "Author5426" }, { 3u, "consteval needs to propagate up", "Author5672" }, } },
    { 2565u, { { 0u, "D2565R0_Supporting_User-Defined_Attributes", "Author1848" }, } },
    { 2568u, { { 0u, "P2568R0 Proposal of std::map::at_ptr", "Author3909" }, } },
    { 2569u, { { 0u, "N2797: *_HAS_SUBNORM==0 implies what?", "Author3298" }, } },
    { 2570u, { { 0u, "On side effects in contract annotations", "Author1678" }, { 1u, "Contract predicates that are not predicates", "Author2800" }, { 2u, "Contract predicates that are not predicates", "Author1861" }, } },
    { 2572u, { { 0u, "std::format() fill character allowances;proposed resolution for LWG issues 3576 and 3639", "Author4660" }, { 1u, "std::format() fill character allowances;proposed resolution for LWG issues 3576 and 3639", "Author1709" }, } },
    { 2573u, { { 0u, "<code>= delete(\"should have a reason\");</code>", "Author5531" }, { 1u, "= delete(\"should have a reason\");", "Author2294" }, { 2u, "= delete(\"should have a reason\");", "Author5331" }, } },
    { 2574u, { { 0u, "2022-05 Library Evolution Polls", "Author5399" }, } },
    { 2575u, { { 0u, "2022-05 Library Evolution Poll Outcomes", "Author2982" }, } },
    { 2576u, { { 0u, "The constexpr specifier for object definitions", "Author1337" }, } },
    { 2577u, { { 0u, "Discovering C++ modules in pre-built library releases", "Author1591" }, { 1u, "Discovering C++ modules in pre-built library releases", "Author4412" }, { 2u, "Discovering C++ modules in pre-built library releases", "Author4812" }, } },
    { 2579u, { { 0u, "Title1599", "Author6066" }, } },
    { 2580u, { { 0u, "Tuple protocol for C-style arrays T[N]", "Author3174" }, } },
    { 2581u, { { 0u, "Specifying the Interoperability of Binary Module Interface Files", "Author4879" }, { 1u, "Specifying the Interoperability of Built Module Interface Files", "Author5959" }, { 2u, "Specifying the Interoperability of Built Module Interface Files", "Author665" }, } },
    { 2582u, { { 0u, "Title1196", "Author4476" }, { 1u, "Title841", "Author3101" }, } },
    { 2584u, { { 0u, "Title1211", "Author4546" }, } },
    { 2585u, { { 0u, "Improve default container formatting", "Author6440" }, { 1u, "Improve default container formatting", "Author292" }, } },
    { 2586u, { { 0u, "Title931", "Author3494" }, } },
    { 2587u, { { 0u, "<code>to_string</code> or not <code>to_string</code>", "Author3475" }, { 1u, "D2587R1: <code>to_string</code> or not <code>to_string</code>", "Author2820" }, { 2u, "<code>to_string</code> or not <code>to_string</code>", "Author435" }, { 3u, "<code>to_string</code> or not <code>to_string</code>", "Author3009" }, } },
    { 2588u, { { 0u, "barriers phase completion guarantees - HackMD", "Author4738" }, { 1u, "barriers phase completion guarantees", "Author516" }, { 2u, "barriers phase completion guarantees", "Author5141" }, { 3u, "barriers phase completion guarantees - HackMD", "Author4462" }, } },
    { 2589u, { { 0u, "Title1477", "Author5598" }, { 1u, "Title1633", "Author6204" }, } },
    { 2590u, { { 0u, "Title769", "Author2799" }, { 1u, "Title445", "Author1607" }, { 2u, "Title506", "Author1842" }, } },
    { 2591u, { { 0u, "Concatenation of strings and string views", "Author2992" }, { 1u, "Concatenation of strings and string views", "Author2895" }, { 2u, "Concatenation of strings and string views", "Author4617" }, { 3u, "Concatenation of strings and string views", "Author4034" }, { 4u, "Concatenation of strings and string views", "Author1538" }, { 5u, "Concatenation of strings and string views", "Author2936" }, } },
    { 2592u, { { 0u, "Hashing support for std::chrono value classes", "Author4492" }, { 1u, "Hashing support for std::chrono value classes", "Author2915" }, { 2u, "Hashing support for std::chrono value classes", "Author6070" }, { 3u, "Hashing support for std::chrono value classes", "Author744" }, } },
    { 2593u, { { 0u, "Allowing static_assert(false)", "Author2558" }, { 1u, "Allowing static_assert(false)", "Author4644" }, } },
    { 2594u, { { 0u, "Title1270", "Author4796" }, { 1u, "Title852", "Author3140" }, } },
    { 2596u, { { 0u, "Improve std::hive::reshape", "Author6250" }, } },
    { 2598u, { { 0u, "\"Changing scope for lambda trailing-return-type\" (P2036) should not be a DR", "Author4376" }, } },
    { 2599u, { { 0u, "Title480", "Author1759" }, { 1u, "Title1111", "Author4163" }, { 2u, "Title1142", "Author4269" }, } },
    { 2600u, { { 0u, "A minimal ADL restriction to avoid ill-formed template instantiation [P2600R0]", "Author1864" }, } },
    { 2601u, { { 0u, "Title1290", "Author4873" }, { 1u, "Title295", "Author1053" }, } },
    { 2602u, { { 0u, "Poison Pills are Too Toxic", "Author2509" }, { 1u, "Poison Pills are Too Toxic", "Author3644" }, { 2u, "Poison Pills are Too Toxic", "Author5481" }, } },
    { 2603u, { { 0u, "member function pointer to function pointer - HackMD", "Author4117" }, { 1u, "member function pointer to function pointer - HackMD", "Author4965" }, } },
    { 2604u, { { 0u, "mdspan: rename pointer and contiguous", "Author3697" }, } },
    { 2605u, { { 0u, "SG16: Unicode meeting summaries 2022-01-12 through 2022-06-08", "Author5397" }, } },
    { 2607u, { { 0u, "Title487", "Author1772" }, } },
    { 2608u, { { 0u, "Title961", "Author3613" }, } },
    { 2609u, { { 0u, "Relaxing Ranges Just A Smidge", "Author5009" }, { 1u, "Relaxing Ranges Just A Smidge", "Author3151" }, { 2u, "Relaxing Ranges Just A Smidge", "Author449" }, { 3u, "Relaxing Ranges Just A Smidge", "Author2202" }, } },
    { 2610u, { { 0u, "2022-07 Library Evolution Polls", "Author4889" }, } },
    { 2611u, { { 0u, "2022-07 Library Evolution Poll Outcomes", "Author1230" }, } },
    { 2613u, { { 0u, "Add the missing empty to mdspan", "Author1484" }, { 1u, "Add the missing empty to mdspan", "Author5036" }, } },
    { 2614u, { { 0u, "Deprecate numeric_limits::has_denorm [P2614R0]", "Author6262" }, { 1u, "Deprecate numeric_limits::has_denorm [P2614R1]", "Author2614" }, { 2u, "Deprecate numeric_limits::has_denorm [P2614R2]", "Author148" }, } },
    { 2615u, { { 0u, "Meaningful exports", "Author5423" }, { 1u, "Meaningful exports", "Author3349" }, } },
    { 2616u, { { 0u, "Making std::atomic notification/wait operations usable in more situations", "Author2485" }, { 1u, "Revision History", "Author2643" }, { 2u, "Making std::atomic notification/wait operations usable in more situations", "Author1858" }, { 3u, "Making std::atomic notification/wait operations usable in more situations", "Author192" }, { 4u, "Making std::atomic notification/wait operations usable in more situations", "Author234" }, } },
    { 2617u, { { 0u, "Responses to NB comments on DTS 12907 \"Extensions to C++ forTransactional Memory Version 2\"", "Author4853" }, } },
    { 2618u, { { 0u, "C++ Standard Library Issues to be moved in Virtual Plenary, Jul. 2022", "Author2987" }, } },
    { 2620u, { { 0u, "Title1318", "Author4982" }, { 1u, "Title1519", "Author5730" }, { 2u, "Title1035", "Author3916" }, } },
    { 2621u, { { 0u, "Title1467", "Author5569" }, { 1u, "Title355", "Author1245" }, { 2u, "Title1045", "Author3937" }, { 3u, "Title249", "Author887" }, } },
    { 2622u, { { 0u, "Core \"ready\" Issues", "Author5288" }, } },
    { 2623u, { { 0u, "implicit constant initialization - HackMD", "Author3567" }, { 1u, "implicit constant initialization - HackMD", "Author6354" }, { 2u, "implicit constant initialization - HackMD", "Author3018" }, } },
    { 2624u, { { 0u, "Title220", "Author773" }, } },
    { 2625u, { { 0u, "Life without operator()", "Author6306" }, } },
    { 2626u, { { 0u, "Title1173", "Author4378" }, } },
    { 2627u, { { 0u, "P2627 WG21 2022-07 Virtual Meeting Record of Discussion.docx", "Author4078" }, } },
    { 2628u, { { 0u, "Extend barrier APIs with memory_order", "Author3666" }, } },
    { 2629u, { { 0u, "barrier token-less split arrive/wait", "Author2481" }, } },
    { 2630u, { { 0u, "Submdspan", "Author1815" }, { 1u, "Submdspan", "Author5813" }, { 2u, "Submdspan", "Author3282" }, { 3u, "Submdspan", "Author4540" }, { 4u, "Submdspan", "Author965" }, } },
    { 2631u, { { 0u, "Publish TS Library Fundamentals 3 Now!", "Author4180" }, } },
    { 2632u, { { 0u, "Title792", "Author2905" }, } },
    { 2633u, { { 0u, "Title230", "Author815" }, } },
    { 2634u, { { 0u, "Title376", "Author1345" }, } },
    { 2635u, { { 0u, "Title1399", "Author5297" }, } },
    { 2636u, { { 0u, "References to ranges should always be viewable", "Author757" }, { 1u, "References to ranges should always be viewable", "Author1949" }, { 2u, "References to ranges should always be viewable", "Author1703" }, } },
    { 2637u, { { 0u, "Member visit and apply", "Author2455" }, { 1u, "Member visit", "Author6189" }, { 2u, "Member visit", "Author2424" }, { 3u, "Member visit", "Author735" }, } },
    { 2638u, { { 0u, "Title1430", "Author5420" }, } },
    { 2639u, { { 0u, "Title1158", "Author4329" }, } },
    { 2640u, { { 0u, "Modules: Inner-scope Namespace Entities: Exported or Not?", "Author2692" }, { 1u, "Modules: Inner-scope Namespace Entities: Exported or Not?", "Author2340" }, { 2u, "Modules: Inner-scope Namespace Entities: Exported or Not?", "Author5204" }, } },
    { 2641u, { { 0u, "Checking if a union alternative is active", "Author1853" }, { 1u, "Checking if a union alternative is active", "Author3848" }, { 2u, "Checking if a union alternative is active", "Author795" }, { 3u, "Checking if a union alternative is active", "Author2580" }, { 4u, "Checking if a union alternative is active", "Author5651" }, } },
    { 2642u, { { 0u, "Padded mdspan layouts", "Author559" }, { 1u, "Padded mdspan layouts", "Author2002" }, { 2u, "Padded mdspan layouts", "Author2499" }, { 3u, "Padded mdspan layouts", "Author1203" }, { 4u, "Padded mdspan layouts", "Author2473" }, { 5u, "Padded mdspan layouts", "Author1543" }, { 6u, "Title1619", "Author6129" }, } },
    { 2643u, { { 0u, "Improving C++ concurrency features", "Author1969" }, { 1u, "Improving C++ concurrency features", "Author2976" }, { 2u, "Improving C++ concurrency features", "Author5098" }, } },
    { 2644u, { { 0u, "Final Fix of Broken Range-based for Loop", "Author37" }, { 1u, "Final Fix of Broken Range-Based for Loop", "Author4774" }, } },
    { 2645u, { { 0u, "path_view: a design that took a wrong turn", "Author1376" }, { 1u, "path_view: a design that took a wrong turn", "Author6200" }, } },
    { 2646u, { { 0u, "Title624", "Author2281" }, } },
    { 2647u, { { 0u, "Permitting static constexpr variables in constexpr functions", "Author6127" }, { 1u, "Permitting static constexpr variables in constexpr functions", "Author6042" }, } },
    { 2648u, { { 0u, "2022-10 Library Evolution Polls", "Author3117" }, } },
    { 2649u, { { 0u, "2022-10 Library Evolution Poll Outcomes", "Author1438" }, } },
    { 2650u, { { 0u, "2022-11 Library Evolution Polls", "Author6222" }, } },
    { 2652u, { { 0u, "Disallow user specialization of allocator_traits", "Author5877" }, { 1u, "Disallow User Specialization of allocator_traits", "Author557" }, { 2u, "Disallow User Specialization of allocator_traits", "Author179" }, } },
    { 2653u, { { 0u, "Title1589", "Author6023" }, { 1u, "Title1458", "Author5529" }, } },
    { 2654u, { { 0u, "Macros And Standard Library Modules", "Author5129" }, { 1u, "Macros And Standard Library Modules", "Author839" }, } },
    { 2655u, { { 0u, "`common_reference_t` of `reference_wrapper` Should Be a Reference Type", "Author1656" }, { 1u, "`common_reference_t` of `reference_wrapper` Should Be a Reference Type", "Author1471" }, { 2u, "`common_reference_t` of `reference_wrapper` Should Be aReference Type", "Author4639" }, { 3u, "`common_reference_t` of `reference_wrapper` Should Be aReference Type", "Author4625" }, } },
    { 2656u, { { 0u, "C++ Ecosystem International Standard", "Author195" }, { 1u, "C++ Ecosystem International Standard", "Author3128" }, { 2u, "C++ Ecosystem International Standard", "Author3977" }, { 3u, "C++ Ecosystem International Standard", "Author3344" }, { 4u, "WITHDRAWN: C++ Ecosystem International Standard", "Author2579" }, } },
    { 2657u, { { 0u, "C++ is the next C++ - HackMD", "Author306" }, { 1u, "C++ is the next C++ - HackMD", "Author8" }, } },
    { 2658u, { { 0u, "temporary storage class specifiers - HackMD", "Author3088" }, { 1u, "temporary storage class specifiers - HackMD", "Author3246" }, } },
    { 2659u, { { 0u, "A Proposal to Publish a Technical Specification for Contracts", "Author4484" }, { 1u, "A Proposal to Publish a Technical Specificationfor Contracts", "Author1333" }, { 2u, "A Proposal to Publish a Technical Specificationfor Contracts", "Author1412" }, } },
    { 2660u, { { 0u, "C++ Information technology Extensions for contracts", "Author2688" }, } },
    { 2661u, { { 0u, "Miscellaneous amendments to the Contracts TS", "Author602" }, } },
    { 2662u, { { 0u, "Title933", "Author3503" }, { 1u, "Title113", "Author389" }, { 2u, "Title235", "Author834" }, { 3u, "Title1450", "Author5511" }, } },
    { 2663u, { { 0u, "Title", "Author251" }, { 1u, "Title", "Author324" }, { 2u, "Interleaved complex values support in std::simd", "Author2765" }, { 3u, "Interleaved complex values support in std::simd", "Author393" }, { 4u, "Interleaved complex values support in std::simd", "Author2737" }, { 5u, "Interleaved complex values support in std::simd", "Author440" }, { 6u, "Interleaved complex values support in std::simd", "Author95" }, { 7u, "Interleaved complex values support in std::simd", "Author5784" }, } },
    { 2664u, { { 0u, "Title", "Author445" }, { 1u, "Title", "Author4051" }, { 2u, "Proposal to extend std::simd with permutation API", "Author4479" }, { 3u, "Proposal to extend std::simd with permutation API", "Author1958" }, { 4u, "Proposal to extend std::simd with permutation API", "Author6171" }, { 5u, "Extend std::simd with permutation API", "Author4779" }, { 6u, "Extend std::simd with permutation API", "Author4414" }, { 7u, "Extend std::simd with permutation API", "Author3480" }, { 8u, "Extend std::simd with permutation API", "Author1223" }, { 9u, "Extend std::simd with permutation API", "Author4944" }, } },
    { 2665u, { { 0u, "Title364", "Author1285" }, } },
    { 2666u, { { 0u, "Title740", "Author2703" }, } },
    { 2667u, { { 0u, "Title1326", "Author5030" }, } },
    { 2668u, { { 0u, "Title485", "Author1769" }, } },
    { 2669u, { { 0u, "Title518", "Author1884" }, } },
    { 2670u, { { 0u, "Non-transient constexpr allocation", "Author1085" }, { 1u, "Non-transient constexpr allocation", "Author6202" }, } },
    { 2671u, { { 0u, "Syntax Choices for Generalized Pack Declaration and Usage", "Author5812" }, } },
    { 2672u, { { 0u, "Exploring the Design Space for a Pipeline Operator", "Author1849" }, } },
    { 2673u, { { 0u, "Title575", "Author2107" }, } },
    { 2674u, { { 0u, "Title1595", "Author6053" }, { 1u, "Title1151", "Author4302" }, } },
    { 2675u, { { 0u, "LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)", "Author4690" }, { 1u, "LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)", "Author1996" }, } },
    { 2676u, { { 0u, "The Val Object Model", "Author1966" }, } },
    { 2677u, { { 0u, "Title701", "Author2587" }, { 2u, "Title957", "Author3581" }, } },
    { 2678u, { { 0u, "SG16: Unicode meeting summaries 2022-06-22 through 2022-09-28", "Author111" }, } },
    { 2679u, { { 0u, "Title1135", "Author4234" }, { 1u, "Title116", "Author395" }, { 2u, "Title898", "Author3346" }, } },
    { 2680u, { { 0u, "Title1248", "Author4698" }, { 1u, "Title870", "Author3214" }, } },
    { 2681u, { { 0u, "Title1286", "Author4862" }, { 1u, "Title170", "Author600" }, } },
    { 2682u, { { 0u, "Title489", "Author1774" }, } },
    { 2683u, { { 0u, "Title649", "Author2400" }, } },
    { 2684u, { { 0u, "Title1451", "Author5513" }, } },
    { 2685u, { { 0u, "Language Support For Scoped Allocators", "Author5225" }, { 1u, "Language Support For Scoped Objects", "Author1004" }, } },
    { 2686u, { { 0u, "Title39", "Author114" }, { 1u, "Title935", "Author3516" }, { 2u, "Title707", "Author2611" }, { 3u, "Title1143", "Author4276" }, { 4u, "Title1048", "Author3950" }, { 5u, "Title746", "Author2724" }, } },
    { 2687u, { { 0u, "Title1263", "Author4765" }, } },
    { 2688u, { { 0u, "Pattern Matching Discussion for Kona 2022", "Author2098" }, { 1u, "Pattern Matching: Expression", "Author5161" }, { 2u, "Pattern Matching: `match` Expression", "Author430" }, { 3u, "Pattern Matching: `match` Expression", "Author2181" }, { 4u, "Pattern Matching: `match` Expression", "Author3721" }, { 5u, "Pattern Matching: `match` Expression", "Author2754" }, } },
    { 2689u, { { 0u, "atomic_accessor", "Author2277" }, { 1u, "Atomic Refs Bounded to Memory Orderings & Atomic Accessors", "Author3970" }, { 2u, "Atomic Refs Bound to Memory Orderings & Atomic Accessors", "Author1615" }, { 3u, "Atomic Refs Bound to Memory Orderings & Atomic Accessors", "Author1746" }, } },
    { 2690u, { { 0u, "C++17 parallel algorithms and P2300", "Author742" }, { 1u, "Corporate PowerPoint Template Use Intel Clear For All Text (General Employee Usage)", "Author5822" }, } },
    { 2691u, { { 0u, "Title236", "Author838" }, } },
    { 2692u, { { 0u, "Generic Programming is just Programming", "Author215" }, } },
    { 2693u, { { 0u, "Title1186", "Author4417" }, { 1u, "Title765", "Author2792" }, } },
    { 2695u, { { 0u, "A proposed plan for contracts in C++", "Author472" }, { 1u, "A proposed plan for contracts in C++", "Author1724" }, } },
    { 2696u, { { 0u, "Introduce Cpp17Swappable as additional convenience requirements", "Author5219" }, } },
    { 2697u, { { 0u, "Title1305", "Author4942" }, { 1u, "Title1162", "Author4339" }, } },
    { 2698u, { { 0u, "Title1644", "Author6240" }, } },
    { 2700u, { { 0u, "Questions on P2680 Contracts for C++: Prioritizing Safety", "Author5554" }, { 1u, "Questions on P2680 Contracts for C++: Prioritizing Safety", "Author1304" }, } },
    { 2701u, { { 0u, "Translating Linker Input Files to Module Metadata Files", "Author260" }, } },
    { 2702u, { { 0u, "Specifying Importable Headers", "Author2841" }, } },
    { 2703u, { { 0u, "C++ Standard Library Issues to be moved in Kona", "Author5315" }, } },
    { 2704u, { { 0u, "C++ Standard Library Immediate Issues to be moved in Kona, Nov. 2022", "Author1652" }, } },
    { 2705u, { { 0u, "C++ Library Fundamentals TS Issues to be moved in Kona", "Author3968" }, } },
    { 2706u, { { 0u, "Drafting for US 26-061", "Author2536" }, } },
    { 2708u, { { 0u, "No Further Fundamentals TSes", "Author5092" }, { 1u, "No Further Fundamentals TSes", "Author1480" }, } },
    { 2709u, { { 0u, "Core \"ready\" Issues", "Author239" }, } },
    { 2710u, { { 0u, "Core \"NB\" Issues", "Author5514" }, } },
    { 2711u, { { 0u, "Making multi-param (and other converting) constructors of views explicit", "Author785" }, { 1u, "Making multi-param constructors of views explicit", "Author2159" }, } },
    { 2712u, { { 0u, "Title665", "Author2478" }, } },
    { 2713u, { { 0u, "Escaping improvements in std::format", "Author2409" }, { 1u, "Escaping improvements in std::format", "Author1049" }, } },
    { 2714u, { { 0u, "Bind front and back to NTTP callables - HackMD", "Author4195" }, { 1u, "Bind front and back to NTTP callables - HackMD", "Author2237" }, } },
    { 2717u, { { 0u, "Tool Introspection", "Author273" }, { 1u, "Tool Introspection", "Author985" }, { 2u, "Tool Introspection", "Author3011" }, { 3u, "Tool Introspection", "Author6006" }, { 4u, "Tool Introspection", "Author4896" }, { 5u, "Tool Introspection", "Author4565" }, { 6u, "WITHDRAWN: Tool Introspection", "Author1581" }, } },
    { 2718u, { { 0u, "D2718R0: Wording for P2644R1 Fix for Range-based for Loop", "Author3546" }, } },
    { 2719u, { { 0u, "Type-aware allocation and deallocation functions", "Author333" }, { 1u, "Type-aware allocation and deallocation functions", "Author1964" }, { 2u, "Type-aware allocation and deallocation functions", "Author1992" }, { 3u, "Type-aware allocation and deallocation functions", "Author3991" }, { 4u, "Type-aware allocation and deallocation functions", "Author4384" }, } },
    { 2721u, { { 0u, "P2721R0", "Author3341" }, } },
    { 2722u, { { 0u, "Beyond operator()", "Author45" }, } },
    { 2723u, { { 0u, "Zero-initialize objects of automatic storage duration", "Author6382" }, { 1u, "Zero-initialize objects of automatic storage duration", "Author209" }, } },
    { 2724u, { { 0u, "constant dangling - HackMD", "Author1857" }, { 1u, "constant dangling - HackMD", "Author5874" }, } },
    { 2725u, { { 0u, "`std::integral_constant` Literals", "Author3095" }, { 1u, "`std::integral_constant` Literals", "Author2733" }, } },
    { 2726u, { { 0u, "Better `std::tuple` Indexing", "Author3888" }, } },
    { 2727u, { { 0u, "`std::iterator_interface`", "Author6036" }, { 1u, "`std::iterator_interface`", "Author3099" }, { 2u, "`std::iterator_interface`", "Author5035" }, { 3u, "`std::iterator_interface`", "Author1561" }, { 4u, "`std::iterator_interface`", "Author3041" }, } },
    { 2728u, { { 0u, "Unicode in the Library, Part 1: UTF Transcoding", "Author3208" }, { 1u, "Unicode in the Library, Part 1: UTF Transcoding", "Author6131" }, { 2u, "Unicode in the Library, Part 1: UTF Transcoding", "Author3448" }, { 3u, "Unicode in the Library, Part 1: UTF Transcoding", "Author642" }, { 4u, "Unicode in the Library, Part 1: UTF Transcoding", "Author5335" }, { 5u, "Unicode in the Library, Part 1: UTF Transcoding", "Author4527" }, { 6u, "Unicode in the Library, Part 1: UTF Transcoding", "Author5461" }, { 7u, "Unicode in the Library, Part 1: UTF Transcoding", "Author2330" }, } },
    { 2729u, { { 0u, "Unicode in the Library, Part 2: Normalization", "Author1335" }, } },
    { 2730u, { { 0u, "variable scope - HackMD", "Author2041" }, { 1u, "variable scope - HackMD", "Author350" }, } },
    { 2732u, { { 0u, "P2732 WG21 2022-11 Kona Record of Discussion.docx", "Author4827" }, } },
    { 2733u, { { 0u, "Fix handling of empty specifiers in std::format", "Author5102" }, { 1u, "Fix handling of empty specifiers in std::format", "Author3398" }, { 2u, "Fix handling of empty specifiers in std::format", "Author5508" }, { 3u, "Fix handling of empty specifiers in std::format", "Author2371" }, } },
    { 2734u, { { 0u, "Title140", "Author488" }, } },
    { 2735u, { { 0u, "Title632", "Author2304" }, } },
    { 2736u, { { 0u, "Title78", "Author232" }, { 2u, "Title464", "Author1699" }, } },
    { 2737u, { { 0u, "Proposal of Condition-centric Contracts Syntax", "Author3774" }, } },
    { 2738u, { { 0u, "Title638", "Author2322" }, { 1u, "Title135", "Author470" }, } },
    { 2739u, { { 0u, "Title476", "Author1734" }, } },
    { 2740u, { { 0u, "Simpler implicit dangling resolution - HackMD", "Author2043" }, { 1u, "Simpler implicit dangling resolution - HackMD", "Author1623" }, { 2u, "Simpler implicit dangling resolution - HackMD", "Author6404" }, } },
    { 2741u, { { 0u, "Title863", "Author3184" }, { 1u, "Title416", "Author1488" }, { 2u, "Title1197", "Author4480" }, { 3u, "Title149", "Author521" }, } },
    { 2742u, { { 0u, "indirect dangling identification - HackMD", "Author988" }, { 1u, "indirect dangling identification - HackMD", "Author1295" }, { 2u, "indirect dangling identification - HackMD", "Author3622" }, } },
    { 2743u, { { 0u, "Contracts for C++: Priorotizing Safety", "Author3121" }, } },
    { 2746u, { { 0u, "Fenv rounding", "Author2902" }, { 1u, "Fenv rounding", "Author2850" }, { 2u, "Fenv rounding", "Author3483" }, { 3u, "Fenv rounding", "Author5735" }, { 4u, "Fenv rounding", "Author1510" }, { 5u, "Fenv rounding", "Author3375" }, { 6u, "Fenv rounding", "Author4856" }, { 7u, "Fenv rounding", "Author4266" }, } },
    { 2747u, { { 0u, "Limited support for constexpr void*", "Author1322" }, { 1u, "constexpr placement new", "Author1289" }, { 2u, "constexpr placement new", "Author340" }, } },
    { 2748u, { { 0u, "Disallow Binding a Returned glvalue to a Temporary", "Author2364" }, { 1u, "Disallow Binding a Returned Glvalue to a Temporary", "Author3318" }, { 2u, "Disallow Binding a Returned Glvalue to a Temporary", "Author1059" }, { 3u, "Disallow Binding a Returned Glvalue to a Temporary", "Author5881" }, { 4u, "Disallow Binding a Returned Glvalue to a Temporary", "Author1943" }, { 5u, "Disallow Binding a Returned Glvalue to a Temporary", "Author4811" }, } },
    { 2749u, { { 0u, "Title1686", "Author6418" }, } },
    { 2750u, { { 0u, "C Dangling Reduction - HackMD", "Author3975" }, { 1u, "C Dangling Reduction - HackMD", "Author6051" }, { 2u, "C Dangling Reduction - HackMD", "Author4806" }, } },
    { 2751u, { { 0u, "Title620", "Author2261" }, { 1u, "Title1638", "Author6217" }, } },
    { 2752u, { { 0u, "Static storage for braced initializers", "Author4478" }, { 1u, "Static storage for braced initializers", "Author4640" }, { 2u, "Static storage for braced initializers", "Author5209" }, { 3u, "Static storage for braced initializers", "Author5519" }, } },
    { 2754u, { { 0u, "Deconstructing the Avoidance of Uninitialized Reads of AutoVariables", "Author6045" }, } },
    { 2755u, { { 0u, "Title1282", "Author4841" }, { 1u, "Title309", "Author1094" }, } },
    { 2756u, { { 0u, "D2756R0 Proposal of Simple Contract Side Effect Semantics", "Author534" }, } },
    { 2757u, { { 0u, "Type-checking format args", "Author1593" }, { 1u, "Type-checking format args", "Author399" }, { 2u, "Type-checking format args", "Author5125" }, { 3u, "Type-checking format args", "Author3818" }, } },
    { 2758u, { { 0u, "Emitting messages at compile time", "Author2195" }, { 1u, "Emitting messages at compile time", "Author5121" }, { 2u, "Emitting messages at compile time", "Author2147" }, { 3u, "Emitting messages at compile time", "Author5800" }, { 4u, "Emitting messages at compile time", "Author5772" }, { 5u, "Emitting messages at compile time", "Author59" }, } },
    { 2759u, { { 0u, "D2759R0: DG Opinion on Safety for ISO C++", "Author2415" }, { 1u, "DG Opinion on Safety for ISO C++", "Author5421" }, } },
    { 2760u, { { 0u, "A Plan for C++26 Ranges", "Author2417" }, { 1u, "A Plan for C++26 Ranges", "Author6044" }, } },
    { 2761u, { { 0u, "If structured binding", "Author2960" }, { 1u, "If structured binding", "Author4767" }, { 2u, "Evaluating structured binding as a condition", "Author4508" }, { 3u, "Title998", "Author3765" }, } },
    { 2762u, { { 0u, "Sender/Receiver Interface For Networking", "Author5073" }, { 1u, "Sender/Receiver Interface For Networking", "Author5884" }, { 2u, "Sender/Receiver Interface For Networking", "Author3392" }, } },
    { 2763u, { { 0u, "layout_stride static extents default constructor fix", "Author2832" }, { 1u, "layout_stride static extents default constructor fix", "Author74" }, } },
    { 2764u, { { 0u, "Title1593", "Author6037" }, } },
    { 2765u, { { 0u, "Title1342", "Author5105" }, } },
    { 2766u, { { 0u, "SG16: Unicode meeting summaries 2022-10-12 through 2022-12-14", "Author3870" }, } },
    { 2767u, { { 0u, "flat_map/flat_set omnibus", "Author582" }, { 1u, "flat_map/flat_set omnibus", "Author4299" }, { 2u, "flat_map/flat_set omnibus", "Author2670" }, } },
    { 2769u, { { 0u, "get_element customization point object", "Author2884" }, { 1u, "get_element customization point object", "Author6214" }, { 2u, "get_element customization point object", "Author1831" }, { 3u, "get_element customization point object", "Author4429" }, } },
    { 2770u, { { 0u, "Stashing stashing iterators for proper flattening", "Author928" }, } },
    { 2771u, { { 0u, "Towards memory safety in C++", "Author5894" }, { 1u, "R2771R1: Towards memory safety in C++", "Author1786" }, } },
    { 2772u, { { 0u, "std::integral_constant literals do not suffice constexpr_t? [P2772R0]", "Author1317" }, } },
    { 2773u, { { 0u, "Title1068", "Author4010" }, } },
    { 2774u, { { 0u, "D2774 - Scoped thread-local storage", "Author6175" }, { 1u, "D2774 - Concurrent object pool", "Author5996" }, } },
    { 2775u, { { 0u, "2023-05 Library Evolution Polls", "Author4602" }, } },
    { 2776u, { { 0u, "2023-05 Library Evolution Poll Outcomes", "Author1500" }, } },
    { 2779u, { { 0u, "Make basic_string_views range construction conditionally explicit", "Author2352" }, { 1u, "D2779R1: Make basic_string_views range construction conditionally explicit", "Author3060" }, } },
    { 2780u, { { 0u, "Caller-side precondition checking, and Eval_and_throw", "Author2939" }, } },
    { 2781u, { { 1u, "`std::constexpr_v`", "Author2595" }, { 2u, "`std::constexpr_v`", "Author5940" }, { 3u, "`std::constexpr_v`", "Author3461" }, { 4u, "`std::constant_wrapper`", "Author5997" }, { 5u, "`std::constant_wrapper`", "Author5384" }, { 6u, "`std::constant_wrapper`", "Author6444" }, { 7u, "`std::constant_wrapper`", "Author1904" }, { 8u, "`std::constant_wrapper`", "Author862" }, } },
    { 2782u, { { 0u, "A proposal for a type trait to detect if value initialization can be achieved by zero-filling", "Author3347" }, } },
    { 2784u, { { 0u, "Not halting the program after detected contract violation", "Author4730" }, } },
    { 2785u, { { 0u, "D2785R1: Relocating prvalues", "Author4686" }, { 1u, "Relocating prvalues", "Author4957" }, { 2u, "D2785R2: Relocating prvalues", "Author1339" }, { 3u, "Relocating prvalues", "Author4044" }, } },
    { 2786u, { { 0u, "Trivial relocatability options", "Author1891" }, { 1u, "Trivial relocatability options", "Author3706" }, { 2u, "Trivial relocatability options", "Author5341" }, { 3u, "Trivial Relocatability For C++26", "Author1292" }, { 4u, "Trivial Relocatability For C++26", "Author1006" }, { 5u, "Trivial Relocatability For C++26", "Author2243" }, { 6u, "Trivial Relocatability For C++26", "Author4990" }, { 7u, "Trivial Relocatability For C++26", "Author6195" }, { 8u, "Trivial Relocatability For C++26", "Author5872" }, { 9u, "Trivial Relocatability For C++26", "Author2716" }, { 10u, "Trivial Relocatability For C++26", "Author3187" }, { 11u, "Trivial Relocatability For C++26", "Author4916" }, { 12u, "Trivial Relocatability For C++26", "Author2650" }, { 13u, "Trivial Relocatability For C++26", "Author805" }, } },
    { 2787u, { { 0u, "Title1304", "Author4936" }, { 1u, "Title505", "Author1835" }, } },
    { 2788u, { { 0u, "Linkage for modular constants", "Author2462" }, } },
    { 2789u, { { 0u, "C++ Standard Library Issues to be moved in Issaquah, Feb. 2023", "Author5465" }, } },
    { 2790u, { { 0u, "C++ Standard Library Immediate Issues to be moved in Issaquah, Feb. 2023", "Author2030" }, } },
    { 2791u, { { 0u, "P2791R0", "Author1344" }, } },
    { 2795u, { { 0u, "Correct and incorrect code, and erroneous behaviour", "Author3915" }, { 1u, "Erroneous behaviour for uninitialized reads", "Author2839" }, { 2u, "Erroneous behaviour for uninitialized reads", "Author4114" }, { 3u, "Erroneous behaviour for uninitialized reads", "Author1093" }, { 4u, "Erroneous behaviour for uninitialized reads", "Author149" }, { 5u, "Erroneous behaviour for uninitialized reads", "Author465" }, } },
    { 2796u, { { 0u, "Core \"ready\" Issues", "Author2120" }, } },
    { 2797u, { { 0u, "Proposed resolution for CWG2692 Static and explicit objectmember functions with the same parameter-type-lists", "Author1269" }, } },
    { 2798u, { { 0u, "Fix layout mappings all static extent default constructor", "Author1198" }, } },
    { 2799u, { { 0u, "Closed ranges may be a problem; breaking counted_iterator is not the solution", "Author6142" }, } },
    { 2800u, { { 0u, "Dependency flag soup needs some fiber", "Author3343" }, } },
    { 2802u, { { 0u, "P1385R7", "Author601" }, } },
    { 2803u, { { 0u, "std::simd", "Author5226" }, } },
    { 2805u, { { 0u, "Slide 1", "Author1967" }, } },
    { 2806u, { { 0u, "do expressions", "Author2374" }, { 1u, "do expressions", "Author6049" }, { 2u, "do expressions", "Author5792" }, { 3u, "do expressions", "Author3190" }, } },
    { 2807u, { { 0u, "Title9", "Author26" }, } },
    { 2808u, { { 0u, "Internal linkage in the global module", "Author349" }, } },
    { 2809u, { { 0u, "Trivial infinite loops are not Undefined Behavior", "Author660" }, { 1u, "Trivial infinite loops are not Undefined Behavior", "Author159" }, { 2u, "Trivial infinite loops are not Undefined Behavior", "Author6016" }, { 3u, "Trivial infinite loops are not Undefined Behavior", "Author5075" }, } },
    { 2810u, { { 0u, "is_debugger_present is_replaceable", "Author2210" }, { 1u, "is_debugger_present is_replaceable", "Author1622" }, { 2u, "is_debugger_present is_replaceable", "Author1818" }, { 3u, "is_debugger_present is_replaceable", "Author6181" }, { 4u, "is_debugger_present is_replaceable", "Author3235" }, } },
    { 2811u, { { 0u, "Title471", "Author1723" }, { 1u, "Title623", "Author2276" }, { 2u, "Title141", "Author491" }, { 3u, "Title134", "Author469" }, { 4u, "Title412", "Author1472" }, { 5u, "Title975", "Author3681" }, { 6u, "Title248", "Author885" }, { 7u, "Title268", "Author966" }, } },
    { 2812u, { { 0u, "P2812: P1673R11 LEWG presentation", "Author4542" }, } },
    { 2814u, { { 0u, "Trivial Relocatability Comparing P1144 with P2786", "Author6285" }, { 1u, "Trivial Relocatability Comparing P1144 with P2786", "Author5581" }, } },
    { 2815u, { { 0u, "Pointers are sometimes just bags of bits", "Author5958" }, } },
    { 2816u, { { 0u, "Upcoming Changes to C++", "Author2397" }, } },
    { 2817u, { { 0u, "The idea behind the contracts MVP", "Author4859" }, } },
    { 2818u, { { 0u, "Uniform Call Syntax for explicit-object memberfunctions", "Author1146" }, } },
    { 2819u, { { 0u, "D2819 - Add tuple protocol to complex", "Author3832" }, { 1u, "D2819 - Add tuple protocol to complex", "Author4787" }, { 2u, "D2819 - Add tuple protocol to complex", "Author5832" }, } },
    { 2821u, { { 0u, "span.at() - HackMD", "Author3645" }, { 1u, "span.at() - HackMD", "Author3268" }, { 2u, "span.at() - HackMD", "Author3306" }, { 3u, "span.at() - HackMD", "Author1575" }, { 4u, "span.at() - HackMD", "Author926" }, { 5u, "span.at() - HackMD", "Author6397" }, } },
    { 2822u, { { 0u, "Providing user control of associated entities of class types", "Author548" }, { 1u, "Providing user control of associated entities of class types", "Author4083" }, { 2u, "Providing user control of associated entities of class types", "Author803" }, } },
    { 2824u, { { 0u, "P2824 WG21 2023-02 Issaquah Record of Discussion.docx", "Author586" }, } },
    { 2825u, { { 0u, "calltarget(unevaluated-call-expression)", "Author2226" }, { 1u, "declcall(unevaluated-postfix-expression)", "Author1742" }, { 2u, "declcall(unevaluated-postfix-expression)", "Author5980" }, { 3u, "Overload resolution hook: declcall( unevaluated-call-expression)", "Author3838" }, { 4u, "Overload resolution hook: declcall( unevaluated-call-expression)", "Author1881" }, { 5u, "Overload resolution hook: declcall( unevaluated-call-expression)", "Author2767" }, } },
    { 2826u, { { 0u, "Replacement function", "Author2201" }, { 1u, "Replacement function", "Author4445" }, { 2u, "Replacement function", "Author1631" }, } },
    { 2827u, { { 0u, "Floating-point overflow and underflow in from_chars (LWG 3081) - HackMD", "Author3924" }, { 1u, "Floating-point overflow and underflow in `from_chars` (LWG 3081) - HackMD", "Author4997" }, } },
    { 2828u, { { 0u, "Copy elision for direct-initialization with a conversion function (Coreissue 2327)", "Author1924" }, { 1u, "Copy elision for direct-initialization with a conversion function (Coreissue 2327)", "Author1400" }, { 2u, "Copy elision for direct-initialization with a conversion function (Coreissue 2327)", "Author2954" }, } },
    { 2829u, { { 0u, "Proposal of Contracts Supporting Const-On-Definition Style", "Author2860" }, } },
    { 2830u, { { 0u, "Standardized Type Ordering", "Author5267" }, { 1u, "Standardized Type Ordering", "Author4801" }, { 2u, "Standardized Constexpr Type Ordering", "Author6416" }, { 3u, "Standardized Constexpr Type Ordering", "Author2047" }, { 4u, "Standardized Constexpr Type Ordering", "Author5277" }, { 5u, "Standardized Constexpr Type Ordering", "Author2497" }, { 6u, "Standardized Constexpr Type Ordering", "Author888" }, { 7u, "Standardized Constexpr Type Ordering", "Author3230" }, { 8u, "Standardized Constexpr Type Ordering", "Author4646" }, { 9u, "Standardized Constexpr Type Ordering", "Author4963" }, { 10u, "Constexpr Type Ordering", "Author1956" }, } },
    { 2831u, { { 0u, "Title613", "Author2245" }, } },
    { 2833u, { { 0u, "Freestanding Library: inout expected span", "Author3849" }, { 1u, "Freestanding Library: inout expected span", "Author1540" }, { 2u, "Freestanding Library: inout expected span", "Author4800" }, } },
    { 2834u, { { 0u, "Title1362", "Author5163" }, { 1u, "Title1454", "Author5522" }, } },
    { 2835u, { { 0u, "Expose std::atomic_ref 's object address", "Author6305" }, { 1u, "Expose `std::atomic_ref` 's object address", "Author721" }, { 2u, "Expose `std::atomic_ref` 's object address", "Author1978" }, { 3u, "Expose `std::atomic_ref` 's object address", "Author1865" }, { 4u, "Expose `std::atomic_ref` 's object address", "Author3352" }, { 5u, "Expose `std::atomic_ref` 's object address", "Author4161" }, { 6u, "Expose `std::atomic_ref` 's object address", "Author2773" }, { 7u, "Expose `std::atomic_ref` 's object address", "Author3332" }, } },
    { 2836u, { { 0u, "`std::const_iterator` often produces an unexpected type", "Author3795" }, { 1u, "`std::basic_const_iterator` should follow its underlying type'sconvertibility", "Author5402" }, } },
    { 2837u, { { 0u, "Planning to Revisit the Lakos Rule", "Author5912" }, } },
    { 2838u, { { 0u, "Unconditional contract violation handling of any kind is a serious problem", "Author2058" }, } },
    { 2839u, { { 0u, "Nontrivial Relocation via a New *owning reference* Type", "Author5537" }, } },
    { 2841u, { { 0u, "Title1505", "Author5698" }, { 1u, "Title1179", "Author4404" }, { 2u, "Title1128", "Author4214" }, { 3u, "Title831", "Author3069" }, { 4u, "Title585", "Author2142" }, { 5u, "Title446", "Author1614" }, { 6u, "Title1552", "Author5887" }, { 7u, "Title1003", "Author3794" }, } },
    { 2842u, { { 0u, "Destructor Semantics Do Not Affect Constructible Traits", "Author2520" }, } },
    { 2843u, { { 0u, "Preprocessing is never undefined", "Author5782" }, { 1u, "Preprocessing is never undefined", "Author5859" }, { 2u, "Preprocessing is never undefined", "Author3955" }, } },
    { 2845u, { { 0u, "Formatting of std::filesystem::path", "Author736" }, { 1u, "Formatting of std::filesystem::path", "Author4987" }, { 2u, "Formatting of std::filesystem::path", "Author2592" }, { 3u, "Formatting of std::filesystem::path", "Author3328" }, { 4u, "D2845R4: Formatting of std::filesystem::path", "Author6276" }, { 5u, "Formatting of std::filesystem::path", "Author769" }, { 6u, "Formatting of std::filesystem::path", "Author4895" }, { 7u, "Formatting of std::filesystem::path", "Author275" }, { 8u, "Formatting of std::filesystem::path", "Author2149" }, } },
    { 2846u, { { 0u, "Title237", "Author842" }, { 1u, "Title312", "Author1100" }, { 2u, "Title1345", "Author5109" }, { 3u, "Title1376", "Author5199" }, { 4u, "Title365", "Author1286" }, { 5u, "Title981", "Author3715" }, { 6u, "Title5", "Author18" }, } },
    { 2848u, { { 0u, "std::is_uniqued", "Author2591" }, { 1u, "std::is_uniqued", "Author2736" }, } },
    { 2849u, { { 0u, "async-object - aka async-RAII", "Author4215" }, } },
    { 2850u, { { 0u, "Title104", "Author351" }, } },
    { 2852u, { { 0u, "Contract violation handling semantics for the contracts MVP", "Author2584" }, } },
    { 2853u, { { 0u, "P2853R0 Proposal of std::contract_violation", "Author4473" }, } },
    { 2855u, { { 0u, "Member customization points for Senders and Receivers", "Author2623" }, { 1u, "Member customization points for Senders and Receivers", "Author4039" }, } },
    { 2857u, { { 0u, "Improve std::hive::reshape", "Author4593" }, } },
    { 2858u, { { 0u, "Noexcept vs contract violations", "Author5165" }, } },
    { 2861u, { { 0u, "Title1370", "Author5187" }, } },
    { 2862u, { { 0u, "text_encoding::name() should never return null values", "Author3276" }, { 1u, "text_encoding::name() should never return null values", "Author941" }, } },
    { 2863u, { { 0u, "Review Annex D for C++26", "Author5367" }, { 1u, "Review Annex D for C++26", "Author1460" }, { 2u, "Review Annex D for C++26", "Author890" }, { 3u, "Review Annex D for C++26", "Author6248" }, { 4u, "Review Annex D for C++26", "Author2220" }, { 5u, "Review Annex D for C++26", "Author3323" }, { 6u, "Review Annex D for C++26", "Author5793" }, { 7u, "Review Annex D for C++26", "Author3691" }, { 8u, "Review Annex D for C++26", "Author2822" }, { 9u, "Review Annex D for C++26", "Author4656" }, } },
    { 2864u, { { 0u, "Remove Deprecated Arithmetic Conversion on Enumerations From C++26", "Author2425" }, { 1u, "Remove Deprecated Arithmetic Conversion on Enumerations From C++26", "Author5797" }, { 2u, "Remove Deprecated Arithmetic Conversion on Enumerations From C++26", "Author4722" }, } },
    { 2865u, { { 0u, "Remove Deprecated Array Comparisons from C++26", "Author3058" }, { 1u, "Remove Deprecated Array Comparisons from C++26", "Author1791" }, { 2u, "Remove Deprecated Array Comparisons from C++26", "Author4892" }, { 3u, "Remove Deprecated Array Comparisons from C++26", "Author5407" }, { 4u, "Remove Deprecated Array Comparisons from C++26", "Author6075" }, { 5u, "Remove Deprecated Array Comparisons from C++26", "Author5921" }, { 6u, "Remove Deprecated Array Comparisons from C++26", "Author5526" }, } },
    { 2866u, { { 0u, "Remove Deprecated Volatile Features From C++26", "Author2262" }, { 1u, "Remove Deprecated Volatile Features From C++26", "Author5090" }, { 2u, "Remove Deprecated Volatile Features from C++26", "Author3260" }, { 3u, "Remove Deprecated Volatile Features from C++26", "Author2139" }, { 4u, "Remove Deprecated Volatile Features from C++26", "Author4138" }, { 5u, "Remove Deprecated Volatile Features from C++26", "Author86" }, } },
    { 2867u, { { 0u, "Remove Deprecated strstreams From C++26", "Author695" }, { 1u, "Remove Deprecated strstreams From C++26", "Author1233" }, { 2u, "Remove Deprecated strstreams From C++26", "Author4814" }, } },
    { 2868u, { { 0u, "Remove Deprecated Typedef From C++26", "Author1215" }, { 1u, "Remove Deprecated Typedef From C++26", "Author4830" }, { 2u, "Remove Deprecated Typedef From C++26", "Author900" }, { 3u, "Remove Deprecated Typedef From C++26", "Author5663" }, } },
    { 2869u, { { 0u, "Remove Deprecated Atomic Access APIs From C++26", "Author4739" }, { 1u, "Remove Deprecated Atomic Access APIs From C++26", "Author6132" }, { 2u, "Remove Deprecated Atomic Access APIs From C++26", "Author3785" }, { 3u, "Remove Deprecated Atomic Access APIs from C++26", "Author2418" }, { 4u, "Remove Deprecated Atomic Access APIs from C++26", "Author3776" }, } },
    { 2870u, { { 0u, "Remove From C++26", "Author3337" }, { 1u, "Remove From C++26", "Author1708" }, { 2u, "Remove From C++26", "Author1661" }, { 3u, "Remove From C++26", "Author1878" }, } },
    { 2871u, { { 0u, "Remove Deprecated Unicode Conversion Facets From C++26", "Author971" }, { 1u, "Remove Deprecated Unicode Conversion Facets From C++26", "Author5275" }, { 2u, "Remove Deprecated Unicode Conversion Facets from C++26", "Author478" }, { 3u, "Remove Deprecated Unicode Conversion Facets from C++26", "Author5553" }, } },
    { 2872u, { { 0u, "Remove From C++26", "Author1859" }, { 1u, "Remove From C++26", "Author3256" }, { 2u, "Remove From C++26", "Author2325" }, { 3u, "Remove From C++26", "Author1796" }, } },
    { 2873u, { { 0u, "Remove Deprecated Locale Category Facets For Unicode from C++26", "Author4093" }, { 1u, "Remove Deprecated Locale Category Facets For Unicode from C++26", "Author4933" }, { 2u, "Remove Deprecated Locale-Category Facets for Unicode from C++26", "Author1160" }, { 3u, "Remove Deprecated Locale-Category Facets for Unicode from C++26", "Author4367" }, } },
    { 2874u, { { 0u, "Mandating Annex D", "Author526" }, { 1u, "Mandating Annex D", "Author1078" }, { 2u, "Mandating Annex D", "Author4134" }, } },
    { 2875u, { { 0u, "Undeprecate For C++26", "Author6301" }, { 1u, "Undeprecate `polymorphic_allocator::destroy` For C++26", "Author6094" }, { 2u, "Undeprecate for C++26", "Author613" }, { 3u, "Undeprecate for C++26", "Author5132" }, { 4u, "Undeprecate for C++26", "Author1876" }, } },
    { 2876u, { { 0u, "D2876R0: Proposal to extend <code>std::simd</code> with more constructors and accessors", "Author3362" }, { 1u, "Proposal to extend <code>std::simd</code> with more constructors and accessors", "Author1387" }, { 2u, "Proposal to extend <code>std::simd</code> with more constructors and accessors", "Author5123" }, } },
    { 2877u, { { 0u, "Title1610", "Author6106" }, } },
    { 2878u, { { 0u, "Reference checking - HackMD", "Author1733" }, { 1u, "Reference checking - HackMD", "Author3487" }, { 2u, "Reference checking - HackMD", "Author3569" }, { 3u, "Reference checking - HackMD", "Author1886" }, { 4u, "Reference checking - HackMD", "Author2999" }, { 5u, "Reference checking - HackMD", "Author2404" }, { 6u, "Reference checking - HackMD", "Author5977" }, } },
    { 2879u, { { 0u, "P2879R0 Proposal of std::dump", "Author659" }, } },
    { 2880u, { { 0u, "Algorithm-like vs std::simd based RNG API", "Author508" }, } },
    { 2881u, { { 0u, "Generator-based for loop", "Author6105" }, } },
    { 2882u, { { 0u, "An Event Model for C++ Executors", "Author3071" }, } },
    { 2883u, { { 0u, "Should Be A Keyword In C++26", "Author5022" }, { 1u, "Should Be a Keyword in C++26", "Author318" }, } },
    { 2884u, { { 0u, "Should Be A Keyword In C++26", "Author1188" }, } },
    { 2885u, { { 0u, "Requirements for a Contracts syntax", "Author5943" }, { 1u, "Requirements for a Contracts syntax", "Author4923" }, { 2u, "Requirements for a Contracts syntax", "Author168" }, { 3u, "Requirements for a Contracts syntax", "Author5677" }, } },
    { 2886u, { { 0u, "p2886r0: concurrency ts2 editor's report", "Author6473" }, } },
    { 2887u, { { 0u, "P2887r0.docx", "Author5621" }, } },
    { 2888u, { { 0u, "P2888r0.docx", "Author1516" }, } },
    { 2889u, { { 0u, "Distributed Arrays", "Author5260" }, } },
    { 2890u, { { 0u, "Title995", "Author3760" }, { 1u, "Title540", "Author1959" }, { 2u, "Title260", "Author935" }, } },
    { 2891u, { { 0u, "SG16: Unicode meeting summaries 2023-01-11 through 2023-05-10", "Author433" }, } },
    { 2892u, { { 0u, "Types Should be Regular", "Author4512" }, } },
    { 2893u, { { 0u, "Variadic Friends", "Author3226" }, { 1u, "Untitled", "Author3115" }, { 2u, "Variadic friends", "Author5602" }, { 3u, "Variadic friends", "Author3351" }, } },
    { 2894u, { { 0u, "Title44", "Author127" }, { 1u, "Title486", "Author1771" }, { 2u, "Title1015", "Author3819" }, } },
    { 2895u, { { 0u, "noncopyable and nonmovable utility classes", "Author5547" }, } },
    { 2896u, { { 0u, "Outstanding design questions for the Contracts MVP", "Author6158" }, } },
    { 2897u, { { 0u, "aligned_accessor: An mdspan accessor expressing pointer overalignment", "Author3156" }, { 1u, "aligned_accessor: An mdspan accessor expressing pointer overalignment", "Author3676" }, { 2u, "aligned_accessor: An mdspan accessor expressing pointer overalignment", "Author407" }, { 3u, "aligned_accessor: An mdspan accessor expressing pointer overalignment", "Author6085" }, { 4u, "aligned_accessor: An mdspan accessor expressing pointer overalignment", "Author4001" }, { 5u, "aligned_accessor: An mdspan accessor expressing pointer overalignment", "Author1341" }, { 6u, "aligned_accessor: An mdspan accessor expressing pointer over-alignment", "Author4632" }, { 7u, "aligned_accessor: An mdspan accessor expressing pointer over-alignment", "Author3353" }, } },
    { 2898u, { { 0u, "Importable Headers are Not Universally Implementable", "Author898" }, { 1u, "Build System Requirements for Importable Headers", "Author1432" }, } },
    { 2899u, { { 0u, "Title644", "Author2356" }, { 1u, "Title696", "Author2573" }, } },
    { 2900u, { { 0u, "Title1415", "Author5363" }, { 1u, "Title1674", "Author6368" }, { 2u, "Title390", "Author1398" }, { 3u, "Title1389", "Author5250" }, { 4u, "Title474", "Author1730" }, { 5u, "Title911", "Author3402" }, { 6u, "Title1147", "Author4292" }, { 7u, "Title1028", "Author3886" }, { 8u, "Title1253", "Author4708" }, { 9u, "Title1535", "Author5790" }, { 10u, "Title1302", "Author4930" }, { 11u, "Title1406", "Author5343" }, { 12u, "Title130", "Author457" }, { 13u, "Title357", "Author1255" }, { 14u, "Title1549", "Author5867" }, } },
    { 2901u, { { 0u, "Extending Linear Algebra Support to Batched Operations", "Author3311" }, } },
    { 2902u, { { 0u, "Title1285", "Author4850" }, { 1u, "Title720", "Author2639" }, } },
    { 2904u, { { 0u, "Title731", "Author2671" }, } },
    { 2905u, { { 0u, "Runtime format strings", "Author4298" }, { 1u, "Runtime format strings", "Author2135" }, { 2u, "Runtime format strings", "Author5314" }, } },
    { 2906u, { { 0u, "Structured bindings for <code>std::extents</code>", "Author6047" }, } },
    { 2909u, { { 0u, "Dude, wheres my char?", "Author1748" }, { 1u, "Fix formatting of code units as integers<br>(Dude, wheres my char?)", "Author3820" }, { 2u, "Fix formatting of code units as integers<br>(Dude, wheres my char?)", "Author4503" }, { 3u, "Fix formatting of code units as integers<br>(Dude, wheres my char?)", "Author1880" }, { 4u, "Fix formatting of code units as integers<br>(Dude, wheres my char?)", "Author511" }, } },
    { 2910u, { { 0u, "C++ Standard Library Issues to be moved in Varna 2023", "Author1569" }, } },
    { 2911u, { { 0u, "Title661", "Author2451" }, { 1u, "Title1007", "Author3802" }, } },
    { 2912u, { { 0u, "p2912r0: Concurrent queues and sender/receivers", "Author3655" }, } },
    { 2915u, { { 0u, "Proposed resolution to CWG1223", "Author4866" }, } },
    { 2917u, { { 0u, "An in-line defaulted destructor should keep the copy- and move-operations", "Author6152" }, { 1u, "An in-line defaulted destructor should keep the copy- and move-operations", "Author2463" }, } },
    { 2918u, { { 0u, "Runtime format strings II", "Author1312" }, { 1u, "Runtime format strings II", "Author3363" }, { 2u, "Runtime format strings II", "Author605" }, } },
    { 2920u, { { 0u, "2023_06__iso_cpp_varna__library_evolution_leadership_understanding_of_narrow_noexcept_policy_history__r4", "Author1589" }, } },
    { 2921u, { { 0u, "p2921r0: Exploring std::expected based API alternatives for buffer_queue", "Author5208" }, } },
    { 2922u, { { 0u, "Core \"ready\" Issues", "Author1492" }, } },
    { 2925u, { { 0u, "inplace_vector D0843R7", "Author4198" }, } },
    { 2926u, { { 0u, "Title477", "Author1740" }, } },
    { 2927u, { { 0u, "Inspecting exception_ptr", "Author100" }, { 1u, "Inspecting exception_ptr", "Author4610" }, { 2u, "Inspecting exception_ptr", "Author1954" }, } },
    { 2929u, { { 0u, "Proposal to add simd_invoke to std::simd", "Author2770" }, } },
    { 2930u, { { 0u, "Formatter specializations for the standard library", "Author2555" }, } },
    { 2931u, { { 0u, "P2931 WG21 2023-06 Varna Record of Discussion.docx", "Author1383" }, } },
    { 2932u, { { 0u, "Title920", "Author3438" }, { 1u, "Title674", "Author2508" }, { 2u, "Title544", "Author1984" }, { 3u, "Title589", "Author2158" }, } },
    { 2933u, { { 0u, "Proposal to allow simd overloads for standard C++ <bit> header", "Author5944" }, { 1u, "Extend <code><bit></code> header function with overloads for <code>std::simd</code>", "Author1838" }, { 2u, "Extend <code><bit></code> header function with overloads for <code>std::simd</code>", "Author3182" }, { 3u, "Extend <code><bit></code> header function with overloads for <code>std::simd</code>", "Author5915" }, { 4u, "Extend <bit> header function with overloads for std::simd", "Author4046" }, } },
    { 2935u, { { 0u, "Title788", "Author2887" }, { 1u, "Title1475", "Author5590" }, { 2u, "Title1145", "Author4287" }, { 3u, "Title1081", "Author4050" }, { 4u, "Title1278", "Author4831" }, } },
    { 2937u, { { 0u, "Freestanding: Remove <code>strtok</code>", "Author6339" }, } },
    { 2940u, { { 0u, "switch for Pattern Matching", "Author5425" }, } },
    { 2941u, { { 0u, "Identifiers for Pattern Matching", "Author1247" }, } },
    { 2944u, { { 0u, "Comparisons for reference_wrapper", "Author2182" }, { 1u, "Comparisons for reference_wrapper", "Author1121" }, { 2u, "Comparisons for reference_wrapper", "Author4242" }, { 3u, "Comparisons for reference_wrapper", "Author5091" }, } },
    { 2945u, { { 0u, "Additional format specifiers for time_point", "Author2489" }, { 1u, "Additional format specifiers for time_point", "Author2406" }, } },
    { 2946u, { { 0u, "A Flexible Solution to the Problems of noexcept", "Author2691" }, { 1u, "A Flexible Solution to the Problems of noexcept", "Author5655" }, } },
    { 2947u, { { 0u, "D2947R0", "Author6196" }, } },
    { 2949u, { { 0u, "Microsoft Word - PxxxxR0.docx", "Author3688" }, } },
    { 2950u, { { 0u, "P2836R1 Slides", "Author5485" }, } },
    { 2951u, { { 0u, "Shadowing is good for safety - HackMD", "Author401" }, { 1u, "Shadowing is good for safety - HackMD", "Author1636" }, { 2u, "Shadowing is good for safety - HackMD", "Author6303" }, { 3u, "Shadowing is good for safety - HackMD", "Author5198" }, } },
    { 2952u, { { 0u, "auto& operator=(X&&) = default", "Author2955" }, { 1u, "auto& operator=(X&&) = default", "Author1026" }, { 2u, "auto& operator=(X&&) = default", "Author2720" }, } },
    { 2953u, { { 0u, "Forbid defaulting operator=(X&&) &&", "Author643" }, { 1u, "Forbid defaulting operator=(X&&) &&", "Author3103" }, } },
    { 2954u, { { 0u, "Contracts and virtual functions for the Contracts MVP", "Author4209" }, } },
    { 2955u, { { 0u, "Safer Range Access - HackMD", "Author2966" }, { 1u, "Safer Range Access - HackMD", "Author6183" }, } },
    { 2956u, { { 0u, "Allow <code>std::simd</code> overloads for saturating operations", "Author1900" }, } },
    { 2957u, { { 0u, "Contracts and coroutines", "Author731" }, { 1u, "Contracts and coroutines", "Author918" }, { 2u, "Contracts and coroutines", "Author464" }, } },
    { 2958u, { { 0u, "typeof and typeof_unqual for C++", "Author1" }, } },
    { 2959u, { { 0u, "Relocation Within Containers", "Author4759" }, } },
    { 2960u, { { 0u, "P2960R0 Concurrency TS2 Editors report for N4953", "Author182" }, } },
    { 2961u, { { 0u, "Title641", "Author2345" }, { 1u, "Title1441", "Author5467" }, { 2u, "Title552", "Author2031" }, } },
    { 2962u, { { 0u, "Communicating the Baseline Compile Command for C++ Modules support", "Author717" }, } },
    { 2963u, { { 0u, "Title250", "Author902" }, { 1u, "Title475", "Author1731" }, { 2u, "Title1664", "Author6324" }, { 3u, "Title979", "Author3710" }, } },
    { 2964u, { { 0u, "Adding support for user-defined element types in std::simd", "Author1174" }, { 1u, "Adding support for user-defined element types (UDT) in <code>std::simd</code>", "Author5951" }, } },
    { 2966u, { { 0u, "Title960", "Author3610" }, { 1u, "Title940", "Author3536" }, } },
    { 2967u, { { 0u, "Relocation Has A Library Interface", "Author3054" }, { 1u, "Relocation Has A Library Interface", "Author6074" }, } },
    { 2968u, { { 0u, "Make std::ignore a first-class object", "Author4718" }, { 1u, "Make std::ignore a first-class object", "Author117" }, { 2u, "Make std::ignore a first-class object", "Author482" }, } },
    { 2969u, { { 0u, "Title1316", "Author4975" }, } },
    { 2971u, { { 0u, "Implication for C++", "Author6329" }, { 1u, "Implication for C++", "Author2156" }, { 2u, "Implication for C++", "Author3163" }, { 3u, "Implication for C++", "Author629" }, } },
    { 2972u, { { 0u, "2023-09 Library Evolution Polls", "Author4782" }, } },
    { 2973u, { { 0u, "Erroneous behaviour for missing return from assignment", "Author6408" }, } },
    { 2976u, { { 0u, "Freestanding Library: algorithm, numeric, and random", "Author6172" }, { 1u, "Freestanding Library: algorithm, numeric, and random", "Author5625" }, } },
    { 2977u, { { 0u, "Module configuration files", "Author5780" }, { 1u, "Build database files", "Author646" }, { 2u, "Build database files", "Author1841" }, } },
    { 2978u, { { 0u, "A New Approach For Compiling C++", "Author6056" }, } },
    { 2979u, { { 0u, "The Need for Design Policies in WG21", "Author2022" }, } },
    { 2980u, { { 0u, "A motivation, scope, and plan for a physical quantities andunits library", "Author4717" }, { 1u, "A motivation, scope, and plan for a quantities and unitslibrary", "Author2782" }, } },
    { 2981u, { { 0u, "Improving our safety with a physical quantities and unitslibrary", "Author4143" }, { 1u, "Improving our safety with a physical quantities and unitslibrary", "Author4181" }, } },
    { 2982u, { { 0u, "`std::quantity` as a numeric type", "Author5329" }, { 1u, "`std::quantity` as a numeric type", "Author893" }, } },
    { 2984u, { { 0u, "Reconsider Redeclaring static constexpr Data Members", "Author4556" }, { 1u, "Reconsider Redeclaring static constexpr Data Members", "Author2656" }, } },
    { 2985u, { { 0u, "A type trait for detecting virtual base classes", "Author1970" }, } },
    { 2986u, { { 0u, "Generic Function Pointer", "Author4434" }, } },
    { 2988u, { { 0u, "std::optional<T&>", "Author6078" }, { 1u, "Title1561", "Author5916" }, { 2u, "Title663", "Author2466" }, { 3u, "Title777", "Author2828" }, { 4u, "Title577", "Author2113" }, { 5u, "Title269", "Author969" }, { 6u, "Title922", "Author3441" }, { 7u, "Title1169", "Author4363" }, { 8u, "Title397", "Author1415" }, { 9u, "Title879", "Author3242" }, { 10u, "Title219", "Author772" }, { 11u, "Title31", "Author98" }, { 12u, "Title634", "Author2309" }, } },
    { 2989u, { { 0u, "Title596", "Author2174" }, { 1u, "Title1323", "Author5015" }, { 2u, "Title34", "Author103" }, } },
    { 2990u, { { 0u, "C++ Modules Roadmap", "Author4687" }, } },
    { 2991u, { { 0u, "Stop Forcing `std::move` to Pessimize", "Author3224" }, } },
    { 2992u, { { 0u, "Attribute [[discard]] and attributes on expressions", "Author5477" }, { 1u, "Attribute [[discard(\"reason\")]]", "Author5128" }, } },
    { 2993u, { { 0u, "Constrained Numbers", "Author3270" }, } },
    { 2994u, { { 0u, "On the Naming of Packs", "Author2102" }, { 1u, "On the Naming of Packs", "Author4885" }, } },
    { 2995u, { { 0u, "SG16: Unicode meeting summaries 2023-05-24 through 2023-09-27", "Author6263" }, } },
    { 2996u, { { 0u, "Reflection for C++26", "Author4758" }, { 1u, "Reflection for C++26", "Author1587" }, { 2u, "Reflection for C++26", "Author4424" }, { 3u, "Reflection for C++26", "Author588" }, { 4u, "Reflection for C++26", "Author2336" }, { 5u, "Reflection for C++26", "Author6295" }, { 6u, "Reflection for C++26", "Author425" }, { 7u, "Reflection for C++26", "Author611" }, { 8u, "Reflection for C++26", "Author3883" }, { 9u, "Reflection for C++26", "Author6216" }, { 10u, "Reflection for C++26", "Author381" }, { 11u, "Reflection for C++26", "Author1495" }, } },
    { 2997u, { { 0u, "Removing the common reference requirement from the indirectly invocable concepts", "Author6155" }, { 1u, "Removing the common reference requirement from the indirectly invocable concepts", "Author5976" }, } },
    { 2998u, { { 0u, "Deducing function parameter types using alias templateCTAD", "Author297" }, } },
    { 2999u, { { 0u, "Sender Algorithm Customization", "Author6076" }, { 1u, "Sender Algorithm Customization", "Author4395" }, { 2u, "Sender Algorithm Customization", "Author228" }, { 3u, "Sender Algorithm Customization", "Author2934" }, } },
    { 3001u, { { 0u, "std::hive and containers like it are not a good fit for thestandard library", "Author5051" }, } },
    { 3002u, { { 0u, "Guidelines for Allocators in New Library Classes", "Author3627" }, { 1u, "Policies for Using Allocators in Library Classes", "Author691" }, } },
    { 3003u, { { 0u, "P3003R0 The design of a library of number concepts", "Author5820" }, } },
    { 3004u, { { 0u, "Principled Design for WG21", "Author5941" }, } },
    { 3005u, { { 0u, "Memorializing Principled-Design Policies for WG21", "Author924" }, } },
    { 3006u, { { 0u, "Launder less", "Author2365" }, { 1u, "Launder less", "Author4941" }, } },
    { 3007u, { { 0u, "Title987", "Author3733" }, } },
    { 3008u, { { 0u, "Atomic floating-point min/max semantics", "Author5232" }, { 1u, "Atomic floating-point min/max semantics", "Author3514" }, { 2u, "Atomic floating-point min/max semantics", "Author1635" }, { 3u, "Atomic floating-point min/max", "Author681" }, { 4u, "Atomic floating-point min/max", "Author2495" }, } },
    { 3009u, { { 0u, "Injected class name in the base specifier list", "Author4979" }, } },
    { 3010u, { { 0u, "P3010R0 - Using Reflection to Replace a Metalanguage for Generating JS Bindings", "Author1423" }, } },
    { 3011u, { { 0u, "Title1385", "Author5244" }, } },
    { 3012u, { { 0u, "Title1530", "Author5768" }, } },
    { 3014u, { { 0u, "Customizing std::expected's exception", "Author2474" }, } },
    { 3015u, { { 0u, "Rebuttal to Additional format specifiers for time_point", "Author2823" }, } },
    { 3016u, { { 0u, "Resolve inconsistencies in begin/end for <code>valarray</code> and braced initializer lists", "Author3927" }, { 1u, "Resolve inconsistencies in begin/end for <code>valarray</code> and braced initializer lists", "Author3831" }, { 2u, "Resolve inconsistencies in begin/end for valarray and braced initializer lists", "Author6050" }, { 3u, "Resolve inconsistencies in begin/end for valarray and braced initializer lists", "Author4764" }, { 4u, "Resolve inconsistencies in begin/end for valarray and braced initializer lists", "Author4906" }, { 5u, "Resolve inconsistencies in begin/end for valarray and braced initializer lists", "Author794" }, { 6u, "Resolve inconsistencies in begin/end for valarray and braced initializer lists", "Author5769" }, } },
    { 3018u, { { 0u, "Title945", "Author3548" }, } },
    { 3019u, { { 0u, "Title1567", "Author5947" }, { 1u, "Title290", "Author1038" }, { 2u, "Title311", "Author1099" }, { 3u, "Title601", "Author2191" }, { 4u, "Title360", "Author1263" }, { 5u, "Title557", "Author2040" }, { 6u, "Title102", "Author345" }, { 7u, "Title802", "Author2944" }, { 8u, "Title1432", "Author5429" }, { 9u, "Title1617", "Author6118" }, { 10u, "Title216", "Author765" }, { 11u, "Title1534", "Author5785" }, { 12u, "Title4", "Author17" }, { 13u, "Title1139", "Author4248" }, { 14u, "Title1265", "Author4781" }, } },
    { 3020u, { { 0u, "2023-09 Library Evolution Poll Outcomes", "Author3028" }, } },
    { 3021u, { { 0u, "Title690", "Author2554" }, } },
    { 3022u, { { 0u, "A Boring Thread Attributes Interface - HackMD", "Author1465" }, { 1u, "A Boring Thread Attributes Interface", "Author2392" }, } },
    { 3023u, { { 0u, "C++ Should Be C++ - HackMD", "Author67" }, { 1u, "C++ Should Be C++ - HackMD", "Author6198" }, } },
    { 3024u, { { 0u, "Title809", "Author2986" }, } },
    { 3025u, { { 0u, "P3025R0.docx", "Author5661" }, } },
    { 3026u, { { 0u, "P3026R0.docx", "Author3327" }, } },
    { 3027u, { { 0u, "UFCS is a breaking change, of the absolutely worst kind", "Author1054" }, } },
    { 3028u, { { 0u, "Title1075", "Author4028" }, } },
    { 3029u, { { 0u, "Better <code>mdspan</code>'s CTAD", "Author556" }, { 1u, "Better <code>mdspan</code>'s CTAD", "Author3564" }, } },
    { 3031u, { { 0u, "Resolve CWG2561, conversion function for lambda with explicit object parameter", "Author4887" }, } },
    { 3032u, { { 0u, "Less transient constexpr allocation", "Author2010" }, { 1u, "Less transient constexpr allocation", "Author4836" }, { 2u, "Less transient constexpr allocation (and more constevalrelaxation)", "Author3308" }, } },
    { 3033u, { { 0u, "Should we import function bodies to get the better optimizations?", "Author4464" }, } },
    { 3034u, { { 0u, "Module Declarations Shouldnt be Macros", "Author2863" }, { 1u, "Module Declarations Shouldnt be Macros", "Author4783" }, } },
    { 3037u, { { 0u, "Title427", "Author1539" }, { 1u, "Title739", "Author2702" }, { 2u, "Title62", "Author166" }, { 3u, "Title202", "Author722" }, { 4u, "Title1594", "Author6046" }, { 5u, "Title15", "Author51" }, } },
    { 3038u, { { 0u, "Title1407", "Author5345" }, } },
    { 3039u, { { 0u, "Title1088", "Author4064" }, } },
    { 3040u, { { 0u, "C++ Standard Library Issues to be moved in Kona, Nov. 2023", "Author1157" }, } },
    { 3041u, { { 0u, "Title1684", "Author6411" }, } },
    { 3042u, { { 0u, "Title35", "Author104" }, } },
    { 3043u, { { 0u, "Using variable template template without meta programming", "Author6432" }, } },
    { 3044u, { { 0u, "P3044R0", "Author850" }, { 1u, "P3044R1", "Author4721" }, } },
    { 3045u, { { 0u, "Quantities and units library", "Author894" }, { 1u, "Quantities and units library", "Author3890" }, { 2u, "Quantities and units library", "Author5430" }, { 3u, "Quantities and units library", "Author2165" }, { 4u, "Quantities and units library", "Author1737" }, { 5u, "Quantities and units library", "Author3674" }, } },
    { 3046u, { { 0u, "Core \"ready\" Issues", "Author1087" }, } },
    { 3047u, { { 0u, "Remove Namespace relops From C++26", "Author779" }, } },
    { 3049u, { { 0u, "P3049R0", "Author1261" }, { 1u, "P3049R1", "Author6176" }, } },
    { 3050u, { { 0u, "Optimize linalg::conjugated for noncomplex value types", "Author4926" }, { 1u, "Fix C++26 by optimizing linalg::conjugated for noncomplex value types", "Author3772" }, { 2u, "Fix C++26 by optimizing linalg::conjugated for noncomplex value types", "Author4186" }, { 3u, "Fix C++26 by optimizing linalg::conjugated for noncomplex value types", "Author727" }, } },
    { 3051u, { { 0u, "Structured Response Files", "Author4902" }, { 1u, "Structured Response Files", "Author3633" }, { 2u, "Structured Response Files", "Author617" }, { 3u, "WITHDRAWN: Structured Response Files", "Author3404" }, } },
    { 3052u, { { 0u, "<code>view_interface::at</code>", "Author5136" }, { 1u, "<code>view_interface::at</code>", "Author4278" }, } },
    { 3053u, { { 0u, "2023-12 Library Evolution Polls", "Author6355" }, } },
    { 3054u, { { 0u, "2023-12 Library Evolution Poll Outcomes", "Author3761" }, } },
    { 3055u, { { 0u, "Relax wording to permit relocation optimizations in the STL", "Author5638" }, { 1u, "Relax wording to permit relocation optimizations in the STL", "Author5596" }, } },
    { 3056u, { { 0u, "what ostream exception - HackMD", "Author5550" }, } },
    { 3057u, { { 0u, "Two finer-grained compilation model for named modules", "Author473" }, } },
    { 3059u, { { 0u, "Making user-defined constructors of view iterators/sentinels private", "Author6318" }, { 1u, "Making user-defined constructors of view iterators/sentinels private", "Author5027" }, } },
    { 3060u, { { 0u, "std::ranges::upto(n) - HackMD", "Author2459" }, { 1u, "Add std::views::upto(n) - HackMD", "Author6442" }, { 2u, "Add std::views::indices(n) - HackMD", "Author3762" }, } },
    { 3061u, { { 0u, "P3061 WG21 2023-11 Kona Record of Discussion.docx", "Author4947" }, } },
    { 3062u, { { 0u, "Title1514", "Author5722" }, } },
    { 3064u, { { 0u, "Title273", "Author977" }, { 1u, "Title1584", "Author6011" }, { 2u, "Title685", "Author2545" }, } },
    { 3066u, { { 0u, "Title910", "Author3391" }, } },
    { 3067u, { { 0u, "Named permutation functions for `std::simd`", "Author3489" }, } },
    { 3068u, { { 0u, "constexpr-throw", "Author1360" }, { 1u, "constexpr-throw R2", "Author2675" }, { 2u, "Allowing exception throwing in constant-evaluation", "Author4553" }, { 3u, "Allowing exception throwing in constant-evaluation", "Author4145" }, { 4u, "Allowing exception throwing in constant-evaluation", "Author3709" }, { 5u, "D3068R5: Allowing exception throwing in constant-evaluation", "Author4073" }, { 6u, "Allowing exception throwing in constant-evaluation", "Author1354" }, } },
    { 3070u, { { 0u, "Formatting enums", "Author4249" }, { 1u, "Formatting enums", "Author3290" }, { 2u, "Formatting enums", "Author3478" }, { 3u, "Formatting enums", "Author5103" }, } },
    { 3071u, { { 0u, "Protection against modifications in contracts", "Author3939" }, { 1u, "Protection against modifications in contracts", "Author4501" }, } },
    { 3072u, { { 0u, "Hassle-free thread attributes - HackMD", "Author5949" }, { 1u, "Hassle-free thread attributes - HackMD", "Author1166" }, { 2u, "Hassle-free thread attributes - HackMD", "Author3287" }, } },
    { 3073u, { { 0u, "Title997", "Author3764" }, } },
    { 3074u, { { 0u, "constexpr union lifetime", "Author653" }, { 1u, "std::uninitialized<T>", "Author4105" }, { 2u, "std::uninitialized<T>", "Author3771" }, { 3u, "trivial union (was std::uninitialized<T>)", "Author4517" }, { 4u, "trivial unions (was std::uninitialized<T>)", "Author2380" }, { 5u, "trivial unions (was std::uninitialized<T>)", "Author3149" }, { 6u, "trivial unions (was std::uninitialized<T>)", "Author1137" }, { 7u, "trivial unions (was std::uninitialized<T>)", "Author1612" }, } },
    { 3075u, { { 0u, "Title775", "Author2814" }, } },
    { 3079u, { { 0u, "Should ignore and observe exist for constant evaluation of contracts?", "Author4549" }, } },
    { 3081u, { { 0u, "Title187", "Author667" }, { 1u, "Title1061", "Author3985" }, { 2u, "Title1317", "Author4981" }, } },
    { 3084u, { { 0u, "Title153", "Author531" }, } },
    { 3085u, { { 0u, "noexcept policy for SD-9 (throws nothing)", "Author2553" }, { 1u, "noexcept policy for SD-9 (throws nothing)", "Author2143" }, { 2u, "noexcept policy for SD-9 (throws nothing)", "Author847" }, { 3u, "noexcept policy for SD-9 (throws nothing)", "Author1147" }, } },
    { 3086u, { { 0u, "Title525", "Author1903" }, { 1u, "Title177", "Author625" }, { 2u, "Title903", "Author3370" }, { 3u, "Title1523", "Author5742" }, } },
    { 3087u, { { 0u, "Make direct-initialization for enumeration types at least as permissive as direct-list-initialization", "Author2048" }, { 1u, "Make direct-initialization for enumeration types at least as permissive as direct-list-initialization", "Author5626" }, } },
    { 3088u, { { 0u, "Title127", "Author439" }, { 1u, "Title384", "Author1370" }, } },
    { 3090u, { { 0u, "std::execution Introduction", "Author1648" }, } },
    { 3091u, { { 0u, "Better lookups for `map` and `unordered_map`", "Author689" }, { 1u, "Better Lookups for `map` and `unordered_map`", "Author191" }, { 2u, "Better Lookups for `map` and `unordered_map`", "Author3195" }, { 3u, "Better Lookups for `map` and `unordered_map`", "Author1153" }, } },
    { 3092u, { { 0u, "Modules ABI Requirement", "Author2083" }, } },
    { 3093u, { { 0u, "Attributes on expressions", "Author2068" }, } },
    { 3094u, { { 0u, "`std::basic_fixed_string`", "Author2778" }, { 1u, "`std::basic_fixed_string`", "Author6150" }, { 2u, "`std::basic_fixed_string`", "Author5295" }, { 3u, "`std::basic_fixed_string`", "Author3243" }, { 4u, "`std::basic_fixed_string`", "Author6379" }, { 5u, "`std::basic_fixed_string`", "Author4166" }, { 6u, "`std::basic_fixed_string`", "Author4837" }, } },
    { 3095u, { { 0u, "P3095R0", "Author5702" }, } },
    { 3096u, { { 0u, "Function Parameter Reflection in Reflection for C++26", "Author4519" }, { 1u, "Function Parameter Reflection in Reflection for C++26", "Author2872" }, { 2u, "Function Parameter Reflection in Reflection for C++26", "Author2636" }, { 3u, "Function Parameter Reflection in Reflection for C++26", "Author2875" }, { 4u, "Function Parameter Reflection in Reflection for C++26", "Author6469" }, { 5u, "Function Parameter Reflection in Reflection for C++26", "Author5770" }, { 6u, "Function Parameter Reflection in Reflection for C++26", "Author594" }, { 7u, "Function Parameter Reflection in Reflection for C++26", "Author2527" }, { 8u, "Function Parameter Reflection in Reflection for C++26", "Author3749" }, } },
    { 3097u, { { 0u, "Title1468", "Author5574" }, } },
    { 3098u, { { 0u, "Contracts for C++: Postcondition captures", "Author2096" }, { 1u, "Contracts for C++: Postcondition captures", "Author1625" }, } },
    { 3100u, { { 0u, "Title1073", "Author4023" }, { 1u, "Title399", "Author1426" }, } },
    { 3101u, { { 0u, "Differentiating potentially throwing and non throwing violation handlers", "Author2570" }, } },
    { 3102u, { { 0u, "Title86", "Author255" }, } },
    { 3103u, { { 0u, "More bitset operations", "Author3473" }, { 1u, "More bitset operations", "Author5433" }, { 2u, "More bitset operations", "Author3077" }, } },
    { 3104u, { { 0u, "Bit permutations", "Author5017" }, { 1u, "Bit permutations", "Author2925" }, { 2u, "Bit permutations", "Author5054" }, { 3u, "Bit permutations", "Author1659" }, } },
    { 3105u, { { 0u, "constexpr std::uncaught_exceptions()", "Author6365" }, { 1u, "constexpr std::uncaught_exceptions()", "Author4861" }, { 2u, "constexpr std::uncaught_exceptions()", "Author4778" }, } },
    { 3106u, { { 0u, "Clarifying rules for brace elision in aggregateinitialization", "Author6407" }, { 1u, "Clarifying rules for brace elision in aggregateinitialization", "Author3589" }, } },
    { 3107u, { { 0u, "Permit an efficient implementation of std::print", "Author1192" }, { 1u, "Permit an efficient implementation of std::print", "Author5611" }, { 2u, "Permit an efficient implementation of std::print", "Author3897" }, { 3u, "Permit an efficient implementation of std::print", "Author1163" }, { 4u, "Permit an efficient implementation of std::print", "Author4712" }, { 5u, "Permit an efficient implementation of std::print", "Author4495" }, } },
    { 3109u, { { 0u, "Title1000", "Author3773" }, } },
    { 3110u, { { 0u, "Array element initialization via pattern expansion", "Author47" }, } },
    { 3111u, { { 0u, "Atomic Reduction Operations", "Author4334" }, { 1u, "Atomic Reduction Operations", "Author3651" }, { 2u, "Atomic Reduction Operations", "Author1110" }, { 3u, "Atomic Reduction Operations", "Author1161" }, { 4u, "Atomic Reduction Operations", "Author995" }, { 5u, "Atomic Reduction Operations", "Author5795" }, } },
    { 3112u, { { 0u, "Specify Constructor of `std::nullopt_t`", "Author4864" }, } },
    { 3113u, { { 0u, "2024-02-01 telecon", "Author2256" }, } },
    { 3114u, { { 0u, "dwdwedwed", "Author4661" }, } },
    { 3115u, { { 0u, "Title838", "Author3093" }, } },
    { 3116u, { { 0u, "Policy for `explicit`", "Author4792" }, } },
    { 3117u, { { 0u, "Extending Conditionally Borrowed", "Author6287" }, { 1u, "Extending Conditionally Borrowed", "Author1158" }, } },
    { 3119u, { { 0u, "Title1037", "Author3918" }, { 1u, "Title1408", "Author5347" }, } },
    { 3122u, { { 0u, "Using [[nodiscard]] should be Recommended Practice", "Author1266" }, { 1u, "Using [[nodiscard]] should be Recommended Practice", "Author972" }, } },
    { 3123u, { { 0u, "2024-02 Library Evolution Polls", "Author5459" }, } },
    { 3124u, { { 0u, "2024-02 Library Evolution Poll Outcomes", "Author5229" }, } },
    { 3125u, { { 0u, "D3125R0: Pointer Tagging", "Author3437" }, { 1u, "constexpr pointer tagging", "Author2350" }, { 2u, "constexpr pointer tagging", "Author3724" }, { 3u, "constexpr pointer tagging", "Author3040" }, } },
    { 3126u, { { 0u, "Test document for P3126r0", "Author5520" }, { 1u, "Test document for P3126r1", "Author2802" }, { 2u, "Test document for P3126r2", "Author1914" }, { 3u, "Test document for P3126r3", "Author2095" }, } },
    { 3127u, { { 0u, "Test document for P3127r0", "Author4522" }, { 1u, "Test document for P3127r1", "Author527" }, } },
    { 3128u, { { 0u, "Test document for P3128r0", "Author3004" }, { 1u, "Test document for P3128r1", "Author3365" }, { 2u, "Test document for P3128r2", "Author5682" }, { 3u, "Test document for P3128r3", "Author1239" }, } },
    { 3129u, { { 0u, "Test document for P3129r0", "Author2891" }, { 1u, "Test document for P3129r2", "Author3735" }, } },
    { 3130u, { { 0u, "Test document for P3130r0", "Author2051" }, { 1u, "Test document for P3130r1", "Author1272" }, { 2u, "Test document for P3130r2", "Author4415" }, { 3u, "Test document for P3130r3", "Author4477" }, } },
    { 3131u, { { 0u, "Test document for P3131r0", "Author2721" }, { 1u, "Test document for P3131r1", "Author3823" }, { 2u, "Test document for P3131r2", "Author1025" }, { 3u, "Test document for P3131r3", "Author5018" }, } },
    { 3133u, { { 0u, "Fast first-factor finding function", "Author2617" }, } },
    { 3135u, { { 0u, "Hazard Pointer Extensions", "Author3875" }, { 1u, "Hazard Pointer Extensions", "Author868" }, } },
    { 3136u, { { 0u, "Retiring niebloids", "Author615" }, { 1u, "Retiring niebloids", "Author1171" }, } },
    { 3137u, { { 0u, "views::to_input", "Author2956" }, { 1u, "views::to_input", "Author85" }, { 2u, "views::to_input", "Author6264" }, { 3u, "views::to_input", "Author4435" }, } },
    { 3138u, { { 0u, "views::cache_last", "Author2857" }, { 1u, "views::cache_last", "Author3100" }, { 2u, "views::cache_last", "Author5072" }, { 3u, "views::cache_latest", "Author4086" }, { 4u, "views::cache_latest", "Author4539" }, { 5u, "views::cache_latest", "Author2679" }, } },
    { 3139u, { { 0u, "Pointer cast for unique_ptr - HackMD", "Author816" }, { 1u, "Pointer cast for unique_ptr - HackMD", "Author3452" }, } },
    { 3140u, { { 0u, "std::int_least128_t", "Author1133" }, } },
    { 3142u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author3447" }, } },
    { 3143u, { { 0u, "An in-depth walk-through of the example in P3090R0", "Author5544" }, } },
    { 3144u, { { 0u, "Deprecate Delete of a Pointer to an Incomplete Type", "Author1930" }, { 1u, "Deprecate Delete of a Pointer to an Incomplete Type", "Author1440" }, { 2u, "Deleting a Pointer to an Incomplete Type Should be Ill-formed", "Author1258" }, } },
    { 3146u, { { 0u, "Clarifying std::variant converting construction", "Author3264" }, { 1u, "Clarifying std::variant converting construction", "Author6167" }, { 2u, "Clarifying std::variant converting construction", "Author6291" }, } },
    { 3147u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author4584" }, { 1u, "A Direction for Vector", "Author5652" }, } },
    { 3148u, { { 0u, "Some Proposed Improvements to the Presentation of Requirements for Functions", "Author951" }, { 1u, "Formatting of chrono Time Values", "Author5440" }, } },
    { 3149u, { { 0u, "Creating scopes for non-sequential concurrency", "Author6415" }, { 1u, "Creating scopes for non-sequential concurrency", "Author131" }, { 2u, "Creating scopes for non-sequential concurrency", "Author369" }, { 3u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author2208" }, { 4u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author4558" }, { 5u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author2270" }, { 6u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author3249" }, { 7u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author1117" }, { 8u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author830" }, { 9u, "`async_scope` -- Creating scopes for non-sequentialconcurrency", "Author589" }, } },
    { 3150u, { { 0u, "SG14 2024/02/15 P3150R0.docx", "Author3384" }, } },
    { 3151u, { { 0u, "SG19 2024/02/15 P3151R0.docx", "Author4296" }, } },
    { 3152u, { { 0u, "Title635", "Author2313" }, { 1u, "Title905", "Author3382" }, } },
    { 3153u, { { 0u, "An allocator-aware optional type", "Author3315" }, } },
    { 3154u, { { 0u, "Deprecating signed character types in iostreams", "Author4481" }, { 1u, "Deprecating signed character types in iostreams", "Author4300" }, } },
    { 3155u, { { 0u, "Title1063", "Author4003" }, } },
    { 3156u, { { 0u, "<tt>empty_checkable_range</tt>", "Author357" }, } },
    { 3157u, { { 0u, "Title1488", "Author5642" }, { 1u, "Generative Extensions for Reflection", "Author1565" }, } },
    { 3158u, { { 0u, "Headless Template Template Parameters", "Author6245" }, } },
    { 3159u, { { 0u, "C++ Range Adaptors and Parallel Algorithms", "Author1836" }, } },
    { 3160u, { { 0u, "An Allocator-aware `inplace_vector`", "Author1388" }, { 1u, "An Allocator-Aware `inplace_vector`", "Author206" }, { 2u, "An Allocator-Aware `inplace_vector`", "Author961" }, } },
    { 3161u, { { 0u, "P3161R0 - Unified integer overflow arithmetic", "Author3466" }, { 1u, "D3161R1 - Unified integer overflow arithmetic", "Author692" }, { 2u, "R3161R2 - Unified integer overflow arithmetic", "Author984" }, { 3u, "R3161R3 - Unified integer overflow arithmetic", "Author3719" }, { 4u, "R3161R4 - Unified integer overflow arithmetic", "Author5364" }, } },
    { 3162u, { { 0u, "LEWG [[nodiscard]] policy - HackMD", "Author4066" }, } },
    { 3164u, { { 0u, "Improving diagnostics for sender expressions", "Author4629" }, { 1u, "Improving diagnostics for sender expressions", "Author4869" }, { 2u, "Improving diagnostics for sender expressions", "Author5561" }, { 3u, "Early Diagnostics for Sender Expressions", "Author3867" }, } },
    { 3165u, { { 0u, "Contracts on virtual functions for the Contracts MVP", "Author4799" }, } },
    { 3166u, { { 0u, "Static Exception Specifications", "Author2680" }, } },
    { 3167u, { { 0u, "Attributes for the result name in a postcondition assertion", "Author4775" }, } },
    { 3168u, { { 0u, "Give std::optional range support - HackMD", "Author2337" }, { 1u, "Give std::optional range support - HackMD", "Author1968" }, { 2u, "Give std::optional range support - HackMD", "Author584" }, } },
    { 3169u, { { 0u, "Inherited contracts", "Author1722" }, } },
    { 3170u, { { 0u, "sinkable exception error message - HackMD", "Author1677" }, } },
    { 3171u, { { 0u, "Adding functionality to placeholder types", "Author3662" }, } },
    { 3172u, { { 0u, "Using `this` in constructor preconditions", "Author385" }, } },
    { 3173u, { { 0u, "Title1434", "Author5435" }, } },
    { 3174u, { { 0u, "SG16: Unicode meeting summaries 2023-10-11 through 2024-02-21", "Author1351" }, } },
    { 3175u, { { 0u, "Reconsidering the std::execution::on algorithm", "Author1473" }, { 1u, "Reconsidering the std::execution::on algorithm", "Author1601" }, { 2u, "Reconsidering the std::execution::on algorithm", "Author3361" }, { 3u, "Reconsidering the std::execution::on algorithm", "Author406" }, } },
    { 3176u, { { 0u, "The Oxford variadic comma", "Author4794" }, { 1u, "The Oxford variadic comma", "Author5749" }, } },
    { 3177u, { { 0u, "const prvalues in the conditional operator", "Author5910" }, } },
    { 3178u, { { 0u, "PxxxxR0: std::exception_typeid", "Author31" }, { 1u, "Retrieval of Exception Information", "Author4571" }, } },
    { 3179u, { { 0u, "C++ parallel range algorithms", "Author1922" }, { 1u, "C++ parallel range algorithms", "Author2483" }, { 2u, "C++ parallel range algorithms", "Author5186" }, { 3u, "C++ parallel range algorithms", "Author3122" }, { 4u, "C++ parallel range algorithms", "Author443" }, { 5u, "C++ parallel range algorithms", "Author2333" }, { 6u, "C++ parallel range algorithms", "Author2432" }, { 7u, "C++ parallel range algorithms", "Author1072" }, } },
    { 3180u, { { 0u, "C++ Standard Library Issues to be moved in Tokyo, Mar. 2024", "Author4312" }, } },
    { 3181u, { { 0u, "Atomic stores and object lifetimes", "Author1445" }, } },
    { 3182u, { { 0u, "Add `pop_value` methods to container adaptors", "Author164" }, { 1u, "Add container pop methods that return the popped value", "Author4041" }, } },
    { 3183u, { { 0u, "Contract testing support", "Author5836" }, { 1u, "Contract testing support", "Author4662" }, } },
    { 3185u, { { 0u, "A proposed direction for C++ Standard Networking based on IETF TAPS", "Author5496" }, } },
    { 3187u, { { 1u, "remove ensure_started and start_detached from P2300", "Author3238" }, } },
    { 3188u, { { 0u, "Proxy: A Pointer-Semantics-Based Polymorphism Library", "Author356" }, } },
    { 3189u, { { 0u, "P3189R0", "Author5147" }, } },
    { 3190u, { { 0u, "talk_ewg", "Author6261" }, } },
    { 3191u, { { 0u, "Feedback on the scalability of contract violation handlers in P2900", "Author6197" }, } },
    { 3192u, { { 0u, "PowerPoint-Prsentation", "Author4747" }, } },
    { 3194u, { { 0u, "PowerPoint-Prsentation", "Author5472" }, } },
    { 3196u, { { 0u, "Core \"ready\" Issues", "Author2855" }, } },
    { 3197u, { { 0u, "A response to the Tokyo EWG polls on the Contracts MVP", "Author3266" }, } },
    { 3198u, { { 0u, "A takeaway from the Tokyo LEWG meeting on Contracts MVP", "Author2372" }, } },
    { 3199u, { { 0u, "Choices for ~make_optional~ and ~value_or()~", "Author5538" }, } },
    { 3201u, { { 0u, "LEWG [[nodiscard]] policy - HackMD", "Author217" }, { 1u, "LEWG [[nodiscard]] policy - HackMD", "Author5776" }, } },
    { 3203u, { { 0u, "Title640", "Author2344" }, } },
    { 3204u, { { 0u, "Title332", "Author1151" }, } },
    { 3205u, { { 0u, "Throwing from a function should be a contract violation.", "Author5821" }, } },
    { 3206u, { { 0u, "A sender query for completion behaviour", "Author5644" }, } },
    { 3207u, { { 0u, "More & like - HackMD", "Author3485" }, } },
    { 3208u, { { 0u, "Title1671", "Author6356" }, } },
    { 3210u, { { 0u, "P3210R0 A Postcondition *is* a Pattern Match", "Author5853" }, { 1u, "P3210R1 A Postcondition *is* a Pattern Match", "Author655" }, { 2u, "P3210R2 A Postcondition *is* a Pattern Match", "Author1091" }, } },
    { 3211u, { { 0u, "<code>views::transform_join</code>", "Author1913" }, } },
    { 3212u, { { 0u, "The contract of sort()", "Author4749" }, } },
    { 3213u, { { 0u, "2024-04 Library Evolution Polls", "Author3835" }, } },
    { 3214u, { { 0u, "2024-04 Library Evolution Poll Outcomes", "Author2249" }, } },
    { 3215u, { { 0u, "Using variable template template without meta programming", "Author4977" }, } },
    { 3216u, { { 0u, "<code>views::slice</code>", "Author419" }, } },
    { 3217u, { { 0u, "Adjoints to \"Enabling list-initialization for algorithms\": find_last", "Author3167" }, } },
    { 3218u, { { 0u, "const references to constexpr variables - HackMD", "Author3145" }, } },
    { 3220u, { { 0u, "<code>views::delimit</code>", "Author5162" }, } },
    { 3221u, { { 0u, "Disable pointers to contracted functions", "Author1803" }, } },
    { 3222u, { { 0u, "Fix C++26 by adding transposed special cases for P2642 layouts", "Author5811" }, { 1u, "Fix C++26 by adding transposed special cases for P2642 layouts", "Author3434" }, } },
    { 3223u, { { 0u, "Making std::basic_istream::ignore less surprising", "Author4345" }, { 1u, "Making std::istream::ignore less surprising", "Author3016" }, } },
    { 3224u, { { 0u, "PowerPoint-Prsentation", "Author5986" }, } },
    { 3225u, { { 0u, "PowerPoint-Prsentation", "Author551" }, } },
    { 3226u, { { 0u, "Title1405", "Author5334" }, } },
    { 3227u, { { 0u, "Fixing the library API for contract violation handling", "Author3499" }, { 1u, "Fixing the library API for contract violation handling", "Author4110" }, } },
    { 3228u, { { 0u, "Title1612", "Author6110" }, { 1u, "Title1624", "Author6147" }, } },
    { 3229u, { { 0u, "Title1042", "Author3929" }, { 1u, "Title1274", "Author4816" }, } },
    { 3230u, { { 0u, "<code>views::(take|drop)_exactly</code>", "Author5913" }, { 1u, "<code>views::unchecked_(take|drop)</code>", "Author5510" }, { 2u, "<code>views::unchecked_(take|drop)</code>", "Author1097" }, } },
    { 3232u, { { 0u, "User-defined erroneous behaviour", "Author459" }, { 1u, "User-defined erroneous behaviour", "Author4191" }, } },
    { 3233u, { { 0u, "Issues with P2786 (\"Trivial Relocatability For C++26\")", "Author1644" }, } },
    { 3234u, { { 0u, "Utility to check if a pointer is in a given range", "Author5806" }, { 1u, "Utility to check if a pointer is in a given range", "Author4440" }, } },
    { 3235u, { { 0u, "std::print more types faster with less memory", "Author3928" }, { 1u, "std::print more types faster with less memory", "Author4433" }, { 2u, "std::print more types faster with less memory", "Author2949" }, { 3u, "std::print more types faster with less memory", "Author295" }, } },
    { 3236u, { { 0u, "Please reject P2786 and adopt P1144", "Author2788" }, { 1u, "Please reject P2786 and adopt P1144", "Author3331" }, } },
    { 3237u, { { 0u, "Matrix Representation of Contract Semantics", "Author1766" }, { 1u, "P3237 - Matrix Representation of Contract Semantics", "Author4561" }, { 2u, "P3237 - Matrix Representation of Contract Semantics", "Author592" }, } },
    { 3238u, { { 0u, "An alternate proposal for naming contract semantics", "Author1531" }, } },
    { 3239u, { { 0u, "A Relocating Swap", "Author359" }, } },
    { 3240u, { { 0u, "p3240", "Author5571" }, } },
    { 3241u, { { 0u, "P3241", "Author3539" }, } },
    { 3242u, { { 0u, "Copy and fill for mdspan", "Author1982" }, { 1u, "Copy and fill for mdspan", "Author641" }, } },
    { 3243u, { { 0u, "Give <code>std::optional</code> Range Support", "Author3782" }, } },
    { 3244u, { { 0u, "<code>[[nodiscard]]</code> Policy", "Author787" }, } },
    { 3245u, { { 0u, "Allow `[[nodiscard]]` in type alias declarations", "Author5255" }, { 1u, "Allow `[[nodiscard]]` in type alias declarations", "Author2654" }, { 2u, "Allow `[[nodiscard]]` in type alias declarations", "Author858" }, } },
    { 3247u, { { 0u, "Deprecate the notion of trivial types", "Author5507" }, { 1u, "Deprecate the notion of trivial types", "Author554" }, { 2u, "Deprecate the notion of trivial types", "Author4970" }, } },
    { 3248u, { { 0u, "Require [u]intptr_t", "Author3587" }, { 1u, "Require [u]intptr_t", "Author5414" }, { 2u, "Require [u]intptr_t", "Author11" }, { 3u, "Require [u]intptr_t", "Author5736" }, } },
    { 3249u, { { 0u, "P3249R0 - unified pattern matching and contracts syntax", "Author732" }, } },
    { 3250u, { { 0u, "C++ contracts with regards to function pointers", "Author1896" }, } },
    { 3251u, { { 0u, "C++ Contracts and Coroutines", "Author5579" }, } },
    { 3253u, { { 0u, "Distinguishing between member and free coroutines", "Author1515" }, } },
    { 3254u, { { 0u, "Reserve identifiers preceded by `@` for non-ignorableannotation tokens", "Author4668" }, } },
    { 3255u, { { 0u, "Expose whether atomic notifying operations are lockfree", "Author3255" }, { 1u, "Expose whether atomic notifying operations are lockfree", "Author2747" }, } },
    { 3257u, { { 0u, "Make the predicate of <TT>contract_assert</TT> more regular", "Author4960" }, } },
    { 3258u, { { 0u, "Title402", "Author1431" }, } },
    { 3259u, { { 0u, "const by default - HackMD", "Author6391" }, } },
    { 3261u, { { 0u, "Title114", "Author390" }, { 1u, "Title606", "Author2215" }, { 2u, "Title1580", "Author6004" }, } },
    { 3263u, { { 0u, "P3263R0 - Encoding annotated char", "Author4251" }, } },
    { 3264u, { { 0u, "Double-evaluation of preconditions", "Author2065" }, { 1u, "Double-evaluation of preconditions", "Author2816" }, } },
    { 3265u, { { 0u, "Ship Contracts in a TS", "Author4052" }, { 1u, "Ship Contracts in a TS", "Author361" }, { 2u, "Ship Contracts in a TS", "Author1453" }, { 3u, "Ship Contracts in a TS", "Author1902" }, } },
    { 3266u, { { 0u, "non referenceable types - HackMD", "Author2414" }, } },
    { 3267u, { { 0u, "C++ contracts implementation strategies", "Author1420" }, { 1u, "C++ contracts implementation strategies", "Author2842" }, } },
    { 3268u, { { 0u, "C++ Contracts Constification Challenges Concerning Current Code", "Author5490" }, } },
    { 3269u, { { 0u, "Do Not Ship Contracts as a TS", "Author671" }, } },
    { 3270u, { { 0u, "Title1036", "Author3917" }, } },
    { 3271u, { { 0u, "Title60", "Author160" }, { 1u, "Title1284", "Author4849" }, } },
    { 3273u, { { 0u, "Introspection of Closure Types", "Author2241" }, } },
    { 3274u, { { 0u, "Title1313", "Author4961" }, } },
    { 3275u, { { 0u, "Replace simd operator[] with getter and setter functions or not [P3275R0]", "Author2952" }, } },
    { 3276u, { { 0u, "Title59", "Author158" }, } },
    { 3278u, { { 0u, "P3278R0", "Author2411" }, } },
    { 3279u, { { 0u, "CWG2463: What \"trivially fooable\" should mean", "Author2448" }, } },
    { 3281u, { { 0u, "Contract Checks Should be Regular C++", "Author1605" }, } },
    { 3282u, { { 0u, "Static Storage for C++ Concurrent <tt>bounded_queue</tt>", "Author41" }, } },
    { 3283u, { { 0u, "P3283. Adding .first() and .last() to strings", "Author5365" }, } },
    { 3284u, { { 0u, "`finally`, `write_env`, and `unstoppable` SenderAdaptors", "Author3705" }, { 1u, "`finally`, `write_env`, and `unstoppable` SenderAdaptors", "Author1123" }, { 2u, "`write_env` and `unstoppable` Sender Adaptors", "Author738" }, { 3u, "`write_env` and `unstoppable` Sender Adaptors", "Author4550" }, } },
    { 3285u, { { 0u, "Title108", "Author360" }, } },
    { 3286u, { { 0u, "Module Metadata Distributed With Pre-Built Libraries", "Author386" }, } },
    { 3287u, { { 0u, "Exploration of namespaces for std::simd [P3287R0]", "Author5703" }, { 1u, "Exploration of namespaces for std::simd [P3287R1]", "Author5649" }, { 2u, "Exploration of namespaces for std::simd [P3287R2]", "Author3787" }, { 3u, "Exploration of namespaces for std::simd [P3287R3]", "Author2009" }, } },
    { 3288u, { { 0u, "std::elide", "Author1837" }, { 1u, "std::elide", "Author6113" }, { 2u, "std::elide", "Author388" }, { 3u, "std::elide", "Author591" }, } },
    { 3289u, { { 0u, "consteval blocks", "Author768" }, { 1u, "consteval blocks", "Author5138" }, } },
    { 3290u, { { 0u, "Title192", "Author678" }, { 1u, "Title1334", "Author5065" }, { 2u, "Title1072", "Author4022" }, } },
    { 3292u, { { 0u, "P3292R0R0: Provenance and Concurrency", "Author5320" }, } },
    { 3293u, { { 0u, "Splicing a base class subobject", "Author245" }, { 1u, "Splicing a base class subobject", "Author1361" }, } },
    { 3294u, { { 0u, "Code Injection with Token Sequences", "Author5972" }, { 1u, "Code Injection with Token Sequences", "Author3449" }, { 2u, "Code Injection with Token Sequences", "Author4131" }, } },
    { 3295u, { { 0u, "Freestanding constexpr containers and constexpr exception types", "Author5764" }, { 1u, "Freestanding constexpr containers and constexpr exception types", "Author1454" }, { 2u, "Freestanding constexpr containers and constexpr exception types", "Author4449" }, { 3u, "Freestanding constexpr containers and constexpr exception types", "Author2758" }, } },
    { 3296u, { { 0u, "let_async_scope.html", "Author1080" }, { 1u, "let_async_scope.html", "Author1687" }, { 2u, "let_async_scope.html", "Author4719" }, { 3u, "let_async_scope.html", "Author4026" }, { 4u, "let_async_scope.html", "Author1714" }, } },
    { 3297u, { { 0u, "C++26 Needs Contract Checking", "Author3646" }, { 1u, "C++26 Needs Contract Checking", "Author4303" }, } },
    { 3298u, { { 0u, "Implicit user-defined conversion functions as operator.()", "Author1947" }, { 1u, "Implicit user-defined conversion functions as operator.()", "Author6358" }, } },
    { 3299u, { { 0u, "Proposal to extend <code>std::simd</code> with range constructors", "Author3295" }, { 1u, "Proposal to extend <code>std::simd</code> with range constructors", "Author824" }, { 2u, "Proposal to extend <code>std::simd</code> with range constructors", "Author3730" }, { 3u, "Proposal to extend std::simd with range constructors", "Author5946" }, } },
    { 3300u, { { 0u, "C++ Asynchronous Parallel Algorithms", "Author5617" }, } },
    { 3301u, { { 0u, "inplace_stoppable_base", "Author6260" }, } },
    { 3302u, { { 0u, "SG16: Unicode meeting summaries 2024-03-13 through 2024-05-08", "Author4155" }, } },
    { 3303u, { { 0u, "Fixing Lazy Sender Algorithm Customization", "Author2150" }, { 1u, "Fixing Lazy Sender Algorithm Customization", "Author3284" }, } },
    { 3304u, { { 0u, "SG14 2024/02/15 P3304R0.docx", "Author5085" }, } },
    { 3305u, { { 0u, "SG19 2024/05/22 P3305R0.docx", "Author6019" }, } },
    { 3306u, { { 0u, "Atomic Read-Modify-Write Improvements", "Author6024" }, } },
    { 3307u, { { 0u, "Floating-Point Maximum/Minimum Function Objects", "Author5506" }, } },
    { 3308u, { { 0u, "mdarray design questions and answers", "Author2387" }, } },
    { 3309u, { { 0u, "constexpr atomic<T> and atomic_ref<T>", "Author3034" }, { 1u, "constexpr atomic<T> and atomic_ref<T>", "Author6462" }, { 2u, "constexpr atomic<T> and atomic_ref<T>", "Author6229" }, { 3u, "atomic<T> and atomic_ref<T>", "Author6288" }, } },
    { 3310u, { { 0u, "Solving partial ordering issues introduced by P0522R0", "Author6294" }, { 1u, "Solving partial ordering issues introduced by P0522R0", "Author56" }, { 2u, "Solving partial ordering issues introduced by P0522R0", "Author4993" }, { 3u, "Solving partial ordering issues introduced by P0522R0", "Author6463" }, { 4u, "Solving issues introduced by P0522R0", "Author6331" }, { 5u, "Solving issues introduced by relaxed template templateparameter matching", "Author5144" }, } },
    { 3311u, { { 0u, "An opt-in approach for integration of traditional assert facilities in C++ contracts", "Author1535" }, } },
    { 3312u, { { 0u, "Overload Set Types", "Author4978" }, { 1u, "Overload Set Types", "Author4518" }, } },
    { 3313u, { { 0u, "Impacts of noexept on ARM table based exception metadata", "Author477" }, } },
    { 3314u, { { 0u, "2024-07 Library Evolution Polls", "Author6497" }, } },
    { 3315u, { { 0u, "2024-07 Library Evolution Poll Outcomes", "Author3756" }, } },
    { 3316u, { { 0u, "A more predictable unchecked semantic", "Author2064" }, } },
    { 3317u, { { 0u, "Compile time resolved contracts", "Author1434" }, } },
    { 3318u, { { 0u, "Throwing violation handlers, from an application programming perspective", "Author1563" }, } },
    { 3319u, { { 0u, "Add an iota object for simd (and more) [P3319R0]", "Author4746" }, { 1u, "Add an iota object for simd (and more) [P3319R1]", "Author5502" }, { 2u, "Add an iota object for simd (and more) [P3319R2]", "Author3869" }, { 3u, "Add an iota object for simd (and more) [P3319R3]", "Author3585" }, { 4u, "Add an iota object for simd (and more) [P3319R4]", "Author3405" }, { 5u, "Add an iota object for simd (and more) [P3319R5]", "Author1546" }, } },
    { 3320u, { { 0u, "DeleteIfIncomplete", "Author4193" }, } },
    { 3321u, { { 0u, "Title89", "Author272" }, } },
    { 3323u, { { 0u, "cv-qualified types in atomic and atomic_ref", "Author364" }, { 1u, "cv-qualified types in atomic and atomic_ref", "Author3574" }, } },
    { 3324u, { { 0u, "Attributes for namespace aliases, template parameters, and lambda captures", "Author1980" }, } },
    { 3325u, { { 0u, "A Utility for Creating Execution Environments", "Author3517" }, { 1u, "A Utility for Creating Execution Environments", "Author1686" }, { 2u, "A Utility for Creating Execution Environments", "Author2870" }, { 3u, "A Utility for Creating Execution Environments", "Author4196" }, { 4u, "A Utility for Creating Execution Environments", "Author2438" }, { 5u, "A Utility for Creating Execution Environments", "Author3669" }, } },
    { 3326u, { { 0u, "favor ease of use - HackMD", "Author4949" }, } },
    { 3327u, { { 0u, "Title864", "Author3185" }, } },
    { 3328u, { { 0u, "Title756", "Author2762" }, } },
    { 3329u, { { 0u, "P3329R0 Healing the Filter View", "Author3012" }, } },
    { 3330u, { { 0u, "User-defined Atomic Read-Modify-Write Operations", "Author644" }, } },
    { 3331u, { { 0u, "Title652", "Author2416" }, { 1u, "Title1054", "Author3964" }, } },
    { 3332u, { { 0u, "Title1487", "Author5639" }, } },
    { 3334u, { { 0u, "Cross Static Variables", "Author2801" }, } },
    { 3335u, { { 0u, "Structured Core Options", "Author5804" }, { 1u, "Structured Core Options", "Author1095" }, { 2u, "Structured Core Options", "Author288" }, { 3u, "Structured Core Options", "Author4084" }, { 4u, "WITHDRAWN: Structured Core Options", "Author6029" }, } },
    { 3336u, { { 0u, "Title992", "Author3748" }, } },
    { 3338u, { { 0u, "Observe and ignore semantics in constant evaluation", "Author1525" }, } },
    { 3339u, { { 0u, "C++ Ecosystem IS Open License", "Author6457" }, { 1u, "WITHDRAWN: C++ Ecosystem IS Open License", "Author790" }, } },
    { 3340u, { { 0u, "A Consistent Grammar for Sequences", "Author4498" }, } },
    { 3341u, { { 0u, "C++ Standard Library Issues to be moved in St. Louis", "Author4860" }, } },
    { 3342u, { { 0u, "C++ Ecosystem Working Draft", "Author3155" }, { 1u, "C++ Ecosystem Working Draft", "Author2399" }, { 2u, "WITHDRAWN: Working Draft, Standard for C++ Ecosystem", "Author5482" }, } },
    { 3343u, { { 0u, "Contracts: What we are doing here - P3343R0", "Author5587" }, } },
    { 3344u, { { 0u, "Contracts on Virtual Functions - P3343R0 - Presentation on P3097R0", "Author5524" }, } },
    { 3345u, { { 0u, "Core \"ready\" Issues", "Author5045" }, } },
    { 3346u, { { 0u, "threadlocalmeansfiber-specific", "Author3395" }, } },
    { 3347u, { { 0u, "P3347R0 Pointer lifetime-end zap proposed solutions: Tighten IDB for invalid and prospective pointers", "Author1406" }, { 1u, "P3347R1 Pointer lifetime-end zap proposed solutions: Tighten IDB for invalid and prospective pointers", "Author3621" }, } },
    { 3348u, { { 0u, "C++26 should refer to C23 not C17", "Author3552" }, { 1u, "Title884", "Author3262" }, { 2u, "Title64", "Author176" }, { 3u, "Title1127", "Author4212" }, } },
    { 3349u, { { 0u, "Converting contiguous iterators to pointers", "Author810" }, { 1u, "Converting contiguous iterators to pointers", "Author577" }, } },
    { 3351u, { { 0u, "views::scan", "Author1620" }, { 1u, "views::scan", "Author5931" }, { 2u, "views::scan", "Author5763" }, } },
    { 3352u, { { 0u, "P3352R0 Taming the Demons (C++ version) Undefined Behavior and Partial Program Correctness", "Author3136" }, } },
    { 3354u, { { 0u, "Issues with P2786 (\"Trivial Relocatability For C++26\")", "Author3616" }, } },
    { 3355u, { { 0u, "Fix submdspan for C++26", "Author1478" }, { 1u, "Fix submdspan for C++26", "Author6398" }, { 2u, "Fix submdspan for C++26", "Author3467" }, } },
    { 3356u, { { 0u, "non_invalidating_vector - HackMD", "Author3443" }, } },
    { 3357u, { { 0u, "NRVO with factory and after_factory", "Author3029" }, } },
    { 3358u, { { 0u, "SARIF for Structured Diagnostics", "Author3303" }, } },
    { 3359u, { { 0u, "P2667R0++", "Author886" }, } },
    { 3360u, { { 0u, "P2667R0++", "Author3418" }, } },
    { 3361u, { { 0u, "contracts.dvi", "Author5422" }, { 1u, "contracts.dvi", "Author3015" }, } },
    { 3362u, { { 0u, "Static analysis and 'safety' of Contracts, P2900 vs. P2680/P3285", "Author287" }, } },
    { 3364u, { { 0u, "Remove Deprecated u8path overloads From C++26", "Author5448" }, } },
    { 3365u, { { 0u, "Remove the Deprecated Class Template from C++26", "Author5536" }, { 1u, "Remove the Deprecated Class Template from C++26", "Author2175" }, } },
    { 3366u, { { 0u, "Remove Deprecated Atomic Initialization API from C++26", "Author24" }, { 1u, "Remove Deprecated Atomic Initialization API from C++26", "Author2004" }, } },
    { 3367u, { { 0u, "constexpr coroutines", "Author1216" }, { 1u, "constexpr coroutines", "Author5739" }, { 2u, "constexpr coroutines", "Author2931" }, { 3u, "constexpr coroutines", "Author1526" }, { 4u, "constexpr coroutines", "Author1319" }, } },
    { 3369u, { { 0u, "constexpr for uninitialized_default_construct", "Author2086" }, } },
    { 3370u, { { 0u, "Add new library headers from C23", "Author4283" }, { 1u, "Add new library headers from C23", "Author3007" }, } },
    { 3371u, { { 0u, "Fix C++26 by making the symmetric and Hermitian rank-k and rank-2k updates consistent with the BLAS", "Author6468" }, { 1u, "Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", "Author5828" }, { 2u, "Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", "Author2324" }, { 3u, "Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", "Author1278" }, { 4u, "Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS", "Author1368" }, } },
    { 3372u, { { 0u, "constexpr containers", "Author2734" }, { 1u, "constexpr containers", "Author452" }, { 2u, "constexpr containers", "Author4057" }, { 3u, "constexpr containers", "Author3192" }, } },
    { 3373u, { { 0u, "Paper", "Author5850" }, { 1u, "Paper R1", "Author1504" }, } },
    { 3374u, { { 0u, "Adding formatter for fpos<mbstate_t>", "Author6162" }, { 1u, "Adding formatter for fpos<mbstate_t>", "Author5707" }, } },
    { 3375u, { { 0u, "Reproducible floating-point results", "Author3042" }, { 1u, "Reproducible floating-point results", "Author6312" }, { 2u, "Reproducible floating-point results", "Author1790" }, } },
    { 3376u, { { 0u, "Contract assertions versus static analysis and 'safety'", "Author1753" }, } },
    { 3378u, { { 0u, "constexpr exception types", "Author2535" }, { 1u, "constexpr exception types", "Author4452" }, { 2u, "constexpr exception types", "Author946" }, } },
    { 3379u, { { 0u, "Constrain std::expected equality operators", "Author2026" }, } },
    { 3380u, { { 0u, "Extending support for class types as non-type templateparameters", "Author6232" }, { 1u, "Extending support for class types as non-type templateparameters", "Author4333" }, } },
    { 3381u, { { 0u, "Syntax for Reflection", "Author4016" }, } },
    { 3382u, { { 0u, "Coarse clocks and resolutions", "Author5488" }, } },
    { 3383u, { { 0u, "mdspan.at()", "Author1196" }, { 1u, "mdspan.at()", "Author1860" }, { 2u, "mdspan.at()", "Author1014" }, } },
    { 3384u, { { 0u, "__COUNTER__", "Author828" }, } },
    { 3385u, { { 0u, "Attributes reflection", "Author1801" }, { 1u, "Attributes reflection", "Author5344" }, { 2u, "Attributes reflection", "Author4199" }, { 3u, "Attributes reflection", "Author1634" }, { 4u, "Attributes reflection", "Author1668" }, } },
    { 3386u, { { 0u, "Title708", "Author2612" }, { 1u, "Title1193", "Author4468" }, } },
    { 3387u, { { 0u, "Title148", "Author515" }, } },
    { 3388u, { { 0u, "Paper", "Author6433" }, { 1u, "Paper R1", "Author4974" }, { 2u, "Paper R2", "Author374" }, } },
    { 3389u, { { 0u, "Slides", "Author2224" }, } },
    { 3390u, { { 0u, "Safe C++", "Author2379" }, } },
    { 3391u, { { 0u, "constexpr std::format", "Author5339" }, { 1u, "constexpr std::format", "Author4967" }, } },
    { 3392u, { { 0u, "Do not promise support for function syntax of operators", "Author5741" }, } },
    { 3394u, { { 0u, "Annotations for Reflection", "Author5342" }, { 1u, "Annotations for Reflection", "Author2959" }, { 2u, "Annotations for Reflection", "Author4795" }, } },
    { 3395u, { { 0u, "Formatting of std::error_code", "Author863" }, { 1u, "Fix encoding issues and add a formatter for std::error_code", "Author1732" }, { 2u, "Fix encoding issues and add a formatter for std::error_code", "Author1632" }, { 3u, "Fix encoding issues and add a formatter for std::error_code", "Author3169" }, } },
    { 3396u, { { 0u, "Title1678", "Author6381" }, { 1u, "Title1337", "Author5082" }, } },
    { 3397u, { { 0u, "Clarify requirements on extended floating point types", "Author5870" }, } },
    { 3398u, { { 0u, "User specified type decay", "Author242" }, } },
    { 3399u, { { 0u, "Title1090", "Author4071" }, } },
    { 3400u, { { 0u, "Title628", "Author2289" }, { 1u, "Title210", "Author749" }, } },
    { 3401u, { { 0u, "Title69", "Author202" }, } },
    { 3402u, { { 0u, "A Safety Profile Verifying Class Initialization", "Author5" }, { 1u, "A Safety Profile Verifying Class Initialization", "Author3111" }, { 2u, "A Safety Profile Verifying Initialization", "Author4714" }, } },
    { 3403u, { { 0u, "The Undefined Behavior Question", "Author5450" }, } },
    { 3404u, { { 0u, "std::at : Range-checked accesses to arbitrary containers", "Author645" }, } },
    { 3405u, { { 0u, "Out-of-order designated initializers", "Author2238" }, } },
    { 3406u, { { 0u, "Title686", "Author2546" }, } },
    { 3407u, { { 0u, "Make idiomatic usage of `offsetof` well-defined", "Author2667" }, { 1u, "Make idiomatic usage of `offsetof` well-defined", "Author1113" }, } },
    { 3409u, { { 0u, "Enabling more efficient stop-token based cancellation of senders", "Author5279" }, { 1u, "Enabling more efficient stop-token based cancellation of senders", "Author4221" }, } },
    { 3411u, { { 0u, "`any_view`", "Author4390" }, { 1u, "`any_view`", "Author5353" }, } },
    { 3412u, { { 0u, "String interpolation", "Author2608" }, { 1u, "String interpolation", "Author5794" }, } },
    { 3413u, { { 0u, "Title1596", "Author6054" }, } },
    { 3415u, { { 0u, "Range interface in std::optional breaks code!", "Author4854" }, } },
    { 3416u, { { 0u, "exception_ptr_cast: Add && = delete overload", "Author1655" }, } },
    { 3417u, { { 0u, "Improve the handling of exceptions thrown from contract predicates", "Author5892" }, { 1u, "Improve the handling of exceptions thrown from contract predicates", "Author1061" }, } },
    { 3419u, { { 0u, "Reflection Syntax Options Summary", "Author2228" }, } },
    { 3420u, { { 0u, "Reflection of Templates", "Author4151" }, { 1u, "Reflection of Templates", "Author6126" }, } },
    { 3421u, { { 0u, "Consteval destructors", "Author4059" }, } },
    { 3422u, { { 0u, "Allow main function in named modules", "Author1277" }, { 1u, "Allow main function in named modules", "Author5584" }, } },
    { 3423u, { { 0u, "Extending User-Generated Diagnostic Messages", "Author5101" }, { 1u, "Extending User-Generated Diagnostic Messages", "Author5241" }, } },
    { 3424u, { { 0u, "Define Delete With Throwing Exception Specification", "Author107" }, } },
    { 3425u, { { 0u, "Reducing operation-state sizes for subobject child operations", "Author5818" }, { 1u, "D3425R1: Reducing operation-state sizes for subobject child operations", "Author4341" }, } },
    { 3427u, { { 0u, "Hazard Pointer Synchronous Reclamation", "Author4461" }, { 1u, "Hazard Pointer Synchronous Reclamation", "Author1778" }, } },
    { 3428u, { { 0u, "Hazard Pointer Batches", "Author5379" }, { 1u, "Hazard Pointer Batches", "Author1218" }, } },
    { 3429u, { { 0u, "<meta> should minimize standard librarydependencies", "Author5137" }, { 1u, "<meta> should minimize standard librarydependencies", "Author1391" }, } },
    { 3430u, { { 0u, "simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R0]", "Author3602" }, { 1u, "simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R1]", "Author3067" }, { 2u, "simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R2]", "Author5235" }, { 3u, "simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R3]", "Author2074" }, } },
    { 3431u, { { 0u, "Deprecate `const`-qualifier on begin/end of views", "Author5778" }, } },
    { 3433u, { { 0u, "Allocator Support for Operation States", "Author841" }, } },
    { 3435u, { { 0u, "Reflection and meta-programming", "Author1102" }, } },
    { 3436u, { { 0u, "Title837", "Author3092" }, { 1u, "Title1319", "Author5004" }, } },
    { 3437u, { { 0u, "Title770", "Author2803" }, { 1u, "Title246", "Author879" }, } },
    { 3438u, { { 0u, "Make integral overloads of std::to_string constexpr", "Author181" }, } },
    { 3439u, { { 0u, "Title1611", "Author6108" }, { 1u, "Title109", "Author366" }, } },
    { 3440u, { { 0u, "Add n_elements named constructor to std::simd", "Author4598" }, } },
    { 3441u, { { 0u, "Rename <code>simd_split</code> to <code>simd_chunk</code>", "Author6309" }, { 1u, "Rename <code>simd_split</code> to <code>simd_chunk</code>", "Author4018" }, { 2u, "Rename <code>simd_split</code> to <code>simd_chunk</code>", "Author2559" }, } },
    { 3442u, { { 0u, "Title643", "Author2355" }, { 1u, "Title595", "Author2171" }, } },
    { 3443u, { { 0u, "P3443R0 - Reflection on SG21s 2024 Process", "Author5305" }, } },
    { 3444u, { { 0u, "Memory Safety without Lifetime Parameters", "Author5444" }, } },
    { 3445u, { { 0u, "Add utilities for easier type/bit casting in std::simd", "Author6493" }, } },
    { 3446u, { { 0u, "Title1164", "Author4347" }, } },
    { 3447u, { { 0u, "Title284", "Author1015" }, } },
    { 3449u, { { 0u, "constexpr std::generator", "Author4817" }, { 1u, "constexpr generator", "Author1394" }, } },
    { 3450u, { { 0u, "Extend std::is_within_lifetime", "Author5572" }, } },
    { 3451u, { { 0u, "A Suggestion for Reflection Access Control", "Author5231" }, } },
    { 3454u, { { 0u, "Revising Atomic Max/Min Operations", "Author4037" }, } },
    { 3455u, { { 0u, "SG14 2024/05/22 P3455R0.docx", "Author3154" }, } },
    { 3456u, { { 0u, "system_scheduler on Win32, Darwin and Linux", "Author5773" }, } },
    { 3457u, { { 0u, "SG19 2024/10/15 P3457R0.docx", "Author2066" }, } },
    { 3460u, { { 0u, "Implementors Notes", "Author1933" }, } },
    { 3465u, { { 0u, "Title874", "Author3219" }, } },
    { 3466u, { { 0u, "Title1518", "Author5727" }, { 1u, "Title751", "Author2742" }, } },
    { 3467u, { { 0u, "P3467R0R0: 2024-10 Library Evolution Polls", "Author5131" }, } },
    { 3468u, { { 0u, "2024-10 Library Evolution Poll Outcomes", "Author6143" }, } },
    { 3469u, { { 0u, "Virtual deducing", "Author29" }, } },
    { 3470u, { { 0u, "Interface-Unit-Only Module Library Support", "Author3241" }, } },
    { 3471u, { { 0u, "Standard library hardening", "Author4564" }, { 1u, "Standard library hardening", "Author4676" }, { 2u, "Standard library hardening", "Author1983" }, { 3u, "Standard library hardening", "Author4673" }, { 4u, "Standard library hardening", "Author266" }, } },
    { 3472u, { { 0u, "Make fiber_context::can_resume() const", "Author4532" }, { 1u, "Make fiber_context::can_resume() const", "Author733" }, } },
    { 3473u, { { 0u, "Splicing Should Respect Access Control", "Author6328" }, } },
    { 3474u, { { 0u, "std::arguments", "Author5445" }, } },
    { 3475u, { { 0u, "Defang and deprecate memory_order::consume", "Author5994" }, { 1u, "Defang and deprecate memory_order::consume", "Author3206" }, { 2u, "Defang and deprecate memory_order::consume", "Author2970" }, } },
    { 3476u, { { 0u, "p2688r2", "Author481" }, } },
    { 3477u, { { 0u, "There are exactly 8 bits in a byte", "Author603" }, { 1u, "There are exactly 8 bits in a byte", "Author1654" }, { 2u, "There are exactly 8 bits in a byte", "Author2522" }, { 3u, "There are exactly 8 bits in a byte", "Author4890" }, { 4u, "There are exactly 8 bits in a byte", "Author2061" }, { 5u, "There are exactly 8 bits in a byte", "Author5149" }, } },
    { 3478u, { { 0u, "p3478r0", "Author5470" }, } },
    { 3479u, { { 0u, "Enabling C pragma support in C++", "Author2718" }, } },
    { 3480u, { { 0u, "std::simd is a range [P3480R0]", "Author5310" }, { 1u, "std::simd is a range [P3480R1]", "Author3922" }, { 2u, "std::simd is a range [P3480R2]", "Author3638" }, { 3u, "std::simd is a range [P3480R3]", "Author421" }, { 4u, "std::simd is a range [P3480R4]", "Author1199" }, } },
    { 3481u, { { 0u, "Title1471", "Author5580" }, { 1u, "std::execution::bulk() issues", "Author3526" }, { 2u, "std::execution::bulk() issues", "Author2080" }, { 3u, "std::execution::bulk() issues", "Author1938" }, } },
    { 3482u, { { 0u, "Design for C++ networking based on IETF TAPS", "Author4472" }, { 1u, "Design for C++ networking based on IETF TAPS", "Author6028" }, } },
    { 3483u, { { 0u, "Title951", "Author3570" }, { 1u, "Title1707", "Author6495" }, } },
    { 3484u, { { 0u, "Title1076", "Author4031" }, { 1u, "Title691", "Author2556" }, { 2u, "Title695", "Author2572" }, } },
    { 3485u, { { 0u, "Grouping using declarations with braces", "Author6342" }, } },
    { 3487u, { { 0u, "Title1386", "Author5246" }, } },
    { 3488u, { { 0u, "Floating-Point Excess Precision [P3488R0]", "Author3183" }, { 1u, "Floating-Point Excess Precision [P3488R1]", "Author2602" }, } },
    { 3489u, { { 0u, "Title1465", "Author5562" }, } },
    { 3490u, { { 0u, "Justification for ranges as the output of parallel rangealgorithms", "Author922" }, } },
    { 3491u, { { 0u, "define_static_{string,object,array}", "Author2274" }, { 1u, "define_static_{string,object,array}", "Author5097" }, { 2u, "define_static_{string,object,array}", "Author2672" }, } },
    { 3492u, { { 0u, "Sized deallocation for placement new", "Author2332" }, { 1u, "Sized deallocation for placement new", "Author4934" }, { 2u, "Sized deallocation for placement new", "Author873" }, } },
    { 3493u, { { 0u, "Ruminations on reflection and access", "Author4108" }, } },
    { 3495u, { { 0u, "Title912", "Author3406" }, } },
    { 3496u, { { 0u, "Immediate-Escalating Expressions", "Author1530" }, } },
    { 3497u, { { 0u, "Title1394", "Author5278" }, } },
    { 3498u, { { 0u, "Title335", "Author1168" }, } },
    { 3499u, { { 0u, "Title1220", "Author4576" }, { 1u, "Title285", "Author1020" }, } },
    { 3500u, { { 0u, "P3500 v2", "Author319" }, { 1u, "P3500 Are Contracts \"safe\"?", "Author701" }, } },
    { 3501u, { { 0u, "The ad-dressing of cats", "Author5961" }, } },
    { 3502u, { { 0u, "p3502r0", "Author1450" }, } },
    { 3503u, { { 0u, "Make type-erased allocator use in promise and packaged_taskconsistent", "Author6308" }, { 1u, "Make type-erased allocator use in `promise` and `packaged_task`consistent", "Author4627" }, { 2u, "Make type-erased allocator use in `promise` and `packaged_task`consistent", "Author4741" }, } },
    { 3504u, { { 0u, "C++ Standard Library Issues to be moved in Wrocaw, Nov. 2024", "Author513" }, } },
    { 3505u, { { 0u, "Fix the default floating-point representation in std::format", "Author6377" }, } },
    { 3506u, { { 0u, "Title583", "Author2136" }, } },
    { 3508u, { { 0u, "Wording for \"constexpr for specialized memory algorithms\"", "Author1617" }, } },
    { 3510u, { { 0u, "Leftover properties of `this` in constructorpreconditions", "Author3112" }, { 1u, "Leftover properties of `this` in constructorpreconditions", "Author1236" }, { 2u, "Leftover properties of `this` in constructorpreconditions", "Author4910" }, } },
    { 3514u, { { 0u, "\"RFC 3514: The Security Flag\" for C++", "Author3471" }, } },
    { 3516u, { { 0u, "Uninitialized algorithms for relocation", "Author4260" }, { 1u, "Uninitialized algorithms for relocation", "Author2144" }, } },
    { 3517u, { { 0u, "P3517R0", "Author3992" }, } },
    { 3518u, { { 0u, "constexpr type ordering (P2830R4)", "Author4290" }, } },
    { 3519u, { { 0u, "P3425 Reducing operation-state sizes for sub-object child operations", "Author3911" }, } },
    { 3520u, { { 0u, "Title1047", "Author3947" }, } },
    { 3521u, { { 0u, "Pattern Matching: Customization Point for Open SumTypes", "Author5858" }, } },
    { 3524u, { { 0u, "Core \"ready\" Issues", "Author2303" }, } },
    { 3525u, { { 0u, "Explicit Implicit Template Regions", "Author4679" }, } },
    { 3526u, { { 0u, "Container truncation", "Author3248" }, } },
    { 3527u, { { 0u, "Pattern Matching: *variant-like* and `std::expected`", "Author169" }, { 1u, "Pattern Matching: *variant-like* and `std::expected`", "Author3153" }, } },
    { 3530u, { { 0u, "Intrinsic for reading uninitialized memory", "Author466" }, } },
    { 3533u, { { 0u, "constexpr virtual inheritance", "Author1386" }, { 1u, "constexpr virtual inheritance", "Author2079" }, { 2u, "constexpr virtual inheritance", "Author5473" }, } },
    { 3534u, { { 0u, "Avoid UB When Compiling Code That Violates Library Specification", "Author1990" }, } },
    { 3537u, { { 0u, "Concurrent Queues API - P0260R13", "Author6396" }, { 1u, "Concurrent Queues API - P0260R15 / P3537R1", "Author3648" }, } },
    { 3539u, { { 1u, "Consistent Function Label Naming for Sections", "Author205" }, } },
    { 3540u, { { 0u, "#embed offset parameter", "Author6186" }, { 1u, "#embed offset parameter", "Author1825" }, } },
    { 3541u, { { 0u, "Violation handlers vs `noexcept`", "Author5781" }, { 1u, "Violation handlers vs `noexcept`", "Author247" }, } },
    { 3542u, { { 0u, "Abolish the term \"converting constructor\"", "Author3961" }, } },
    { 3543u, { { 0u, "Response to Core Safety Profiles (P3081)", "Author2997" }, } },
    { 3544u, { { 0u, "<code>ranges::to<view></code>", "Author1310" }, } },
    { 3546u, { { 0u, "Title1010", "Author3809" }, } },
    { 3547u, { { 0u, "Modeling Access Control With Reflection", "Author5734" }, { 1u, "Modeling Access Control With Reflection", "Author5281" }, } },
    { 3548u, { { 0u, "Title876", "Author3236" }, } },
    { 3549u, { { 0u, "Diverging Expressions", "Author2146" }, } },
    { 3550u, { { 0u, "Imports cannot", "Author4581" }, } },
    { 3552u, { { 0u, "Add a Coroutine Lazy Type", "Author1305" }, { 1u, "Add a Coroutine Task Type", "Author4218" }, } },
    { 3554u, { { 0u, "Non-transient allocation with std::vector andstd::basic_string", "Author973" }, } },
    { 3555u, { { 0u, "An infinite range concept", "Author4357" }, } },
    { 3556u, { { 0u, "Input Files Are Source Files", "Author4027" }, } },
    { 3557u, { { 0u, "High-Quality Sender Diagnostics with ConstexprExceptions", "Author5752" }, { 1u, "High-Quality Sender Diagnostics with ConstexprExceptions", "Author3300" }, } },
    { 3558u, { { 0u, "Title1213", "Author4559" }, { 1u, "Title217", "Author767" }, } },
    { 3559u, { { 0u, "is_trivially_relocatable: One trait or two?", "Author1813" }, } },
    { 3560u, { { 0u, "Error Handling in Reflection", "Author4002" }, } },
    { 3561u, { { 0u, "coproducts.dvi", "Author1843" }, { 1u, "coproducts.dvi", "Author6410" }, { 2u, "coproducts.dvi", "Author3532" }, } },
    { 3564u, { { 0u, "Make the concurrent forward progress guarantee usable in bulk", "Author1680" }, } },
    { 3565u, { { 0u, "Virtual floating-point values", "Author6364" }, } },
    { 3566u, { { 0u, "P3566R0 - You shall not pass `char*` - Google Docs", "Author758" }, } },
    { 3567u, { { 0u, "flat_meow Fixes", "Author5293" }, } },
    { 3568u, { { 0u, "break label; and continue label;", "Author4106" }, { 1u, "break label; and continue label;", "Author2339" }, } },
    { 3569u, { { 0u, "SplitOutDefineAggregate", "Author370" }, } },
    { 3570u, { { 0u, "optional variants in sender/receiver", "Author6164" }, } },
    { 3572u, { { 0u, "Title1521", "Author5737" }, } },
    { 3573u, { { 0u, "Title894", "Author3325" }, } },
    { 3574u, { { 0u, "Title1329", "Author5056" }, } },
    { 3575u, { { 0u, "SG14 2025/01/13 P3575R0.docx", "Author3186" }, } },
    { 3576u, { { 0u, "SG19 2025/1/13 P3576R0.docx", "Author2317" }, } },
    { 3577u, { { 0u, "Title902", "Author3367" }, } },
    { 3578u, { { 0u, "The \"Grandma Safety\" Paper", "Author4423" }, } },
    { 3579u, { { 0u, "Fix matching of non-type template parameters when matchingtemplate template parameters", "Author4279" }, { 1u, "Fix matching of non-type template parameters when matchingtemplate template parameters", "Author363" }, } },
    { 3580u, { { 0u, "The Naming of Things", "Author5464" }, } },
    { 3581u, { { 0u, "Title1025", "Author3874" }, } },
    { 3582u, { { 0u, "Observed a contract violation? Skip subsequent assertions!", "Author5905" }, } },
    { 3583u, { { 0u, "Contracts, Types & Functions", "Author2027" }, } },
    { 3584u, { { 0u, "Title375", "Author1342" }, } },
    { 3585u, { { 0u, "`allocator_traits::is_internally_relocatable`", "Author1302" }, } },
    { 3586u, { { 0u, "The Plethora of Problems With Profiles", "Author4989" }, } },
    { 3587u, { { 0u, "Reconsider reflection access for C++26", "Author138" }, } },
    { 3588u, { { 0u, "Allow static data members in local and unnamed classes", "Author2890" }, } },
    { 3589u, { { 0u, "Title1579", "Author6003" }, { 1u, "Title181", "Author649" }, } },
    { 3590u, { { 0u, "Constexpr Coroutine Burdens", "Author5408" }, } },
    { 3591u, { { 0u, "Title339", "Author1181" }, } },
    { 3592u, { { 0u, "Title1452", "Author5515" }, } },
    { 3599u, { { 0u, "Title900", "Author3355" }, } },
    { 3603u, { { 0u, "Consteval-only Values and Consteval Variables", "Author4883" }, } },
    { 3605u, { { 0u, "Title901", "Author3364" }, } },
    { 3606u, { { 0u, "On Overload Resolution, Exact Matches, and CleverImplementations", "Author2969" }, } },
    { 3608u, { { 0u, "Contracts and profiles: what can we reasonably ship in C++26", "Author5803" }, } },
    { 3611u, { { 0u, "Title1675", "Author6370" }, } },
    { 3613u, { { 0u, "On the beating of horses, and other matters", "Author820" }, } },
    { 3614u, { { 0u, "Do not remove nor postpone access_context::unchecked", "Author676" }, } },
    { 3615u, { { 0u, "C++ Standard Library Issues to be moved in Hagenberg, Feb. 2025", "Author5050" }, } },
    { 3616u, { { 0u, "Remove contracts on virtual functions for now", "Author5172" }, } },
    { 3618u, { { 0u, "Allow attaching main to the global module", "Author5456" }, } },
    { 3619u, { { 0u, "Counter-examples for P2688R5", "Author5960" }, { 1u, "Counter-examples for P2688R5", "Author716" }, } },
    { 3620u, { { 0u, "Title1516", "Author5725" }, } },
    { 3623u, { { 0u, "Add noexcept to [iterator.range] (LWG 3537)", "Author1010" }, } },
    { 3625u, { { 0u, "D3625 - either neither", "Author954" }, } },
    { 3626u, { { 0u, "Title331", "Author1150" }, } },
    { 3627u, { { 0u, "RCE-defense security profiles for existing C++ code", "Author367" }, } },
    { 3628u, { { 0u, "break label; and continue label;, tl; dr", "Author1107" }, } },
    { 3630u, { { 0u, "PowerPoint-Prsentation", "Author2285" }, } },
    { 3632u, { { 0u, "Title904", "Author3378" }, { 1u, "Title1698", "Author6467" }, } },
    { 3633u, { { 0u, "A Byte is a Byte", "Author3275" }, } },
    { 3635u, { { 0u, "Title1469", "Author5575" }, } },
    { 3636u, { { 0u, "P3636 No, inplace_vector shouldn't have an Allocator", "Author786" }, } },
    { 3637u, { { 0u, "Inherit std::meta::exception from std::exception - Google Docs", "Author6205" }, } },
    { 3638u, { { 0u, "Core \"ready\" Issues", "Author1585" }, } },
    { 3639u, { { 0u, "The _BitInt Debate", "Author2278" }, } },
    { 3640u, { { 0u, "Make contracts reliable by default", "Author6160" }, } },
    { 3641u, { { 0u, "Rename std::observable to std::observable_checkpoint, and add a feature-test macro", "Author379" }, } },
    { 3642u, { { 0u, "Carry-less product: std::clmul", "Author311" }, } },
    { 3643u, { { 0u, "std::to_signed and std::to_unsigned", "Author5438" }, } },
    { 3650u, { { 0u, "Title1307", "Author4946" }, } },
    { 3651u, { { 0u, "Title697", "Author2574" }, } },
    { 3652u, { { 0u, "Constexpr floating-point <charconv> functions", "Author2183" }, { 1u, "Constexpr floating-point <charconv> functions", "Author197" }, } },
    { 3654u, { { 0u, "Title1630", "Author6194" }, } },
    { 3655u, { { 0u, "std::zstring_view", "Author4115" }, } },
    { 3656u, { { 0u, "Title868", "Author3200" }, { 1u, "Title845", "Author3120" }, } },
    { 3657u, { { 0u, "A Grammar for Whitespace Characters", "Author6488" }, } },
    { 3658u, { { 0u, "Title318", "Author1116" }, } },
    { 3660u, { { 0u, "Improve reference_wrapper Ergonomics", "Author2127" }, } },
    { 3661u, { { 0u, "Attributes, annotations, labels", "Author6190" }, } },
    { 3662u, { { 0u, "Improve Increment and Decrement Operator Syntax", "Author5842" }, } },
    { 3663u, { { 0u, "Future-proof submdspan_mapping?", "Author693" }, } },
    { 3664u, { { 0u, "Make `variant_size` SFINAE friendly", "Author2821" }, } },
    { 3665u, { { 0u, "Vertical Text Processing", "Author6322" }, } },
    { 3667u, { { 0u, "Title267", "Author964" }, } },
    { 3668u, { { 0u, "Defaulting Postfix Increment and Decrement Operations", "Author1909" }, } },
    { 3669u, { { 0u, "Non-Blocking Support for `std::execution`", "Author3913" }, } },
    { 3670u, { { 0u, "Title1489", "Author5648" }, } },
    { 3671u, { { 0u, "Title1358", "Author5143" }, } },
    { 3672u, { { 0u, "Title1509", "Author5709" }, } },
    { 4000u, { { 0u, "TS or not TS", "Author1844" }, } },
};
