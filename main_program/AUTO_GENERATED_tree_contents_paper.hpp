{
    { "p0001r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1903")) >(), wxS("Remove Deprecated Use of the register Keyword") >  >() },
    { "p0001r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2074")) >(), wxS("Remove Deprecated Use of the register Keyword") >  >() },
    { "p0002r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author632")) >(), wxS("Remove Deprecated operator++(bool)") >  >() },
    { "p0002r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1450")) >(), wxS("Remove Deprecated operator++(bool)") >  >() },
    { "p0003r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1811")) >(), wxS("Removing Deprecated Exception Specifications from C++17") >  >() },
    { "p0003r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1513")) >(), wxS("Removing Deprecated Exception Specifications from C++17") >  >() },
    { "p0003r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author217")) >(), wxS("Removing Deprecated Exception Specifications from C++17") >  >() },
    { "p0003r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author112")) >(), wxS("Removing Deprecated Exception Specifications from C++17") >  >() },
    { "p0003r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author496")) >(), wxS("Removing Deprecated Exception Specifications from C++17") >  >() },
    { "p0003r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1429")) >(), wxS("Removing Deprecated Exception Specifications from C++17") >  >() },
    { "p0004r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1167")) >(), wxS("Remove Deprecated iostreams aliases") >  >() },
    { "p0004r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1592")) >(), wxS("Remove Deprecated iostreams aliases") >  >() },
    { "p0005r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author520")) >(), wxS("Adopt 'not_fn' from Library Fundamentals 2 for C++17") >  >() },
    { "p0005r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author387")) >(), wxS("Adopt 'not_fn' from Library Fundamentals 2 for C++17") >  >() },
    { "p0005r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author310")) >(), wxS("Adopt 'not_fn' from Library Fundamentals 2 for C++17") >  >() },
    { "p0005r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author143")) >(), wxS("Adopt 'not_fn' from Library Fundamentals 2 for C++17") >  >() },
    { "p0005r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author539")) >(), wxS("Adopt 'not_fn' from Library Fundamentals 2 for C++17") >  >() },
    { "p0006r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author638")) >(), wxS("Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17") >  >() },
    { "p0007r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1149")) >(), wxS("Constant View: A proposal for a 'std::as_const' helper function template") >  >() },
    { "p0007r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author935")) >(), wxS("Constant View: A proposal for a 'std::as_const' helper function template") >  >() },
    { "p0008r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2091")) >(), wxS("Title1622") >  >() },
    { "p0009r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0009r00 : Polymorphic Multidimensional Array View") >  >() },
    { "p0009r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0009r1 : Polymorphic Multidimensional Array Reference") >  >() },
    { "p0009r2" , RevList< Rev< 2u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0009r2 : Polymorphic Multidimensional Array Reference") >  >() },
    { "p0009r3" , RevList< Rev< 3u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0009r3 : Polymorphic Multidimensional Array Reference") >  >() },
    { "p0009r4" , RevList< Rev< 4u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0009r4 : Polymorphic Multidimensional Array Reference") >  >() },
    { "p0009r5" , RevList< Rev< 5u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0009r5 : Polymorphic Multidimensional Array Reference") >  >() },
    { "p0009r8" , RevList< Rev< 8u, Arr64< Hash(wxS("H. Carter")) >(), wxS("<code>mdspan</code>: A Non-Owning Multidimensional Array Reference") >  >() },
    { "p0009r9" , RevList< Rev< 9u, Arr64< Hash(wxS("H. Carter")) >(), wxS("<code>mdspan</code>: A Non-Owning Multidimensional Array Reference") >  >() },
    { "p0009r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("MDSPAN") >  >() },
    { "p0009r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("MDSPAN") >  >() },
    { "p0009r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("MDSPAN") >  >() },
    { "p0009r13" , RevList< Rev< 13u, Arr64< Hash(wxS("1 [presumably")) >(), wxS("MDSPAN") >  >() },
    { "p0009r14" , RevList< Rev< 14u, Arr64< Hash(wxS("1 [presumably")) >(), wxS("MDSPAN") >  >() },
    { "p0009r15" , RevList< Rev< 15u, Arr64< Hash(wxS("1 [presumably")) >(), wxS("MDSPAN") >  >() },
    { "p0009r16" , RevList< Rev< 16u, Arr64< Hash(wxS("1 [presumably")) >(), wxS("MDSPAN") >  >() },
    { "p0009r17" , RevList< Rev< 17u, Arr64< Hash(wxS("1 [presumably")) >(), wxS("MDSPAN") >  >() },
    { "p0009r18" , RevList< Rev< 18u, Arr64< Hash(wxS("1 [presumably")) >(), wxS("MDSPAN") >  >() },
    { "p0010r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author975")) >(), wxS("concurrent random number") >  >() },
    { "p0011r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jamie Allsop")) >(), wxS("papers/P0011R0.md - Grip") >  >() },
    { "p0012r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author21")) >(), wxS("Make exception-specifications be part of the type system, version 4") >  >() },
    { "p0012r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author655")) >(), wxS("Make exception-specifications be part of the type system, version 5") >  >() },
    { "p0013r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Logical Operator Type Traits") >  >() },
    { "p0013r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Logical Operator Type Traits (revision 1)") >  >() },
    { "p0014r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nozomu KatM")) >(), wxS("Multiline Optiion") >  >() },
    { "p0014r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author650")) >(), wxS("Proposal to add the multiline option to std::regex for its ECMAScript engine") >  >() },
    { "p0015r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("ISO/IEC JTC1/SC22/WG21p0015r0") >  >() },
    { "p0017r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Oleg Smolsky")) >(), wxS("Extension to aggregate initialization") >  >() },
    { "p0017r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Oleg Smolsky")) >(), wxS("Extension to aggregate initialization") >  >() },
    { "p0018r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0018r00 : Lambda Capture of *this by Value") >  >() },
    { "p0018r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0018r1 : Lambda Capture of *this by Value") >  >() },
    { "p0018r2" , RevList< Rev< 2u, Arr64< Hash(wxS("H. Carter")) >(), wxS("Capturing <tt>*this</tt>") >  >() },
    { "p0018r3" , RevList< Rev< 3u, Arr64< Hash(wxS("H. Carter")) >(), wxS("Capturing <tt>*this</tt>") >  >() },
    { "p0019r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0019r00 : Atomic View") >  >() },
    { "p0019r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0019R1 : Atomic View") >  >() },
    { "p0019r2" , RevList< Rev< 2u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0019r2 : Atomic View") >  >() },
    { "p0019r3" , RevList< Rev< 3u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0019r3 : Atomic View") >  >() },
    { "p0019r4" , RevList< Rev< 4u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0019r4 : Atomic View") >  >() },
    { "p0019r5" , RevList< Rev< 5u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0019r5 : Atomic View") >  >() },
    { "p0020r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0020r00 : Floating Point Atomic View") >  >() },
    { "p0020r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0020r1 : Floating Point Atomic") >  >() },
    { "p0020r2" , RevList< Rev< 2u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0020r2 : Floating Point Atomic") >  >() },
    { "p0020r3" , RevList< Rev< 3u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0020r3 : Floating Point Atomic") >  >() },
    { "p0020r4" , RevList< Rev< 4u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0020r4 : Floating Point Atomic") >  >() },
    { "p0020r5" , RevList< Rev< 5u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0020r5 : Floating Point Atomic") >  >() },
    { "p0021r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1538")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0022r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Proxy Iterators for the Ranges Extensions") >  >() },
    { "p0022r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Proxy Iterators for the Ranges Extensions") >  >() },
    { "p0022r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Proxy Iterators for the Ranges Extensions") >  >() },
    { "p0023r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1948")) >(), wxS("Title1510") >  >() },
    { "p0024r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author134")) >(), wxS("Title115") >  >() },
    { "p0024r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2083")) >(), wxS("Title1616") >  >() },
    { "p0024r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2224")) >(), wxS("Title1701") >  >() },
    { "p0025r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1524")) >(), wxS("clamp: An algorithm to 'clamp' a value between a pair of boundary values (Draft) -") >  >() },
    { "p0025r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1572")) >(), wxS("clamp: An algorithm to 'clamp' a value between a pair of boundary values -") >  >() },
    { "p0026r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew McAtamney-Greenwood")) >(), wxS("P0026 - MultiRange-Based For Loop Proposal - v1.1.0") >  >() },
    { "p0027r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Troy Korjuslommi")) >(), wxS("named_template") >  >() },
    { "p0028r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author513")) >(), wxS("Title421") >  >() },
    { "p0028r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author43")) >(), wxS("Title43") >  >() },
    { "p0028r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2046")) >(), wxS("Title1588") >  >() },
    { "p0028r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author906")) >(), wxS("Using scoped attributes") >  >() },
    { "p0028r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author2147")) >(), wxS("Using attribute namespaces without repetition") >  >() },
    { "p0029r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1943")) >(), wxS("A Unified Proposal for Composable Hashing") >  >() },
    { "p0030r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Benson Ma")) >(), wxS("Microsoft Word - P0030R0.docx") >  >() },
    { "p0030r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Benson Ma")) >(), wxS("Title128") >  >() },
    { "p0031r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1165")) >(), wxS("A Proposal to Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access") >  >() },
    { "p0032r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("Title1411") >  >() },
    { "p0032r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("Title1548") >  >() },
    { "p0032r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0032R2") >  >() },
    { "p0032r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Vicente J")) >(), wxS("Title1571") >  >() },
    { "p0033r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Re-enabling shared_from_this") >  >() },
    { "p0033r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Re-enabling shared_from_this") >  >() },
    { "p0034r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1128")) >(), wxS("P0034 Civil Time") >  >() },
    { "p0035r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author12")) >(), wxS("Dynamic memory allocation for over-aligned data") >  >() },
    { "p0035r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author656")) >(), wxS("Dynamic memory allocation for over-aligned data") >  >() },
    { "p0035r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author98")) >(), wxS("Dynamic memory allocation for over-aligned data") >  >() },
    { "p0035r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1039")) >(), wxS("Dynamic memory allocation for over-aligned data") >  >() },
    { "p0035r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1665")) >(), wxS("Dynamic memory allocation for over-aligned data") >  >() },
    { "p0036r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thibaut Le")) >(), wxS("Title119") >  >() },
    { "p0037r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1232")) >(), wxS("Fixed_Point_Library_Proposal") >  >() },
    { "p0037r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author590")) >(), wxS("Title479") >  >() },
    { "p0037r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author193")) >(), wxS("Title164") >  >() },
    { "p0037r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author7")) >(), wxS("Title7") >  >() },
    { "p0037r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1694")) >(), wxS("Title1314") >  >() },
    { "p0037r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1207")) >(), wxS("Title948") >  >() },
    { "p0037r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1248")) >(), wxS("Title969") >  >() },
    { "p0037r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1925")) >(), wxS("p0037r7") >  >() },
    { "p0038r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sean Middleditch")) >(), wxS("Untitled Document.md") >  >() },
    { "p0039r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2212")) >(), wxS("Untitled Document.md") >  >() },
    { "p0040r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author324")) >(), wxS("Untitled Document.md") >  >() },
    { "p0040r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1315")) >(), wxS("P0040R1") >  >() },
    { "p0040r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1508")) >(), wxS("P0040R2") >  >() },
    { "p0040r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author770")) >(), wxS("P0040R3") >  >() },
    { "p0041r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author840")) >(), wxS("Untitled Document.md") >  >() },
    { "p0042r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author898")) >(), wxS("recover_cast.pages") >  >() },
    { "p0043r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1595")) >(), wxS("function_container.pages") >  >() },
    { "p0044r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author932")) >(), wxS("unwinding_state.pages") >  >() },
    { "p0045r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author558")) >(), wxS("function.pages") >  >() },
    { "p0045r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1363")) >(), wxS("function.pages") >  >() },
    { "p0046r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Change is_transparent to metafunction") >  >() },
    { "p0046r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Change is_transparent to metafunction (Revision 1)") >  >() },
    { "p0047r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title453") >  >() },
    { "p0048r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title646") >  >() },
    { "p0050r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("Title186") >  >() },
    { "p0051r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("Title1476") >  >() },
    { "p0051r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("Title168") >  >() },
    { "p0051r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0051R2") >  >() },
    { "p0051r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0051r3") >  >() },
    { "p0052r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1398")) >(), wxS("Title1089") >  >() },
    { "p0052r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1040")) >(), wxS("Title835") >  >() },
    { "p0052r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1299")) >(), wxS("Title1002") >  >() },
    { "p0052r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author820")) >(), wxS("C++ International Standard") >  >() },
    { "p0052r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author757")) >(), wxS("Title614") >  >() },
    { "p0052r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author887")) >(), wxS("Title716") >  >() },
    { "p0052r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author559")) >(), wxS("Title452") >  >() },
    { "p0052r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author260")) >(), wxS("Title218") >  >() },
    { "p0053r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2105")) >(), wxS("C++ Synchronized Buffered Ostream") >  >() },
    { "p0053r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author579")) >(), wxS("C++ Synchronized Buffered Ostream") >  >() },
    { "p0053r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1561")) >(), wxS("C++ Synchronized Buffered Ostream") >  >() },
    { "p0053r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author452")) >(), wxS("DRAFT C++ Synchronized Buffered Ostream") >  >() },
    { "p0053r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1729")) >(), wxS("DRAFT C++ Synchronized Buffered Ostream") >  >() },
    { "p0053r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1864")) >(), wxS("Title1445") >  >() },
    { "p0054r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author826")) >(), wxS("D0054_ReportsFromTheField") >  >() },
    { "p0055r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author473")) >(), wxS("D0055_BetterTogether") >  >() },
    { "p0055r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1253")) >(), wxS("D0055_BetterTogether") >  >() },
    { "p0056r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1519")) >(), wxS("D0056_SoftKeywords") >  >() },
    { "p0057r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0057r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0057r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0057r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0057r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0057r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0058r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1334")) >(), wxS("An Interface for Abstracting Execution | P0058R0") >  >() },
    { "p0058r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author571")) >(), wxS("An Interface for Abstracting Execution | P0058R1") >  >() },
    { "p0059r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author742")) >(), wxS("Title598") >  >() },
    { "p0059r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1094")) >(), wxS("Title881") >  >() },
    { "p0059r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1459")) >(), wxS("Title1138") >  >() },
    { "p0059r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1172")) >(), wxS("Title928") >  >() },
    { "p0059r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1485")) >(), wxS("Title1156") >  >() },
    { "p0060r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2")) >(), wxS("Function Object-Based Overloading of Operator Dot") >  >() },
    { "p0061r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1996")) >(), wxS("Feature-testing preprocessor predicates for C++17") >  >() },
    { "p0061r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1127")) >(), wxS("Feature-testing preprocessor predicates for C++17") >  >() },
    { "p0062r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1177")) >(), wxS("When should compilers optimize atomics?") >  >() },
    { "p0062r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1960")) >(), wxS("When should compilers optimize atomics?") >  >() },
    { "p0063r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("C++17 should refer to C11 instead of C99") >  >() },
    { "p0063r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author139")) >(), wxS("C++17 should refer to C11 instead of C99") >  >() },
    { "p0063r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author855")) >(), wxS("C++17 should refer to C11 instead of C99") >  >() },
    { "p0063r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1931")) >(), wxS("C++17 should refer to C11 instead of C99") >  >() },
    { "p0065r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author664")) >(), wxS("movable-il.pages") >  >() },
    { "p0066r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1589")) >(), wxS("values.pages") >  >() },
    { "p0067r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1337")) >(), wxS("Elementary string conversions") >  >() },
    { "p0067r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1540")) >(), wxS("Elementary string conversions, revision 1") >  >() },
    { "p0067r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1035")) >(), wxS("Elementary string conversions, revision 2") >  >() },
    { "p0067r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2214")) >(), wxS("Elementary string conversions, revision 2") >  >() },
    { "p0067r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author550")) >(), wxS("Elementary string conversions, revision 4") >  >() },
    { "p0067r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1406")) >(), wxS("Elementary string conversions, revision 5") >  >() },
    { "p0068r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1268") >  >() },
    { "p0069r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Sander")) >(), wxS("Title1067") >  >() },
    { "p0070r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1808")) >(), wxS("D0070_ReturnBeforeAwait") >  >() },
    { "p0071r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author40")) >(), wxS("D0071_KeywordsForCoroutines") >  >() },
    { "p0072r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title1472") >  >() },
    { "p0072r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title1496") >  >() },
    { "p0073r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title675") >  >() },
    { "p0073r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title973") >  >() },
    { "p0073r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title937") >  >() },
    { "p0074r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1378")) >(), wxS("Making std::owner_less more flexible") >  >() },
    { "p0075r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1915")) >(), wxS("Title1481") >  >() },
    { "p0075r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author934")) >(), wxS("Template Library for Parallel For Loops") >  >() },
    { "p0075r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arch D")) >(), wxS("Template Library for Parallel For Loops") >  >() },
    { "p0076r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author280")) >(), wxS("Title231") >  >() },
    { "p0076r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author42")) >(), wxS("Vector and Wavefront Policies") >  >() },
    { "p0076r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1863")) >(), wxS("Vector and Wavefront Policies") >  >() },
    { "p0076r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author55")) >(), wxS("Vector and Wavefront Policies") >  >() },
    { "p0076r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author783")) >(), wxS("Vector and Wavefront Policies") >  >() },
    { "p0077r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("is_callable, the missing INVOKE related trait") >  >() },
    { "p0077r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("is_callable, the missing INVOKE related trait") >  >() },
    { "p0077r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("is_callable, the missing INVOKE related trait") >  >() },
    { "p0078r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author398")) >(), wxS("Title338") >  >() },
    { "p0079r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author923")) >(), wxS("Title743") >  >() },
    { "p0080r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Park")) >(), wxS("Title991") >  >() },
    { "p0081r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1355")) >(), wxS("Title1051") >  >() },
    { "p0082r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1993")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0082r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1498")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0082r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1849")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0083r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author309")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0083r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author739")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0083r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1664")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0083r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author526")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0084r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1229")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0084r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1090")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0084r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author417")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0085r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1069")) >(), wxS("Oo... adding a coherent character sequence to start octal-literals") >  >() },
    { "p0086r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author627")) >(), wxS("Variant design review.") >  >() },
    { "p0087r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1246")) >(), wxS("Variant: a type-safe union without undefined behavior (v2).") >  >() },
    { "p0088r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1601")) >(), wxS("Variant: a type-safe union that is rarely invalid (v5).") >  >() },
    { "p0088r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Variant: a type-safe union (v6).") >  >() },
    { "p0088r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Variant: a type-safe union for C++17 (v7).") >  >() },
    { "p0088r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Variant: a type-safe union for C++17 (v8).") >  >() },
    { "p0089r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Lakos")) >(), wxS("On the Effective Use Of Memory Allocators") >  >() },
    { "p0089r1" , RevList< Rev< 1u, Arr64< Hash(wxS("John Lakos")) >(), wxS("On Quantifying Memory-Allocation Strategies (Revision 2)") >  >() },
    { "p0090r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Stephan T")) >(), wxS("ISO/IEC JTC1/SC22/WG21p0090r0") >  >() },
    { "p0091r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1156")) >(), wxS("Template parameter deduction for constructors (Rev. 2)") >  >() },
    { "p0091r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Template argument deduction for class templates (Rev. 4)") >  >() },
    { "p0091r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Template argument deduction for class templates (Rev. 5)") >  >() },
    { "p0091r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Template argument deduction for class templates (Rev. 6)") >  >() },
    { "p0091r4" , RevList< Rev< 4u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Template argument deduction for class templates (Rev. 7)") >  >() },
    { "p0092r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author406")) >(), wxS("Polishing chrono") >  >() },
    { "p0092r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1901")) >(), wxS("Polishing chrono") >  >() },
    { "p0093r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title1251") >  >() },
    { "p0094r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title280") >  >() },
    { "p0095r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title1591") >  >() },
    { "p0095r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title1447") >  >() },
    { "p0095r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Sankel")) >(), wxS("language_variant") >  >() },
    { "p0096r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author721")) >(), wxS("Feature-testing recommendations for C++") >  >() },
    { "p0096r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1121")) >(), wxS("Feature-testing recommendations for C++") >  >() },
    { "p0096r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author712")) >(), wxS("Feature-testing recommendations for C++") >  >() },
    { "p0096r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author838")) >(), wxS("Feature-testing recommendations for C++") >  >() },
    { "p0096r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author926")) >(), wxS("Feature-testing recommendations for C++") >  >() },
    { "p0096r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author2115")) >(), wxS("Feature-testing recommendations for C++") >  >() },
    { "p0097r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author936")) >(), wxS("Use Cases for Thread-Local Storage") >  >() },
    { "p0098r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1388")) >(), wxS("Title1079") >  >() },
    { "p0098r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author782")) >(), wxS("Title636") >  >() },
    { "p0099r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("A low-level API for stackful context switching") >  >() },
    { "p0099r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("A low-level API for stackful context switching") >  >() },
    { "p0100r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author348")) >(), wxS("Comparison in C++") >  >() },
    { "p0100r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author772")) >(), wxS("Comparison in C++") >  >() },
    { "p0100r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Comparison in C++") >  >() },
    { "p0101r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author592")) >(), wxS("An Outline of a C++ Numbers Technical Specification") >  >() },
    { "p0102r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author344")) >(), wxS("C++ Parametric Number Type Aliases") >  >() },
    { "p0103r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1838")) >(), wxS("Overflow-Detecting and Double-Wide Arithmetic Operations") >  >() },
    { "p0103r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Overflow-Detecting and Double-Wide Arithmetic Operations") >  >() },
    { "p0104r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1268")) >(), wxS("Multi-Word Integer Operations and Types") >  >() },
    { "p0104r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Multi-Word Integer Operations and Types") >  >() },
    { "p0105r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author113")) >(), wxS("Rounding and Overflow in C++") >  >() },
    { "p0105r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Rounding and Overflow in C++") >  >() },
    { "p0106r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1101")) >(), wxS("C++ Binary Fixed-Point Arithmetic") >  >() },
    { "p0107r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title926") >  >() },
    { "p0108r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author537")) >(), wxS("Skeleton Proposal for Thread-Local Storage (TLS)") >  >() },
    { "p0108r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1057")) >(), wxS("Skeleton Proposal for Thread-Local Storage (TLS)") >  >() },
    { "p0109r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author634")) >(), wxS("Function Aliases + Extended Inheritance = Opaque Typedefs") >  >() },
    { "p0110r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anthony")) >(), wxS("P0110: Implementing the strong guarantee for variant<> assignment") >  >() },
    { "p0112r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking Library (Revision 6)") >  >() },
    { "p0112r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking Library (Revision 7)") >  >() },
    { "p0113r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Executors and Asynchronous Operations, Revision 2") >  >() },
    { "p0114r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1464")) >(), wxS("Microsoft Word - Resumable Expressions rev 2.docm") >  >() },
    { "p0116r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Kawulak")) >(), wxS("Boolean conversion for Standard Library types") >  >() },
    { "p0117r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Kawulak")) >(), wxS("Generic to_string/to_wstring functions") >  >() },
    { "p0118r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author702")) >(), wxS("Title564") >  >() },
    { "p0119r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author157")) >(), wxS("Title133") >  >() },
    { "p0119r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author253")) >(), wxS("Title212") >  >() },
    { "p0119r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1374")) >(), wxS("Title1066") >  >() },
    { "p0120r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anthony")) >(), wxS("constexpr unions and common initial sequences") >  >() },
    { "p0121r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1604")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0122r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Title256") >  >() },
    { "p0122r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0122R1") >  >() },
    { "p0122r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0122R2.docx") >  >() },
    { "p0122r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - D0122R3.docx") >  >() },
    { "p0122r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0122R3") >  >() },
    { "p0122r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0122R3") >  >() },
    { "p0123r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Title1230") >  >() },
    { "p0123r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0123R1") >  >() },
    { "p0123r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0123R2.docx") >  >() },
    { "p0124r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2069")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1809")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author133")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2012")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author986")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1004")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author238")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1633")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0124r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author1239")) >(), wxS("Linux-Kernel Memory Model") >  >() },
    { "p0125r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1878")) >(), wxS("Untitled Document.md") >  >() },
    { "p0126r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("Title288") >  >() },
    { "p0126r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("Untitled") >  >() },
    { "p0126r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("synchronic") >  >() },
    { "p0127r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Declaring non-type template arguments with auto") >  >() },
    { "p0127r1" , RevList< Rev< 1u, Arr64< Hash(wxS("James Touton")) >(), wxS("Declaring non-type template arguments with auto") >  >() },
    { "p0127r2" , RevList< Rev< 2u, Arr64< Hash(wxS("James Touton")) >(), wxS("Declaring non-type template parameters with auto") >  >() },
    { "p0128r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1261")) >(), wxS("constexpr_if") >  >() },
    { "p0128r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2203")) >(), wxS("constexpr if") >  >() },
    { "p0129r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author368")) >(), wxS("We cannot (realistically) get rid of throwing moves") >  >() },
    { "p0130r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author20")) >(), wxS("Title17") >  >() },
    { "p0131r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1025")) >(), wxS("Title819") >  >() },
    { "p0132r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1488")) >(), wxS("Non-throwing container operations") >  >() },
    { "p0132r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1331")) >(), wxS("Non-throwing container operations") >  >() },
    { "p0133r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1486")) >(), wxS("Putting noexcept(auto) on hold, again") >  >() },
    { "p0134r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1007")) >(), wxS("Introducing a name for brace-or-equal-initializers for non-static data members") >  >() },
    { "p0135r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author663")) >(), wxS("Guaranteed copy elision through simplified value categories") >  >() },
    { "p0135r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1247")) >(), wxS("Wording for guaranteed copy elision through simplified value categories") >  >() },
    { "p0136r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author698")) >(), wxS("N4429: Rewording inheriting constructors (core issue 1941 et al)") >  >() },
    { "p0136r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author289")) >(), wxS("Rewording inheriting constructors (core issue 1941 et al)") >  >() },
    { "p0137r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author154")) >(), wxS("Core Issue 1776: Replacement of class objects containing reference members") >  >() },
    { "p0137r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2227")) >(), wxS("Core Issue 1776: Replacement of class objects containing reference members (et al)") >  >() },
    { "p0138r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title717") >  >() },
    { "p0138r1" , RevList< Rev< 1u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title126") >  >() },
    { "p0138r2" , RevList< Rev< 2u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title513") >  >() },
    { "p0141r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1353") >  >() },
    { "p0142r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1244") >  >() },
    { "p0143r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author562")) >(), wxS("Title455") >  >() },
    { "p0143r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2011")) >(), wxS("Title1551") >  >() },
    { "p0143r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2037")) >(), wxS("Title1576") >  >() },
    { "p0144r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title481") >  >() },
    { "p0144r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title258") >  >() },
    { "p0144r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title533") >  >() },
    { "p0145r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1271") >  >() },
    { "p0145r1" , RevList< Rev< 1u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title84") >  >() },
    { "p0145r2" , RevList< Rev< 2u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1052") >  >() },
    { "p0145r3" , RevList< Rev< 3u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1515") >  >() },
    { "p0146r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1742")) >(), wxS("Regular Void") >  >() },
    { "p0146r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1332")) >(), wxS("Regular Void (Revision 1)") >  >() },
    { "p0147r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author988")) >(), wxS("The Use and Implementation of Contracts") >  >() },
    { "p0148r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Title669") >  >() },
    { "p0149r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author481")) >(), wxS("Title400") >  >() },
    { "p0149r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title1261") >  >() },
    { "p0151r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title81") >  >() },
    { "p0152r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("P0152R0 constexpr atomic<T>::is_always_lock_free") >  >() },
    { "p0152r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("P0152R1 constexpr atomic<T>::is_always_lock_free") >  >() },
    { "p0153r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("P0153R0 std::atomic_object_fence(mo, T&&...)") >  >() },
    { "p0154r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0154R0 constexpr std::hardware_{constructive,destructive}_interference_size") >  >() },
    { "p0154r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0154R1 constexpr std::hardware_{constructive,destructive}_interference_size") >  >() },
    { "p0155r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author752")) >(), wxS("P0155R0 | Task Block R5") >  >() },
    { "p0156r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1939")) >(), wxS("Variadic lock_guard (Rev. 2)") >  >() },
    { "p0156r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1291")) >(), wxS("Variadic lock_guard (Rev. 4)") >  >() },
    { "p0156r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2036")) >(), wxS("Variadic lock_guard (Rev. 5)") >  >() },
    { "p0157r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2128")) >(), wxS("Handling Disappointment in C++") >  >() },
    { "p0158r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jamie Allsop")) >(), wxS("papers/P0158R0.md - Grip") >  >() },
    { "p0159r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author797")) >(), wxS("Technical Specification for C++ Extensions for Concurrency, DTS") >  >() },
    { "p0160r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1777")) >(), wxS("Wording for removing defaults for unary folds") >  >() },
    { "p0161r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1986")) >(), wxS("Title1539") >  >() },
    { "p0162r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author995")) >(), wxS("Microsoft Word - Response to P0055R0.docm") >  >() },
    { "p0163r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author519")) >(), wxS("shared_ptr::weak_type") >  >() },
    { "p0164r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2119")) >(), wxS("Core Motions") >  >() },
    { "p0165r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1514")) >(), wxS("C++ Standard Library Issues to be moved in Kona") >  >() },
    { "p0165r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1946")) >(), wxS("C++ Standard Library Issues to be moved in Jacksonville") >  >() },
    { "p0165r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1385")) >(), wxS("C++ Standard Library Issues to be moved in Oulu") >  >() },
    { "p0165r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1153")) >(), wxS("C++ Standard Library Issues to be moved in Issaquah") >  >() },
    { "p0165r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1652")) >(), wxS("C++ Standard Library Issues to be moved in Kona") >  >() },
    { "p0166r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author167")) >(), wxS("Title144") >  >() },
    { "p0167r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2054")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0167r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1328")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0167r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1471")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0169r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1661")) >(), wxS("regex with Unicode character types") >  >() },
    { "p0170r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1028")) >(), wxS("Title822") >  >() },
    { "p0170r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1739")) >(), wxS("Title1343") >  >() },
    { "p0171r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1362")) >(), wxS("P0171_ResponseToP0114") >  >() },
    { "p0172r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author577")) >(), wxS("Abominable Function Types") >  >() },
    { "p0174r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author777")) >(), wxS("Deprecating Vestigial Library Parts in C++17") >  >() },
    { "p0174r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1469")) >(), wxS("Deprecating Vestigial Library Parts in C++17") >  >() },
    { "p0174r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1754")) >(), wxS("Deprecating Vestigial Library Parts in C++17") >  >() },
    { "p0175r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author88")) >(), wxS("Synopses for the C library") >  >() },
    { "p0175r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1596")) >(), wxS("Synopses for the C library") >  >() },
    { "p0177r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1168")) >(), wxS("Cleaning up allocator_traits") >  >() },
    { "p0177r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1619")) >(), wxS("Cleaning up allocator_traits") >  >() },
    { "p0177r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author972")) >(), wxS("Cleaning up allocator_traits") >  >() },
    { "p0178r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1409")) >(), wxS("Allocators and swap") >  >() },
    { "p0178r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Allocators and swap") >  >() },
    { "p0180r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1250")) >(), wxS("Reserve a New Library Namespace Future Standardization") >  >() },
    { "p0180r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1839")) >(), wxS("Reserve a New Library Namespace Future Standardization") >  >() },
    { "p0180r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author937")) >(), wxS("Reserve a New Library Namespace for Future Standardization") >  >() },
    { "p0181r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1930")) >(), wxS("Ordered By Default") >  >() },
    { "p0181r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2197")) >(), wxS("Ordered By Default") >  >() },
    { "p0184r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Generalizing the Range-Based For Loop") >  >() },
    { "p0185r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Adding [nothrow-]swappable traits (Revision 2)") >  >() },
    { "p0185r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Adding [nothrow-]swappable traits (Revision 3)") >  >() },
    { "p0186r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1852")) >(), wxS("Iterator Facade -") >  >() },
    { "p0187r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title470") >  >() },
    { "p0187r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1024") >  >() },
    { "p0188r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title611") >  >() },
    { "p0188r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1352") >  >() },
    { "p0189r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1333") >  >() },
    { "p0189r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1690") >  >() },
    { "p0190r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author492")) >(), wxS("Title411") >  >() },
    { "p0190r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author120")) >(), wxS("Title107") >  >() },
    { "p0190r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author726")) >(), wxS("Title586") >  >() },
    { "p0190r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author987")) >(), wxS("Title799") >  >() },
    { "p0190r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author639")) >(), wxS("Title521") >  >() },
    { "p0191r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Markus")) >(), wxS("VirtualMemberFunctionPointerComparison") >  >() },
    { "p0192r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author464")) >(), wxS("Title389") >  >() },
    { "p0192r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Boris Fomitchev")) >(), wxS("Title867") >  >() },
    { "p0192r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`short float` and fixed-size floating point types") >  >() },
    { "p0193r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0193R0 Where is Vectorization in C++") >  >() },
    { "p0193r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0193R1 Where is Vectorization in C++") >  >() },
    { "p0194r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matus")) >(), wxS("Title1448") >  >() },
    { "p0194r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("P0194R1 Static reflection") >  >() },
    { "p0194r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("P0194R2 Static reflection") >  >() },
    { "p0194r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Static reflection") >  >() },
    { "p0194r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Static reflection") >  >() },
    { "p0194r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Static reflection") >  >() },
    { "p0195r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2076")) >(), wxS("Title1608") >  >() },
    { "p0195r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author283")) >(), wxS("Title233") >  >() },
    { "p0195r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author999")) >(), wxS("Pack expansions in using-declarations") >  >() },
    { "p0196r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0196R0") >  >() },
    { "p0196r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0196R1") >  >() },
    { "p0196r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0196R2") >  >() },
    { "p0196r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0196r3") >  >() },
    { "p0196r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0196r4") >  >() },
    { "p0196r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0196r5") >  >() },
    { "p0197r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0197R0") >  >() },
    { "p0198r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0198R0") >  >() },
    { "p0199r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("P0199R0") >  >() },
    { "p0200r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author670")) >(), wxS("A Proposal to Add YCombinator to the Standard Library") >  >() },
    { "p0201r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1606")) >(), wxS("Title1245") >  >() },
    { "p0201r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author569")) >(), wxS("Title461") >  >() },
    { "p0201r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author196")) >(), wxS("Title166") >  >() },
    { "p0201r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1937")) >(), wxS("Title1498") >  >() },
    { "p0201r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1182")) >(), wxS("Title930") >  >() },
    { "p0201r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author351")) >(), wxS("Title297") >  >() },
    { "p0201r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Jonathan B")) >(), wxS("<code>polymorphic_value</code>: A Polymorphic Value Type for C++") >  >() },
    { "p0202r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1137")) >(), wxS("A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <cstring> Headers") >  >() },
    { "p0202r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2149")) >(), wxS("A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers") >  >() },
    { "p0202r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author137")) >(), wxS("A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers") >  >() },
    { "p0202r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author694")) >(), wxS("A Proposal to Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers") >  >() },
    { "p0203r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1174")) >(), wxS("Considerations for the design of expressive portable SIMD vectors") >  >() },
    { "p0205r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Moritz Klammler")) >(), wxS("P0205R0 Allow Seeding Random Number Engines with std::random_device") >  >() },
    { "p0205r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Moritz Klammler")) >(), wxS("P0205R1 Efficient Seeding of Random Number Engines") >  >() },
    { "p0206r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author534")) >(), wxS("Discussion about std::thread and RAII") >  >() },
    { "p0206r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author127")) >(), wxS("A joining thread") >  >() },
    { "p0207r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author57")) >(), wxS("Ruminations on lambda captures") >  >() },
    { "p0208r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author706")) >(), wxS("Copy-Swap Helper") >  >() },
    { "p0208r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author806")) >(), wxS("Copy-Swap Transaction") >  >() },
    { "p0209r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2061")) >(), wxS("P0209r0 | make_from_tuple: apply for construction") >  >() },
    { "p0209r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author302")) >(), wxS("P0209r1 | make_from_tuple: apply for construction") >  >() },
    { "p0209r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author957")) >(), wxS("P0209r2 | make_from_tuple: apply for construction") >  >() },
    { "p0210r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1625")) >(), wxS("A light-weight, compact dynamic array") >  >() },
    { "p0211r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1726")) >(), wxS("Allocator-aware library wrappers for dynamic allocation") >  >() },
    { "p0211r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1826")) >(), wxS("Allocator-aware library wrappers for dynamic allocation") >  >() },
    { "p0211r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author461")) >(), wxS("Allocator-aware library wrappers for dynamic allocation") >  >() },
    { "p0211r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author725")) >(), wxS("Allocator-aware library wrappers for dynamic allocation") >  >() },
    { "p0212r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title780") >  >() },
    { "p0212r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title385") >  >() },
    { "p0213r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Graham Bleaney")) >(), wxS("On the Effective Use Of Memory Allocators") >  >() },
    { "p0214r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Data-Parallel Vector Types & Operations [P0214R0]") >  >() },
    { "p0214r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Data-Parallel Vector Types & Operations [P0214R1]") >  >() },
    { "p0214r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Data-Parallel Vector Types & Operations [P0214R2]") >  >() },
    { "p0214r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Data-Parallel Vector Types & Operations [P0214R3]") >  >() },
    { "p0214r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Data-Parallel Vector Types & Operations [P0214R4]") >  >() },
    { "p0214r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Data-Parallel Vector Types & Operations [P0214R5]") >  >() },
    { "p0215r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Greg Miller")) >(), wxS("Title889") >  >() },
    { "p0216r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Greg Miller")) >(), wxS("Title462") >  >() },
    { "p0217r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author652")) >(), wxS("Wording for structured bindings") >  >() },
    { "p0217r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1710")) >(), wxS("Wording for structured bindings") >  >() },
    { "p0217r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author866")) >(), wxS("Wording for structured bindings") >  >() },
    { "p0217r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author563")) >(), wxS("Wording for structured bindings") >  >() },
    { "p0218r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1097")) >(), wxS("C++17 Filesystem -") >  >() },
    { "p0218r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author931")) >(), wxS("C++17 Filesystem -") >  >() },
    { "p0219r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2129")) >(), wxS("Relative Paths") >  >() },
    { "p0219r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1190")) >(), wxS("Relative Paths") >  >() },
    { "p0220r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author573")) >(), wxS("C++17 Fundamentals -") >  >() },
    { "p0220r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author749")) >(), wxS("C++17 Fundamentals -") >  >() },
    { "p0221r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2208")) >(), wxS("Default comparisons") >  >() },
    { "p0221r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2107")) >(), wxS("Proposed wording for default comparisons, revision 3") >  >() },
    { "p0221r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1086")) >(), wxS("Proposed wording for default comparisons, revision 4") >  >() },
    { "p0222r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Allowing Anonymous Structs as Return Values") >  >() },
    { "p0223r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Class Namespace") >  >() },
    { "p0224r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Implicit Return Type") >  >() },
    { "p0225r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1965")) >(), wxS("Why I want Concepts, and why I want them sooner rather than later") >  >() },
    { "p0226r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1704")) >(), wxS("Mathematical Special Functions for C++17, v4") >  >() },
    { "p0226r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author33")) >(), wxS("Mathematical Special Functions for C++17, v5") >  >() },
    { "p0227r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thibaut Le")) >(), wxS("Title1440") >  >() },
    { "p0228r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Ramey")) >(), wxS("Java Printing.pdf") >  >() },
    { "p0228r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("unique_function: a move-only std::function") >  >() },
    { "p0229r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title426") >  >() },
    { "p0230r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1272") >  >() },
    { "p0231r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Luchangco")) >(), wxS("Title909") >  >() },
    { "p0232r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Title1262") >  >() },
    { "p0233r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title1403") >  >() },
    { "p0233r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title276") >  >() },
    { "p0233r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title306") >  >() },
    { "p0233r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title651") >  >() },
    { "p0233r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title1637") >  >() },
    { "p0233r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title1564") >  >() },
    { "p0234r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title610") >  >() },
    { "p0235r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2223")) >(), wxS("Title1700") >  >() },
    { "p0236r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1538") >  >() },
    { "p0237r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1155")) >(), wxS("Title918") >  >() },
    { "p0237r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1927")) >(), wxS("Wording for fundamental bit manipulation utilities") >  >() },
    { "p0237r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1066")) >(), wxS("Wording for fundamental bit manipulation utilities") >  >() },
    { "p0237r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author162")) >(), wxS("Wording for fundamental bit manipulation utilities") >  >() },
    { "p0237r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1317")) >(), wxS("Wording for fundamental bit manipulation utilities") >  >() },
    { "p0237r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author476")) >(), wxS("Wording for fundamental bit manipulation utilities") >  >() },
    { "p0237r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author2058")) >(), wxS("P0237R9") >  >() },
    { "p0237r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author1651")) >(), wxS("P0237R10") >  >() },
    { "p0238r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Return type deduction and SFINAE") >  >() },
    { "p0238r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Return type deduction and SFINAE") >  >() },
    { "p0239r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title1585") >  >() },
    { "p0240r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2163")) >(), wxS("Why I want Concepts, but why they should come later rather than sooner") >  >() },
    { "p0241r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1713")) >(), wxS("Remove Future-Related Explicit Specializations for Void") >  >() },
    { "p0242r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1307")) >(), wxS("Standard Library Support for Void") >  >() },
    { "p0244r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Text_view: A C++ concepts and range based character encoding and code point enumeration library") >  >() },
    { "p0244r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Text_view: A C++ concepts and range based character encoding and code point enumeration library") >  >() },
    { "p0244r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Text_view: A C++ concepts and range based character encoding and code point enumeration library") >  >() },
    { "p0245r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1532")) >(), wxS("Hexadecimal floating literals for C++") >  >() },
    { "p0245r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1806")) >(), wxS("Hexadecimal floating literals for C++") >  >() },
    { "p0246r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Lakos")) >(), wxS("Title712") >  >() },
    { "p0247r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1603")) >(), wxS("Title1243") >  >() },
    { "p0248r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2201")) >(), wxS("Untitled") >  >() },
    { "p0249r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael McLaughlin")) >(), wxS("Input Devices for 2d GraPhics") >  >() },
    { "p0249r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael McLaughlin")) >(), wxS("Input Devices for 2d GraPhics") >  >() },
    { "p0250r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Wording improvements for initialization and thread ids (CWG 2046)") >  >() },
    { "p0250r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Wording improvements for initialization and thread ids (CWG 2046)") >  >() },
    { "p0250r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Wording improvements for initialization and thread ids (CWG 2046, 1784)") >  >() },
    { "p0250r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("D0250R3: Wording improvements for initialization and thread ids (CWG 2046, 1784)") >  >() },
    { "p0251r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author735")) >(), wxS("Title593") >  >() },
    { "p0252r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author229")) >(), wxS("Title189") >  >() },
    { "p0252r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1403")) >(), wxS("Title1093") >  >() },
    { "p0252r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1834")) >(), wxS("Title1425") >  >() },
    { "p0253r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author458")) >(), wxS("BMH Wording") >  >() },
    { "p0253r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1945")) >(), wxS("P0253R1") >  >() },
    { "p0254r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2117")) >(), wxS("Integrating string_view") >  >() },
    { "p0254r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1426")) >(), wxS("Integrating string_viewR1") >  >() },
    { "p0254r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2063")) >(), wxS("Integrating string_viewR2") >  >() },
    { "p0255r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Cleiton Santoia")) >(), wxS("C++ International Standard") >  >() },
    { "p0256r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Cleiton Santoia")) >(), wxS("C++ International Standard") >  >() },
    { "p0257r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0257R0") >  >() },
    { "p0257r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0257R1.docx") >  >() },
    { "p0258r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2021")) >(), wxS("is_contiguous_layout") >  >() },
    { "p0258r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1436")) >(), wxS("is_contiguous_layout") >  >() },
    { "p0258r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2207")) >(), wxS("P0258R2 has_unique_object_representations - wording") >  >() },
    { "p0259r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Price")) >(), wxS("Title1560") >  >() },
    { "p0260r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r15" , RevList< Rev< 15u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r16" , RevList< Rev< 16u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0260r17" , RevList< Rev< 17u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Queues") >  >() },
    { "p0261r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Distributed Counters") >  >() },
    { "p0261r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Distributed Counters") >  >() },
    { "p0261r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Distributed Counters") >  >() },
    { "p0261r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Distributed Counters") >  >() },
    { "p0261r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Distributed Counters") >  >() },
    { "p0262r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("A Class for Status and Optional Value") >  >() },
    { "p0262r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("A Class for Status and Optional Value") >  >() },
    { "p0263r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1478")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0263r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1205")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0264r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author531")) >(), wxS("auto operator= considered dangerous") >  >() },
    { "p0265r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title821") >  >() },
    { "p0266r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1873")) >(), wxS("Lifting Restrictions on requires-Expressions") >  >() },
    { "p0266r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1130")) >(), wxS("Lifting Restrictions on requires-Expressions") >  >() },
    { "p0266r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1617")) >(), wxS("Lifting Restrictions on requires-Expressions") >  >() },
    { "p0267r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1934")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1602")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1117")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1142")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author341")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author892")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author1188")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author1767")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0267r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author801")) >(), wxS("A Proposal to Add 2D Graphics Rendering and Display to C++") >  >() },
    { "p0268r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author540")) >(), wxS("Title438") >  >() },
    { "p0269r0" , RevList< Rev< 0u, Arr64< Hash(wxS("mike_spertus@symantec.com Authors")) >(), wxS("Title406") >  >() },
    { "p0270r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Removing C dependencies from signal handler wording") >  >() },
    { "p0270r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Removing C dependencies from signal handler wording") >  >() },
    { "p0270r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Removing C dependencies from signal handler wording") >  >() },
    { "p0270r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Removing C dependencies from signal handler wording") >  >() },
    { "p0271r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Title949") >  >() },
    { "p0272r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title784") >  >() },
    { "p0272r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title887") >  >() },
    { "p0273r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1468")) >(), wxS("Title1141") >  >() },
    { "p0273r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1070")) >(), wxS("Title861") >  >() },
    { "p0274r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("P0274R0 Clump - A Vector-like Contiguous Sequence Container with Embedded Storage.pages") >  >() },
    { "p0275r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author301")) >(), wxS("A Proposal to add Classes and Functions Required for Dynamic Library Load") >  >() },
    { "p0275r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1105")) >(), wxS("A Proposal to add Classes and Functions Required for Dynamic Library Load") >  >() },
    { "p0275r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1659")) >(), wxS("A Proposal to add Classes and Functions Required for Dynamic Library Load") >  >() },
    { "p0275r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2060")) >(), wxS("A Proposal to add Classes and Functions Required for Dynamic Library Load") >  >() },
    { "p0275r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1719")) >(), wxS("A Proposal to add Classes and Functions Required for Dynamic Library Load") >  >() },
    { "p0276r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1732")) >(), wxS("A Proposal to add Attribute [[visible]]") >  >() },
    { "p0277r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author298")) >(), wxS("Title252") >  >() },
    { "p0277r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author920")) >(), wxS("Title741") >  >() },
    { "p0278r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jon Kalb")) >(), wxS("P0278r0 - volatile solutions") >  >() },
    { "p0279r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author959")) >(), wxS("Read-Copy Update (RCU) for C++") >  >() },
    { "p0279r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author716")) >(), wxS("Title578") >  >() },
    { "p0280r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Initialize unspecified aggregate members with direct list initialization") >  >() },
    { "p0281r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Remove comma elision in variadic function declarations") >  >() },
    { "p0282r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Const-preserving overloads for the strtox family of functions") >  >() },
    { "p0283r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2043")) >(), wxS("Title1582") >  >() },
    { "p0283r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1670")) >(), wxS("Title1299") >  >() },
    { "p0283r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1797")) >(), wxS("Standard and non-standard attributes") >  >() },
    { "p0284r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Unqualified enumerators in case labels") >  >() },
    { "p0285r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Using customization points to unify executors") >  >() },
    { "p0286r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("A networking library extension to support co_await-based coroutines") >  >() },
    { "p0287r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1188") >  >() },
    { "p0288r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1220")) >(), wxS("unique_function.pages") >  >() },
    { "p0288r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1376")) >(), wxS("unique_function.pages") >  >() },
    { "p0288r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("any_invocable") >  >() },
    { "p0288r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("any_invocable") >  >() },
    { "p0288r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Matt Calabrese")) >(), wxS("any_invocable") >  >() },
    { "p0288r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Matt Calabrese")) >(), wxS("any_invocable") >  >() },
    { "p0288r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Matt Calabrese")) >(), wxS("move_only_function") >  >() },
    { "p0288r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Matt Calabrese")) >(), wxS("move_only_function") >  >() },
    { "p0289r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author18")) >(), wxS("Title16") >  >() },
    { "p0290r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anthony")) >(), wxS("apply() for synchronized_value<T>") >  >() },
    { "p0290r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Anthony")) >(), wxS("apply() for synchronized_value<T>") >  >() },
    { "p0290r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Anthony")) >(), wxS("apply() for synchronized_value<T>") >  >() },
    { "p0290r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Anthony")) >(), wxS("apply() for synchronized_value<T>") >  >() },
    { "p0290r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Anthony")) >(), wxS("apply() for synchronized_value<T>") >  >() },
    { "p0292r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1322")) >(), wxS("constexpr if: A slightly different syntax") >  >() },
    { "p0292r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1407")) >(), wxS("constexpr if: A slightly different syntax") >  >() },
    { "p0292r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author165")) >(), wxS("constexpr if: A slightly different syntax") >  >() },
    { "p0293r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1386")) >(), wxS("Title1077") >  >() },
    { "p0295r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author418")) >(), wxS("Adopt Selected Library Fundamentals V2 Components for C++17") >  >() },
    { "p0296r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Forward progress guarantees: Base definitions") >  >() },
    { "p0296r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Forward progress guarantees: Base definitions") >  >() },
    { "p0296r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Forward progress guarantees: Base definitions") >  >() },
    { "p0298r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0298R0.docx") >  >() },
    { "p0298r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - D0298R1.docx") >  >() },
    { "p0298r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - P0298R2.docx") >  >() },
    { "p0298r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Neil MacIntosh")) >(), wxS("Microsoft Word - D0298R3") >  >() },
    { "p0299r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Forward progress guarantees for the Parallelism TS v2") >  >() },
    { "p0299r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Forward progress guarantees for Parallelism TS features") >  >() },
    { "p0301r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1917")) >(), wxS("Wording for Unified Call Syntax") >  >() },
    { "p0301r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author720")) >(), wxS("Wording for Unified Call Syntax (revision 1)") >  >() },
    { "p0302r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1411")) >(), wxS("Deprecating Allocator Support in std::function") >  >() },
    { "p0302r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1144")) >(), wxS("Removing Allocator Support in std::function (rev 1)") >  >() },
    { "p0303r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Boris Fomitchev")) >(), wxS("C++ International Standard") >  >() },
    { "p0304r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author904")) >(), wxS("C++ Standard Library Issues Resolved Directly") >  >() },
    { "p0304r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author389")) >(), wxS("C++ Standard Library Issues Resolved Directly In Issaquah") >  >() },
    { "p0305r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1441")) >(), wxS("If statement with initializer") >  >() },
    { "p0305r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1134")) >(), wxS("Selection statements with initializer") >  >() },
    { "p0306r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author900")) >(), wxS("Comma omission and comma deletion") >  >() },
    { "p0306r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author195")) >(), wxS("Comma omission and comma deletion") >  >() },
    { "p0306r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author969")) >(), wxS("Comma omission and comma deletion") >  >() },
    { "p0306r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1064")) >(), wxS("Comma omission and comma deletion") >  >() },
    { "p0306r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1899")) >(), wxS("Comma omission and comma deletion") >  >() },
    { "p0307r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title713") >  >() },
    { "p0307r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title856") >  >() },
    { "p0308r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1646")) >(), wxS("Title1275") >  >() },
    { "p0309r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniele Bordes")) >(), wxS("Title300") >  >() },
    { "p0310r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1245")) >(), wxS("Node allocators") >  >() },
    { "p0311r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("A Unified Vision for Manipulating Tuple-like Objects") >  >() },
    { "p0312r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Microsoft Word - Pointers to Members.docx") >  >() },
    { "p0312r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Make Pointers to Members Callable") >  >() },
    { "p0313r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2002")) >(), wxS("Comparison operators in fold-expressions") >  >() },
    { "p0314r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author536")) >(), wxS("Title435") >  >() },
    { "p0315r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1636") >  >() },
    { "p0315r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title787") >  >() },
    { "p0315r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title55") >  >() },
    { "p0315r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title985") >  >() },
    { "p0315r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1492") >  >() },
    { "p0316r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Miro Knejp")) >(), wxS("allocate_unique and allocator_delete") >  >() },
    { "p0317r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1855")) >(), wxS("Directory Entry Caching") >  >() },
    { "p0317r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1076")) >(), wxS("Directory Entry Caching") >  >() },
    { "p0318r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0318r0") >  >() },
    { "p0318r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0318r1") >  >() },
    { "p0319r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0319r0") >  >() },
    { "p0319r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0319r1") >  >() },
    { "p0319r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0319r2") >  >() },
    { "p0320r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0320r0") >  >() },
    { "p0320r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0320r1") >  >() },
    { "p0322r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0322r0 : exception_list") >  >() },
    { "p0323r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0323r0") >  >() },
    { "p0323r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0323r1") >  >() },
    { "p0323r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0323r2") >  >() },
    { "p0323r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Make bad_expected_access")) >(), wxS("p0323r3") >  >() },
    { "p0323r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("p0323r4: std::expected") >  >() },
    { "p0323r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("p0323r5: std::expected") >  >() },
    { "p0323r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("std::expected") >  >() },
    { "p0323r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("std::expected") >  >() },
    { "p0323r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("std::expected") >  >() },
    { "p0323r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("std::expected") >  >() },
    { "p0323r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("std::expected") >  >() },
    { "p0323r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Vicente Botet")) >(), wxS("std::expected") >  >() },
    { "p0324r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1183")) >(), wxS("One Concept Definition Syntax") >  >() },
    { "p0325r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Propose to adopt make_array in C++17") >  >() },
    { "p0325r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Propose to adopt make_array into the IS") >  >() },
    { "p0325r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("to_array from LFTS with updates - HackMD") >  >() },
    { "p0325r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("to_array from LFTS with updates - HackMD") >  >() },
    { "p0325r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("to_array from LFTS with updates - HackMD") >  >() },
    { "p0326r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0326r0") >  >() },
    { "p0327r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0327r0") >  >() },
    { "p0327r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0327r1") >  >() },
    { "p0327r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0327r2") >  >() },
    { "p0327r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0327r3") >  >() },
    { "p0329r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2215")) >(), wxS("Title1695") >  >() },
    { "p0329r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1446")) >(), wxS("Title1123") >  >() },
    { "p0329r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1203")) >(), wxS("Title947") >  >() },
    { "p0329r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author871")) >(), wxS("Title698") >  >() },
    { "p0329r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author31")) >(), wxS("Title26") >  >() },
    { "p0330r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Rein Halbersma")) >(), wxS("Title225") >  >() },
    { "p0330r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Rein Halbersma")) >(), wxS("Title56") >  >() },
    { "p0330r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Literal Suffixes for ptrdiff_t and size_t") >  >() },
    { "p0330r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Literal Suffixes for ptrdiff_t and size_t") >  >() },
    { "p0330r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Literal Suffixes for ptrdiff_t and size_t") >  >() },
    { "p0330r6" , RevList< Rev< 6u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Literal Suffixes for ptrdiff_t and size_t") >  >() },
    { "p0330r7" , RevList< Rev< 7u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Literal Suffixes for ptrdiff_t and size_t") >  >() },
    { "p0330r8" , RevList< Rev< 8u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Literal Suffix for (signed) size_t") >  >() },
    { "p0331r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0331r0 : Motivation and Examples for Multidimensional Array") >  >() },
    { "p0332r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0332r0 : Relaxed Incomplete Multidimensional Array Type Declaration") >  >() },
    { "p0332r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0332r1 : Relaxed Incomplete Multidimensional Array Type Declaration") >  >() },
    { "p0332r2" , RevList< Rev< 2u, Arr64< Hash(wxS("H. Carter")) >(), wxS("p0332R2: Relaxed Incomplete Multidimensional Array Type Declaration") >  >() },
    { "p0333r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0333r0 : Improving Parallel Algorithm Exception Handling") >  >() },
    { "p0334r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0334r0 : Immutable Persistent Containers") >  >() },
    { "p0335r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Context Tokens for Parallel Algorithms") >  >() },
    { "p0335r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Context Tokens for Parallel Algorithms") >  >() },
    { "p0336r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Better Names for Parallel Execution Policies in C++17") >  >() },
    { "p0336r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Better Names for Parallel Execution Policies in C++17") >  >() },
    { "p0337r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author408")) >(), wxS("P0337r0 | Delete operator= for polymorphic_allocator") >  >() },
    { "p0338r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0338r0") >  >() },
    { "p0338r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0338r1") >  >() },
    { "p0338r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0338r2") >  >() },
    { "p0338r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0338r3") >  >() },
    { "p0339r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<void> as a vocabulary type") >  >() },
    { "p0339r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<> as a vocabulary type") >  >() },
    { "p0339r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<> as a vocabulary type") >  >() },
    { "p0339r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<> as a vocabulary type") >  >() },
    { "p0339r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<> as a vocabulary type") >  >() },
    { "p0339r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<> as a vocabulary type") >  >() },
    { "p0339r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<> as a vocabulary type") >  >() },
    { "p0340r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author4")) >(), wxS("P0340R0") >  >() },
    { "p0340r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author823")) >(), wxS("Making std::underlying_type SFINAE-friendly") >  >() },
    { "p0340r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1506")) >(), wxS("D0340R2: Making std::underlying_type SFINAE-friendly") >  >() },
    { "p0340r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author10")) >(), wxS("Making std::underlying_type SFINAE-friendly") >  >() },
    { "p0341r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0Mike Spertus")) >(), wxS("Leveraging parameter packs outside of templates") >  >() },
    { "p0342r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0Mike Spertus")) >(), wxS("Timing barriers") >  >() },
    { "p0342r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Title1502") >  >() },
    { "p0342r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("pessimize_hint") >  >() },
    { "p0343r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0343r0") >  >() },
    { "p0343r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0343r1") >  >() },
    { "p0345r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Allowing any unsigned integral type as parameter type for literal operators") >  >() },
    { "p0346r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author91")) >(), wxS("A <random> Nomenclature Tweak") >  >() },
    { "p0346r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2148")) >(), wxS("A <random> Nomenclature Tweak") >  >() },
    { "p0347r0" , RevList< Rev< 0u, Arr64< Hash(wxS("R. Tim")) >(), wxS("P0347R0") >  >() },
    { "p0347r1" , RevList< Rev< 1u, Arr64< Hash(wxS("R. Tim")) >(), wxS("Simplifying simple uses of <random>") >  >() },
    { "p0348r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrzej Krzemienski")) >(), wxS("Validity testing issues") >  >() },
    { "p0349r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Assumptions about the size of datapar [P0349R0]") >  >() },
    { "p0350r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Integrating datapar with parallel algorithms and executors [P0350R0]") >  >() },
    { "p0350r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Integrating simd with parallel algorithms [P0350R1]") >  >() },
    { "p0350r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Integrating simd with parallel algorithms [P0350R2]") >  >() },
    { "p0350r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Integrating simd with parallel algorithms [P0350R3]") >  >() },
    { "p0350r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ma hias")) >(), wxS("Integrating simd with parallel algorithms [P0350R4]") >  >() },
    { "p0352r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1733")) >(), wxS("Title1339") >  >() },
    { "p0352r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1394")) >(), wxS("Title1083") >  >() },
    { "p0353r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1605")) >(), wxS("Unicode Encoding conversions") >  >() },
    { "p0353r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1189")) >(), wxS("Unicode Encoding conversions") >  >() },
    { "p0354r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title924") >  >() },
    { "p0355r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1815")) >(), wxS("Extending <chrono> to Calendars and Time Zones") >  >() },
    { "p0355r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2070")) >(), wxS("Extending <chrono> to Calendars and Time Zones") >  >() },
    { "p0355r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1345")) >(), wxS("Extending <chrono> to Calendars and Time Zones") >  >() },
    { "p0355r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1002")) >(), wxS("Extending <chrono> to Calendars and Time Zones") >  >() },
    { "p0355r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author316")) >(), wxS("Extending <chrono> to Calendars and Time Zones") >  >() },
    { "p0355r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1531")) >(), wxS("Extending <chrono> to Calendars and Time Zones") >  >() },
    { "p0356r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Simplified partial function application") >  >() },
    { "p0356r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Simplified partial function application") >  >() },
    { "p0356r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Simplified partial function application") >  >() },
    { "p0356r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Simplified partial function application") >  >() },
    { "p0356r4" , RevList< Rev< 4u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Simplified partial function application") >  >() },
    { "p0356r5" , RevList< Rev< 5u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Simplified partial function application") >  >() },
    { "p0357r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("'reference_wrapper' for incomplete types") >  >() },
    { "p0357r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("'reference_wrapper' for incomplete types") >  >() },
    { "p0357r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("'reference_wrapper' for incomplete types") >  >() },
    { "p0357r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("'reference_wrapper' for incomplete types") >  >() },
    { "p0358r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Fixes for 'not_fn'") >  >() },
    { "p0358r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Fixes for 'not_fn'") >  >() },
    { "p0359r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title588") >  >() },
    { "p0360r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title916") >  >() },
    { "p0361r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hartmut Kaiser")) >(), wxS("Title1424") >  >() },
    { "p0361r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hartmut Kaiser")) >(), wxS("Title1417") >  >() },
    { "p0362r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title796") >  >() },
    { "p0363r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1096") >  >() },
    { "p0364r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1200") >  >() },
    { "p0365r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1558") >  >() },
    { "p0366r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Luchangco")) >(), wxS("Title1398") >  >() },
    { "p0367r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1688")) >(), wxS("Title1310") >  >() },
    { "p0369r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1221") >  >() },
    { "p0370r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges TS Design Updates Omnibus") >  >() },
    { "p0370r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges TS Design Updates Omnibus") >  >() },
    { "p0370r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges TS Design Updates Omnibus") >  >() },
    { "p0370r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges TS Design Updates Omnibus") >  >() },
    { "p0371r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Temporarily deprecate memory_order_consume") >  >() },
    { "p0371r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Temporarily discourage memory_order_consume") >  >() },
    { "p0372r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1224")) >(), wxS("P0372R0 - A type for utf-8 data") >  >() },
    { "p0373r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title899") >  >() },
    { "p0374r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1045")) >(), wxS("Title840") >  >() },
    { "p0375r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title803") >  >() },
    { "p0376r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author635")) >(), wxS("A Single Generalization of std::invoke, std::apply, and std::visit") >  >() },
    { "p0377r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1058")) >(), wxS("std::integral_constant with a Deduced Value Type") >  >() },
    { "p0379r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author405")) >(), wxS("Why a joining thread from P0206 is a Bad Idea") >  >() },
    { "p0380r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author380")) >(), wxS("Title323") >  >() },
    { "p0380r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author696")) >(), wxS("Title559") >  >() },
    { "p0381r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1949")) >(), wxS("Title1511") >  >() },
    { "p0381r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author859")) >(), wxS("Title683") >  >() },
    { "p0382r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Comments on P0119: Overload sets as function arguments") >  >() },
    { "p0384r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1702")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0385r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matus")) >(), wxS("Title1697") >  >() },
    { "p0385r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Title1378") >  >() },
    { "p0385r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Title932") >  >() },
    { "p0386r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author169")) >(), wxS("Title146") >  >() },
    { "p0386r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author669")) >(), wxS("Title541") >  >() },
    { "p0387r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Memory Model Issues for Concurrent Data Structures") >  >() },
    { "p0387r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Memory Model Issues for Concurrent Data Structures") >  >() },
    { "p0388r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2172")) >(), wxS("Proposal: conversions to arrays of unknown bound") >  >() },
    { "p0388r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1622")) >(), wxS("Proposal: conversions to arrays of unknown bound") >  >() },
    { "p0388r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author570")) >(), wxS("Proposal: conversions to arrays of unknown bound") >  >() },
    { "p0388r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author832")) >(), wxS("Proposal: conversions to arrays of unknown bound") >  >() },
    { "p0388r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author2130")) >(), wxS("Proposal: conversions to arrays of unknown bound") >  >() },
    { "p0389r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1554")) >(), wxS("Proposal: template keyword in unqualified-ids") >  >() },
    { "p0390r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nickolas Pokhylets")) >(), wxS("ISO/IEC JTC1/SC22/WG21p0390r0") >  >() },
    { "p0391r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2182")) >(), wxS("Introducing the term \"templated entity\"") >  >() },
    { "p0392r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author979")) >(), wxS("Microsoft Word - P0392_stringview4path_160623.docx") >  >() },
    { "p0393r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Variant: relational operators.") >  >() },
    { "p0394r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Hotel Parallelifornia: terminate() for Parallel Algorithms Exception Handling") >  >() },
    { "p0396r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1071")) >(), wxS("C++ Concepts Active Issues List (Snapshot of Revision 4)") >  >() },
    { "p0397r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1046")) >(), wxS("C++ Standard Library Priority 1 Issues Resolved Directly In Oulu") >  >() },
    { "p0398r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author673")) >(), wxS("Core issue 1518: Explicit default constructors and copy-list-initialization") >  >() },
    { "p0399r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1558")) >(), wxS("Networking TS & Threadpool") >  >() },
    { "p0400r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1330")) >(), wxS("P0400R0 2016-06-25") >  >() },
    { "p0401r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author510")) >(), wxS("Extensions to the Allocator interface") >  >() },
    { "p0401r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Providing size feedback in the Allocator interface") >  >() },
    { "p0401r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Providing size feedback in the Allocator interface") >  >() },
    { "p0401r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Providing size feedback in the Allocator interface") >  >() },
    { "p0401r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Providing size feedback in the Allocator interface") >  >() },
    { "p0401r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Providing size feedback in the Allocator interface") >  >() },
    { "p0401r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Providing size feedback in the Allocator interface") >  >() },
    { "p0403r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1234")) >(), wxS("Literal suffixes for basic_string_view") >  >() },
    { "p0403r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author795")) >(), wxS("Literal suffixes for basic_string_view") >  >() },
    { "p0404r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert Tong")) >(), wxS("Matching Types: 404 Syntax Not found") >  >() },
    { "p0405r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author578")) >(), wxS("Wording for Networking TS changes discussed in Kona") >  >() },
    { "p0406r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("Intrusive Containers") >  >() },
    { "p0407r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1325")) >(), wxS("Title1022") >  >() },
    { "p0407r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1427")) >(), wxS("Title1106") >  >() },
    { "p0407r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author525")) >(), wxS("Title430") >  >() },
    { "p0408r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author313")) >(), wxS("Title265") >  >() },
    { "p0408r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1846")) >(), wxS("Title1431") >  >() },
    { "p0408r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author52")) >(), wxS("Title52") >  >() },
    { "p0408r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author922")) >(), wxS("Title742") >  >() },
    { "p0408r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author2146")) >(), wxS("Title1654") >  >() },
    { "p0408r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1522")) >(), wxS("Title1184") >  >() },
    { "p0408r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1408")) >(), wxS("Title1095") >  >() },
    { "p0408r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author352")) >(), wxS("Title298") >  >() },
    { "p0409r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2103")) >(), wxS("Allow lambda capture [=, this]") >  >() },
    { "p0409r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1819")) >(), wxS("Allow lambda capture [=, this]") >  >() },
    { "p0409r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author275")) >(), wxS("Allow lambda capture [=, this]") >  >() },
    { "p0411r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1912")) >(), wxS("Separating Library Requirements and Preconditions") >  >() },
    { "p0412r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("Benchmarking Primitives") >  >() },
    { "p0413r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Updating Parallel Execution Policy Names in the Parallelism TS") >  >() },
    { "p0414r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1272")) >(), wxS("Merging shared_ptr changes from Library Fundamentals to C++17") >  >() },
    { "p0414r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author954")) >(), wxS("Merging shared_ptr changes from Library Fundamentals to C++17") >  >() },
    { "p0414r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author396")) >(), wxS("Merging shared_ptr changes from Library Fundamentals to C++17") >  >() },
    { "p0415r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author152")) >(), wxS("Constexpr for std::complex") >  >() },
    { "p0415r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1585")) >(), wxS("Constexpr for std::complex") >  >() },
    { "p0416r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2028")) >(), wxS("dot P0416") >  >() },
    { "p0416r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author825")) >(), wxS("Title657") >  >() },
    { "p0417r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1075")) >(), wxS("ISO 10646:2014") >  >() },
    { "p0417r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author339")) >(), wxS("ISO 10646:2014") >  >() },
    { "p0418r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0418r1: Fail or succeed: there is no atomic lattice") >  >() },
    { "p0418r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0418r2: Fail or succeed: there is no atomic lattice") >  >() },
    { "p0421r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mariusz Moczala")) >(), wxS("Title401") >  >() },
    { "p0422r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2033")) >(), wxS("Out-of-Thin-Air Execution is Vacuous") >  >() },
    { "p0423r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1711")) >(), wxS("Variable templates for Networking TS traits") >  >() },
    { "p0424r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title450") >  >() },
    { "p0424r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title47") >  >() },
    { "p0424r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title527") >  >() },
    { "p0425r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1225") >  >() },
    { "p0426r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1600")) >(), wxS("Constexpr for std::char_traits") >  >() },
    { "p0426r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1181")) >(), wxS("Constexpr for std::char_traits") >  >() },
    { "p0428r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title567") >  >() },
    { "p0428r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1150") >  >() },
    { "p0428r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title858") >  >() },
    { "p0429r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1588")) >(), wxS("Title1232") >  >() },
    { "p0429r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1674")) >(), wxS("Title1300") >  >() },
    { "p0429r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author889")) >(), wxS("Title718") >  >() },
    { "p0429r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author718")) >(), wxS("Title580") >  >() },
    { "p0429r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1484")) >(), wxS("A Standard flatmap") >  >() },
    { "p0429r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1817")) >(), wxS("A Standard flatmap") >  >() },
    { "p0429r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author257")) >(), wxS("A Standard flatmap") >  >() },
    { "p0429r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author454")) >(), wxS("A Standard flatmap") >  >() },
    { "p0429r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author636")) >(), wxS("A Standard flatmap") >  >() },
    { "p0429r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author1983")) >(), wxS("A Standard flatmap") >  >() },
    { "p0430r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jason Liu")) >(), wxS("Microsoft Word - open LWG issue (Autosaved).docx") >  >() },
    { "p0430r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jason Liu")) >(), wxS("Microsoft Word - P0430R1.docx") >  >() },
    { "p0430r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jason Liu")) >(), wxS("Title1208") >  >() },
    { "p0431r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hyman Rosen")) >(), wxS("ISO/IEC JTC1/SC22/WG21p0431r0") >  >() },
    { "p0432r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title857") >  >() },
    { "p0433r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library") >  >() },
    { "p0433r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library") >  >() },
    { "p0433r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library") >  >() },
    { "p0433r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Toward a resolution of US7 and US14: Integrating templatededuction for class templates into the standard library") >  >() },
    { "p0434r0" , RevList< Rev< 0u, Arr64< Hash(wxS("BRETT SEARLES")) >(), wxS("P0434 Portable Interrupt Library") >  >() },
    { "p0435r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author524")) >(), wxS("Resolving LWG Issues re common_type") >  >() },
    { "p0435r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author74")) >(), wxS("Resolving LWG Issues re common_type") >  >() },
    { "p0436r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1941")) >(), wxS("An Extensible Approach to Obtaining Selected Operators") >  >() },
    { "p0436r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author992")) >(), wxS("An Extensible Approach to Obtaining Selected Operators") >  >() },
    { "p0437r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author17")) >(), wxS("Numeric Traits for the Next Standard Library") >  >() },
    { "p0437r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author151")) >(), wxS("Numeric Traits for the Standard Library") >  >() },
    { "p0438r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1813")) >(), wxS("Toward a <random> Technical Specification") >  >() },
    { "p0439r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author108")) >(), wxS("Make std::memory_order a scoped enumeration") >  >() },
    { "p0440r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0440r0 : Floating Point Atomic View") >  >() },
    { "p0440r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0440r1 : Floating Point Atomic View") >  >() },
    { "p0441r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges: Merging Writable and MoveWritable") >  >() },
    { "p0441r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges: Merging Writable and MoveWritable") >  >() },
    { "p0443r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title517") >  >() },
    { "p0443r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title655") >  >() },
    { "p0443r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title90") >  >() },
    { "p0443r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title692") >  >() },
    { "p0443r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title882") >  >() },
    { "p0443r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title30") >  >() },
    { "p0443r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title734") >  >() },
    { "p0443r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title820") >  >() },
    { "p0443r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("A Unified Executors Proposal for C++ | P0443R11") >  >() },
    { "p0443r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("A Unified Executors Proposal for C++ | P0443R12") >  >() },
    { "p0443r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("A Unified Executors Proposal for C++ | P0443R13") >  >() },
    { "p0443r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("A Unified Executors Proposal for C++ | P0443R14") >  >() },
    { "p0444r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nat Goodspeed")) >(), wxS("P0444") >  >() },
    { "p0445r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1355") >  >() },
    { "p0446r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title271") >  >() },
    { "p0447r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author263")) >(), wxS("Title222") >  >() },
    { "p0447r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author989")) >(), wxS("Title800") >  >() },
    { "p0447r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1959")) >(), wxS("Title1524") >  >() },
    { "p0447r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::colony to the standard library") >  >() },
    { "p0447r15" , RevList< Rev< 15u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r16" , RevList< Rev< 16u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r17" , RevList< Rev< 17u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r18" , RevList< Rev< 18u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r19" , RevList< Rev< 19u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r20" , RevList< Rev< 20u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r21" , RevList< Rev< 21u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r22" , RevList< Rev< 22u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r23" , RevList< Rev< 23u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r24" , RevList< Rev< 24u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r25" , RevList< Rev< 25u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r26" , RevList< Rev< 26u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r27" , RevList< Rev< 27u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0447r28" , RevList< Rev< 28u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Introduction of std::hive to the standard library") >  >() },
    { "p0448r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author506")) >(), wxS("Title417") >  >() },
    { "p0448r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2041")) >(), wxS("Title1578") >  >() },
    { "p0448r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author9")) >(), wxS("Title12") >  >() },
    { "p0448r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author760")) >(), wxS("Title617") >  >() },
    { "p0448r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1271")) >(), wxS("Title984") >  >() },
    { "p0451r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0451r0: Future-Proofing Parallel Algorithms Exception Handling") >  >() },
    { "p0452r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0452r0: Binary-Binary transform_reduce(): The Missing Overload") >  >() },
    { "p0452r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0452r1: Unifying <numeric> Parallel Algorithms") >  >() },
    { "p0454r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0454r0: Wording for a Minimal mdspan<>") >  >() },
    { "p0457r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("String Prefix and Suffix Checking") >  >() },
    { "p0457r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("String Prefix and Suffix Checking") >  >() },
    { "p0457r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("String Prefix and Suffix Checking") >  >() },
    { "p0458r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("Checking for Existence of an Element in Associative Containers") >  >() },
    { "p0458r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("Checking for Existence of an Element in Associative Containers") >  >() },
    { "p0458r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("Checking for Existence of an Element in Associative Containers") >  >() },
    { "p0459r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1432")) >(), wxS("Working Draft, C++ Extensions for Ranges") >  >() },
    { "p0460r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sean Middleditch")) >(), wxS("Title1240") >  >() },
    { "p0461r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1933")) >(), wxS("Title1494") >  >() },
    { "p0461r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1618")) >(), wxS("Title1254") >  >() },
    { "p0461r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1056")) >(), wxS("Title847") >  >() },
    { "p0462r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1340")) >(), wxS("Title1031") >  >() },
    { "p0462r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1944")) >(), wxS("Title1506") >  >() },
    { "p0463r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1512")) >(), wxS("endian") >  >() },
    { "p0463r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1477")) >(), wxS("endian") >  >() },
    { "p0464r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author403")) >(), wxS("Title344") >  >() },
    { "p0464r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tony van")) >(), wxS("Revisiting the meaning of foo(ConceptName,ConceptName)") >  >() },
    { "p0464r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tony van")) >(), wxS("Revisiting the meaning of foo(ConceptName,ConceptName)") >  >() },
    { "p0465r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title943") >  >() },
    { "p0466r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title23") >  >() },
    { "p0466r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1303") >  >() },
    { "p0466r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title656") >  >() },
    { "p0466r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1383") >  >() },
    { "p0466r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title198") >  >() },
    { "p0466r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1172") >  >() },
    { "p0467r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author527")) >(), wxS("Iterator Concerns for Parallel Algorithms") >  >() },
    { "p0467r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1701")) >(), wxS("Iterator Concerns for Parallel Algorithms") >  >() },
    { "p0467r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author993")) >(), wxS("Iterator Concerns for Parallel Algorithms") >  >() },
    { "p0468r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("P0468R0 : An Intrusive Smart Pointer") >  >() },
    { "p0468r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("An Intrusive Smart Pointer") >  >() },
    { "p0469r0" , RevList< Rev< 0u, Arr64< Hash(wxS("R. Tim")) >(), wxS("Sample in place") >  >() },
    { "p0471r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title1331") >  >() },
    { "p0472r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title1691") >  >() },
    { "p0472r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Sankel")) >(), wxS("P0472R1 - Put std::monostate in <utility>") >  >() },
    { "p0472r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Sankel")) >(), wxS("P0472R2 - Put std::monostate in <utility>") >  >() },
    { "p0472r3" , RevList< Rev< 3u, Arr64< Hash(wxS("David Sankel")) >(), wxS("P0472R3 - Put std::monostate in <utility>") >  >() },
    { "p0473r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title342") >  >() },
    { "p0474r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Comparison in C++: Basic Facilities") >  >() },
    { "p0475r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author179")) >(), wxS("LWG 2511: guaranteed copy elision for piecewise construction") >  >() },
    { "p0475r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1038")) >(), wxS("LWG 2511: guaranteed copy elision for piecewise construction (rev. 1)") >  >() },
    { "p0476r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0476r0: Bit-casting object representations") >  >() },
    { "p0476r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0476r1: Bit-casting object representations") >  >() },
    { "p0476r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0476r2: Bit-casting object representations") >  >() },
    { "p0477r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1110")) >(), wxS("std::monostate_function<>") >  >() },
    { "p0478r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Manganelli")) >(), wxS("Title1652") >  >() },
    { "p0479r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Clay Trychta")) >(), wxS("Attributes for Likely and Unlikely Branches") >  >() },
    { "p0479r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Clay Trychta")) >(), wxS("Attributes for Likely and Unlikely Statements") >  >() },
    { "p0479r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Clay Trychta")) >(), wxS("Attributes for Likely and Unlikely Statements") >  >() },
    { "p0479r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Clay Trychta")) >(), wxS("Proposed wording for likely and unlikely attributes (Revision 4)") >  >() },
    { "p0479r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Clay Trychta")) >(), wxS("Proposed wording for likely and unlikely attributes (Revision 5)") >  >() },
    { "p0480r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1341")) >(), wxS("Explicit type checking with structured bindings") >  >() },
    { "p0480r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2071")) >(), wxS("Structured bindings with explicit types") >  >() },
    { "p0481r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title637") >  >() },
    { "p0482r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings") >  >() },
    { "p0482r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings (Revision 1)") >  >() },
    { "p0482r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings (Revision 2)") >  >() },
    { "p0482r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings (Revision 3)") >  >() },
    { "p0482r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings (Revision 4)") >  >() },
    { "p0482r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings (Revision 5)") >  >() },
    { "p0482r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t: A type for UTF-8 characters and strings (Revision 6)") >  >() },
    { "p0483r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Patrice Roy")) >(), wxS("Title1438") >  >() },
    { "p0484r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Patrice Roy")) >(), wxS("Title439") >  >() },
    { "p0484r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Patrice Roy")) >(), wxS("Title1281") >  >() },
    { "p0485r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Manganelli")) >(), wxS("Title1234") >  >() },
    { "p0486r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ildus Nezametdinov")) >(), wxS("Title1108") >  >() },
    { "p0487r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Fixing operator>>(basic_istream&, CharT*) (LWG 2499)") >  >() },
    { "p0487r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Fixing operator>>(basic_istream&, CharT*) (LWG 2499)") >  >() },
    { "p0488r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author104")) >(), wxS("Title95") >  >() },
    { "p0489r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2023")) >(), wxS("Title1565") >  >() },
    { "p0490r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1308")) >(), wxS("Core language changes addressing National Body comments for CD C++17") >  >() },
    { "p0492r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2134")) >(), wxS("Filesystem NB Comments C++17") >  >() },
    { "p0492r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author651")) >(), wxS("Filesystem NB Comments C++17") >  >() },
    { "p0492r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2188")) >(), wxS("Filesystem NB Comments C++17") >  >() },
    { "p0493r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Al Grant")) >(), wxS("Title1231") >  >() },
    { "p0493r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Al Grant")) >(), wxS("Title1009") >  >() },
    { "p0493r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Al Grant")) >(), wxS("Title1512") >  >() },
    { "p0493r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Al Grant")) >(), wxS("Atomic minimum/maximum") >  >() },
    { "p0493r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Al Grant")) >(), wxS("Atomic minimum/maximum") >  >() },
    { "p0493r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Al Grant")) >(), wxS("Atomic minimum/maximum") >  >() },
    { "p0494r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ildus Nezametdinov")) >(), wxS("Title27") >  >() },
    { "p0495r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Concurrency Safety in C++ Data Structures") >  >() },
    { "p0497r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1597")) >(), wxS("Fixes to shared_ptr support for arrays") >  >() },
    { "p0500r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title545") >  >() },
    { "p0501r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title896") >  >() },
    { "p0501r1" , RevList< Rev< 1u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1159") >  >() },
    { "p0501r2" , RevList< Rev< 2u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title753") >  >() },
    { "p0501r3" , RevList< Rev< 3u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title484") >  >() },
    { "p0502r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0502r0: Throwing out of a parallel algorithm terminatesbut how?") >  >() },
    { "p0503r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1326")) >(), wxS("Correcting library usage of \"literal type\"") >  >() },
    { "p0504r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1460")) >(), wxS("Revisiting in-place tag types for any/optional/variant") >  >() },
    { "p0505r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1825")) >(), wxS("Wording for GB 50") >  >() },
    { "p0506r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1761")) >(), wxS("Title1367") >  >() },
    { "p0506r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1999")) >(), wxS("Title1546") >  >() },
    { "p0506r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1179")) >(), wxS("Title929") >  >() },
    { "p0507r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author38")) >(), wxS("Core Issue 1343: Sequencing of non-class initialization") >  >() },
    { "p0508r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1885")) >(), wxS("Wording for GB 58") >  >() },
    { "p0509r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1610")) >(), wxS("P0509R1") >  >() },
    { "p0510r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author294")) >(), wxS("Disallowing references, incomplete types, arrays, and Empty Variants") >  >() },
    { "p0511r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Deduction guide for") >  >() },
    { "p0511r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Deduction guide for std::array") >  >() },
    { "p0512r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1150")) >(), wxS("Title914") >  >() },
    { "p0513r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1277") >  >() },
    { "p0514r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("D0514R0") >  >() },
    { "p0514r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("D0514R1") >  >() },
    { "p0514r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("D0514R1") >  >() },
    { "p0514r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("D0514R1") >  >() },
    { "p0514r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("D0514R1") >  >() },
    { "p0515r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title8") >  >() },
    { "p0515r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1446") >  >() },
    { "p0515r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title571") >  >() },
    { "p0515r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1012") >  >() },
    { "p0516r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0516r0: Clarify That shared_futures Copy Operations have Wide Contracts") >  >() },
    { "p0517r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0517r0: Make future_error Constructible") >  >() },
    { "p0518r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David S")) >(), wxS("p0518r0: Allowing copies as arguments to function objects given to parallel algorithms in response to CH11") >  >() },
    { "p0518r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David S")) >(), wxS("P0518r1: Allowing copies as arguments to function objects given to parallel algorithms in response to CH11") >  >() },
    { "p0519r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1502")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0520r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author249")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0521r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Stephan T")) >(), wxS("P0521r0: Proposed Resolution for CA 14 (shared_ptr use_count/unique)") >  >() },
    { "p0522r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("DR: Matching of template template-arguments excludes compatible templates") >  >() },
    { "p0523r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Detlef Vollmann")) >(), wxS("Wording for CH 10: Complexity of parallel algorithms") >  >() },
    { "p0523r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Detlef Vollmann")) >(), wxS("Wording for CH 10: Complexity of parallel algorithms") >  >() },
    { "p0527r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Untitled Document.md") >  >() },
    { "p0527r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title1419") >  >() },
    { "p0528r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("P0528r0: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange") >  >() },
    { "p0528r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0528r1: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange") >  >() },
    { "p0528r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0528R2: The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange") >  >() },
    { "p0528r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange") >  >() },
    { "p0529r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author758")) >(), wxS("Title615") >  >() },
    { "p0532r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author86")) >(), wxS("Microsoft Word - P0532R0_onlaunder_170114.docx") >  >() },
    { "p0533r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1323")) >(), wxS("Title1020") >  >() },
    { "p0533r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1435")) >(), wxS("Title1115") >  >() },
    { "p0533r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author286")) >(), wxS("Title239") >  >() },
    { "p0533r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1714")) >(), wxS("Title1324") >  >() },
    { "p0533r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author879")) >(), wxS("Title706") >  >() },
    { "p0533r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1523")) >(), wxS("Title1185") >  >() },
    { "p0533r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author793")) >(), wxS("Title642") >  >() },
    { "p0533r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1989")) >(), wxS("Title1540") >  >() },
    { "p0533r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author299")) >(), wxS("Title253") >  >() },
    { "p0533r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author915")) >(), wxS("Title736") >  >() },
    { "p0534r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("call/cc: A low-level API for stackful context switching") >  >() },
    { "p0534r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("call/cc: A low-level API for stackful context switching") >  >() },
    { "p0534r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("call/cc: A low-level API for stackful context switching") >  >() },
    { "p0534r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("call/cc: A low-level API for stackful context switching") >  >() },
    { "p0535r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Generalized Unpacking and Parameter Pack Slicing") >  >() },
    { "p0536r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Implicit Return Type and Allowing Anonymous Types as Return Values") >  >() },
    { "p0537r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Allow Attributes on Template Explicit Instantiations") >  >() },
    { "p0538r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("A Qualified Replacement for #pragma once") >  >() },
    { "p0539r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2082")) >(), wxS("A Proposal to add wide_int Class") >  >() },
    { "p0539r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1620")) >(), wxS("A Proposal to add wide_int Class") >  >() },
    { "p0539r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author116")) >(), wxS("A Proposal to add wide_int Class") >  >() },
    { "p0539r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1431")) >(), wxS("A Proposal to add wide_int Class") >  >() },
    { "p0539r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1807")) >(), wxS("A Proposal to add wide_int Class") >  >() },
    { "p0539r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author816")) >(), wxS("A Proposal to add wideint Template Class") >  >() },
    { "p0540r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1084")) >(), wxS("A Proposal to Add split/join of string/string_view to the Standard Library") >  >() },
    { "p0540r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2062")) >(), wxS("A Proposal to Add split/join of string/string_view to the Standard Library") >  >() },
    { "p0541r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Ranges TS: Post-Increment on Input and Output Iterators") >  >() },
    { "p0541r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Ranges TS: Post-Increment on Input and Output Iterators") >  >() },
    { "p0542r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2006")) >(), wxS("Support for contract based programming in C++") >  >() },
    { "p0542r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author544")) >(), wxS("Support for contract based programming in C++") >  >() },
    { "p0542r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author600")) >(), wxS("Support for contract based programming in C++") >  >() },
    { "p0542r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1586")) >(), wxS("Support for contract based programming in C++") >  >() },
    { "p0542r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author463")) >(), wxS("Support for contract based programming in C++") >  >() },
    { "p0542r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author441")) >(), wxS("Support for contract based programming in C++") >  >() },
    { "p0543r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author779")) >(), wxS("Saturation arithmetic") >  >() },
    { "p0543r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1991")) >(), wxS("Saturation arithmetic") >  >() },
    { "p0543r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1003")) >(), wxS("Saturation arithmetic") >  >() },
    { "p0543r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2015")) >(), wxS("Saturation arithmetic") >  >() },
    { "p0544r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author416")) >(), wxS("User Injection of Filesystems") >  >() },
    { "p0545r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrey Semashev")) >(), wxS("Title778") >  >() },
    { "p0546r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0546r0 : Span - foundation for the future") >  >() },
    { "p0546r1" , RevList< Rev< 1u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0546r1 : Span - foundation for the future") >  >() },
    { "p0546r2" , RevList< Rev< 2u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0546r2 : Span - foundation for the future") >  >() },
    { "p0547r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Ranges TS: Assorted Object Concept Fixes") >  >() },
    { "p0547r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Ranges TS: Assorted Object Concept Fixes") >  >() },
    { "p0547r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Ranges TS: Assorted Object Concept Fixes") >  >() },
    { "p0548r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author500")) >(), wxS("commontype and duration") >  >() },
    { "p0548r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author102")) >(), wxS("commontype and duration") >  >() },
    { "p0549r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1158")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author858")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1026")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author883")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1656")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author568")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author803")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0549r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author978")) >(), wxS("Adjuncts to std::hash") >  >() },
    { "p0550r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1449")) >(), wxS("Transformation Trait uncvref") >  >() },
    { "p0550r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author753")) >(), wxS("Transformation Trait uncvref") >  >() },
    { "p0550r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1576")) >(), wxS("Transformation Trait removecvref") >  >() },
    { "p0551r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author875")) >(), wxS("Thou Shalt Not Specialize std Function Templates!") >  >() },
    { "p0551r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author697")) >(), wxS("Thou Shalt Not Specialize std Function Templates!") >  >() },
    { "p0551r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author574")) >(), wxS("Thou Shalt Not Specialize std Function Templates!") >  >() },
    { "p0551r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author982")) >(), wxS("Thou Shalt Not Specialize std Function Templates!") >  >() },
    { "p0552r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author145")) >(), wxS("enableif vs. requires: A Case Study") >  >() },
    { "p0553r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author45")) >(), wxS("Bit operations") >  >() },
    { "p0553r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author150")) >(), wxS("Bit operations") >  >() },
    { "p0553r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author626")) >(), wxS("Bit operations") >  >() },
    { "p0553r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1753")) >(), wxS("Bit operations") >  >() },
    { "p0553r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1942")) >(), wxS("Bit operations") >  >() },
    { "p0554r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author930")) >(), wxS("Title752") >  >() },
    { "p0554r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author919")) >(), wxS("p0554r1") >  >() },
    { "p0555r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("string_view for source_location") >  >() },
    { "p0556r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1195")) >(), wxS("Integral power-of-2 operations") >  >() },
    { "p0556r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1793")) >(), wxS("Integral power-of-2 operations") >  >() },
    { "p0556r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1537")) >(), wxS("Integral power-of-2 operations") >  >() },
    { "p0556r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author601")) >(), wxS("Integral power-of-2 operations") >  >() },
    { "p0557r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author661")) >(), wxS("Title535") >  >() },
    { "p0558r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author890")) >(), wxS("Title719") >  >() },
    { "p0558r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author359")) >(), wxS("Title303") >  >() },
    { "p0559r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1539")) >(), wxS("Title1192") >  >() },
    { "p0560r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Miro Knejp")) >(), wxS("Class template deduction guides for \"diamond operators\"") >  >() },
    { "p0561r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2039")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0561r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2153")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0561r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1298")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0561r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2232")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0561r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author176")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0561r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author47")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0561r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author708")) >(), wxS("An RAII Interface for Deferred Reclamation") >  >() },
    { "p0562r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author494")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0562r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1735")) >(), wxS("Initialization List Symmetry") >  >() },
    { "p0562r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author951")) >(), wxS("Initialization List Symmetry") >  >() },
    { "p0563r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1947")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0564r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author929")) >(), wxS("Wording for three-way comparisons") >  >() },
    { "p0565r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author373")) >(), wxS("P0565") >  >() },
    { "p0566r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title358") >  >() },
    { "p0566r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1366") >  >() },
    { "p0566r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title329") >  >() },
    { "p0566r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Michael")) >(), wxS("Title361") >  >() },
    { "p0566r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1013") >  >() },
    { "p0566r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1375") >  >() },
    { "p0567r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("index.html") >  >() },
    { "p0567r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("P0567r1.html") >  >() },
    { "p0568r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title866") >  >() },
    { "p0569r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title350") >  >() },
    { "p0570r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1174") >  >() },
    { "p0571r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0571r0: Type Requirements for <numeric> Algorithms") >  >() },
    { "p0571r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("p0571r1: Type Requirements for <numeric> Algorithms") >  >() },
    { "p0571r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Type Requirements for `<numeric>` Algorithms") >  >() },
    { "p0572r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("p0572r0: bit_sizeof and bit_offsetof") >  >() },
    { "p0572r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("p0572r1: bit_sizeof and bit_offsetof") >  >() },
    { "p0572r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("p0572R2: Static reflection of bit fields") >  >() },
    { "p0573r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("abbreviated lambdas") >  >() },
    { "p0573r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Abbreviated Lambdas for Fun and Profit") >  >() },
    { "p0573r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Abbreviated Lambdas for Fun and Profit") >  >() },
    { "p0574r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anthony")) >(), wxS("Algorithm Complexity Constraints and Parallel Overloads") >  >() },
    { "p0574r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Anthony")) >(), wxS("P0574r1: Algorithm Complexity Constraints and Parallel Overloads") >  >() },
    { "p0575r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author456")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0575r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author205")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0575r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2195")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0576r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author767")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0576r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author748")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0577r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author593")) >(), wxS("Title483") >  >() },
    { "p0577r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1613")) >(), wxS("Title1250") >  >() },
    { "p0578r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Title1703") >  >() },
    { "p0578r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Title1070") >  >() },
    { "p0579r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Constexpr for <experimental/ranges/iterator>") >  >() },
    { "p0579r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Constexpr for <experimental/ranges/iterator>") >  >() },
    { "p0581r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1457") >  >() },
    { "p0581r1" , RevList< Rev< 1u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1400") >  >() },
    { "p0582r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title830") >  >() },
    { "p0583r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title542") >  >() },
    { "p0584r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1350") >  >() },
    { "p0586r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Federico Kircheis")) >(), wxS("Safe integral comparisons") >  >() },
    { "p0586r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Federico Kircheis")) >(), wxS("Safe integral comparisons") >  >() },
    { "p0586r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Federico Kircheis")) >(), wxS("Safe integral comparisons") >  >() },
    { "p0587r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author470")) >(), wxS("Title395") >  >() },
    { "p0588r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author75")) >(), wxS("Title76") >  >() },
    { "p0588r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1677")) >(), wxS("Simplifying implicit lambda capture") >  >() },
    { "p0589r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1280")) >(), wxS("p0589r0") >  >() },
    { "p0590r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1014")) >(), wxS("p0590r0") >  >() },
    { "p0591r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1804")) >(), wxS("P0591r0 | Utility functions to implement uses-allocator construction") >  >() },
    { "p0591r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1770")) >(), wxS("P0591r1 | Utility functions to implement uses-allocator construction") >  >() },
    { "p0591r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author44")) >(), wxS("P0591r2 | Utility functions to implement uses-allocator construction") >  >() },
    { "p0591r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author123")) >(), wxS("P0591r3 | Utility functions to implement uses-allocator construction") >  >() },
    { "p0591r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author668")) >(), wxS("P0591r4 | Utility functions to implement uses-allocator construction") >  >() },
    { "p0592r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1077")) >(), wxS("To boldly suggest an overall plan for C++20") >  >() },
    { "p0592r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author966")) >(), wxS("To boldly suggest an overall plan for C++23") >  >() },
    { "p0592r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1836")) >(), wxS("To boldly suggest an overall plan for C++23") >  >() },
    { "p0592r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2184")) >(), wxS("To boldly suggest an overall plan for C++23") >  >() },
    { "p0592r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1499")) >(), wxS("To boldly suggest an overall plan for C++23") >  >() },
    { "p0592r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author2174")) >(), wxS("To boldly suggest an overall plan for C++26") >  >() },
    { "p0593r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1283")) >(), wxS("What to do with buffers that are not arrays, and undefined behavior thereof?") >  >() },
    { "p0593r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("p0593r1: Implicit creation of objects for low-level object manipulation") >  >() },
    { "p0593r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("p0593r2: Implicit creation of objects for low-level object manipulation") >  >() },
    { "p0593r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Implicit creation of objects for low-level object manipulation") >  >() },
    { "p0593r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Implicit creation of objects for low-level object manipulation") >  >() },
    { "p0593r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Implicit creation of objects for low-level object manipulation") >  >() },
    { "p0593r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Implicit creation of objects for low-level object manipulation") >  >() },
    { "p0594r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1641")) >(), wxS("Relative comparisons and std::less<T*>") >  >() },
    { "p0595r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1281")) >(), wxS("Title994") >  >() },
    { "p0595r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1313")) >(), wxS("std::is_constant_evaluated") >  >() },
    { "p0595r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author450")) >(), wxS("std::is_constant_evaluated") >  >() },
    { "p0596r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author587")) >(), wxS("Title478") >  >() },
    { "p0596r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daveed Vandevoorde")) >(), wxS("Title772") >  >() },
    { "p0597r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author76")) >(), wxS("Title77") >  >() },
    { "p0598r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2226")) >(), wxS("Title1702") >  >() },
    { "p0599r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author291")) >(), wxS("Microsoft Word - P0599R0_hash_noexcept_170206.docx") >  >() },
    { "p0599r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author786")) >(), wxS("P0599R1 noexcept for hash functions (US140)") >  >() },
    { "p0600r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author918")) >(), wxS("Microsoft Word - P0600R0_nodiscard_in_the_library_170206.docx") >  >() },
    { "p0600r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1243")) >(), wxS("P0600R1 [[nodiscard]] in the library") >  >() },
    { "p0601r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1389")) >(), wxS("Establishing a direction for SIMD-enabled functions") >  >() },
    { "p0602r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("variant and optional should propagate copy/move triviality") >  >() },
    { "p0602r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("variant and optional should propagate copy/move triviality") >  >() },
    { "p0602r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("variant and optional should propagate copy/move triviality") >  >() },
    { "p0602r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("variant and optional should propagate copy/move triviality") >  >() },
    { "p0602r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("variant and optional should propagate copy/move triviality") >  >() },
    { "p0603r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1920")) >(), wxS("ISO/IEC JTC1/SC22/WG21p0603r0") >  >() },
    { "p0604r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Resolving GB 55, US 84, US 85, US 86") >  >() },
    { "p0606r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title498") >  >() },
    { "p0607r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Inline Variables for the Standard Library") >  >() },
    { "p0608r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("A sane variant converting constructor (LEWG 227)") >  >() },
    { "p0608r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("A sane variant converting constructor - HackMD") >  >() },
    { "p0608r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1089")) >(), wxS("(Foswiki login) Html < Wg21rapperswil2018/StrawPolls < Foswiki") >  >() },
    { "p0608r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("A sane variant converting constructor - HackMD") >  >() },
    { "p0609r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title988") >  >() },
    { "p0609r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title1029") >  >() },
    { "p0609r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title1005") >  >() },
    { "p0609r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title1651") >  >() },
    { "p0610r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1476")) >(), wxS("C++ Standard Library \"Review\" Issues Resolved in Kona") >  >() },
    { "p0611r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("More Better Operators") >  >() },
    { "p0612r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author457")) >(), wxS("NB comment CH 2: volatile") >  >() },
    { "p0613r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0")) >(), wxS("GB15: Issue 2011 resolution") >  >() },
    { "p0614r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author837")) >(), wxS("Range-based for statements with initializer") >  >() },
    { "p0614r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author683")) >(), wxS("Range-based for statements with initializer") >  >() },
    { "p0615r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1823")) >(), wxS("Renaming for structured bindings") >  >() },
    { "p0616r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1030")) >(), wxS("Title825") >  >() },
    { "p0618r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1967")) >(), wxS("Deprecating <codecvt>") >  >() },
    { "p0619r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author591")) >(), wxS("Reviewing Deprecated Facilities of C++17 for C++20") >  >() },
    { "p0619r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1746")) >(), wxS("Reviewing Deprecated Facilities of C++17 for C++20") >  >() },
    { "p0619r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1669")) >(), wxS("Reviewing Deprecated Facilities of C++17 for C++20") >  >() },
    { "p0619r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author868")) >(), wxS("Reviewing Deprecated Facilities of C++17 for C++20") >  >() },
    { "p0619r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1609")) >(), wxS("Reviewing Deprecated Facilities of C++17 for C++20") >  >() },
    { "p0620r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1259")) >(), wxS("Drafting for class template argument deduction issues") >  >() },
    { "p0621r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ready Ranges TS Issues") >  >() },
    { "p0622r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1627")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0623r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0623r0: Final C++17 Parallel Algorithms Fixes") >  >() },
    { "p0624r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title422") >  >() },
    { "p0624r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title827") >  >() },
    { "p0624r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1085") >  >() },
    { "p0625r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1227")) >(), wxS("C++ Standard Library Issues Resolved Directly In Kona") >  >() },
    { "p0627r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Melissa Mears")) >(), wxS("Attribute to mark unreachable code") >  >() },
    { "p0627r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Melissa Mears")) >(), wxS("Unreachable Attribute R1") >  >() },
    { "p0627r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Melissa Mears")) >(), wxS("Title1283") >  >() },
    { "p0627r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Melissa Mears")) >(), wxS("Title449") >  >() },
    { "p0627r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Melissa Mears")) >(), wxS("Title147") >  >() },
    { "p0629r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2157")) >(), wxS("Title1661") >  >() },
    { "p0630r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author833")) >(), wxS("To boldly suggest a pub crawl for C++ Toronto") >  >() },
    { "p0631r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title1572") >  >() },
    { "p0631r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title761") >  >() },
    { "p0631r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title886") >  >() },
    { "p0631r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title1602") >  >() },
    { "p0631r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title622") >  >() },
    { "p0631r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title676") >  >() },
    { "p0631r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title923") >  >() },
    { "p0631r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title1222") >  >() },
    { "p0631r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Lev Minkovsky")) >(), wxS("Title1242") >  >() },
    { "p0632r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1861")) >(), wxS("Proposal of [[uninitialized]] attribute") >  >() },
    { "p0633r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daveed Vandevoorde")) >(), wxS("Title710") >  >() },
    { "p0634r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author364")) >(), wxS("Untitled") >  >() },
    { "p0634r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author842")) >(), wxS("Down with typename!") >  >() },
    { "p0634r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1791")) >(), wxS("Down with typename!") >  >() },
    { "p0634r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author23")) >(), wxS("Down with typename!") >  >() },
    { "p0635r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("p0635r0 - c_array addition proposal (090617).pages") >  >() },
    { "p0636r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1730")) >(), wxS("Changes between C++14 and C++17") >  >() },
    { "p0636r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author248")) >(), wxS("Changes between C++14 and C++17") >  >() },
    { "p0636r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author451")) >(), wxS("Changes between C++14 and C++17") >  >() },
    { "p0636r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author688")) >(), wxS("Changes between C++14 and C++17") >  >() },
    { "p0637r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1473")) >(), wxS("Capture *this with initializer") >  >() },
    { "p0638r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ed Schouten")) >(), wxS("Title859") >  >() },
    { "p0639r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1686")) >(), wxS("Changing attack vector of the constexpr_vector") >  >() },
    { "p0640r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Emil Dotchevski")) >(), wxS("Title1133") >  >() },
    { "p0641r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)") >  >() },
    { "p0641r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)") >  >() },
    { "p0641r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)") >  >() },
    { "p0642r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1249") >  >() },
    { "p0642r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title530") >  >() },
    { "p0642r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1062") >  >() },
    { "p0642r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1018") >  >() },
    { "p0642r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title73") >  >() },
    { "p0643r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title154") >  >() },
    { "p0644r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Forward without forward") >  >() },
    { "p0644r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Forward without forward") >  >() },
    { "p0645r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author872")) >(), wxS("Text Formatting") >  >() },
    { "p0645r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0645r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Formatting") >  >() },
    { "p0646r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title619") >  >() },
    { "p0646r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title1237") >  >() },
    { "p0647r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1594")) >(), wxS("Title1235") >  >() },
    { "p0647r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1373")) >(), wxS("Title1065") >  >() },
    { "p0648r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0648r0") >  >() },
    { "p0649r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0649r0") >  >() },
    { "p0650r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0650r0") >  >() },
    { "p0650r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0650r1") >  >() },
    { "p0650r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0650r2") >  >() },
    { "p0651r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Switch the Ranges TS to Use Variable Concepts") >  >() },
    { "p0651r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Switch the Ranges TS to Use Variable Concepts") >  >() },
    { "p0652r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1171")) >(), wxS("Concurrent associative data structure with unsynchronized view") >  >() },
    { "p0652r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author888")) >(), wxS("Concurrent associative data structure with unsynchronized view") >  >() },
    { "p0652r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1219")) >(), wxS("Concurrent associative data structure with unsynchronized view") >  >() },
    { "p0652r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2056")) >(), wxS("Concurrent associative data structure with unsynchronized view") >  >() },
    { "p0653r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("pointer_traits utility to convert to raw pointer") >  >() },
    { "p0653r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("Utility to convert a pointer to a raw pointer") >  >() },
    { "p0653r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("Utility to convert a pointer to a raw pointer") >  >() },
    { "p0654r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lo\uF8E0Joly")) >(), wxS("Title1371") >  >() },
    { "p0655r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Park")) >(), wxS("visit<R>: Explicit Return Type for visit") >  >() },
    { "p0655r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Park")) >(), wxS("visit<R>: Explicit Return Type for visit") >  >() },
    { "p0656r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author126")) >(), wxS("Reducing <ratio>") >  >() },
    { "p0657r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1918")) >(), wxS("Deprecate Certain Declarations in the Global Namespace") >  >() },
    { "p0657r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1507")) >(), wxS("Deprecate Certain Declarations in the Global Namespace") >  >() },
    { "p0657r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1905")) >(), wxS("Deprecate Certain Declarations in the Global Namespace") >  >() },
    { "p0658r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("P0658R0 -- Proposal for adding alias declarations to concepts") >  >() },
    { "p0658r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("wg21 | For documenting all WG21-related proposals") >  >() },
    { "p0659r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2084")) >(), wxS("Microsoft Word - P0659R0_futurestatus_draft_170613.docx") >  >() },
    { "p0660r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author869")) >(), wxS("P0660R0") >  >() },
    { "p0660r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1349")) >(), wxS("P0660R3") >  >() },
    { "p0660r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author276")) >(), wxS("P0660R3") >  >() },
    { "p0660r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1225")) >(), wxS("C++ International Standard") >  >() },
    { "p0660r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author479")) >(), wxS("C++ International Standard") >  >() },
    { "p0660r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author401")) >(), wxS("P0660R6 A Cooperatively Interruptible Joining Thread, Rev 6") >  >() },
    { "p0660r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1913")) >(), wxS("P0660R7 Interrupt Tokens and a Joining Thread, Rev 7") >  >() },
    { "p0660r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author764")) >(), wxS("C++ International Standard") >  >() },
    { "p0660r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author13")) >(), wxS("P0660R9") >  >() },
    { "p0660r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author68")) >(), wxS("P0660") >  >() },
    { "p0661r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Allan Deutsch")) >(), wxS("Title773") >  >() },
    { "p0662r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author863")) >(), wxS("Working Draft, C++ Extensions for Ranges") >  >() },
    { "p0663r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges TS Ready Issues for the July 2017 (Toronto) meeting") >  >() },
    { "p0664r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author234")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2095")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author51")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author147")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1277")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author414")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author864")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author2102")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0664r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author2234")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p0665r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tristan Brindle")) >(), wxS("Title41") >  >() },
    { "p0665r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tristan Brindle")) >(), wxS("Title878") >  >() },
    { "p0666r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alasdair Mackintosh")) >(), wxS("C++ Latches and Barriers") >  >() },
    { "p0666r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("P0666R1") >  >() },
    { "p0666r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("P0666R2") >  >() },
    { "p0667r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Moving std::future extensions forward") >  >() },
    { "p0668r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Moving std::future extensions forward") >  >() },
    { "p0668r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Revising the C++ memory model") >  >() },
    { "p0668r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Revising the C++ memory model") >  >() },
    { "p0668r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Revising the C++ memory model") >  >() },
    { "p0668r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Revising the C++ memory model") >  >() },
    { "p0668r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Revising the C++ memory model") >  >() },
    { "p0669r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author581")) >(), wxS("Title473") >  >() },
    { "p0670r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Static reflection of functions") >  >() },
    { "p0670r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Static reflection of functions") >  >() },
    { "p0670r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Static reflection of functions") >  >() },
    { "p0670r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Function reflection") >  >() },
    { "p0670r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Function reflection") >  >() },
    { "p0671r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Parametric Functions") >  >() },
    { "p0671r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Function Arguments That Speak") >  >() },
    { "p0671r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Axel Naumann")) >(), wxS("Self-explanatory Function Arguments") >  >() },
    { "p0672r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joel Falcou")) >(), wxS("Title63") >  >() },
    { "p0673r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title367") >  >() },
    { "p0674r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author830")) >(), wxS("Extending make_shared to Support Arrays") >  >() },
    { "p0674r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author780")) >(), wxS("Extending make_shared to Support Arrays") >  >() },
    { "p0675r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2166")) >(), wxS("Title1667") >  >() },
    { "p0676r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Felix Petriconi")) >(), wxS("future_proposal_P0676R0") >  >() },
    { "p0678r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1637")) >(), wxS("Title1266") >  >() },
    { "p0679r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title607") >  >() },
    { "p0680r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torvald Riegel")) >(), wxS("Title653") >  >() },
    { "p0681r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1228") >  >() },
    { "p0682r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1799")) >(), wxS("Repairing elementary string conversions (LWG 2955)") >  >() },
    { "p0682r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1257")) >(), wxS("Repairing elementary string conversions (LWG 2955)") >  >() },
    { "p0683r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author821")) >(), wxS("Default member initializers for bit-fields") >  >() },
    { "p0683r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1727")) >(), wxS("Default member initializers for bit-fields (revision 1)") >  >() },
    { "p0684r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author224")) >(), wxS("Title182") >  >() },
    { "p0684r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author831")) >(), wxS("Title659") >  >() },
    { "p0684r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1416")) >(), wxS("Title1101") >  >() },
    { "p0685r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title263") >  >() },
    { "p0686r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title261") >  >() },
    { "p0687r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruyman Reyes")) >(), wxS("Title1041") >  >() },
    { "p0688r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chris Kohlhoff")) >(), wxS("Title1166") >  >() },
    { "p0689r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1618") >  >() },
    { "p0690r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0690r0: Tearable Atomics") >  >() },
    { "p0690r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0690r1: Tearable Atomics") >  >() },
    { "p0691r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author322")) >(), wxS("Title272") >  >() },
    { "p0692r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1921")) >(), wxS("Access Checking on Specializations") >  >() },
    { "p0692r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2156")) >(), wxS("Access Checking on Specializations") >  >() },
    { "p0694r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1031")) >(), wxS("Title828") >  >() },
    { "p0695r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1762")) >(), wxS("Title1368") >  >() },
    { "p0696r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Remove abbreviated functions and template-introduction syntax from the Concepts TS") >  >() },
    { "p0696r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Remove abbreviated functions and template-introduction syntax from the Concepts TS") >  >() },
    { "p0697r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title32") >  >() },
    { "p0698r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1643")) >(), wxS("C++ Standard Library Issues to be moved in Toronto") >  >() },
    { "p0699r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author282")) >(), wxS("C++ Standard Library Issues Resolved Directly In Toronto") >  >() },
    { "p0700r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author331")) >(), wxS("Title277") >  >() },
    { "p0701r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("P0701r0: Back to the std2::future") >  >() },
    { "p0701r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("p0701r1: Back to the std2::future Part II") >  >() },
    { "p0701r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("p0701r2: Back to the std2::future Part II") >  >() },
    { "p0702r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Language support for Constructor Template Argument Deduction") >  >() },
    { "p0702r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Language support for Constructor Template Argument Deduction") >  >() },
    { "p0703r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Title1107") >  >() },
    { "p0704r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Fixing const-qualified pointers to members") >  >() },
    { "p0704r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Fixing const-qualified pointers to members") >  >() },
    { "p0705r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title1504") >  >() },
    { "p0706r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author678")) >(), wxS("Efficient headers for modules (or not)") >  >() },
    { "p0707r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1704") >  >() },
    { "p0707r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1170") >  >() },
    { "p0707r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title206") >  >() },
    { "p0707r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1360") >  >() },
    { "p0707r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title242") >  >() },
    { "p0707r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title356") >  >() },
    { "p0709r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Outcome is")) >(), wxS("Title970") >  >() },
    { "p0709r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Outcome is")) >(), wxS("Title755") >  >() },
    { "p0709r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Outcome is")) >(), wxS("Title1631") >  >() },
    { "p0709r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Outcome is")) >(), wxS("Title316") >  >() },
    { "p0709r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Outcome is")) >(), wxS("Title673") >  >() },
    { "p0710r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author811")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0710r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2077")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0711r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2219")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0712r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1982")) >(), wxS("p0712") >  >() },
    { "p0713r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2162")) >(), wxS("Untitled") >  >() },
    { "p0713r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1728")) >(), wxS("Title1336") >  >() },
    { "p0714r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1017")) >(), wxS("Title812") >  >() },
    { "p0715r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1439")) >(), wxS("Title1118") >  >() },
    { "p0716r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1720")) >(), wxS("Title1328") >  >() },
    { "p0717r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author100")) >(), wxS("Title93") >  >() },
    { "p0717r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author370")) >(), wxS("Title315") >  >() },
    { "p0718r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1745")) >(), wxS("Revising atomic_shared_ptr for C++20") >  >() },
    { "p0718r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1495")) >(), wxS("Revising atomic_shared_ptr for C++20") >  >() },
    { "p0721r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1862")) >(), wxS("Title1444") >  >() },
    { "p0722r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author227")) >(), wxS("ISO/IEC JTC1/SC22/WG21p0722r0") >  >() },
    { "p0722r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1006")) >(), wxS("Title808") >  >() },
    { "p0722r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1304")) >(), wxS("Efficient sized delete for variable sized classes") >  >() },
    { "p0722r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1333")) >(), wxS("Efficient sized delete for variable sized classes") >  >() },
    { "p0723r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author946")) >(), wxS("Response to Clarifying the status of feature test macros") >  >() },
    { "p0724r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author828")) >(), wxS("Merge the Concepts TS Working Draft into the C++20 working draft") >  >() },
    { "p0725r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Remove the requirement for constrained-type-specifiers to be deduced to the same type from the Concepts TS") >  >() },
    { "p0726r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1202")) >(), wxS("Does the Concepts TS Improve on C++17?") >  >() },
    { "p0727r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2027")) >(), wxS("Core Issue 1299: Temporary objects vs temporary expressions") >  >() },
    { "p0728r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author482")) >(), wxS("Wording for Networking PDTS ballot comment 005") >  >() },
    { "p0729r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Proposed wording for Networking TS NB comment GB 9") >  >() },
    { "p0730r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Options for addressing requires-clause syntax ambiguities") >  >() },
    { "p0730r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("requires-clause syntax ambiguities: wording to apply custom grammar") >  >() },
    { "p0731r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1309")) >(), wxS("Title1014") >  >() },
    { "p0732r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title1227") >  >() },
    { "p0732r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title963") >  >() },
    { "p0732r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title1645") >  >() },
    { "p0734r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1621")) >(), wxS("C++ Technical Specification") >  >() },
    { "p0735r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Will Deacon")) >(), wxS("Interaction of memory_order_consume with release sequences") >  >() },
    { "p0735r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Will Deacon")) >(), wxS("Interaction of memory_order_consume with release sequences") >  >() },
    { "p0736r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Nameless parameters and unutterable specializations") >  >() },
    { "p0736r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Nameless parameters and unutterable specializations") >  >() },
    { "p0737r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0737r0 : Execution Context of Execution Agents") >  >() },
    { "p0738r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("I Stream, You Stream, We All Stream for istream_iterator") >  >() },
    { "p0738r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("I Stream, You Stream, We All Stream for istream_iterator") >  >() },
    { "p0738r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("I Stream, You Stream, We All Stream for istream_iterator") >  >() },
    { "p0739r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Some improvements to class template argument deduction integration into the standard library") >  >() },
    { "p0740r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Ranges TS Immediate Issues from the July 2017 (Toronto) meeting") >  >() },
    { "p0742r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author346")) >(), wxS("Wording for Networking PDTS ballot comment resolutions") >  >() },
    { "p0745r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title482") >  >() },
    { "p0745r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1295") >  >() },
    { "p0746r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author740")) >(), wxS("Wording for Networking PDTS ballot comment 011 (US-10)") >  >() },
    { "p0747r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1129")) >(), wxS("Wording for Networking PDTS ballot comments 026 (GB-15) and 027 (GB-16)") >  >() },
    { "p0747r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1951")) >(), wxS("Wording for Networking PDTS ballot comment 026 (GB-15), but not 027 (GB-16)") >  >() },
    { "p0748r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author711")) >(), wxS("Wording for Networking PDTS ballot comments on reentrancy") >  >() },
    { "p0749r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author928")) >(), wxS("Title748") >  >() },
    { "p0750r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0750r0: Consume") >  >() },
    { "p0750r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0750r1: Consume") >  >() },
    { "p0752r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1372")) >(), wxS("Title1064") >  >() },
    { "p0753r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author895")) >(), wxS("Title724") >  >() },
    { "p0753r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1683")) >(), wxS("Title1308") >  >() },
    { "p0753r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1541")) >(), wxS("Title1194") >  >() },
    { "p0754r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author952")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0754r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1994")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p0754r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author662")) >(), wxS("Version Header 06 P0754R2") >  >() },
    { "p0756r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1685")) >(), wxS("Lambda syntax should be more liberal in what it accepts") >  >() },
    { "p0757r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author841")) >(), wxS("regex_iterator should be iterable") >  >() },
    { "p0758r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Implicit conversion traits and utility functions") >  >() },
    { "p0758r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Implicit conversion traits and utility functions") >  >() },
    { "p0759r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("fpos requirements") >  >() },
    { "p0759r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("fpos requirements") >  >() },
    { "p0761r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title1586") >  >() },
    { "p0761r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title883") >  >() },
    { "p0761r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title826") >  >() },
    { "p0762r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title432") >  >() },
    { "p0766r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1590")) >(), wxS("Fixing small-ish functionality gaps in constraints") >  >() },
    { "p0766r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1273")) >(), wxS("Fixing small-ish functionality gaps in constraints") >  >() },
    { "p0767r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author472")) >(), wxS("Expunge POD") >  >() },
    { "p0767r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1050")) >(), wxS("Deprecate POD") >  >() },
    { "p0768r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1658")) >(), wxS("Library Support for the Spaceship (Comparison) Operator") >  >() },
    { "p0768r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author705")) >(), wxS("Library Support for the Spaceship (Comparison) Operator") >  >() },
    { "p0769r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("shift proposal P0769R0.pages") >  >() },
    { "p0769r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("shift proposal P0769R1.pages") >  >() },
    { "p0769r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("shift proposal P0769R2.pages") >  >() },
    { "p0770r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1342")) >(), wxS("Title1033") >  >() },
    { "p0771r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title560") >  >() },
    { "p0771r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title66") >  >() },
    { "p0772r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nat Goodspeed")) >(), wxS("Title511") >  >() },
    { "p0772r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nat Goodspeed")) >(), wxS("Title1178") >  >() },
    { "p0773r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1776")) >(), wxS("Towards meaningful fancy pointers") >  >() },
    { "p0774r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1164")) >(), wxS("Module Declaration Location") >  >() },
    { "p0775r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author332")) >(), wxS("Module Partitions") >  >() },
    { "p0776r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author486")) >(), wxS("Rebase the Parallelism TS onto the C++17 Standard") >  >() },
    { "p0776r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author300")) >(), wxS("Rebase the Parallelism TS onto the C++17 Standard") >  >() },
    { "p0777r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author498")) >(), wxS("Treating Unnecessary decay") >  >() },
    { "p0777r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2127")) >(), wxS("Treating Unnecessary decay") >  >() },
    { "p0778r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author723")) >(), wxS("Module Names") >  >() },
    { "p0779r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title630") >  >() },
    { "p0780r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pack expansion in lambda init-capture") >  >() },
    { "p0780r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pack expansion in lambda init-capture") >  >() },
    { "p0780r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pack expansion in lambda init-capture") >  >() },
    { "p0781r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author896")) >(), wxS("A Modern C++ Signature for Main") >  >() },
    { "p0782r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author384")) >(), wxS("A Case for Simplifying/Improving Natural Syntax Concepts") >  >() },
    { "p0782r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1380")) >(), wxS("Title1071") >  >() },
    { "p0782r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1910")) >(), wxS("Title1473") >  >() },
    { "p0783r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("P0783: Continuations without overcomplicating the future") >  >() },
    { "p0784r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author78")) >(), wxS("Title79") >  >() },
    { "p0784r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author63")) >(), wxS("Title67") >  >() },
    { "p0784r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1001")) >(), wxS("Title807") >  >() },
    { "p0784r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author867")) >(), wxS("More constexpr containers") >  >() },
    { "p0784r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author106")) >(), wxS("More constexpr containers") >  >() },
    { "p0784r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author279")) >(), wxS("More constexpr containers") >  >() },
    { "p0784r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1072")) >(), wxS("More constexpr containers") >  >() },
    { "p0784r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author2110")) >(), wxS("More constexpr containers") >  >() },
    { "p0785r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author493")) >(), wxS("Runtime-sized arrays and a C++ wrapper") >  >() },
    { "p0786r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0786r0") >  >() },
    { "p0786r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p0786r1") >  >() },
    { "p0787r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1470")) >(), wxS("Proclaimed Ownership Declarations") >  >() },
    { "p0788r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author296")) >(), wxS("Standard Library Specification in a Concepts and Contracts World") >  >() },
    { "p0788r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author805")) >(), wxS("Standard Library Specification in a Concepts and Contracts World") >  >() },
    { "p0788r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1141")) >(), wxS("Standard Library Specification in a Concepts and Contracts World") >  >() },
    { "p0788r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1969")) >(), wxS("Standard Library Specification in a Concepts and Contracts World") >  >() },
    { "p0789r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author769")) >(), wxS("Range Adaptors and Utilities") >  >() },
    { "p0789r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author850")) >(), wxS("Range Adaptors and Utilities") >  >() },
    { "p0789r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2005")) >(), wxS("Range Adaptors and Utilities") >  >() },
    { "p0789r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1608")) >(), wxS("Range Adaptors and Utilities") >  >() },
    { "p0790r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("library-operator-spaceship") >  >() },
    { "p0790r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title162") >  >() },
    { "p0790r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title1634") >  >() },
    { "p0791r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author834")) >(), wxS("Title662") >  >() },
    { "p0792r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author419")) >(), wxS("Title359") >  >() },
    { "p0792r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author371")) >(), wxS("Untitled") >  >() },
    { "p0792r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1958")) >(), wxS("Untitled") >  >() },
    { "p0792r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2204")) >(), wxS("Untitled") >  >() },
    { "p0792r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author732")) >(), wxS("Untitled") >  >() },
    { "p0792r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a non-owning reference to a Callable") >  >() },
    { "p0792r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0792r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("function_ref: a type-erased callable reference - HackMD") >  >() },
    { "p0793r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1566") >  >() },
    { "p0794r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1666") >  >() },
    { "p0795r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Simon")) >(), wxS("Title42") >  >() },
    { "p0796r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon")) >(), wxS("Title919") >  >() },
    { "p0796r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title14") >  >() },
    { "p0796r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title798") >  >() },
    { "p0796r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title468") >  >() },
    { "p0797r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matti")) >(), wxS("Title54") >  >() },
    { "p0797r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matti Rintala")) >(), wxS("Title262") >  >() },
    { "p0797r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matti Rintala")) >(), wxS("Title1298") >  >() },
    { "p0798r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1639")) >(), wxS("p0798r0: Monadic operations for std::optional") >  >() },
    { "p0798r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Simon Brand")) >(), wxS("p0798R2: Monadic operations for std::optional") >  >() },
    { "p0798r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Simon Brand")) >(), wxS("p0798R3: Monadic operations for std::optional") >  >() },
    { "p0798r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Simon Brand")) >(), wxS("p0798R4: Monadic operations for std::optional") >  >() },
    { "p0798r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("p0798R6: Monadic operations for std::optional") >  >() },
    { "p0798r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("Monadic operations for std::optional") >  >() },
    { "p0799r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Stephen")) >(), wxS("Title142") >  >() },
    { "p0799r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Stephen Michel")) >(), wxS("Baseline for Ed 2 of TR 24772") >  >() },
    { "p0800r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("wg21 | For documenting all WG21-related proposals") >  >() },
    { "p0801r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title966") >  >() },
    { "p0802r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Beman Dawes")) >(), wxS("Standard Library Concepts -") >  >() },
    { "p0803r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1420")) >(), wxS("Endian RFC") >  >() },
    { "p0804r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Impact of the Modules TS on the C++ tools ecosystem") >  >() },
    { "p0805r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marshall Clow")) >(), wxS("Title723") >  >() },
    { "p0805r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1868")) >(), wxS("Comparing Containers") >  >() },
    { "p0805r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author950")) >(), wxS("Comparing Containers") >  >() },
    { "p0806r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2199")) >(), wxS("Deprecate Implicit Capture of this") >  >() },
    { "p0806r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2225")) >(), wxS("Deprecate implicit capture of this via [=]") >  >() },
    { "p0806r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1146")) >(), wxS("Deprecate implicit capture of this via [=]") >  >() },
    { "p0807r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2022")) >(), wxS("An Adjective Syntax for Concepts") >  >() },
    { "p0808r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2066")) >(), wxS("Title1600") >  >() },
    { "p0809r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1616")) >(), wxS("Title1252") >  >() },
    { "p0810r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Deane")) >(), wxS("Title1482") >  >() },
    { "p0811r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author326")) >(), wxS("Well-behaved interpolation for numbers and pointers") >  >() },
    { "p0811r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1233")) >(), wxS("Well-behaved interpolation for numbers and pointers") >  >() },
    { "p0811r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1919")) >(), wxS("Well-behaved interpolation for numbers and pointers") >  >() },
    { "p0811r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2155")) >(), wxS("Well-behaved interpolation for numbers and pointers") >  >() },
    { "p0812r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1375")) >(), wxS("copy-list-initialization is inherently un-=") >  >() },
    { "p0813r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1085")) >(), wxS("Microsoft Word - P0813R0_retval_construct.docx") >  >() },
    { "p0813r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1743")) >(), wxS("P0813R1") >  >() },
    { "p0814r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2090")) >(), wxS("Microsoft Word - P0814R0_hash_combine.docx") >  >() },
    { "p0814r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1992")) >(), wxS("Microsoft Word - P0814R2_hash_combine.docx") >  >() },
    { "p0815r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author824")) >(), wxS("C++ Standard Library Issues to be moved in Albuquerque") >  >() },
    { "p0816r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author262")) >(), wxS("Title221") >  >() },
    { "p0817r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1339")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p0818r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2064")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0818r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author613")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0819r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2158")) >(), wxS("Microsoft Word - P0819R0_feature_macros.docx") >  >() },
    { "p0820r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1122")) >(), wxS("Title895") >  >() },
    { "p0820r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1736")) >(), wxS("Title1340") >  >() },
    { "p0820r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author232")) >(), wxS("Title193") >  >() },
    { "p0820r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1998")) >(), wxS("Title1545") >  >() },
    { "p0820r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author177")) >(), wxS("Title151") >  >() },
    { "p0821r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1712")) >(), wxS("Title1322") >  >() },
    { "p0822r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title977") >  >() },
    { "p0824r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur")) >(), wxS("Title1038") >  >() },
    { "p0824r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author278")) >(), wxS("Summary of SG14 discussion on <system_error>") >  >() },
    { "p0825r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("A friendlier tuple get") >  >() },
    { "p0825r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("A friendlier tuple get") >  >() },
    { "p0826r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("SFINAE-friendly std::bind") >  >() },
    { "p0827r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author360")) >(), wxS("Title305") >  >() },
    { "p0828r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2123")) >(), wxS("Title1642") >  >() },
    { "p0828r1" , RevList< Rev< 1u, Arr64< Hash(wxS("John McFarlane")) >(), wxS("Title1309") >  >() },
    { "p0829r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Title618") >  >() },
    { "p0829r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Title959") >  >() },
    { "p0829r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Title299") >  >() },
    { "p0829r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Title1532") >  >() },
    { "p0829r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Title1255") >  >() },
    { "p0830r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2051")) >(), wxS("Microsoft Word - P0830R0_requires_in_lib.docx") >  >() },
    { "p0831r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Keep alias syntax extendable") >  >() },
    { "p0832r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Module TS Wording Does Not Support Intended Use Case") >  >() },
    { "p0834r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("p0834r0: Lifting overload sets into objects") >  >() },
    { "p0835r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author395")) >(), wxS("Adopt SD-6 feature macros into the C++20 working draft") >  >() },
    { "p0836r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title1267") >  >() },
    { "p0836r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title1288") >  >() },
    { "p0837r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1123")) >(), wxS("Ruminations on modular macros") >  >() },
    { "p0838r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author272")) >(), wxS("Title226") >  >() },
    { "p0839r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author924")) >(), wxS("Recursive lambdas") >  >() },
    { "p0840r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author802")) >(), wxS("Language support for empty objects") >  >() },
    { "p0840r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author939")) >(), wxS("Language support for empty objects") >  >() },
    { "p0840r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1201")) >(), wxS("Language support for empty objects") >  >() },
    { "p0841r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author641")) >(), wxS("ModulesAtScale") >  >() },
    { "p0842r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1037")) >(), wxS("Unknown Exports by Example") >  >() },
    { "p0843r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author212")) >(), wxS("fixed_capacity_vector") >  >() },
    { "p0843r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1752")) >(), wxS("P0843r1: fixed_capacity_vector") >  >() },
    { "p0843r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1566")) >(), wxS("static_vector") >  >() },
    { "p0843r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author204")) >(), wxS("README.md - Grip") >  >() },
    { "p0843r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1886")) >(), wxS("README.md - Grip") >  >() },
    { "p0843r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author50")) >(), wxS("static_vector") >  >() },
    { "p0843r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author2000")) >(), wxS("static_vector") >  >() },
    { "p0843r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1079")) >(), wxS("inplace_vector") >  >() },
    { "p0843r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author2138")) >(), wxS("inplace_vector") >  >() },
    { "p0843r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author95")) >(), wxS("`inplace_vector`") >  >() },
    { "p0843r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author1853")) >(), wxS("inplace_vector") >  >() },
    { "p0843r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Author1145")) >(), wxS("`inplace_vector`") >  >() },
    { "p0843r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Author192")) >(), wxS("`inplace_vector`") >  >() },
    { "p0843r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Author1908")) >(), wxS("`inplace_vector` - HackMD") >  >() },
    { "p0843r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Author1490")) >(), wxS("`inplace_vector` - HackMD") >  >() },
    { "p0844r0" , RevList< Rev< 0u, Arr64< Hash(wxS("J. Monnon")) >(), wxS("Type functions and beyond") >  >() },
    { "p0845r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Detlef Vollmann")) >(), wxS("Common Subset of C++03 and C++17: Binders") >  >() },
    { "p0846r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1667")) >(), wxS("ADL and Function Templates that are not Visible") >  >() },
    { "p0847r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("p0847R0: Deducing this") >  >() },
    { "p0847r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Deducing this") >  >() },
    { "p0847r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Deducing this") >  >() },
    { "p0847r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Deducing this") >  >() },
    { "p0847r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Deducing this") >  >() },
    { "p0847r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Deducing this") >  >() },
    { "p0847r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Deducing this") >  >() },
    { "p0848r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Conditionally Trivial Special Member Functions") >  >() },
    { "p0848r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Conditionally Trivial Special Member Functions") >  >() },
    { "p0848r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Conditionally Trivial Special Member Functions") >  >() },
    { "p0848r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Conditionally Trivial Special Member Functions") >  >() },
    { "p0849r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): DECAY_COPY in the language - HackMD") >  >() },
    { "p0849r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0849r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language") >  >() },
    { "p0849r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0849r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0849r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0849r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0849r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0849r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("auto(x): decay-copy in the language - HackMD") >  >() },
    { "p0851r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("simd<T> is neither a product type nor a container type [P0851R0]") >  >() },
    { "p0856r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David S")) >(), wxS("p0856r0: Restrict Access Property for <code>mdspan</code> and <code>span</code>") >  >() },
    { "p0857r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1223")) >(), wxS("Wording for functionality gaps in constraints") >  >() },
    { "p0858r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author829")) >(), wxS("Constexpr iterator requirements") >  >() },
    { "p0859r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author815")) >(), wxS("Core Issue 1581: When are constexpr member functions defined?") >  >() },
    { "p0860r0" , RevList< Rev< 0u, Arr64< Hash(wxS("H. Carter")) >(), wxS("P0860r0 : Atomic Access Property for span and mdspan") >  >() },
    { "p0860r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Dan Sunderland")) >(), wxS("p0860R1: Atomic Access Property for mdspan") >  >() },
    { "p0863r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title1439") >  >() },
    { "p0863r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title1001") >  >() },
    { "p0864r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author647")) >(), wxS("C++ Standard Library Issues Resolved Directly In Albuquerque") >  >() },
    { "p0866r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nat Goodspeed")) >(), wxS("Title65") >  >() },
    { "p0867r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1760")) >(), wxS("'Module Interface' is Misleading") >  >() },
    { "p0868r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author25")) >(), wxS("Title19") >  >() },
    { "p0868r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2116")) >(), wxS("Title1635") >  >() },
    { "p0868r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author666")) >(), wxS("Title539") >  >() },
    { "p0870r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1579")) >(), wxS("A proposal for a type trait to detect narrowing conversions") >  >() },
    { "p0870r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author681")) >(), wxS("A proposal for a type trait to detect narrowing conversions") >  >() },
    { "p0870r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author252")) >(), wxS("A proposal for a type trait to detect narrowing conversions") >  >() },
    { "p0870r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1962")) >(), wxS("A proposal for a type trait to detect narrowing conversions") >  >() },
    { "p0870r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author792")) >(), wxS("A proposal for a type trait to detect narrowing conversions") >  >() },
    { "p0870r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author773")) >(), wxS("A proposal for a type trait to detect narrowing conversions") >  >() },
    { "p0873r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin jabot")) >(), wxS("p0873R0: A plea for a consistent, terse and intuitive declaration syntax") >  >() },
    { "p0873r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin jabot")) >(), wxS("p0873R1: A plea for a consistent, terse and intuitive declaration syntax") >  >() },
    { "p0874r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("p0874R0: Syntax to anonymously refer to the current declaration contexts") >  >() },
    { "p0876r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fibers without scheduler") >  >() },
    { "p0876r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fibers without scheduler") >  >() },
    { "p0876r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fibers without scheduler") >  >() },
    { "p0876r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r15" , RevList< Rev< 15u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r16" , RevList< Rev< 16u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r17" , RevList< Rev< 17u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r18" , RevList< Rev< 18u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r19" , RevList< Rev< 19u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0876r20" , RevList< Rev< 20u, Arr64< Hash(wxS("Oliver Kowalke")) >(), wxS("fiberswithoutscheduler") >  >() },
    { "p0877r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("A proposal for modular macros") >  >() },
    { "p0878r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1615")) >(), wxS("Copy elision for subobjects") >  >() },
    { "p0879r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author499")) >(), wxS("Constexpr for swap and swap related functions") >  >() },
    { "p0880r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2217")) >(), wxS("Numbers interaction") >  >() },
    { "p0880r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author218")) >(), wxS("Numbers interaction") >  >() },
    { "p0880r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1157")) >(), wxS("Numbers interaction") >  >() },
    { "p0881r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1487")) >(), wxS("A Proposal to add stack trace library") >  >() },
    { "p0881r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1080")) >(), wxS("A Proposal to add stack trace library") >  >() },
    { "p0881r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1292")) >(), wxS("A Proposal to add stack trace library") >  >() },
    { "p0881r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1288")) >(), wxS("A Proposal to add stacktrace library") >  >() },
    { "p0881r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author132")) >(), wxS("A Proposal to add stacktrace library") >  >() },
    { "p0881r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1705")) >(), wxS("A Proposal to add stacktrace library") >  >() },
    { "p0881r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1974")) >(), wxS("A Proposal to add stacktrace library") >  >() },
    { "p0881r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author594")) >(), wxS("A Proposal to add stacktrace library") >  >() },
    { "p0882r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yonggang Li")) >(), wxS("User-defined Literals for std::filesystem::path - HackMD") >  >() },
    { "p0883r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1290")) >(), wxS("Microsoft Word - P0883R0_atomicinit.docx") >  >() },
    { "p0883r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1837")) >(), wxS("P0883R1") >  >() },
    { "p0883r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1520")) >(), wxS("P0883R2 Fixing Atomic Initialization") >  >() },
    { "p0884r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author243")) >(), wxS("Microsoft Word - P0884R0_noexceptpolicy.docx") >  >() },
    { "p0886r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author876")) >(), wxS("Title702") >  >() },
    { "p0887r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2228")) >(), wxS("Title1705") >  >() },
    { "p0887r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author288")) >(), wxS("Title241") >  >() },
    { "p0888r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2216")) >(), wxS("C++ Standard Library Issues to be moved in Jacksonville") >  >() },
    { "p0889r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1364")) >(), wxS("Ultimate copy elision") >  >() },
    { "p0889r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1749")) >(), wxS("Ultimate copy elision") >  >() },
    { "p0891r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Title227") >  >() },
    { "p0891r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Everyone Deserves a Little Order") >  >() },
    { "p0891r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Make strong_order a Customization Point!") >  >() },
    { "p0892r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("explicit(bool)") >  >() },
    { "p0892r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("explicit(bool)") >  >() },
    { "p0892r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("explicit(bool)") >  >() },
    { "p0893r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Chaining Comparisons") >  >() },
    { "p0893r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Chaining Comparisons") >  >() },
    { "p0894r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author129")) >(), wxS("Title111") >  >() },
    { "p0894r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author96")) >(), wxS("Title92") >  >() },
    { "p0895r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author608")) >(), wxS("Microsoft Word - P0895R0_renamingcell.docx") >  >() },
    { "p0896r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1263")) >(), wxS("Range Adaptors and Utilities") >  >() },
    { "p0896r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Standard Library Concepts") >  >() },
    { "p0896r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Merge the Ranges TS") >  >() },
    { "p0896r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Merge the Ranges TS") >  >() },
    { "p0896r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Merge the Ranges TS") >  >() },
    { "p0897r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrey Semashev")) >(), wxS("Title574") >  >() },
    { "p0898r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2040")) >(), wxS("Standard Library Concepts") >  >() },
    { "p0898r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author759")) >(), wxS("Standard Library Concepts") >  >() },
    { "p0898r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Standard Library Concepts") >  >() },
    { "p0898r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Standard Library Concepts") >  >() },
    { "p0899r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("LWG 3016 is Not a Defect") >  >() },
    { "p0899r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("LWG 3016 is Not a Defect") >  >() },
    { "p0900r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David S")) >(), wxS("p0900r0: An Ontology for Properties of <code>mdspan</code>") >  >() },
    { "p0901r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("p0901r0: Size feedback in operator new") >  >() },
    { "p0901r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0901r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("Size feedback in operator new") >  >() },
    { "p0902r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Hunter")) >(), wxS("p0902r0: Move-only iterators") >  >() },
    { "p0903r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author478")) >(), wxS("Title398") >  >() },
    { "p0903r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1425")) >(), wxS("Title1105") >  >() },
    { "p0903r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author265")) >(), wxS("Title223") >  >() },
    { "p0904r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Title10") >  >() },
    { "p0905r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Symmetry for spaceship") >  >() },
    { "p0905r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Symmetry for spaceship") >  >() },
    { "p0906r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author131")) >(), wxS("Improvement suggestions for the Modules TS") >  >() },
    { "p0906r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author271")) >(), wxS("Improvement suggestions for the Modules TS") >  >() },
    { "p0907r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0907r0: Signed Integers are Twos Complement") >  >() },
    { "p0907r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0907R1: Signed Integers are Twos Complement") >  >() },
    { "p0907r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0907R2: Signed Integers are Twos Complement") >  >() },
    { "p0907r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Signed Integers are Twos Complement") >  >() },
    { "p0907r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Signed Integers are Twos Complement") >  >() },
    { "p0908r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eddie Kohler")) >(), wxS("p0908r0: Offsetof for Pointers to Members") >  >() },
    { "p0909r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Module TS Supports Legacy Integration") >  >() },
    { "p0911r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1465")) >(), wxS("Title1140") >  >() },
    { "p0911r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1302")) >(), wxS("Title1006") >  >() },
    { "p0912r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1650")) >(), wxS("Title1280") >  >() },
    { "p0912r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2042")) >(), wxS("Title1581") >  >() },
    { "p0912r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author153")) >(), wxS("Title129") >  >() },
    { "p0912r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author609")) >(), wxS("Title500") >  >() },
    { "p0912r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author695")) >(), wxS("Abstract") >  >() },
    { "p0912r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1763")) >(), wxS("P0912R5 - Merge Coroutines TS into C++20 working draft") >  >() },
    { "p0913r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author798")) >(), wxS("Add symmetric coroutine control transfer") >  >() },
    { "p0913r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2194")) >(), wxS("Add symmetric coroutine control transfer") >  >() },
    { "p0914r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author880")) >(), wxS("Add parameter preview to coroutine promise constructor") >  >() },
    { "p0914r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1260")) >(), wxS("Add parameter preview to coroutine promise constructor") >  >() },
    { "p0915r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1751")) >(), wxS("Untitled") >  >() },
    { "p0916r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Naming implementation-defined simd_abi tag types [P0916R0]") >  >() },
    { "p0917r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Making operator?: overloadable [P0917R0]") >  >() },
    { "p0917r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Making operator?: overloadable [P0917R1]") >  >() },
    { "p0917r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Making operator?: overloadable [P0917R2]") >  >() },
    { "p0917r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Making operator?: overloadable [P0917R3]") >  >() },
    { "p0918r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author509")) >(), wxS("Title420") >  >() },
    { "p0918r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1741")) >(), wxS("Title1347") >  >() },
    { "p0918r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author84")) >(), wxS("Title85") >  >() },
    { "p0919r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("p0919r0: Heterogeneous lookup for unordered containers") >  >() },
    { "p0919r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("p0919R1: Heterogeneous lookup for unordered containers") >  >() },
    { "p0919r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Heterogeneous lookup for unordered containers") >  >() },
    { "p0919r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Heterogeneous lookup for unordered containers") >  >() },
    { "p0920r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Precalculated hash values in lookup") >  >() },
    { "p0920r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Precalculated hash values in lookup") >  >() },
    { "p0920r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Precalculated hash values in lookup") >  >() },
    { "p0921r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author956")) >(), wxS("Title776") >  >() },
    { "p0921r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Titus Winters")) >(), wxS("Title6") >  >() },
    { "p0922r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author66")) >(), wxS("Title70") >  >() },
    { "p0923r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1591")) >(), wxS("Modules:Dependent ADL") >  >() },
    { "p0923r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1053")) >(), wxS("Modules:Dependent ADL") >  >() },
    { "p0924r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1856")) >(), wxS("Modules:Context-Sensitive Keyword") >  >() },
    { "p0924r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1501")) >(), wxS("Modules:Context-Sensitive Keyword") >  >() },
    { "p0925r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2233")) >(), wxS("Modules:Unqualified Using Declarations") >  >() },
    { "p0927r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1013")) >(), wxS("Title811") >  >() },
    { "p0927r1" , RevList< Rev< 1u, Arr64< Hash(wxS("James Dennett")) >(), wxS("Title145") >  >() },
    { "p0927r2" , RevList< Rev< 2u, Arr64< Hash(wxS("James Dennett")) >(), wxS("Title764") >  >() },
    { "p0928r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2001")) >(), wxS("Title1547") >  >() },
    { "p0928r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1557")) >(), wxS("Title1207") >  >() },
    { "p0929r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1314")) >(), wxS("Checking for abstract class types") >  >() },
    { "p0929r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author168")) >(), wxS("Checking for abstract class types") >  >() },
    { "p0929r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2024")) >(), wxS("Checking for abstract class types") >  >() },
    { "p0930r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Title1292") >  >() },
    { "p0931r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author747")) >(), wxS("Title605") >  >() },
    { "p0932r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1434")) >(), wxS("Title1113") >  >() },
    { "p0932r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author766")) >(), wxS("Title625") >  >() },
    { "p0933r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1647")) >(), wxS("Title1276") >  >() },
    { "p0933r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author646")) >(), wxS("Title526") >  >() },
    { "p0934r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1464") >  >() },
    { "p0935r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Eradicating unnecessarily explicit default constructors from the standard library") >  >() },
    { "p0936r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1249")) >(), wxS("Microsoft Word - P0936R0_boundparam.docx") >  >() },
    { "p0937r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title163") >  >() },
    { "p0938r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title795") >  >() },
    { "p0939r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author703")) >(), wxS("Title565") >  >() },
    { "p0939r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author469")) >(), wxS("Title394") >  >() },
    { "p0939r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author927")) >(), wxS("Title747") >  >() },
    { "p0939r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1338")) >(), wxS("Title1030") >  >() },
    { "p0939r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author130")) >(), wxS("Title112") >  >() },
    { "p0940r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1279") >  >() },
    { "p0940r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title608") >  >() },
    { "p0940r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1569") >  >() },
    { "p0940r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1598") >  >() },
    { "p0941r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1318")) >(), wxS("Integrating feature-test macros into the C++ WD") >  >() },
    { "p0941r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author755")) >(), wxS("Integrating feature-test macros into the C++ WD") >  >() },
    { "p0941r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1565")) >(), wxS("Integrating feature-test macros into the C++ WD") >  >() },
    { "p0942r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1132")) >(), wxS("Introducing a <smart_ptr> header") >  >() },
    { "p0943r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0943r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0943r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0943r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0943r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0943r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0943r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Support C atomics in C++") >  >() },
    { "p0944r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Contiguous Ranges") >  >() },
    { "p0945r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("p0945r0: Generalizing alias declarations") >  >() },
    { "p0946r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("p0946r0: Towards consistency between <=> and other comparison operators") >  >() },
    { "p0947r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("p0947R0: Another take on Modules") >  >() },
    { "p0947r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Another take on Modules") >  >() },
    { "p0949r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1717")) >(), wxS("Adding support for type-based metaprogramming to the standard library") >  >() },
    { "p0952r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author191")) >(), wxS("A new specification for std::generate_canonical") >  >() },
    { "p0952r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author93")) >(), wxS("A new specification for std::generate_canonical") >  >() },
    { "p0952r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1563")) >(), wxS("A new specification for std::generate_canonical") >  >() },
    { "p0953r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("constexpr reflexpr") >  >() },
    { "p0953r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("constexpr reflexpr") >  >() },
    { "p0953r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("constexpr reflexpr") >  >() },
    { "p0954r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author847")) >(), wxS("Title667") >  >() },
    { "p0955r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1320")) >(), wxS("Title1019") >  >() },
    { "p0956r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author886")) >(), wxS("Title715") >  >() },
    { "p0957r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1537") >  >() },
    { "p0957r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("WG21 Paper P0957R1") >  >() },
    { "p0957r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1629") >  >() },
    { "p0957r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title264") >  >() },
    { "p0957r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title671") >  >() },
    { "p0957r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1136") >  >() },
    { "p0957r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title939") >  >() },
    { "p0957r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title813") >  >() },
    { "p0957r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title621") >  >() },
    { "p0957r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title658") >  >() },
    { "p0958r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to support proposed Executors TS") >  >() },
    { "p0958r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to support proposed Executors TS") >  >() },
    { "p0958r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to support proposed Executors TS") >  >() },
    { "p0958r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to support proposed Executors TS") >  >() },
    { "p0959r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1115")) >(), wxS("Title890") >  >() },
    { "p0959r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author58")) >(), wxS("Title61") >  >() },
    { "p0959r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author657")) >(), wxS("Title532") >  >() },
    { "p0960r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1279")) >(), wxS("Allow initializing aggregates from a parenthesized list of values") >  >() },
    { "p0960r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author784")) >(), wxS("Allow initializing aggregates from a parenthesized list of values") >  >() },
    { "p0960r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1654")) >(), wxS("Allow initializing aggregates from a parenthesized list of values") >  >() },
    { "p0960r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author199")) >(), wxS("Allow initializing aggregates from a parenthesized list of values") >  >() },
    { "p0961r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1517")) >(), wxS("Relaxing the structured bindings customization point finding rules") >  >() },
    { "p0961r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1840")) >(), wxS("Relaxing the structured bindings customization point finding rules") >  >() },
    { "p0962r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author874")) >(), wxS("Relaxing the range-for loop customization point finding rules") >  >() },
    { "p0962r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author751")) >(), wxS("Relaxing the range-for loop customization point finding rules") >  >() },
    { "p0963r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Structured binding declaration as a condition - HackMD") >  >() },
    { "p0963r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Structured binding declaration as a _condition_ - HackMD") >  >() },
    { "p0963r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Structured binding declaration as a _condition_ - HackMD") >  >() },
    { "p0963r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Structured binding declaration as a _condition_ - HackMD") >  >() },
    { "p0964r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Finding the right set of traits for simd<T> [P0964R0]") >  >() },
    { "p0964r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Finding the right set of traits for simd<T> [P0964R1]") >  >() },
    { "p0964r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Finding the right set of traits for simd<T> [P0964R2]") >  >() },
    { "p0965r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1649")) >(), wxS("Initializers of objects with automatic and dynamic storage duration have funny inconsistencies") >  >() },
    { "p0966r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Zeren")) >(), wxS("P0966r0: <code>string::reserve</code> Should Not Shrink") >  >() },
    { "p0966r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Zeren")) >(), wxS("p0966R1: <code>string::reserve</code> Should Not Shrink") >  >() },
    { "p0968r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1671")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p0969r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1644")) >(), wxS("Title1273") >  >() },
    { "p0970r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author439")) >(), wxS("Better, Safer Range Access Customization Points") >  >() },
    { "p0970r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author333")) >(), wxS("Better, Safer Range Access Customization Points") >  >() },
    { "p0972r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Billy Robert")) >(), wxS("Microsoft Word - d0972r0.docx") >  >() },
    { "p0973r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1305")) >(), wxS("Title1008") >  >() },
    { "p0974r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan Ringle")) >(), wxS("A Function Returning Whether An Underlying Type Value Is a Valid Enumerator of a Given Enumeration") >  >() },
    { "p0975r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1240")) >(), wxS("Title968") >  >() },
    { "p0976r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author237")) >(), wxS("Title197") >  >() },
    { "p0977r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1569")) >(), wxS("Title1214") >  >() },
    { "p0978r0" , RevList< Rev< 0u, Arr64< Hash(wxS("the library")) >(), wxS("Title582") >  >() },
    { "p0980r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title579") >  >() },
    { "p0980r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title341") >  >() },
    { "p0981r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1551")) >(), wxS("Title1203") >  >() },
    { "p0982r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Weaken release sequences") >  >() },
    { "p0982r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Weaken release sequences") >  >() },
    { "p0983r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gabriel Dos")) >(), wxS("Title278") >  >() },
    { "p0984r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author948")) >(), wxS("Title766") >  >() },
    { "p0985r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2167")) >(), wxS("LWG Chair post-meeting report") >  >() },
    { "p0985r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author521")) >(), wxS("LWG Chair post-meeting report") >  >() },
    { "p0985r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author67")) >(), wxS("LWG Chair post-meeting report") >  >() },
    { "p0985r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author311")) >(), wxS("LWG Chair post-meeting report") >  >() },
    { "p0985r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1518")) >(), wxS("LWG Chair post-meeting report") >  >() },
    { "p0986r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Comparison of Modules Proposals") >  >() },
    { "p0987r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("polymorphic_allocator<byte> instead of type-erasure") >  >() },
    { "p0987r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Microsoft Word - P0987_polyalloc_instead_of_erasure.docx") >  >() },
    { "p0987r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Microsoft Word - P0987R2_polyalloc_instead_of_erasure.docx") >  >() },
    { "p0988r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author603")) >(), wxS("Title494") >  >() },
    { "p0989r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title1032") >  >() },
    { "p0990r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title18") >  >() },
    { "p0991r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author72")) >(), wxS("Title74") >  >() },
    { "p0992r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Constexpr") >  >() },
    { "p0993r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author397")) >(), wxS("Reflection") >  >() },
    { "p0994r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2078")) >(), wxS("Title1609") >  >() },
    { "p0995r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("p0995R0: Improving atomic_flag") >  >() },
    { "p0995r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Improving atomic_flag") >  >() },
    { "p0996r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2047")) >(), wxS("Rebase Library Fundamentals TS on C++17") >  >() },
    { "p0997r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Title823") >  >() },
    { "p0999r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1740")) >(), wxS("Title1346") >  >() },
    { "p1000r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1055") >  >() },
    { "p1000r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title993") >  >() },
    { "p1000r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1655") >  >() },
    { "p1000r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1433") >  >() },
    { "p1000r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title440") >  >() },
    { "p1000r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title693") >  >() },
    { "p1000r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1381") >  >() },
    { "p1001r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1580")) >(), wxS("Target Vectorization Policies from Parallelism V2 TS to C++20") >  >() },
    { "p1001r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author235")) >(), wxS("Target Vectorization Policies from Parallelism V2 TS to C++20") >  >() },
    { "p1001r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1628")) >(), wxS("Target Vectorization Policies from Parallelism V2 TS to C++20") >  >() },
    { "p1002r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title334") >  >() },
    { "p1002r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title572") >  >() },
    { "p1003r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author15")) >(), wxS("C++ Standard Library Issues Resolved Directly In Jacksonville") >  >() },
    { "p1004r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title568") >  >() },
    { "p1004r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title346") >  >() },
    { "p1004r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title547") >  >() },
    { "p1005r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("p1005r0: namespace std { namespace fs = filesystem; }") >  >() },
    { "p1005r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("`namespace std { namespace fs = filesystem; }`") >  >() },
    { "p1006r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1264") >  >() },
    { "p1006r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title854") >  >() },
    { "p1007r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1217")) >(), wxS("Title954") >  >() },
    { "p1007r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1681")) >(), wxS("Title1306") >  >() },
    { "p1007r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1454")) >(), wxS("Title1132") >  >() },
    { "p1007r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1835")) >(), wxS("Title1426") >  >() },
    { "p1008r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author244")) >(), wxS("Title200") >  >() },
    { "p1008r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1269")) >(), wxS("Title983") >  >() },
    { "p1009r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1775")) >(), wxS("Title1379") >  >() },
    { "p1009r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1792")) >(), wxS("Title1393") >  >() },
    { "p1009r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2101")) >(), wxS("Title1628") >  >() },
    { "p1010r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Zeren")) >(), wxS("p1010R0: Container support for implicit lifetime types") >  >() },
    { "p1010r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Zeren")) >(), wxS("Container support for implicit lifetime types") >  >() },
    { "p1011r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author734")) >(), wxS("Title591") >  >() },
    { "p1012r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2135")) >(), wxS("Title1647") >  >() },
    { "p1012r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Frank Zingsheim")) >(), wxS("Title1332") >  >() },
    { "p1013r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2176")) >(), wxS("Explicit concept expressions") >  >() },
    { "p1013r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1491")) >(), wxS("Explicit concept expressions") >  >() },
    { "p1014r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Unit type") >  >() },
    { "p1015r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author567")) >(), wxS("Title460") >  >() },
    { "p1016r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author985")) >(), wxS("P1016R0") >  >() },
    { "p1017r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hartmut Kaiser")) >(), wxS("Title1692") >  >() },
    { "p1018r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2140")) >(), wxS("Evolution status after Jacksonville 2018") >  >() },
    { "p1018r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author547")) >(), wxS("Evolution status after Rapperswil 2018") >  >() },
    { "p1018r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1087")) >(), wxS("Evolution status after San Diego 2018") >  >() },
    { "p1018r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author422")) >(), wxS("Evolution status after Kona 2019") >  >() },
    { "p1018r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1832")) >(), wxS("Evolution status after Cologne 2019") >  >() },
    { "p1018r5" , RevList< Rev< 5u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Language Evolution status after Belfast 2019") >  >() },
    { "p1018r6" , RevList< Rev< 6u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Language Evolution status after Prague 2020") >  >() },
    { "p1018r7" , RevList< Rev< 7u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2020/032020/10") >  >() },
    { "p1018r8" , RevList< Rev< 8u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2020/112021/01") >  >() },
    { "p1018r9" , RevList< Rev< 9u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2021/012021/03") >  >() },
    { "p1018r10" , RevList< Rev< 10u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2021/04") >  >() },
    { "p1018r11" , RevList< Rev< 11u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2021/05") >  >() },
    { "p1018r12" , RevList< Rev< 12u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2021/062021/08") >  >() },
    { "p1018r13" , RevList< Rev< 13u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2021/082021/09") >  >() },
    { "p1018r14" , RevList< Rev< 14u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2021/092022/01") >  >() },
    { "p1018r15" , RevList< Rev< 15u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2022/012022/02") >  >() },
    { "p1018r16" , RevList< Rev< 16u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2022/022022/06") >  >() },
    { "p1018r17" , RevList< Rev< 17u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2022/062022/07") >  >() },
    { "p1018r18" , RevList< Rev< 18u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status pandemic edition 2022/072022/11") >  >() },
    { "p1018r19" , RevList< Rev< 19u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("C++ Language Evolution status") >  >() },
    { "p1019r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title722") >  >() },
    { "p1019r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title423") >  >() },
    { "p1019r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title1391") >  >() },
    { "p1020r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("Smart pointer creation with default initialization") >  >() },
    { "p1020r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("Smart pointer creation with default initialization") >  >() },
    { "p1021r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author910")) >(), wxS("Extensions to Class Template Argument Deduction") >  >() },
    { "p1021r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1916")) >(), wxS("Filling holes in Class Template Argument Deduction") >  >() },
    { "p1021r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author90")) >(), wxS("Filling holes in Class Template Argument Deduction") >  >() },
    { "p1021r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author161")) >(), wxS("Filling holes in Class Template Argument Deduction") >  >() },
    { "p1021r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1068")) >(), wxS("Filling holes in Class Template Argument Deduction") >  >() },
    { "p1021r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1112")) >(), wxS("Filling holes in Class Template Argument Deduction") >  >() },
    { "p1021r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author944")) >(), wxS("Filling holes in Class Template Argument Deduction") >  >() },
    { "p1022r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title699") >  >() },
    { "p1023r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author434")) >(), wxS("Title369") >  >() },
    { "p1024r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2151")) >(), wxS("Title1658") >  >() },
    { "p1024r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2181")) >(), wxS("Title1676") >  >() },
    { "p1024r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1474")) >(), wxS("Title1144") >  >() },
    { "p1024r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author117")) >(), wxS("Title103") >  >() },
    { "p1025r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Update The Reference To The Unicode Standard") >  >() },
    { "p1025r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Update The Reference To The Unicode Standard") >  >() },
    { "p1026r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title229") >  >() },
    { "p1026r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title563") >  >() },
    { "p1028r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1361") >  >() },
    { "p1028r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title11") >  >() },
    { "p1028r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title536") >  >() },
    { "p1028r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title91") >  >() },
    { "p1028r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1049") >  >() },
    { "p1028r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1325") >  >() },
    { "p1028r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1522") >  >() },
    { "p1029r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title392") >  >() },
    { "p1029r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title2") >  >() },
    { "p1029r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1349") >  >() },
    { "p1029r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title855") >  >() },
    { "p1030r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1429") >  >() },
    { "p1030r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title123") >  >() },
    { "p1030r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title283") >  >() },
    { "p1030r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1605") >  >() },
    { "p1030r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title824") >  >() },
    { "p1030r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1500") >  >() },
    { "p1030r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title196") >  >() },
    { "p1030r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title537") >  >() },
    { "p1030r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title120") >  >() },
    { "p1031r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title287") >  >() },
    { "p1031r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title183") >  >() },
    { "p1031r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title592") >  >() },
    { "p1032r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1788")) >(), wxS("Misc constexpr bits") >  >() },
    { "p1032r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1206")) >(), wxS("Misc constexpr bits") >  >() },
    { "p1033r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("P1033R0 Rangify the uninitialised memory algorithms!") >  >() },
    { "p1033r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("P1033R1 Rangify the uninitialised memory algorithms!") >  >() },
    { "p1035r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("p1035R0: Input range adaptors") >  >() },
    { "p1035r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input range adaptors") >  >() },
    { "p1035r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input range adaptors") >  >() },
    { "p1035r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input range adaptors") >  >() },
    { "p1035r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input range adaptors") >  >() },
    { "p1035r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input Range Adaptors") >  >() },
    { "p1035r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input Range Adaptors") >  >() },
    { "p1035r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Input Range Adaptors") >  >() },
    { "p1037r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Deep Integration of the Ranges TS") >  >() },
    { "p1039r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("I got you, FAM - Flexible Array Members for C++") >  >() },
    { "p1040r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("p1040R0: std::embed") >  >() },
    { "p1040r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("p1040R1: std::embed") >  >() },
    { "p1040r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::embed") >  >() },
    { "p1040r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::embed") >  >() },
    { "p1040r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::embed") >  >() },
    { "p1040r5" , RevList< Rev< 5u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::embed") >  >() },
    { "p1040r6" , RevList< Rev< 6u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::embed") >  >() },
    { "p1040r7" , RevList< Rev< 7u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::embed") >  >() },
    { "p1041r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author442")) >(), wxS("Title372") >  >() },
    { "p1041r1" , RevList< Rev< 1u, Arr64< Hash(wxS("cpp@rmf.io")) >(), wxS("Make char16_t/char32_t string literals be UTF-16/32") >  >() },
    { "p1041r3" , RevList< Rev< 3u, Arr64< Hash(wxS("cpp@rmf.io")) >(), wxS("Make char16_t/char32_t string literals be UTF-16/32") >  >() },
    { "p1041r4" , RevList< Rev< 4u, Arr64< Hash(wxS("cpp@rmf.io")) >(), wxS("Make char16_t/char32_t string literals be UTF-16/32") >  >() },
    { "p1042r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("__VA_OPT__ wording clarifications") >  >() },
    { "p1042r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("__VA_OPT__ wording clarifications") >  >() },
    { "p1043r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1399")) >(), wxS("P1043r0 Narrow contracts in <code>string_view</code> versus P0903R1") >  >() },
    { "p1044r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("p1044R0: std::async() in an Executors World") >  >() },
    { "p1045r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title49") >  >() },
    { "p1045r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Stone")) >(), wxS("`constexpr` Function Parameters") >  >() },
    { "p1046r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title469") >  >() },
    { "p1046r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Stone")) >(), wxS("Automatically Generate More Operators") >  >() },
    { "p1046r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Stone")) >(), wxS("Automatically Generate More Operators") >  >() },
    { "p1048r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Juan Alday")) >(), wxS("Title194") >  >() },
    { "p1048r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Juan Alday")) >(), wxS("P1048R1") >  >() },
    { "p1050r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1433")) >(), wxS("Title1112") >  >() },
    { "p1050r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1544")) >(), wxS("p1050r1") >  >() },
    { "p1051r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vicente J")) >(), wxS("p1051r0") >  >() },
    { "p1052r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author881")) >(), wxS("Modules, Macros, and Build Systems") >  >() },
    { "p1053r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("p1053R0: Future-proofing continuations for executors") >  >() },
    { "p1053r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Future-proofing continuations for executors") >  >() },
    { "p1054r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("p1054R0: A Unified Futures Proposal for C++") >  >() },
    { "p1055r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Title281") >  >() },
    { "p1056r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author615")) >(), wxS("Add coroutine task type") >  >() },
    { "p1056r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1148")) >(), wxS("Add coroutine lazy type") >  >() },
    { "p1059r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("p1059R0: Adapting Asio to use std::expected") >  >() },
    { "p1061r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1061r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Structured Bindings can introduce a Pack") >  >() },
    { "p1062r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("p1062R0: Diet Graphics") >  >() },
    { "p1063r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2098")) >(), wxS("Title1626") >  >() },
    { "p1063r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2186")) >(), wxS("Title1680") >  >() },
    { "p1063r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author940")) >(), wxS("Title758") >  >() },
    { "p1064r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1048")) >(), wxS("Allowing Virtual Function Calls in Constant Expressions") >  >() },
    { "p1065r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("constexpr INVOKE") >  >() },
    { "p1065r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tomasz Kami\u0144ski")) >(), wxS("constexpr INVOKE") >  >() },
    { "p1065r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tomasz Kami\u0144ski")) >(), wxS("constexpr INVOKE") >  >() },
    { "p1066r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mathias Stearn")) >(), wxS("p1066R0: How to catch an exception_ptr without even try-ing") >  >() },
    { "p1066r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mathias Stearn")) >(), wxS("How to catch an exception_ptr without even try-ing") >  >() },
    { "p1067r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1264")) >(), wxS("C++ Dependency Management: Package Consumption vs Development") >  >() },
    { "p1068r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title448") >  >() },
    { "p1068r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title1418") >  >() },
    { "p1068r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title1696") >  >() },
    { "p1068r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title228") >  >() },
    { "p1068r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title1176") >  >() },
    { "p1068r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title782") >  >() },
    { "p1068r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P1068R6.docx") >  >() },
    { "p1068r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P1068R7.docx") >  >() },
    { "p1068r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P1068R8") >  >() },
    { "p1068r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P1068R9") >  >() },
    { "p1068r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P1068R10") >  >() },
    { "p1068r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P1068R11") >  >() },
    { "p1069r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Refining standard library support for Class Template Argument Deduction") >  >() },
    { "p1069r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0\u00A0Mike Spertus")) >(), wxS("Inferencing heap objects") >  >() },
    { "p1070r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title270") >  >() },
    { "p1071r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1183") >  >() },
    { "p1072r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1553")) >(), wxS("Title1204") >  >() },
    { "p1072r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("Optimized Initialization for basic_string and vector") >  >() },
    { "p1072r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_default_init") >  >() },
    { "p1072r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_default_init") >  >() },
    { "p1072r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_default_init") >  >() },
    { "p1072r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_default_init") >  >() },
    { "p1072r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_and_overwrite") >  >() },
    { "p1072r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_and_overwrite") >  >() },
    { "p1072r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_and_overwrite") >  >() },
    { "p1072r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_and_overwrite") >  >() },
    { "p1072r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("basic_string::resize_and_overwrite") >  >() },
    { "p1073r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1883")) >(), wxS("Title1460") >  >() },
    { "p1073r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author522")) >(), wxS("Title429") >  >() },
    { "p1073r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1324")) >(), wxS("Title1021") >  >() },
    { "p1073r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1346")) >(), wxS("Title1040") >  >() },
    { "p1074r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged Michael")) >(), wxS("Title1229") >  >() },
    { "p1076r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author5")) >(), wxS("Editorial clause reorganization") >  >() },
    { "p1076r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author201")) >(), wxS("Editorial clause reorganization") >  >() },
    { "p1077r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1489")) >(), wxS("Allowing Virtual Destructors to be \"Trivial\"") >  >() },
    { "p1079r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author916")) >(), wxS("Title737") >  >() },
    { "p1080r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2018/03/28 - 2018/04/25") >  >() },
    { "p1081r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1312")) >(), wxS("P1081R0") >  >() },
    { "p1082r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author565")) >(), wxS("C++ Standard Library Issues to be moved in Rapperswil") >  >() },
    { "p1083r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1422")) >(), wxS("Title1104") >  >() },
    { "p1083r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author19")) >(), wxS("P1083r1 | Move resource_adaptor from Library TS to the C++ WP") >  >() },
    { "p1083r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author465")) >(), wxS("P1083r2 | Move resource_adaptor from Library TS to the C++ WP") >  >() },
    { "p1083r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1581")) >(), wxS("P1083r3 | Move resource_adaptor from Library TS to the C++ WP") >  >() },
    { "p1083r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author754")) >(), wxS("Title612") >  >() },
    { "p1083r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author938")) >(), wxS("Title757") >  >() },
    { "p1083r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author11")) >(), wxS("Title13") >  >() },
    { "p1083r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1255")) >(), wxS("Title976") >  >() },
    { "p1083r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Move `resource_adaptor` from Library TS to the C++ WP") >  >() },
    { "p1084r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1321")) >(), wxS("Today's return-type-requirements Are Insufficient") >  >() },
    { "p1084r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author435")) >(), wxS("Today's return-type-requirements Are Insufficient") >  >() },
    { "p1084r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1851")) >(), wxS("Today's return-type-requirements Are Insufficient") >  >() },
    { "p1085r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2137")) >(), wxS("Title1648") >  >() },
    { "p1085r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1841")) >(), wxS("Title1427") >  >() },
    { "p1085r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2059")) >(), wxS("Title1597") >  >() },
    { "p1086r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title370") >  >() },
    { "p1087r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("C++ Modules") >  >() },
    { "p1089r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Douglas")) >(), wxS("Title660") >  >() },
    { "p1089r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Robert Douglas")) >(), wxS("Title1456") >  >() },
    { "p1090r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author170")) >(), wxS("Aggregate initialization in the presence of deleted constructors") >  >() },
    { "p1091r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("Title816") >  >() },
    { "p1091r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("Title492") >  >() },
    { "p1091r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("Extending structured bindings to be more like variable declarations") >  >() },
    { "p1091r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("Extending structured bindings to be more like variable declarations") >  >() },
    { "p1093r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1542")) >(), wxS("Title1195") >  >() },
    { "p1094r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1744")) >(), wxS("Nested Inline Namespaces") >  >() },
    { "p1094r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2104")) >(), wxS("Nested Inline Namespaces") >  >() },
    { "p1094r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1814")) >(), wxS("Nested Inline Namespaces") >  >() },
    { "p1095r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1499") >  >() },
    { "p1096r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1360")) >(), wxS("Title1057") >  >() },
    { "p1097r0" , RevList< Rev< 0u, Arr64< Hash(wxS("R. Martinho")) >(), wxS("Named character escapes") >  >() },
    { "p1097r1" , RevList< Rev< 1u, Arr64< Hash(wxS("R. Martinho")) >(), wxS("Title1171") >  >() },
    { "p1097r2" , RevList< Rev< 2u, Arr64< Hash(wxS("R. Martinho")) >(), wxS("Named character escapes") >  >() },
    { "p1099r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("p1099R0: Using Enum") >  >() },
    { "p1099r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("p1099R2: Using Enum") >  >() },
    { "p1099r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Using Enum") >  >() },
    { "p1099r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Using Enum") >  >() },
    { "p1099r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Using Enum") >  >() },
    { "p1100r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vinnie Falco")) >(), wxS("Efficient composition with DynamicBuffer") >  >() },
    { "p1101r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mikhail Maltsev")) >(), wxS("Vector Length Agnostic SIMD") >  >() },
    { "p1102r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("Down with ()!") >  >() },
    { "p1102r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("Down with <code>()</code>!") >  >() },
    { "p1102r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("Down with ()!") >  >() },
    { "p1103r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1404")) >(), wxS("C++ Technical Specification") >  >() },
    { "p1103r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2019")) >(), wxS("Merging Modules") >  >() },
    { "p1103r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1529")) >(), wxS("Merging Modules") >  >() },
    { "p1103r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1159")) >(), wxS("Merging Modules") >  >() },
    { "p1105r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Leaving no room for a lower-level language: A C++ Subset") >  >() },
    { "p1105r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Leaving no room for a lower-level language: A C++ Subset") >  >() },
    { "p1108r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("web_view") >  >() },
    { "p1108r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("web_view") >  >() },
    { "p1108r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("web_view") >  >() },
    { "p1108r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("web_view") >  >() },
    { "p1108r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("web_view") >  >() },
    { "p1109r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author70")) >(), wxS("P1109") >  >() },
    { "p1109r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1984")) >(), wxS("P1109R1") >  >() },
    { "p1110r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeffrey Yasskin")) >(), wxS("A placeholder with no name") >  >() },
    { "p1111r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Resolutions to NB Comments on the Parallelism TS v2") >  >() },
    { "p1112r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author947")) >(), wxS("Microsoft Word - cppprop3d.doc") >  >() },
    { "p1112r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - p1112r1.doc") >  >() },
    { "p1112r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - p1112r2.doc") >  >() },
    { "p1112r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - p1112r3.doc") >  >() },
    { "p1112r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - p1112r4.doc") >  >() },
    { "p1112r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - p1112r5.doc") >  >() },
    { "p1113r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1424")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p1114r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author643")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p1115r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title319") >  >() },
    { "p1115r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title348") >  >() },
    { "p1115r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title872") >  >() },
    { "p1115r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title507") >  >() },
    { "p1116r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title1544") >  >() },
    { "p1118r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author679")) >(), wxS("Title550") >  >() },
    { "p1119r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("ABI for std::hardware_{constructive,destructive}_interference_size") >  >() },
    { "p1120r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Consistency improvements for <=> and other comparison operators") >  >() },
    { "p1121r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title832") >  >() },
    { "p1121r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title131") >  >() },
    { "p1121r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Maged M")) >(), wxS("Title28") >  >() },
    { "p1121r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointers") >  >() },
    { "p1122r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Title1491") >  >() },
    { "p1122r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Title1152") >  >() },
    { "p1122r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Title677") >  >() },
    { "p1122r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)") >  >() },
    { "p1122r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)") >  >() },
    { "p1123r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Sunderland")) >(), wxS("Editorial Guidance for merging P0019r8 and P0528r3") >  >() },
    { "p1128r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1082")) >(), wxS("Summer 2018 WG21 Batavia LWG Meeting Information") >  >() },
    { "p1130r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Module Resource Requirement Propagation") >  >() },
    { "p1131r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1827")) >(), wxS("Core Issue 2292: simple-template-id is ambiguous between class-name and type-name") >  >() },
    { "p1131r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1175")) >(), wxS("Core Issue 2292: simple-template-id is ambiguous between class-name and type-name") >  >() },
    { "p1131r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1241")) >(), wxS("Core Issue 2292: simple-template-id is ambiguous between class-name and type-name") >  >() },
    { "p1132r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("p1132R0: out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r5" , RevList< Rev< 5u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r6" , RevList< Rev< 6u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r7" , RevList< Rev< 7u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1132r8" , RevList< Rev< 8u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("out_ptr - a scalable output pointer abstraction") >  >() },
    { "p1133r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vinnie Falco")) >(), wxS("Networking TS Associations For Call Wrappers") >  >() },
    { "p1135r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1135r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1135r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1135r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1135r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1135r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1135r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("The C++20 Synchronization Library") >  >() },
    { "p1136r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1549")) >(), wxS("Title1202") >  >() },
    { "p1137r0" , RevList< Rev< 0u, Arr64< Hash(wxS("maintain consistency")) >(), wxS("SG16: Unicode meeting summaries 2018/05/16 - 2018/06/20") >  >() },
    { "p1138r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title805") >  >() },
    { "p1139r0" , RevList< Rev< 0u, Arr64< Hash(wxS("R. Martinho")) >(), wxS("Address wording issues related to ISO 10646") >  >() },
    { "p1139r1" , RevList< Rev< 1u, Arr64< Hash(wxS("R. Martinho")) >(), wxS("Address wording issues related to ISO 10646") >  >() },
    { "p1139r2" , RevList< Rev< 2u, Arr64< Hash(wxS("R. Martinho")) >(), wxS("Address wording issues related to ISO 10646") >  >() },
    { "p1141r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author273")) >(), wxS("Yet another approach for constrained declarations") >  >() },
    { "p1141r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author226")) >(), wxS("Yet another approach for constrained declarations") >  >() },
    { "p1141r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1370")) >(), wxS("Yet another approach for constrained declarations") >  >() },
    { "p1142r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1099")) >(), wxS("Thoughts on a conservative terse syntax for constraints") >  >() },
    { "p1143r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1521")) >(), wxS("Title1182") >  >() },
    { "p1143r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author925")) >(), wxS("Title745") >  >() },
    { "p1143r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author649")) >(), wxS("Title529") >  >() },
    { "p1144r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Object relocation in terms of move plus destroy") >  >() },
    { "p1144r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_trivially_relocatable") >  >() },
    { "p1144r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_trivially_relocatable") >  >() },
    { "p1144r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_trivially_relocatable") >  >() },
    { "p1144r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_trivially_relocatable") >  >() },
    { "p1144r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_trivially_relocatable") >  >() },
    { "p1144r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_trivially_relocatable") >  >() },
    { "p1145r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vinnie Falco")) >(), wxS("Buffer Sequence Adaptors") >  >() },
    { "p1147r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Printing `volatile` Pointers") >  >() },
    { "p1147r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Printing `volatile` Pointers") >  >() },
    { "p1148r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1152")) >(), wxS("Cleaning up [strings]") >  >() },
    { "p1149r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author507")) >(), wxS("Constexpr regex") >  >() },
    { "p1152r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>") >  >() },
    { "p1152r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>") >  >() },
    { "p1152r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>") >  >() },
    { "p1152r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>") >  >() },
    { "p1152r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>") >  >() },
    { "p1153r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Copying volatile subobjects is not trivial") >  >() },
    { "p1154r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Type traits for structural comparison") >  >() },
    { "p1154r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Type traits for structural comparison") >  >() },
    { "p1154r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Type traits for structural comparison") >  >() },
    { "p1155r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("More implicit moves") >  >() },
    { "p1155r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("More implicit moves") >  >() },
    { "p1155r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("More implicit moves") >  >() },
    { "p1155r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("More implicit moves") >  >() },
    { "p1156r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2144")) >(), wxS("Merged Modules and Tooling") >  >() },
    { "p1157r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Multi-argument constrained-parameter - HackMD") >  >() },
    { "p1158r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Concept-defined placeholder types - HackMD") >  >() },
    { "p1159r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1413")) >(), wxS("Title1100") >  >() },
    { "p1160r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Attila Feh")) >(), wxS("P1160R0") >  >() },
    { "p1160r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1755")) >(), wxS("Microsoft Word - P1160R1") >  >() },
    { "p1161r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Deprecate uses of the comma operator in subscripting expressions") >  >() },
    { "p1161r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Deprecate uses of the comma operator in subscripting expressions") >  >() },
    { "p1161r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Deprecate uses of the comma operator in subscripting expressions") >  >() },
    { "p1161r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Deprecate uses of the comma operator in subscripting expressions") >  >() },
    { "p1163r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title211") >  >() },
    { "p1164r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1184")) >(), wxS("Microsoft Word - D1164R0_create_directory_180824.docx") >  >() },
    { "p1164r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1098")) >(), wxS("Microsoft Word - P1164R1R1_create_directory_190222.docx") >  >() },
    { "p1165r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author225")) >(), wxS("Title184") >  >() },
    { "p1165r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1950")) >(), wxS("Make stateful allocator propagation more consistent for `operator+(basic_string)`") >  >() },
    { "p1166r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author489")) >(), wxS("Title408") >  >() },
    { "p1167r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1964")) >(), wxS("Improving function templates with Class Template Argument Deduction") >  >() },
    { "p1168r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1221")) >(), wxS("How to make Terse Notation soar with Class Template Argument Deduction") >  >() },
    { "p1169r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("static operator()") >  >() },
    { "p1169r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("static `operator()`") >  >() },
    { "p1169r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("static `operator()`") >  >() },
    { "p1169r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("static operator()") >  >() },
    { "p1169r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("static operator()") >  >() },
    { "p1170r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Overload sets as function parameters") >  >() },
    { "p1171r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author448")) >(), wxS("Title377") >  >() },
    { "p1172r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title569") >  >() },
    { "p1172r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1356") >  >() },
    { "p1175r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("a simple and practical optional reference for C++") >  >() },
    { "p1177r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1335")) >(), wxS("Title1027") >  >() },
    { "p1177r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1493")) >(), wxS("Title1161") >  >() },
    { "p1178r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1798")) >(), wxS("C++ Compile") >  >() },
    { "p1179r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1120") >  >() },
    { "p1179r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title327") >  >() },
    { "p1180r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Response to P1156") >  >() },
    { "p1181r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Morwenn")) >(), wxS("Proposing <code>unless</code>") >  >() },
    { "p1182r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author551")) >(), wxS("New names for the power-of-2 templates (and their header)") >  >() },
    { "p1184r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author548")) >(), wxS("A Module Mapper") >  >() },
    { "p1184r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2169")) >(), wxS("A Module Mapper") >  >() },
    { "p1184r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2004")) >(), wxS("A Module Mapper") >  >() },
    { "p1185r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("<=> != ==") >  >() },
    { "p1185r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("<=> != ==") >  >() },
    { "p1185r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("<=> != ==") >  >() },
    { "p1186r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("When do you actually use <=>?") >  >() },
    { "p1186r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("When do you actually use <=>?") >  >() },
    { "p1186r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("When do you actually use <=>?") >  >() },
    { "p1186r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("When do you actually use <=>?") >  >() },
    { "p1187r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A type trait for std::compare_3way()'s type") >  >() },
    { "p1188r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Library utilities for <=>") >  >() },
    { "p1189r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Adding <=> to library") >  >() },
    { "p1190r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title386") >  >() },
    { "p1191r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title1260") >  >() },
    { "p1192r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("p1192R0: Experience report - integrating Executors with Parallel Algorithms") >  >() },
    { "p1192r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("p1192R1: Experience report - integrating Executors with Parallel Algorithms") >  >() },
    { "p1193r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Explicitly Specified Returns for (Implicit) Conversions") >  >() },
    { "p1194r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("P1194: The Compromise Executors Proposal: A lazy simplification of P0443") >  >() },
    { "p1195r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1421")) >(), wxS("Making <system_error> constexpr") >  >() },
    { "p1196r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1773")) >(), wxS("Value-based std::error_category comparison") >  >() },
    { "p1197r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2142")) >(), wxS("A non-allocating overload of error_category::message()") >  >() },
    { "p1198r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author297")) >(), wxS("Adding error_category::failed()") >  >() },
    { "p1199r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author974")) >(), wxS("A simple proposal for unifying generic and object-oriented programming") >  >() },
    { "p1200r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2122")) >(), wxS("Title1641") >  >() },
    { "p1201r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1764")) >(), wxS("variant direct comparisons with held types") >  >() },
    { "p1202r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title415") >  >() },
    { "p1202r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title213") >  >() },
    { "p1202r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title178") >  >() },
    { "p1202r3" , RevList< Rev< 3u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Asymmetric Fences") >  >() },
    { "p1202r4" , RevList< Rev< 4u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("P1202R4") >  >() },
    { "p1202r5" , RevList< Rev< 5u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("P1202R5") >  >() },
    { "p1203r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1981")) >(), wxS("Modular main()") >  >() },
    { "p1204r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1218")) >(), wxS("Canonical Project Structure") >  >() },
    { "p1205r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("Teleportation via <code>co_await</code>") >  >() },
    { "p1206r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title509") >  >() },
    { "p1206r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title137") >  >() },
    { "p1206r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1374") >  >() },
    { "p1206r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title680") >  >() },
    { "p1206r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title962") >  >() },
    { "p1206r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title804") >  >() },
    { "p1206r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1543") >  >() },
    { "p1206r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1387") >  >() },
    { "p1207r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Movability of Single-pass Iterators") >  >() },
    { "p1207r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Movability of Single-pass Iterators") >  >() },
    { "p1207r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1660") >  >() },
    { "p1207r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title553") >  >() },
    { "p1207r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title304") >  >() },
    { "p1208r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Adopt source_location from Library Fundamentals V3 for C++20") >  >() },
    { "p1208r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Adopt source_location from Library Fundamentals V3 for C++20") >  >() },
    { "p1208r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2190")) >(), wxS("Title1682") >  >() },
    { "p1208r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1252")) >(), wxS("Title972") >  >() },
    { "p1208r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1091")) >(), wxS("Title877") >  >() },
    { "p1208r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author29")) >(), wxS("Title22") >  >() },
    { "p1209r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1703")) >(), wxS("Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20") >  >() },
    { "p1210r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2168")) >(), wxS("Completing the Rebase of Library Fundamentals, Version 3, Working Draft") >  >() },
    { "p1212r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Modules and Freestanding") >  >() },
    { "p1213r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author625")) >(), wxS("Global Module Fragment is Unnecessary") >  >() },
    { "p1213r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1634")) >(), wxS("Global Module Fragment is Unnecessary") >  >() },
    { "p1214r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Pointer to Member Functions and Member Objects are just Callables!") >  >() },
    { "p1217r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Out-of-thin-air, revisited, again") >  >() },
    { "p1217r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Out-of-thin-air, revisited, again") >  >() },
    { "p1217r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Out-of-thin-air, revisited, again") >  >() },
    { "p1218r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author89")) >(), wxS("Redefinitions in Legacy Imports") >  >() },
    { "p1219r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Homogeneous variadic function parameters") >  >() },
    { "p1219r1" , RevList< Rev< 1u, Arr64< Hash(wxS("James Touton")) >(), wxS("Homogeneous variadic function parameters") >  >() },
    { "p1219r2" , RevList< Rev< 2u, Arr64< Hash(wxS("James Touton")) >(), wxS("Homogeneous variadic function parameters") >  >() },
    { "p1220r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("Controlling When Inline Functions are Emitted") >  >() },
    { "p1221r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1663")) >(), wxS("Title1293") >  >() },
    { "p1221r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2126")) >(), wxS("Title1643") >  >() },
    { "p1222r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author597")) >(), wxS("Title488") >  >() },
    { "p1222r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author605")) >(), wxS("A Standard flatset") >  >() },
    { "p1222r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1350")) >(), wxS("A Standard flatset") >  >() },
    { "p1222r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author255")) >(), wxS("A Standard flatset") >  >() },
    { "p1222r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1301")) >(), wxS("A Standard flatset") >  >() },
    { "p1223r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1430")) >(), wxS("Title1110") >  >() },
    { "p1223r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1562")) >(), wxS("Title1210") >  >() },
    { "p1223r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author894")) >(), wxS("findast") >  >() },
    { "p1223r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author588")) >(), wxS("findlast") >  >() },
    { "p1223r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author445")) >(), wxS("findlast") >  >() },
    { "p1223r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1865")) >(), wxS("findlast") >  >() },
    { "p1224r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author736")) >(), wxS("C++ Standard Library Issues to be moved in San Diego") >  >() },
    { "p1225r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Feedback on 2D Graphics") >  >() },
    { "p1227r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jorg Brown")) >(), wxS("p1227R0: Signed size() functions") >  >() },
    { "p1227r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jorg Brown")) >(), wxS("p1227R1: Signed ssize() functions, unsigned size() functions") >  >() },
    { "p1227r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author843")) >(), wxS("Signed ssize() functions, unsigned size() functions") >  >() },
    { "p1228r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2136")) >(), wxS("A proposal to add an efficient string concatenation routine to the Standard Library (P1228)") >  >() },
    { "p1229r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jorg Brown")) >(), wxS("p1229R0: Labelled Parameters") >  >() },
    { "p1230r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1409") >  >() },
    { "p1231r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author533")) >(), wxS("Title434") >  >() },
    { "p1232r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("p1232_integrating_executors_with_the_standard_library.md - Grip") >  >() },
    { "p1233r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ashley Hedberg")) >(), wxS("Title906") >  >() },
    { "p1233r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ashley Hedberg")) >(), wxS("Shift-by-negative in `shift_left` and `shift_right`") >  >() },
    { "p1235r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Title1103") >  >() },
    { "p1236r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author183")) >(), wxS("Alternative Wording for P0907R4 Signed Integers are Two's Complement") >  >() },
    { "p1236r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2185")) >(), wxS("Alternative Wording for P0907R4 Signed Integers are Two's Complement") >  >() },
    { "p1237r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2018/07/11 - 2018/10/03") >  >() },
    { "p1238r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode Direction") >  >() },
    { "p1238r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode Direction") >  >() },
    { "p1239r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Lustig")) >(), wxS("Placed Before") >  >() },
    { "p1240r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Title1380") >  >() },
    { "p1240r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Title1056") >  >() },
    { "p1240r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Scalable Reflection") >  >() },
    { "p1241r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("p1241_in_support_of_coroutines.md - Grip") >  >() },
    { "p1242r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title1327") >  >() },
    { "p1242r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Title915") >  >() },
    { "p1243r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("P1243R0 - Rangify New Algorithms") >  >() },
    { "p1243r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("P1243R1 - Rangify New Algorithms") >  >() },
    { "p1243r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("P1243R2 - Rangify New Algorithms") >  >() },
    { "p1243r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("P1243R3 - Rangify New Algorithms") >  >() },
    { "p1243r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("P1243R4") >  >() },
    { "p1244r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("Title1474") >  >() },
    { "p1245r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("<code>export module containing [[attribute]];</code>") >  >() },
    { "p1246r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("The <code>no_float</code> function attribute") >  >() },
    { "p1247r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("Disabling static destructors: introducing <code>no_destroy</code> and <code>always_destroy</code> attributes") >  >() },
    { "p1248r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Fixing 'Relation's") >  >() },
    { "p1248r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Remove 'CommonReference' requirement from 'StrictWeakOrdering'") >  >() },
    { "p1249r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("std::forward from std::initializer_list") >  >() },
    { "p1250r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Titus Winters")) >(), wxS("Title433") >  >() },
    { "p1251r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author378")) >(), wxS("Title321") >  >() },
    { "p1251r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author103")) >(), wxS("Title94") >  >() },
    { "p1252r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Merge the Ranges TS") >  >() },
    { "p1252r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Merge the Ranges TS") >  >() },
    { "p1252r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Merge the Ranges TS") >  >() },
    { "p1253r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Title956") >  >() },
    { "p1254r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Notes on C++ Package Management") >  >() },
    { "p1255r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: <code>view::maybe</code>") >  >() },
    { "p1255r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: <code>view::maybe</code>") >  >() },
    { "p1255r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: <code>view::maybe</code>") >  >() },
    { "p1255r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: <code>view::maybe</code>") >  >() },
    { "p1255r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: <code>view::maybe</code>") >  >() },
    { "p1255r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: views::maybe") >  >() },
    { "p1255r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements:") >  >() },
    { "p1255r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("A view of 0 or 1 elements: `views::maybe`") >  >() },
    { "p1255r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author325")) >(), wxS("Title275") >  >() },
    { "p1255r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author704")) >(), wxS("Title566") >  >() },
    { "p1255r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author82")) >(), wxS("Title82") >  >() },
    { "p1255r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Author1796")) >(), wxS("Title1396") >  >() },
    { "p1255r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Author1395")) >(), wxS("Title1086") >  >() },
    { "p1255r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Author1012")) >(), wxS("Title810") >  >() },
    { "p1255r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Author1559")) >(), wxS("Title1209") >  >() },
    { "p1256r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1737")) >(), wxS("Title1341") >  >() },
    { "p1257r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author171")) >(), wxS("Implementation experience on trying to implement concurrent data and control structures with executors") >  >() },
    { "p1258r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1170")) >(), wxS("Title927") >  >() },
    { "p1259r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author905")) >(), wxS("Title732") >  >() },
    { "p1259r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author22")) >(), wxS("Merge most of Networking TS into C++ Working Draft") >  >() },
    { "p1260r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Park")) >(), wxS("Pattern Matching") >  >() },
    { "p1261r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title454") >  >() },
    { "p1263r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1657") >  >() },
    { "p1264r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title100") >  >() },
    { "p1264r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1416") >  >() },
    { "p1264r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title1129") >  >() },
    { "p1267r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("Title201") >  >() },
    { "p1269r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jason Carey")) >(), wxS("Three Years with the Networking TS") >  >() },
    { "p1271r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author885")) >(), wxS("P1271r0 | Move resource_adaptor from Library TS to the C++ WP") >  >() },
    { "p1272r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Byteswapping for fun&&nuf") >  >() },
    { "p1272r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Byteswapping for fun&&nuf") >  >() },
    { "p1272r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Byteswapping for fun&&nuf") >  >() },
    { "p1272r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Byteswapping for fun&&nuf") >  >() },
    { "p1272r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Byteswapping for fun&&nuf") >  >() },
    { "p1273r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("86 The Absurd (From Exceptions)") >  >() },
    { "p1274r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Bang For The Buck") >  >() },
    { "p1275r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Desert Sessions: Improving hostile environment interactions") >  >() },
    { "p1276r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Void Main") >  >() },
    { "p1277r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Subscripts On Parade") >  >() },
    { "p1278r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("offsetof For the Modern Era") >  >() },
    { "p1279r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("std::breakpoint") >  >() },
    { "p1280r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Integer Width Literals") >  >() },
    { "p1280r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Integer Width Literals") >  >() },
    { "p1280r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Integer Width Literals") >  >() },
    { "p1281r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Feature Presentation") >  >() },
    { "p1282r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Ceci Nest Pas Une Pipe: Adding a workflow operator to C++") >  >() },
    { "p1283r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Sharing is Caring") >  >() },
    { "p1284r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("Allowing Inlining of Replaceable Functions") >  >() },
    { "p1285r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author250")) >(), wxS("Improving Completeness Requirements for Type Traits") >  >() },
    { "p1286r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Contra CWG DR1778") >  >() },
    { "p1286r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Contra CWG DR1778") >  >() },
    { "p1286r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Contra CWG DR1778") >  >() },
    { "p1287r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1448")) >(), wxS("Title1124") >  >() },
    { "p1288r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2178")) >(), wxS("Title1673") >  >() },
    { "p1289r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author111")) >(), wxS("Title99") >  >() },
    { "p1289r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1801")) >(), wxS("Title1397") >  >() },
    { "p1290r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1932")) >(), wxS("Title1493") >  >() },
    { "p1290r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author141")) >(), wxS("Title121") >  >() },
    { "p1290r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2035")) >(), wxS("Title1573") >  >() },
    { "p1290r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author897")) >(), wxS("Title726") >  >() },
    { "p1291r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1059")) >(), wxS("std::ranges::less<> Should Be More!") >  >() },
    { "p1292r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matt Calabrese")) >(), wxS("Customization Point Functions") >  >() },
    { "p1293r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1626")) >(), wxS("ostream_joiner") >  >() },
    { "p1293r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2072")) >(), wxS("ostream_joiner") >  >() },
    { "p1293r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1614")) >(), wxS("ostream_joiner") >  >() },
    { "p1294r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1632")) >(), wxS("Microsoft Word - N3254.docx") >  >() },
    { "p1295r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Spaceship library update") >  >() },
    { "p1296r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Miller")) >(), wxS("Title862") >  >() },
    { "p1298r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olivier Giroux")) >(), wxS("Reserve more freedom for atomic_ref implementers") >  >() },
    { "p1299r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1354")) >(), wxS("Module Preamble is Unnecessary") >  >() },
    { "p1299r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author961")) >(), wxS("Module Preamble is Unnecessarily Fragile") >  >() },
    { "p1299r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author287")) >(), wxS("Module Preamble is Unnecessarily Fragile") >  >() },
    { "p1300r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2093")) >(), wxS("Remember the FORTRAN") >  >() },
    { "p1301r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("nodiscard should have a reason") >  >() },
    { "p1301r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("[[nodiscard(\"should have a reason\")]]") >  >() },
    { "p1301r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("[[nodiscard(\"should have a reason\")]]") >  >() },
    { "p1301r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("[[nodiscard(\"should have a reason\")]]") >  >() },
    { "p1301r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("[[nodiscard(\"should have a reason\")]]") >  >() },
    { "p1302r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Implicit Module Partition Lookup") >  >() },
    { "p1302r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Implicit Module Partition Lookup") >  >() },
    { "p1303r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Inline Module Partitions") >  >() },
    { "p1304r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Simplifying Extern Template") >  >() },
    { "p1305r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Deprecate The Addressof Operator") >  >() },
    { "p1306r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Title351") >  >() },
    { "p1306r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Title1531") >  >() },
    { "p1306r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Expansion statements r2") >  >() },
    { "p1306r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("P1306 (Expansion statements)") >  >() },
    { "p1307r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title1023") >  >() },
    { "p1308r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("pattern_matching") >  >() },
    { "p1310r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title88") >  >() },
    { "p1312r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title425") >  >() },
    { "p1313r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Woehlke")) >(), wxS("Let's Talk About Package Specification") >  >() },
    { "p1314r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("unique_val") >  >() },
    { "p1314r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("unique_val") >  >() },
    { "p1315r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_val") >  >() },
    { "p1315r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_val") >  >() },
    { "p1315r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_clear") >  >() },
    { "p1315r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_clear") >  >() },
    { "p1315r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_clear") >  >() },
    { "p1315r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_clear") >  >() },
    { "p1315r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_clear (update to N2599)") >  >() },
    { "p1315r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Miguel Ojeda")) >(), wxS("secure_clear") >  >() },
    { "p1316r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1954")) >(), wxS("Title1517") >  >() },
    { "p1317r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author977")) >(), wxS("Title785") >  >() },
    { "p1317r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author618")) >(), wxS("Title504") >  >() },
    { "p1318r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1104")) >(), wxS("Title885") >  >() },
    { "p1319r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1015")) >(), wxS("Changes between C++11 and C++14") >  >() },
    { "p1320r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author270")) >(), wxS("Allowing contract predicates on non-first declarations") >  >() },
    { "p1320r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author213")) >(), wxS("Allowing contract predicates on non-first declarations") >  >() },
    { "p1320r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author762")) >(), wxS("Allowing contract predicates on non-first declarations") >  >() },
    { "p1321r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1555")) >(), wxS("UB in contract violations") >  >() },
    { "p1322r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS enhancement to enable custom I/O executors") >  >() },
    { "p1322r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS enhancement to enable custom I/O executors") >  >() },
    { "p1322r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS enhancement to enable custom I/O executors") >  >() },
    { "p1322r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS enhancement to enable custom I/O executors") >  >() },
    { "p1323r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Contract postconditions and return type deduction") >  >() },
    { "p1323r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Contract postconditions and return type deduction") >  >() },
    { "p1323r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Contract postconditions and return type deduction") >  >() },
    { "p1324r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("[RE] Yet another") >  >() },
    { "p1324r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("[RE]YetAnother") >  >() },
    { "p1327r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1875")) >(), wxS("Allowing dynamic_cast, polymorphic typeid in Constant Expressions") >  >() },
    { "p1327r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1254")) >(), wxS("Allowing dynamic_cast, polymorphic typeid in Constant Expressions") >  >() },
    { "p1328r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author790")) >(), wxS("Making std::type_info::operator== constexpr") >  >() },
    { "p1328r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author554")) >(), wxS("Making std::type_info::operator== constexpr") >  >() },
    { "p1329r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author984")) >(), wxS("Title793") >  >() },
    { "p1330r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Title679") >  >() },
    { "p1331r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1850")) >(), wxS("Title1437") >  >() },
    { "p1331r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author81")) >(), wxS("Title80") >  >() },
    { "p1331r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2133")) >(), wxS("Title1646") >  >() },
    { "p1332r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author877")) >(), wxS("Title703") >  >() },
    { "p1333r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1896")) >(), wxS("Title1466") >  >() },
    { "p1334r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author502")) >(), wxS("Title413") >  >() },
    { "p1335r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author722")) >(), wxS("Title581") >  >() },
    { "p1337r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1821")) >(), wxS("Title1413") >  >() },
    { "p1338r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author809")) >(), wxS("P1338") >  >() },
    { "p1338r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2079")) >(), wxS("P1338R1") >  >() },
    { "p1339r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1790")) >(), wxS("Title1392") >  >() },
    { "p1339r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author878")) >(), wxS("Title704") >  >() },
    { "p1341r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author315")) >(), wxS("Microsoft Word - Unifying asynchronous APIs in C++ standard library.docx") >  >() },
    { "p1342r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author933")) >(), wxS("Microsoft Word - Unified Coroutines.docx") >  >() },
    { "p1344r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1379")) >(), wxS("Title1069") >  >() },
    { "p1344r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author251")) >(), wxS("Title208") >  >() },
    { "p1347r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1890")) >(), wxS("Modules: ADL & Internal Linkage") >  >() },
    { "p1347r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1204")) >(), wxS("Modules: ADL & Internal Linkage") >  >() },
    { "p1348r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David S")) >(), wxS("An Executor Property for Occupancy of Execution Agents") >  >() },
    { "p1349r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vinnie Falco")) >(), wxS("Better Integration of Sender Executors") >  >() },
    { "p1350r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1185")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p1351r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Zeren")) >(), wxS("Intrusive smart pointer feedback") >  >() },
    { "p1353r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1940")) >(), wxS("Missing Feature Test Macros") >  >() },
    { "p1354r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chandler Carruth")) >(), wxS("SG7 Guidelines for Review of Proposals") >  >() },
    { "p1355r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("Exposing a narrow contract for ceil2") >  >() },
    { "p1355r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("Exposing a narrow contract for ceil2") >  >() },
    { "p1355r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Chris Kennelly")) >(), wxS("Exposing a narrow contract for ceil2") >  >() },
    { "p1356r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1032")) >(), wxS("C++ Coroutine TS Issues") >  >() },
    { "p1357r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author617")) >(), wxS("Traits for [Un]bounded Arrays") >  >() },
    { "p1357r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1978")) >(), wxS("Traits for [Un]bounded Arrays") >  >() },
    { "p1358r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1582")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p1359r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author292")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p1360r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1300")) >(), wxS("Title1004") >  >() },
    { "p1361r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Integration of chrono with text formatting") >  >() },
    { "p1361r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Integration of chrono with text formatting") >  >() },
    { "p1361r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Integration of chrono with text formatting") >  >() },
    { "p1362r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("Title1338") >  >() },
    { "p1364r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("Title247") >  >() },
    { "p1365r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("Title1507") >  >() },
    { "p1367r0" , RevList< Rev< 0u, Arr64< Hash(wxS("ogiroux@nvidia.com")) >(), wxS("Title1699") >  >() },
    { "p1367r1" , RevList< Rev< 1u, Arr64< Hash(wxS("ogiroux@nvidia.com")) >(), wxS("Title105") >  >() },
    { "p1368r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author854")) >(), wxS("Multiplication and division of fixed-point numbers") >  >() },
    { "p1368r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1457")) >(), wxS("Multiplication and division of fixed-point numbers") >  >() },
    { "p1369r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author654")) >(), wxS("Guidelines for Formulating Library Semantics Specifications") >  >() },
    { "p1370r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author459")) >(), wxS("Title387") >  >() },
    { "p1370r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Generic numerical algorithm development with(out) <code>numeric_limits</code>") >  >() },
    { "p1371r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sergei Murzin")) >(), wxS("Pattern Matching") >  >() },
    { "p1371r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Sergei Murzin")) >(), wxS("Pattern Matching") >  >() },
    { "p1371r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Sergei Murzin")) >(), wxS("Pattern Matching") >  >() },
    { "p1371r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("Pattern Matching") >  >() },
    { "p1372r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David S")) >(), wxS("Giving <code>atomic_ref</code> implementers more flexibility by providing customization points for non-lock-free implementation") >  >() },
    { "p1373r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1034")) >(), wxS("Title833") >  >() },
    { "p1374r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author515")) >(), wxS("Resolving LWG #2307 for C++20: Consistently Explicit Constructors") >  >() },
    { "p1375r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("More Constrained: Apples or Oranges? On the road to semantic constraint matching") >  >() },
    { "p1375r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("More Constrained: Apples or Oranges? On the road to semantic constraint matching") >  >() },
    { "p1375r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("More Constrained: Apples or Oranges? On the road to semantic constraint matching") >  >() },
    { "p1376r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Summary of freestanding evening session discussions") >  >() },
    { "p1377r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Summary of Dec 2018 SG14 freestanding discussions") >  >() },
    { "p1378r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::string_literal") >  >() },
    { "p1380r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Ambiguity and Insecurities with Three-Way Comparison") >  >() },
    { "p1380r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Ambiguity and Insecurities with Three-Way Comparison") >  >() },
    { "p1381r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("Reference capture of structured bindings") >  >() },
    { "p1381r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("Reference capture of structured bindings") >  >() },
    { "p1382r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Title1226") >  >() },
    { "p1382r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Title944") >  >() },
    { "p1383r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2088")) >(), wxS("Title1620") >  >() },
    { "p1383r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1828")) >(), wxS("Title1420") >  >() },
    { "p1383r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author385")) >(), wxS("Title330") >  >() },
    { "p1385r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("[linear.algebra]R0: A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("[linear.algebra]R1: A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("[linear.algebra]R2: A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("A proposal to add linear algebra support to the C++ standard library") >  >() },
    { "p1385r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("Untitled document") >  >() },
    { "p1386r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1365")) >(), wxS("Title1059") >  >() },
    { "p1386r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2017")) >(), wxS("Title1557") >  >() },
    { "p1386r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author724")) >(), wxS("Title584") >  >() },
    { "p1388r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1936")) >(), wxS("Title1497") >  >() },
    { "p1389r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Standing Document for SG20: Guidelines for Teaching C++ to Beginners") >  >() },
    { "p1389r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Standing Document for SG20: Guidelines for Teaching C++ to Beginners") >  >() },
    { "p1390r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mata Chochl")) >(), wxS("Suggested Reflection TS NB Resolutions") >  >() },
    { "p1390r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mat\u00FA\u0161 Chochl\u00EDk")) >(), wxS("Reflection TS NB comment resolutions: summary and rationale") >  >() },
    { "p1391r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1388") >  >() },
    { "p1391r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title768") >  >() },
    { "p1391r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title185") >  >() },
    { "p1391r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1216") >  >() },
    { "p1391r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1621") >  >() },
    { "p1392r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author672")) >(), wxS("Differences Between Functions and Function Templates") >  >() },
    { "p1393r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Hollman")) >(), wxS("properties") >  >() },
    { "p1394r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title846") >  >() },
    { "p1394r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title251") >  >() },
    { "p1394r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1639") >  >() },
    { "p1394r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title117") >  >() },
    { "p1394r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title599") >  >() },
    { "p1395r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2124")) >(), wxS("Modules: Partitions Are Not a Panacea") >  >() },
    { "p1401r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1319")) >(), wxS("Title1017") >  >() },
    { "p1401r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrzej Krzemie\u0144ski")) >(), wxS("constexpr_bool_conv_r1") >  >() },
    { "p1401r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author917")) >(), wxS("Title738") >  >() },
    { "p1401r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Narrowing contextual conversions to bool") >  >() },
    { "p1401r4" , RevList< Rev< 4u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Narrowing contextual conversions to bool") >  >() },
    { "p1401r5" , RevList< Rev< 5u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Narrowing contextual conversions to bool") >  >() },
    { "p1402r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title897") >  >() },
    { "p1403r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David S")) >(), wxS("Experience Report: Implementing a Coroutines TS Frontend to an Existing Tasking Library") >  >() },
    { "p1404r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author412")) >(), wxS("Title354") >  >() },
    { "p1404r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrzej Krzemie\u0144ski")) >(), wxS("bad_alloc_r1") >  >() },
    { "p1405r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("C++20 Executors are Resilient to ABI Breakage | P1405R0") >  >() },
    { "p1406r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Add more std::hash specializations") >  >() },
    { "p1406r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title1236") >  >() },
    { "p1407r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Scott Schurr")) >(), wxS("P1407R0_SignedIntOverflow") >  >() },
    { "p1407r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Scott Schurr")) >(), wxS("P1407R1_SignedIntOverflow") >  >() },
    { "p1408r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author182")) >(), wxS("Title157") >  >() },
    { "p1410r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2164")) >(), wxS("Title1665") >  >() },
    { "p1411r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author164")) >(), wxS("Title139") >  >() },
    { "p1412r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1410")) >(), wxS("Title1098") >  >() },
    { "p1413r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author728")) >(), wxS("Title587") >  >() },
    { "p1413r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author508")) >(), wxS("Title419") >  >() },
    { "p1413r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1140")) >(), wxS("Title907") >  >() },
    { "p1413r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1966")) >(), wxS("Title1528") >  >() },
    { "p1415r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title158") >  >() },
    { "p1415r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1092") >  >() },
    { "p1416r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1765")) >(), wxS("Title1369") >  >() },
    { "p1417r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author407")) >(), wxS("Title347") >  >() },
    { "p1419r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title118") >  >() },
    { "p1421r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1083")) >(), wxS("Title873") >  >() },
    { "p1422r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2018/10/17 - 2019/01/09") >  >() },
    { "p1423r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t backward compatibility remediation") >  >() },
    { "p1423r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t backward compatibility remediation") >  >() },
    { "p1423r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t backward compatibility remediation") >  >() },
    { "p1423r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("char8_t backward compatibility remediation") >  >() },
    { "p1424r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1275")) >(), wxS("'constexpr' feature macro concerns") >  >() },
    { "p1424r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1548")) >(), wxS("'constexpr' feature macro concerns") >  >() },
    { "p1425r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title380") >  >() },
    { "p1425r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1011") >  >() },
    { "p1425r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title561") >  >() },
    { "p1425r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title600") >  >() },
    { "p1425r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1689") >  >() },
    { "p1426r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1500")) >(), wxS("Title1165") >  >() },
    { "p1427r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1995")) >(), wxS("Title1542") >  >() },
    { "p1428r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author787")) >(), wxS("Title639") >  >() },
    { "p1429r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title25") >  >() },
    { "p1429r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1650") >  >() },
    { "p1429r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1550") >  >() },
    { "p1429r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title888") >  >() },
    { "p1430r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author402")) >(), wxS("Title343") >  >() },
    { "p1430r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1833")) >(), wxS("Title1423") >  >() },
    { "p1433r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("Title1587") >  >() },
    { "p1434r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author584")) >(), wxS("Discussing Pointer Provenance") >  >() },
    { "p1436r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("d1436r0.html") >  >() },
    { "p1436r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("d1436r1.html") >  >() },
    { "p1436r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("d1436r2.html") >  >() },
    { "p1436r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title431") >  >() },
    { "p1438r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0")) >(), wxS("P1438R0 - A Rational Number Library for C++") >  >() },
    { "p1438r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0")) >(), wxS("P1438R1 - A Rational Number Library for C++") >  >() },
    { "p1439r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Charset Transcoding, Transformation, and Transliteration") >  >() },
    { "p1439r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Charset Transcoding, Transformation, and Transliteration") >  >() },
    { "p1440r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Johel Guerrero")) >(), wxS("is_clamped") >  >() },
    { "p1441r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1074")) >(), wxS("Title865") >  >() },
    { "p1441r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1961")) >(), wxS("Title1526") >  >() },
    { "p1442r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1892")) >(), wxS("A Medley of Networking TS improvements") >  >() },
    { "p1443r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title762") >  >() },
    { "p1444r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1153") >  >() },
    { "p1445r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1670") >  >() },
    { "p1446r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("html5 Reconsider the Networking TS for inclusion in C++20") >  >() },
    { "p1447r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mata Chochl")) >(), wxS("constexpr C++ is not constexpr C") >  >() },
    { "p1448r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nathan Burgers")) >(), wxS("Title1404") >  >() },
    { "p1449r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1437")) >(), wxS("Title1117") >  >() },
    { "p1450r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author242")) >(), wxS("P1450R0") >  >() },
    { "p1450r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2179")) >(), wxS("http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1450r1.pdfP1450R1") >  >() },
    { "p1450r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1794")) >(), wxS("http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1450r2.pdfP1450R2") >  >() },
    { "p1450r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1270")) >(), wxS("P1450R3") >  >() },
    { "p1452r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("On the non-uniform semantics of return-type-requirements") >  >() },
    { "p1452r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("On the non-uniform semantics of return-type-requirements") >  >() },
    { "p1452r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("On the non-uniform semantics of return-type-requirements") >  >() },
    { "p1453r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Modularizing the Standard Library is a Reorganization Opportunity") >  >() },
    { "p1456r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Move-only views") >  >() },
    { "p1456r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Move-only views") >  >() },
    { "p1457r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author426")) >(), wxS("C++ Standard Library Issues to be moved in Kona") >  >() },
    { "p1458r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1412")) >(), wxS("C++ International Standard") >  >() },
    { "p1458r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1036")) >(), wxS("C++ International Standard") >  >() },
    { "p1459r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author245")) >(), wxS("C++ International Standard") >  >() },
    { "p1459r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author409")) >(), wxS("C++ International Standard") >  >() },
    { "p1460r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author746")) >(), wxS("Mandating the Standard Library: Clause 20") >  >() },
    { "p1460r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1196")) >(), wxS("Mandating the Standard Library: Clause 20") >  >() },
    { "p1462r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author136")) >(), wxS("Mandating the Standard Library: Clause 20 - Strings library") >  >() },
    { "p1462r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author611")) >(), wxS("Mandating the Standard Library: Clause 20 - Strings library") >  >() },
    { "p1463r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1822")) >(), wxS("C++ International Standard") >  >() },
    { "p1463r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author307")) >(), wxS("C++ International Standard") >  >() },
    { "p1464r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author379")) >(), wxS("C++ International Standard") >  >() },
    { "p1464r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1854")) >(), wxS("C++ International Standard") >  >() },
    { "p1465r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title573") >  >() },
    { "p1466r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author902")) >(), wxS("chrono fixes") >  >() },
    { "p1466r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2222")) >(), wxS("chrono fixes") >  >() },
    { "p1466r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1583")) >(), wxS("chrono fixes") >  >() },
    { "p1466r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1222")) >(), wxS("chrono fixes") >  >() },
    { "p1467r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Extended floating-point types") >  >() },
    { "p1467r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Extended floating-point types") >  >() },
    { "p1467r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Extended floating-point types") >  >() },
    { "p1467r3" , RevList< Rev< 3u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types") >  >() },
    { "p1467r4" , RevList< Rev< 4u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types and standard names") >  >() },
    { "p1467r5" , RevList< Rev< 5u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types and standard names") >  >() },
    { "p1467r6" , RevList< Rev< 6u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types and standard names") >  >() },
    { "p1467r7" , RevList< Rev< 7u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types and standard names") >  >() },
    { "p1467r8" , RevList< Rev< 8u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types and standard names") >  >() },
    { "p1467r9" , RevList< Rev< 9u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Extended floating-point types and standard names") >  >() },
    { "p1468r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Fixed-layout floating-point type aliases") >  >() },
    { "p1468r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Fixed-layout floating-point type aliases") >  >() },
    { "p1468r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Fixed-layout floating-point type aliases") >  >() },
    { "p1468r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Fixed-layout floating-point type aliases") >  >() },
    { "p1468r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Fixed-layout floating-point type aliases") >  >() },
    { "p1469r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sergei Murzin")) >(), wxS("Disallow _ Usage in C++20 for Pattern Matching in C++23") >  >() },
    { "p1470r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title1365") >  >() },
    { "p1471r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("html5 The trouble with coroutine_traits") >  >() },
    { "p1472r0" , RevList< Rev< 0u, Arr64< Hash(wxS("SG5 minutes")) >(), wxS("Title1501") >  >() },
    { "p1473r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Move-only views") >  >() },
    { "p1474r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Move-only views") >  >() },
    { "p1474r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Amazing Stuff") >  >() },
    { "p1477r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1390")) >(), wxS("Title1080") >  >() },
    { "p1477r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author230")) >(), wxS("Title190") >  >() },
    { "p1478r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("P1478: Byte-wise atomic memcpy") >  >() },
    { "p1478r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1478r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Hans-J. Boehm")) >(), wxS("Byte-wise atomic memcpy") >  >() },
    { "p1479r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Kawulak")) >(), wxS("ostringstream wrapper") >  >() },
    { "p1481r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nicolas Lesser")) >(), wxS("constexpr structured bindings") >  >() },
    { "p1482r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("Modules Feedback") >  >() },
    { "p1484r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Peter Bindels")) >(), wxS("Title1198") >  >() },
    { "p1485r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1900")) >(), wxS("Better keywords for the Coroutines TS") >  >() },
    { "p1485r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1789")) >(), wxS("Better keywords for the Coroutines") >  >() },
    { "p1486r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1093")) >(), wxS("Title880") >  >() },
    { "p1486r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1689")) >(), wxS("Title1312") >  >() },
    { "p1487r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author899")) >(), wxS("Title728") >  >() },
    { "p1490r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrzej Krzemie\u0144ski")) >(), wxS("P1490r0 Contract-Related Issues") >  >() },
    { "p1491r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1955")) >(), wxS("Title1520") >  >() },
    { "p1492r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Title714") >  >() },
    { "p1493r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Geoffrey Romer")) >(), wxS("Title96") >  >() },
    { "p1494r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1784")) >(), wxS("Partial program correctness") >  >() },
    { "p1494r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author415")) >(), wxS("Partial program correctness") >  >() },
    { "p1494r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1139")) >(), wxS("Partial program correctness") >  >() },
    { "p1494r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1209")) >(), wxS("Partial program correctness") >  >() },
    { "p1494r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author794")) >(), wxS("Partial program correctness") >  >() },
    { "p1494r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1575")) >(), wxS("Partial program correctness") >  >() },
    { "p1496r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alan Talbot")) >(), wxS("Formatting of negative zero") >  >() },
    { "p1496r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author54")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p1496r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1400")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p1498r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chandler Carruth")) >(), wxS("Constrained Internal Linkage for Modules") >  >() },
    { "p1498r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Chandler Carruth")) >(), wxS("Constrained Internal Linkage for Modules") >  >() },
    { "p1502r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Standard library header units for C++20") >  >() },
    { "p1502r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Standard library header units for C++20") >  >() },
    { "p1505r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author945")) >(), wxS("C++ International Standard") >  >() },
    { "p1505r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author530")) >(), wxS("C++ International Standard") >  >() },
    { "p1510r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1768")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p1517r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Contract Requirements for Iterative High-Assurance Systems") >  >() },
    { "p1518r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Stop overconstraining allocators in container deduction guides") >  >() },
    { "p1518r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Stop overconstraining allocators in container deduction guides") >  >() },
    { "p1518r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Stop overconstraining allocators in container deduction guides") >  >() },
    { "p1520r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("Title1125") >  >() },
    { "p1522r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Iterator Difference Type and Integer Overflow") >  >() },
    { "p1522r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Iterator Difference Type and Integer Overflow") >  >() },
    { "p1523r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Views and Size Types") >  >() },
    { "p1523r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Views and Size Types") >  >() },
    { "p1525r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("One-Way execute is a Poor Basis Operation") >  >() },
    { "p1525r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("One-Way is a Poor Basis Operation") >  >() },
    { "p1601r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1708")) >(), wxS("Recommendations for Specifying ``Hidden Friends''") >  >() },
    { "p1602r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author710")) >(), wxS("Make Me A Module") >  >() },
    { "p1604r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("The inline keyword is not in line with the design of modules.") >  >() },
    { "p1604r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("The inline keyword is not in line with the design of modules.") >  >() },
    { "p1605r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author745")) >(), wxS("Member Layout Control") >  >() },
    { "p1606r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title29") >  >() },
    { "p1607r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title50") >  >() },
    { "p1607r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title763") >  >() },
    { "p1609r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("C++ Should Support Just-in-Time Compilation") >  >() },
    { "p1609r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("C++ Should Support Just-in-Time Compilation") >  >() },
    { "p1609r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("C++ Should Support Just-in-Time Compilation") >  >() },
    { "p1609r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("C++ Should Support Just-in-Time Compilation") >  >() },
    { "p1610r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1230")) >(), wxS("D1610 Rename await_resume() to await_result().md") >  >() },
    { "p1611r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author392")) >(), wxS("Rod-Kona-P1611") >  >() },
    { "p1612r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author413")) >(), wxS("Relocate Endian's Specification") >  >() },
    { "p1612r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2143")) >(), wxS("Relocate Endian's Specification") >  >() },
    { "p1614r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("The Mothership Has Landed Adding <=> to the Library") >  >() },
    { "p1614r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("The Mothership has Landed") >  >() },
    { "p1614r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("The Mothership has Landed") >  >() },
    { "p1616r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Using unconstrained template template parameters with constrained templates") >  >() },
    { "p1616r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Using unconstrained template template parameters with constrained templates") >  >() },
    { "p1619r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1694") >  >() },
    { "p1619r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title291") >  >() },
    { "p1619r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1348") >  >() },
    { "p1622r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1187")) >(), wxS("C++ International Standard") >  >() },
    { "p1622r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author181")) >(), wxS("C++ International Standard") >  >() },
    { "p1622r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author337")) >(), wxS("P1622R2") >  >() },
    { "p1622r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1528")) >(), wxS("P1622R3") >  >() },
    { "p1624r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Resolving technical issues in parameter mapping equivalence and related problems") >  >() },
    { "p1624r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Resolving technical issues in parameter mapping equivalence and related problems") >  >() },
    { "p1625r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1311")) >(), wxS("Contracts: why the house is not on fire (i.e. why the status quo is tolerable)") >  >() },
    { "p1628r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title524") >  >() },
    { "p1629r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Standard Text Encoding") >  >() },
    { "p1629r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Transcoding the - Standard Text Encoding") >  >() },
    { "p1630r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Spaceship needs a tune-up") >  >() },
    { "p1630r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Spaceship needs a tune-up") >  >() },
    { "p1631r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1126") >  >() },
    { "p1631r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1503") >  >() },
    { "p1633r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Amendments to the C++20 Synchronization Library") >  >() },
    { "p1633r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Amendments to the C++20 Synchronization Library") >  >() },
    { "p1634r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Naming guidelines for modules") >  >() },
    { "p1635r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author490")) >(), wxS("Title409") >  >() },
    { "p1636r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lars Gullik")) >(), wxS("Formatters for library types") >  >() },
    { "p1636r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lars Gullik")) >(), wxS("Formatters for library types") >  >() },
    { "p1636r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lars Gullik")) >(), wxS("Formatters for library types") >  >() },
    { "p1638r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1685") >  >() },
    { "p1638r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title441") >  >() },
    { "p1639r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title83") >  >() },
    { "p1640r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Error size benchmarking") >  >() },
    { "p1640r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Error size benchmarking: Redux") >  >() },
    { "p1641r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Rewording the Status Quo") >  >() },
    { "p1641r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("D1641R1.0: Freestanding Library: Rewording the Status Quo") >  >() },
    { "p1641r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Rewording the Status Quo") >  >() },
    { "p1641r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Rewording the Status Quo") >  >() },
    { "p1642r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities]") >  >() },
    { "p1642r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("P1642R6 Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("P1642R7 Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1642r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Easy [utilities], [ranges], and [iterators]") >  >() },
    { "p1643r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Add wait/notify to atomic_ref<T>") >  >() },
    { "p1643r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Add wait/notify to atomic_ref<T>") >  >() },
    { "p1644r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Add wait/notify to atomic<shared_ptr<T>>") >  >() },
    { "p1645r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Deane")) >(), wxS("constexpr for <numeric> algorithms") >  >() },
    { "p1645r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Deane")) >(), wxS("constexpr for <numeric> algorithms") >  >() },
    { "p1648r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1359") >  >() },
    { "p1648r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1428") >  >() },
    { "p1648r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title266") >  >() },
    { "p1649r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title447") >  >() },
    { "p1650r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Output std::chrono::days with 'd' suffix") >  >() },
    { "p1651r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("bind_front should not unwrap reference_wrapper") >  >() },
    { "p1652r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Printf corner cases in std::format - HackMD") >  >() },
    { "p1652r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Printf corner cases in std::format - HackMD") >  >() },
    { "p1654r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1511")) >(), wxS("ABI breakage - summary of initial comments") >  >() },
    { "p1654r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author511")) >(), wxS("ABI breakage - summary of initial comments") >  >() },
    { "p1655r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("LEWG Omnibus Design Policy Paper") >  >() },
    { "p1656r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("\"Throws: Nothing\" should be noexcept") >  >() },
    { "p1656r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("\"Throws: Nothing\" should be noexcept") >  >() },
    { "p1656r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Agust\u00EDn Berg\u00E9")) >(), wxS("\"Throws: Nothing\" should be noexcept") >  >() },
    { "p1657r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul Fee")) >(), wxS("Title257") >  >() },
    { "p1658r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author3")) >(), wxS("Suggestions for Consensus on Executors | P1658") >  >() },
    { "p1659r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("starts_with and ends_with") >  >() },
    { "p1659r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("starts_with and ends_with") >  >() },
    { "p1659r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("starts_with and ends_with") >  >() },
    { "p1659r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("starts_with and ends_with") >  >() },
    { "p1660r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jared Hoberock")) >(), wxS("A Compromise Executor Design Sketch") >  >() },
    { "p1661r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Remove dedicated precalculated hash lookup interface") >  >() },
    { "p1661r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Remove dedicated precalculated hash lookup interface") >  >() },
    { "p1662r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1483")) >(), wxS("Title1155") >  >() },
    { "p1663r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author146")) >(), wxS("Title125") >  >() },
    { "p1664r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r5" , RevList< Rev< 5u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r6" , RevList< Rev< 6u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1664r7" , RevList< Rev< 7u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("reconstructible_range - a concept for putting ranges back together") >  >() },
    { "p1665r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Bandela")) >(), wxS("Title324") >  >() },
    { "p1666r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2019/01/23 - 2019/05/22") >  >() },
    { "p1667r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Concept-aware `noexcept` specifiers") >  >() },
    { "p1668r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Erich Keane")) >(), wxS("Enabling Constexpr Intrinsics By Permitting Unevaluated inline-asm in Constexpr Functions") >  >() },
    { "p1668r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Erich Keane")) >(), wxS("Enabling Constexpr Intrinsics By Permitting Unevaluated inline-asm in Constexpr Functions") >  >() },
    { "p1669r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Erich Keane")) >(), wxS("Callsite Based Inlining Hints: [[always_inline]] and [[never_inline]]") >  >() },
    { "p1670r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Title224") >  >() },
    { "p1671r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title850") >  >() },
    { "p1672r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1490") >  >() },
    { "p1673r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author576")) >(), wxS("Title467") >  >() },
    { "p1673r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author377")) >(), wxS("Title320") >  >() },
    { "p1673r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1666")) >(), wxS("Title1296") >  >() },
    { "p1673r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1570")) >(), wxS("Title1217") >  >() },
    { "p1673r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("D1673R4R4: D1673R4: A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("P1673R5R5: P1673R5: A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("P1673R6: A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1673r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("A free function linear algebra interface based on the BLAS") >  >() },
    { "p1674r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1445")) >(), wxS("Title1122") >  >() },
    { "p1674r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1829")) >(), wxS("Title1421") >  >() },
    { "p1674r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1997")) >(), wxS("Evolving a Standard C++ Linear Algebra Library from the BLAS") >  >() },
    { "p1675r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author737")) >(), wxS("Title594") >  >() },
    { "p1675r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author353")) >(), wxS("rethrow_exception must be allowed to copy") >  >() },
    { "p1675r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1629")) >(), wxS("rethrow_exception must be allowed to copy") >  >() },
    { "p1676r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("Title1462") >  >() },
    { "p1677r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Cancellation is not an Error") >  >() },
    { "p1677r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Cancellation is not an Error") >  >() },
    { "p1677r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Cancellation is serendipitous-success") >  >() },
    { "p1678r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Callbacks and Composition") >  >() },
    { "p1678r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Callbacks and Composition") >  >() },
    { "p1678r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Callbacks and Composition") >  >() },
    { "p1679r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wim Leflere")) >(), wxS("String Contains function") >  >() },
    { "p1679r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Wim Leflere")) >(), wxS("String Contains function") >  >() },
    { "p1679r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Wim Leflere")) >(), wxS("string contains function") >  >() },
    { "p1679r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Wim Leflere")) >(), wxS("string contains function") >  >() },
    { "p1680r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1023")) >(), wxS("p1680r0") >  >() },
    { "p1681r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gor Nishanov")) >(), wxS("Title1116") >  >() },
    { "p1682r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::to_underlying for enumerations") >  >() },
    { "p1682r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::to_underlying for enumerations") >  >() },
    { "p1682r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::to_underlying for enumerations") >  >() },
    { "p1682r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("std::to_underlying for enumerations") >  >() },
    { "p1683r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("References for Standard Library Vocabulary Types - an optional<> case study") >  >() },
    { "p1684r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Hollman")) >(), wxS("mdarray: An Owning Multidimensional Array Analog of mdspan") >  >() },
    { "p1684r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("mdarray: An Owning Multidimensional Array Analog of mdspan") >  >() },
    { "p1684r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("mdarray: An Owning Multidimensional Array Analog of mdspan") >  >() },
    { "p1684r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("mdarray: An Owning Multidimensional Array Analog of mdspan") >  >() },
    { "p1684r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("mdarray: An Owning Multidimensional Array Analog of mdspan") >  >() },
    { "p1684r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("mdarray: An Owning Multidimensional Array Analog of mdspan") >  >() },
    { "p1685r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Microsoft Word - P1685_replaceable_default_resource.docx") >  >() },
    { "p1686r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1111")) >(), wxS("C++ International Standard") >  >() },
    { "p1686r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author187")) >(), wxS("C++ International Standard") >  >() },
    { "p1686r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author523")) >(), wxS("Mandating the Standard Library: Clause 27 - Time library") >  >() },
    { "p1687r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Summary of the Tooling Study Groups Pre-Cologne Telecons on Modules Tooling Interactions") >  >() },
    { "p1687r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Summary of the Tooling Study Groups Modules Ecosystem Technical Report Telecons") >  >() },
    { "p1688r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Towards a C++ Ecosystem Technical Report") >  >() },
    { "p1689r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1516")) >(), wxS("Format for describing dependencies of source files") >  >() },
    { "p1689r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1120")) >(), wxS("Format for describing dependencies of source files") >  >() },
    { "p1689r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author321")) >(), wxS("Format for describing dependencies of source files") >  >() },
    { "p1689r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author908")) >(), wxS("Format for describing dependencies of source files") >  >() },
    { "p1689r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author343")) >(), wxS("Format for describing dependencies of source files") >  >() },
    { "p1689r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author614")) >(), wxS("Format for describing dependencies of source files") >  >() },
    { "p1690r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Xiao Shi")) >(), wxS("Refinement Proposal for P0919 Heterogeneous lookup for unordered containers") >  >() },
    { "p1690r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Xiao Shi")) >(), wxS("Refinement Proposal for P0919 Heterogeneous lookup for unordered containers") >  >() },
    { "p1696r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Xiao Shi")) >(), wxS("Refinement proposal for P0920 Precalculated hash values in lookup") >  >() },
    { "p1697r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Botond Ballo")) >(), wxS("Require a diagnostic for \"declaration changes meaning\"") >  >() },
    { "p1700r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Audience Tables") >  >() },
    { "p1701r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1192")) >(), wxS("Inline Namespaces: Fragility Bites") >  >() },
    { "p1701r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author264")) >(), wxS("Inline Namespaces: Fragility Bites") >  >() },
    { "p1701r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author808")) >(), wxS("Inline Namespaces: Fragility Bites") >  >() },
    { "p1702r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title783") >  >() },
    { "p1703r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1029")) >(), wxS("Recognizing Header Unit Imports Requires Full Preprocessing") >  >() },
    { "p1703r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1160")) >(), wxS("Recognizing Header Unit Imports Requires Full Preprocessing") >  >() },
    { "p1704r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("axiom_level_contract_statements") >  >() },
    { "p1705r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Shafik Yaghmour")) >(), wxS("Enumerating Core Undefined Behavior") >  >() },
    { "p1705r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Shafik Yaghmour")) >(), wxS("Enumerating Core Undefined Behavior") >  >() },
    { "p1706r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1435") >  >() },
    { "p1706r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title631") >  >() },
    { "p1706r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title735") >  >() },
    { "p1706r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Programming Language Vulnerabilities for Safety Critical C++") >  >() },
    { "p1708r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title1422") >  >() },
    { "p1708r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2150")) >(), wxS("Title1656") >  >() },
    { "p1708r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author156")) >(), wxS("Title132") >  >() },
    { "p1708r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author345")) >(), wxS("Title289") >  >() },
    { "p1708r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author942")) >(), wxS("Title760") >  >() },
    { "p1708r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author73")) >(), wxS("Title75") >  >() },
    { "p1708r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title1321") >  >() },
    { "p1708r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title442") >  >() },
    { "p1708r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title1058") >  >() },
    { "p1708r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title1099") >  >() },
    { "p1709r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phillip Ratzloff")) >(), wxS("Title538") >  >() },
    { "p1709r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phillip Ratzloff")) >(), wxS("Title451") >  >() },
    { "p1709r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Phillip Ratzloff")) >(), wxS("Title946") >  >() },
    { "p1709r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Phillip Ratzloff")) >(), wxS("Graph Proposal") >  >() },
    { "p1709r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1161")) >(), wxS("Title921") >  >() },
    { "p1709r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1194")) >(), wxS("Title936") >  >() },
    { "p1710r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1880")) >(), wxS("Adding a global contract assumption mode") >  >() },
    { "p1711r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author37")) >(), wxS("Title33") >  >() },
    { "p1713r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author404")) >(), wxS("Title345") >  >() },
    { "p1714r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1725")) >(), wxS("NTTP are incomplete without float, double, and long double!") >  >() },
    { "p1714r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1830")) >(), wxS("NTTP are incomplete without float, double, and long double!") >  >() },
    { "p1715r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author400")) >(), wxS("Loosen restrictions on \"_t\" typedefs.") >  >() },
    { "p1715r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2170")) >(), wxS("Loosen restrictions on \"_t\" typedefs.") >  >() },
    { "p1716r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("ranges compare algorithm are over-constrained") >  >() },
    { "p1716r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("ranges compare algorithm are over-constrained") >  >() },
    { "p1716r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("ranges compare algorithm are over-constrained") >  >() },
    { "p1716r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("ranges compare algorithm are over-constrained") >  >() },
    { "p1717r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Title750") >  >() },
    { "p1718r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1011")) >(), wxS("Mandating the Standard Library: Clause 25") >  >() },
    { "p1718r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author334")) >(), wxS("Mandating the Standard Library: Clause 25") >  >() },
    { "p1718r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1979")) >(), wxS("Mandating the Standard Library: Clause 25") >  >() },
    { "p1719r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1173")) >(), wxS("Mandating the Standard Library: Clause 26") >  >() },
    { "p1719r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2171")) >(), wxS("Mandating the Standard Library: Clause 26") >  >() },
    { "p1719r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author32")) >(), wxS("Mandating the Standard Library: Clause 26") >  >() },
    { "p1720r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1108")) >(), wxS("Mandating the Standard Library: Clause 28") >  >() },
    { "p1720r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author356")) >(), wxS("Mandating the Standard Library: Clause 28") >  >() },
    { "p1720r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author79")) >(), wxS("Mandating the Standard Library: Clause 28") >  >() },
    { "p1721r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1687")) >(), wxS("Mandating the Standard Library: Clause 29") >  >() },
    { "p1721r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2120")) >(), wxS("Mandating the Standard Library: Clause 29") >  >() },
    { "p1721r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author202")) >(), wxS("Mandating the Standard Library: Clause 29") >  >() },
    { "p1722r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author440")) >(), wxS("Mandating the Standard Library: Clause 25") >  >() },
    { "p1722r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author92")) >(), wxS("Mandating the Standard Library: Clause 30") >  >() },
    { "p1722r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2193")) >(), wxS("Mandating the Standard Library: Clause 30") >  >() },
    { "p1723r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1787")) >(), wxS("Mandating the Standard Library: Clause 25") >  >() },
    { "p1723r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author128")) >(), wxS("Mandating the Standard Library: Clause 31") >  >() },
    { "p1723r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author386")) >(), wxS("Mandating the Standard Library: Clause 31") >  >() },
    { "p1724r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1327")) >(), wxS("C++ Standard Library Issues to be moved in Cologne") >  >() },
    { "p1725r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Modular Topic Design") >  >() },
    { "p1725r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Modular Topic Design") >  >() },
    { "p1726r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1044")) >(), wxS("Title836") >  >() },
    { "p1726r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1771")) >(), wxS("Title1377") >  >() },
    { "p1726r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author714")) >(), wxS("Title576") >  >() },
    { "p1726r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1624")) >(), wxS("Title1258") >  >() },
    { "p1726r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author305")) >(), wxS("Title259") >  >() },
    { "p1726r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Paul E")) >(), wxS("P1726R5 Pointer lifetime-end zap") >  >() },
    { "p1727r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Denis Yaroshevskiy")) >(), wxS("Issues with current flat_map proposal") >  >() },
    { "p1728r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrzej Krzemie\u0144ski")) >(), wxS("contracts_explained") >  >() },
    { "p1729r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Parsing") >  >() },
    { "p1729r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Text Parsing") >  >() },
    { "p1729r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Text Parsing") >  >() },
    { "p1729r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Text Parsing") >  >() },
    { "p1729r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Text Parsing") >  >() },
    { "p1729r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Text Parsing") >  >() },
    { "p1730r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author849")) >(), wxS("Title668") >  >() },
    { "p1731r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Microsoft Word - P1731R0_memory_helpers.docx") >  >() },
    { "p1731r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Title1390") >  >() },
    { "p1732r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author48")) >(), wxS("Title51") >  >() },
    { "p1732r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author210")) >(), wxS("Title174") >  >() },
    { "p1732r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1211")) >(), wxS("Title950") >  >() },
    { "p1732r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author27")) >(), wxS("Title21") >  >() },
    { "p1732r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1215")) >(), wxS("Title952") >  >() },
    { "p1733r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("User-friendly and Evolution-friendly Reflection: A Compromise") >  >() },
    { "p1734r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author449")) >(), wxS("Title378") >  >() },
    { "p1735r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title682") >  >() },
    { "p1736r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title774") >  >() },
    { "p1737r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1614") >  >() },
    { "p1738r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("The Executor Concept Hierarchy Needs a Single Root") >  >() },
    { "p1739r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author390")) >(), wxS("Title333") >  >() },
    { "p1739r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author606")) >(), wxS("Title496") >  >() },
    { "p1739r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("Avoid template bloat for forwarding ranges in combination with subrange-y view adaptors.") >  >() },
    { "p1739r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("Avoid template bloat for safe_ranges in combination with subrange-y view adaptors.") >  >() },
    { "p1739r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("Avoid template bloat for s in combination with subrange-y view adaptors.") >  >() },
    { "p1743r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1382")) >(), wxS("Title1074") >  >() },
    { "p1744r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1593")) >(), wxS("Title1233") >  >() },
    { "p1745r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author254")) >(), wxS("Title214") >  >() },
    { "p1746r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Powell")) >(), wxS("Feedback on <a data-link-type=\"biblio\" href=\"#biblio-p1386r2\">[P1386R2]</a> std::audio") >  >() },
    { "p1746r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Powell")) >(), wxS("D1746R1: Feedback on <a data-link-type=\"biblio\" href=\"#biblio-p1386r2\">[P1386R2]</a> std::audio") >  >() },
    { "p1747r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Dont use `char8_t` and `std::u8string` yet in P1389") >  >() },
    { "p1748r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Fill in [delay.cpp] TODO in P1389") >  >() },
    { "p1748r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Fill in [delay.cpp] TODO in P1389") >  >() },
    { "p1749r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Access control for reflection") >  >() },
    { "p1750r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1697")) >(), wxS("D1750R0 A Proposal to Add Process Management to the C++ Standard Library") >  >() },
    { "p1750r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author503")) >(), wxS("P1750R1 A Proposal to Add Process Management to the C++ Standard Library") >  >() },
    { "p1751r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author973")) >(), wxS("p1751r0") >  >() },
    { "p1753r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author682")) >(), wxS("Name Lookup Should ``Find the First Thing of That Name''") >  >() },
    { "p1754r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1672") >  >() },
    { "p1754r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title310") >  >() },
    { "p1759r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handle from file streams") >  >() },
    { "p1759r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handle from file streams") >  >() },
    { "p1759r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handle from file streams") >  >() },
    { "p1759r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handles and file streams") >  >() },
    { "p1759r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handles and file streams") >  >() },
    { "p1759r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handles and file streams") >  >() },
    { "p1759r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Native handles and file streams") >  >() },
    { "p1760r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2160")) >(), wxS("Title1662") >  >() },
    { "p1761r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title156") >  >() },
    { "p1762r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title967") >  >() },
    { "p1764r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tony Van")) >(), wxS("Title543") >  >() },
    { "p1766r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Mitigating minor modules maladies") >  >() },
    { "p1766r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Mitigating minor modules maladies") >  >() },
    { "p1767r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Packaging C++ Modules") >  >() },
    { "p1768r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title97") >  >() },
    { "p1769r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2175")) >(), wxS("The \"default\" contract build-level and continuation-mode should be implementation-defined") >  >() },
    { "p1770r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author848")) >(), wxS("On vectors, tensors, matrices, and hypermatrices") >  >() },
    { "p1771r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author676")) >(), wxS("Title548") >  >() },
    { "p1771r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author399")) >(), wxS("Title340") >  >() },
    { "p1772r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author557")) >(), wxS("P1772R0") >  >() },
    { "p1772r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2211")) >(), wxS("P1772R1") >  >() },
    { "p1773r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author424")) >(), wxS("Title363") >  >() },
    { "p1774r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author707")) >(), wxS("Title570") >  >() },
    { "p1774r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author367")) >(), wxS("Title313") >  >() },
    { "p1774r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author853")) >(), wxS("Title672") >  >() },
    { "p1774r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author599")) >(), wxS("Title491") >  >() },
    { "p1774r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author2075")) >(), wxS("Title1607") >  >() },
    { "p1774r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author852")) >(), wxS("Title670") >  >() },
    { "p1774r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author2213")) >(), wxS("Title1693") >  >() },
    { "p1774r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author110")) >(), wxS("Title98") >  >() },
    { "p1774r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author907")) >(), wxS("Title733") >  >() },
    { "p1779r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1366")) >(), wxS("ABI isolation for member functions") >  >() },
    { "p1779r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author882")) >(), wxS("ABI isolation for member functions") >  >() },
    { "p1779r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1262")) >(), wxS("ABI isolation for member functions") >  >() },
    { "p1779r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1723")) >(), wxS("ABI isolation for member functions") >  >() },
    { "p1780r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Batty")) >(), wxS("D1780R0: Modular Relaxed Dependencies: A new approach to the Out-Of-Thin-Air Problem") >  >() },
    { "p1782r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author382")) >(), wxS("Local contract restrictions") >  >() },
    { "p1782r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author290")) >(), wxS("Local contract restrictions") >  >() },
    { "p1786r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1612")) >(), wxS("Title1247") >  >() },
    { "p1787r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1695")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1787r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1922")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1787r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author430")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1787r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1005")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1787r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author394")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1787r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author194")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1787r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1556")) >(), wxS("Declarations and where to find them") >  >() },
    { "p1788r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1578")) >(), wxS("Title1223") >  >() },
    { "p1788r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1393")) >(), wxS("Title1082") >  >() },
    { "p1788r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author776")) >(), wxS("Title633") >  >() },
    { "p1789r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author328")) >(), wxS("Library Support for Expansion Statements") >  >() },
    { "p1789r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Library Support for Expansion Statements") >  >() },
    { "p1790r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to enable better DynamicBuffer composition") >  >() },
    { "p1790r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to enable better DynamicBuffer composition") >  >() },
    { "p1791r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Evolution of the P0443 Unified Executors Proposal to accommodate new requirements") >  >() },
    { "p1792r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Simplifying and generalising Sender/Receiver for asynchronous operations") >  >() },
    { "p1793r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author965")) >(), wxS("Proposal Template") >  >() },
    { "p1795r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("p1795r0.html") >  >() },
    { "p1795r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("d1795r1.html") >  >() },
    { "p1795r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title243") >  >() },
    { "p1796r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author660")) >(), wxS("Effective types: examples (P1796R0)") >  >() },
    { "p1797r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author765")) >(), wxS("C/C++ Memory Object Model Papers - Introduction (P1797R0)") >  >() },
    { "p1798r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title986") >  >() },
    { "p1801r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1241") >  >() },
    { "p1803r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("packexpr(args, I) -- compile-time friendly pack inspection") >  >() },
    { "p1807r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title38") >  >() },
    { "p1808r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Contra P0339 \"`polymorphic_allocator<>` as a vocabulary type\"") >  >() },
    { "p1810r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("A Quick Look at What P1754 Will Change") >  >() },
    { "p1811r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Relaxing redefinition restrictions for re-exportation robustness") >  >() },
    { "p1812r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1535")) >(), wxS("Title1190") >  >() },
    { "p1813r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1715")) >(), wxS("A Concept Design for the Numeric Algorithms") >  >() },
    { "p1814r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author336")) >(), wxS("Wording for Class Template Argument Deduction for Alias Templates") >  >() },
    { "p1815r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author763")) >(), wxS("Translation-unit-local entities") >  >() },
    { "p1815r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1027")) >(), wxS("Translation-unit-local entities") >  >() },
    { "p1815r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author178")) >(), wxS("Translation-unit-local entities") >  >() },
    { "p1816r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author980")) >(), wxS("Title791") >  >() },
    { "p1818r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Narrowing and Widening Conversions") >  >() },
    { "p1818r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("Narrowing and Widening Conversions") >  >() },
    { "p1819r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author173")) >(), wxS("Untitled") >  >() },
    { "p1820r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("p1820r0.html") >  >() },
    { "p1823r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1816")) >(), wxS("d1823r0") >  >() },
    { "p1825r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title314") >  >() },
    { "p1830r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("Title514") >  >() },
    { "p1830r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("Title1575") >  >() },
    { "p1831r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>: library") >  >() },
    { "p1831r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Deprecating <code>volatile</code>: library") >  >() },
    { "p1832r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1587")) >(), wxS("p1832r0") >  >() },
    { "p1837r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Remove NTTPs of class type from C++20") >  >() },
    { "p1838r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Title1479") >  >() },
    { "p1839r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Accessing Object Representations") >  >() },
    { "p1839r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Accessing Object Representations") >  >() },
    { "p1839r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Accessing Object Representations") >  >() },
    { "p1839r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Accessing Object Representations") >  >() },
    { "p1839r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Accessing Object Representations") >  >() },
    { "p1839r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1396")) >(), wxS("Title1087") >  >() },
    { "p1839r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Timur Doumler")) >(), wxS("Accessing object representations") >  >() },
    { "p1839r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Timur Doumler")) >(), wxS("Accessing object representations") >  >() },
    { "p1840r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2106")) >(), wxS("Rod-Cologne") >  >() },
    { "p1841r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author186")) >(), wxS("Wording for Individually Specializable Numeric Traits") >  >() },
    { "p1841r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1442")) >(), wxS("Wording for Individually Specializable Numeric Traits") >  >() },
    { "p1841r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author497")) >(), wxS("Wording for Individually Specializable Numeric Traits") >  >() },
    { "p1841r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1975")) >(), wxS("Wording for Individually Specializable Numeric Traits") >  >() },
    { "p1842r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1598")) >(), wxS("Generalized Module (Dependency?) Mapper") >  >() },
    { "p1843r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1526")) >(), wxS("comparison and hasher requirements") >  >() },
    { "p1844r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author240")) >(), wxS("Enhancement of regex") >  >() },
    { "p1844r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1567")) >(), wxS("Enhancement of regex") >  >() },
    { "p1845r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2019-09-21 Denver Tooling Meeting") >  >() },
    { "p1846r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1008")) >(), wxS("p1846r0") >  >() },
    { "p1847r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - P1847R0.doc") >  >() },
    { "p1847r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - P1847R1.doc") >  >() },
    { "p1847r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - P1847R2.doc") >  >() },
    { "p1847r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - P1847R3.doc") >  >() },
    { "p1847r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - P1847R4.doc") >  >() },
    { "p1848r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - P1848R0.doc") >  >() },
    { "p1851r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("Guidelines For snake_case Concept Naming") >  >() },
    { "p1854r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1443") >  >() },
    { "p1854r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title869") >  >() },
    { "p1854r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title602") >  >() },
    { "p1854r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title58") >  >() },
    { "p1854r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1131") >  >() },
    { "p1855r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0Ben Craig")) >(), wxS("Make <compare> freestanding") >  >() },
    { "p1856r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1458")) >(), wxS("P1856R0") >  >() },
    { "p1857r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("<code>remove.dots.in.module.names</code>") >  >() },
    { "p1857r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Modules Dependency Discovery") >  >() },
    { "p1857r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Modules Dependency Discovery") >  >() },
    { "p1857r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Modules Dependency Discovery") >  >() },
    { "p1858r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Generalized pack declaration and usage") >  >() },
    { "p1858r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Generalized pack declaration and usage") >  >() },
    { "p1858r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Generalized pack declaration and usage") >  >() },
    { "p1859r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Standard terminology character sets and encodings") >  >() },
    { "p1860r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("C++ Networking Must Be Secure By Default") >  >() },
    { "p1861r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("D1861R0: Secure Connections in Networking TS") >  >() },
    { "p1861r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("Secure Networking in C++") >  >() },
    { "p1862r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title301") >  >() },
    { "p1862r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1344") >  >() },
    { "p1863r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1285")) >(), wxS("Title996") >  >() },
    { "p1863r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1884")) >(), wxS("Title1461") >  >() },
    { "p1864r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Defining Target Tuplets") >  >() },
    { "p1865r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Add max() to latch and barrier") >  >() },
    { "p1865r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Add max() to latch and barrier") >  >() },
    { "p1868r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("width: clarifying units of width and precision in std::format") >  >() },
    { "p1868r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("width: clarifying units of width and precision in std::format") >  >() },
    { "p1868r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("width: clarifying units of width and precision in std::format") >  >() },
    { "p1869r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Rename 'condition_variable_any' interruptible wait methods") >  >() },
    { "p1869r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Rename 'condition_variable_any' interruptible wait methods") >  >() },
    { "p1870r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("forwarding-range<T> is too subtle") >  >() },
    { "p1870r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("forwarding-range<T> is too subtle") >  >() },
    { "p1871r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Should concepts be enabled or disabled?") >  >() },
    { "p1871r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Concept traits should be named after concepts") >  >() },
    { "p1872r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1486") >  >() },
    { "p1873r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("<code>remove.dots.in.module.names</code>") >  >() },
    { "p1873r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("<code>remove.dots.in.module.names</code>") >  >() },
    { "p1874r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Dynamic Initialization Order of Non-Local Variables in Modules") >  >() },
    { "p1874r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Dynamic Initialization Order of Non-Local Variables in Modules") >  >() },
    { "p1875r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spear")) >(), wxS("Title1604") >  >() },
    { "p1875r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Spear")) >(), wxS("Title689") >  >() },
    { "p1875r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Spear")) >(), wxS("Title650") >  >() },
    { "p1876r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1530")) >(), wxS("All The Module Names") >  >() },
    { "p1876r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2087")) >(), wxS("All The Module Names") >  >() },
    { "p1877r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Saving Private Ranges: Recovering Lost Information from Comparison and Predicate Algorithms") >  >() },
    { "p1878r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Constraining Readable Types") >  >() },
    { "p1878r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Constraining Readable Types") >  >() },
    { "p1879r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Please Don't Rewrite My String Literals") >  >() },
    { "p1880r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("uNstring Arguments Shall Be UTF-N Encoded") >  >() },
    { "p1881r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("Epochs: a backward-compatible language evolution mechanism") >  >() },
    { "p1881r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("Epochs: a backward-compatible language evolution mechanism") >  >() },
    { "p1882r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Noel Tchidjo")) >(), wxS("Title604") >  >() },
    { "p1883r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title942") >  >() },
    { "p1883r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title797") >  >() },
    { "p1883r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title1574") >  >() },
    { "p1884r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1463")) >(), wxS("Private Module Fragment: An Inconsistent Boundary") >  >() },
    { "p1885r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title849") >  >() },
    { "p1885r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1206") >  >() },
    { "p1885r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title437") >  >() },
    { "p1885r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title209") >  >() },
    { "p1885r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title558") >  >() },
    { "p1885r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1590") >  >() },
    { "p1885r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title965") >  >() },
    { "p1885r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1044") >  >() },
    { "p1885r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title794") >  >() },
    { "p1885r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1289") >  >() },
    { "p1885r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1239") >  >() },
    { "p1885r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title694") >  >() },
    { "p1885r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1410") >  >() },
    { "p1886r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Error speed benchmarking") >  >() },
    { "p1887r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title169") >  >() },
    { "p1887r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1372") >  >() },
    { "p1888r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matti Rintala")) >(), wxS("Title1160") >  >() },
    { "p1889r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1428")) >(), wxS("C++ Numerics Work In Progress") >  >() },
    { "p1889r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author97")) >(), wxS("C++ Numerics Work In Progress") >  >() },
    { "p1890r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1109")) >(), wxS("C++ Numerics Work In Progress Issues") >  >() },
    { "p1891r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("Title53") >  >() },
    { "p1892r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author374")) >(), wxS("Title317") >  >() },
    { "p1892r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2229")) >(), wxS("Title1706") >  >() },
    { "p1893r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1053") >  >() },
    { "p1894r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1688") >  >() },
    { "p1895r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author689")) >(), wxS("Title555") >  >() },
    { "p1896r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2019/06/12 - 2019/09/25") >  >() },
    { "p1897r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Towards C++23 executors: A proposal for an initial set of algorithms") >  >() },
    { "p1897r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Towards C++23 executors: A proposal for an initial set of algorithms") >  >() },
    { "p1897r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Towards C++23 executors: A proposal for an initial set of algorithms") >  >() },
    { "p1897r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Towards C++23 executors: A proposal for an initial set of algorithms") >  >() },
    { "p1898r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Forward progress delegation for executors") >  >() },
    { "p1898r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Forward progress delegation for executors") >  >() },
    { "p1899r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1678")) >(), wxS("strideview") >  >() },
    { "p1899r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`stride_view`") >  >() },
    { "p1899r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("stride_view") >  >() },
    { "p1899r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("stride_view") >  >() },
    { "p1900r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Concepts-Adjacent Problems") >  >() },
    { "p1901r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daryl Haresign")) >(), wxS("P1901R0 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers") >  >() },
    { "p1901r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daryl Haresign")) >(), wxS("P1901R1 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers") >  >() },
    { "p1901r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daryl Haresign")) >(), wxS("P1901R2 Enabling the Use of weak_ptr as Keys in Unordered Associative Containers") >  >() },
    { "p1902r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Missing feature-test macros 2018-2019") >  >() },
    { "p1902r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Missing feature-test macros 2017-2019") >  >() },
    { "p1905r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title999") >  >() },
    { "p1906r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1571")) >(), wxS("Title1219") >  >() },
    { "p1907r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author475")) >(), wxS("Inconsistencies with non-type template parameters") >  >() },
    { "p1907r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1293")) >(), wxS("Inconsistencies with non-type template parameters") >  >() },
    { "p1908r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title379") >  >() },
    { "p1908r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1583") >  >() },
    { "p1908r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1180") >  >() },
    { "p1909r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1149") >  >() },
    { "p1910r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1442") >  >() },
    { "p1911r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1189") >  >() },
    { "p1912r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author873")) >(), wxS("Title700") >  >() },
    { "p1912r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author340")) >(), wxS("Title286") >  >() },
    { "p1913r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author140")) >(), wxS("Comments on Audio Devices") >  >() },
    { "p1914r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1510")) >(), wxS("P1914R0") >  >() },
    { "p1915r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Expected Feedback from simd in the Parallelism TS 2 [P1915R0]") >  >() },
    { "p1916r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Title106") >  >() },
    { "p1917r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1706")) >(), wxS("C++ Standard Library Issues to be moved in Belfast") >  >() },
    { "p1919r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title255") >  >() },
    { "p1919r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title396") >  >() },
    { "p1919r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title554") >  >() },
    { "p1919r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1335") >  >() },
    { "p1920r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Title1259") >  >() },
    { "p1921r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title508") >  >() },
    { "p1922r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title908") >  >() },
    { "p1923r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title853") >  >() },
    { "p1924r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title801") >  >() },
    { "p1925r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title551") >  >() },
    { "p1926r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title1668") >  >() },
    { "p1927r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title244") >  >() },
    { "p1928r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Merge data-parallel types from the Parallelism TS 2 [P1928R0]") >  >() },
    { "p1928r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Merge data-parallel types from the Parallelism TS 2 [P1928R1]") >  >() },
    { "p1928r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Merge data-parallel types from the Parallelism TS 2 [P1928R2]") >  >() },
    { "p1928r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Merge data-parallel types from the Parallelism TS 2 [P1928R3]") >  >() },
    { "p1928r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R4]") >  >() },
    { "p1928r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R5]") >  >() },
    { "p1928r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R6]") >  >() },
    { "p1928r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R7]") >  >() },
    { "p1928r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R8]") >  >() },
    { "p1928r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R9]") >  >() },
    { "p1928r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R10]") >  >() },
    { "p1928r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R11]") >  >() },
    { "p1928r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R12]") >  >() },
    { "p1928r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R13]") >  >() },
    { "p1928r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R14]") >  >() },
    { "p1928r15" , RevList< Rev< 15u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd merge data-parallel types from the Parallelism TS 2 [P1928R15]") >  >() },
    { "p1929r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexander Zaitsev")) >(), wxS("Title307") >  >() },
    { "p1930r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author807")) >(), wxS("Title648") >  >() },
    { "p1932r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pavel Dyakov")) >(), wxS("Title711") >  >() },
    { "p1933r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1662")) >(), wxS("Suggestions for bulk_execute | P1933") >  >() },
    { "p1934r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Amazing Stuff") >  >() },
    { "p1935r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("A C++ Approach to Physical Units") >  >() },
    { "p1935r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("A C++ Approach to Physical Units") >  >() },
    { "p1935r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("A C++ Approach to Physical Units") >  >() },
    { "p1936r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("Title1294") >  >() },
    { "p1937r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Fixing inconsistencies between `constexpr` and `consteval` functions") >  >() },
    { "p1937r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Stone")) >(), wxS("Fixing inconsistencies between `constexpr` and `consteval` functions") >  >() },
    { "p1937r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Stone")) >(), wxS("Fixing inconsistencies between `constexpr` and `consteval` functions") >  >() },
    { "p1938r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("if consteval") >  >() },
    { "p1938r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("if-consteval") >  >() },
    { "p1938r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`if consteval`") >  >() },
    { "p1938r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`if consteval`") >  >() },
    { "p1943r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("Networking TS changes to improve completion token flexibility and performance") >  >() },
    { "p1944r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1088")) >(), wxS("Title875") >  >() },
    { "p1944r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author677")) >(), wxS("Title549") >  >() },
    { "p1945r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Making More Objects Contiguous") >  >() },
    { "p1946r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Allow defaulting comparisons by value") >  >() },
    { "p1947r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2121")) >(), wxS("Title1640") >  >() },
    { "p1948r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author236")) >(), wxS("Title195") >  >() },
    { "p1949r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1949r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("C++ Identifier Syntax using Unicode Standard Annex 31") >  >() },
    { "p1950r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan B")) >(), wxS("<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++") >  >() },
    { "p1950r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jonathan B")) >(), wxS("<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++") >  >() },
    { "p1950r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jonathan B")) >(), wxS("<code>indirect_value</code>: A Free-Store-Allocated Value Type For C++") >  >() },
    { "p1951r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Logan R")) >(), wxS("Default Arguments for pair's Forwarding Constructor") >  >() },
    { "p1951r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Logan R")) >(), wxS("Default Arguments for pair's Forwarding Constructor") >  >() },
    { "p1953r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author997")) >(), wxS("Title806") >  >() },
    { "p1955r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1802")) >(), wxS("Top Level Is Constant Evaluated") >  >() },
    { "p1955r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author428")) >(), wxS("Top Level Is Constant Evaluated") >  >() },
    { "p1956r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1282")) >(), wxS("P1956R0") >  >() },
    { "p1956r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author921")) >(), wxS("P1956R1") >  >() },
    { "p1957r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Converting from T* to bool should be considered narrowing (re: US 212) - HackMD") >  >() },
    { "p1957r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Converting from T* to bool should be considered narrowing (re: US 212) - HackMD") >  >() },
    { "p1957r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Converting from T* to bool should be considered narrowing (re: US 212) - HackMD") >  >() },
    { "p1958r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lawrence Crowl")) >(), wxS("C++ Concurrent Buffer Queue") >  >() },
    { "p1959r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Remove std::weak_equality and std::strong_equality") >  >() },
    { "p1960r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("NB Comment Changes Reviewed by SG1") >  >() },
    { "p1961r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Harmonizing the definitions of total order for pointers") >  >() },
    { "p1962r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1971")) >(), wxS("Title1533") >  >() },
    { "p1963r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author49")) >(), wxS("P1963R0 Fixing US 313") >  >() },
    { "p1964r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Casting convertible_to<bool> considered harmful") >  >() },
    { "p1964r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Wording for boolean-testable") >  >() },
    { "p1964r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Wording for boolean-testable") >  >() },
    { "p1965r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1805")) >(), wxS("Blanket Wording for Specifying ``Hidden Friends''") >  >() },
    { "p1967r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1700")) >(), wxS("Preprocessor embed") >  >() },
    { "p1967r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author433")) >(), wxS("Preprocessor embed - Binary Resource Inclusion") >  >() },
    { "p1967r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author295")) >(), wxS("Preprocessor embed - Binary Resource Inclusion") >  >() },
    { "p1967r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author680")) >(), wxS("Preprocessor embed - Binary Resource Inclusion | r4") >  >() },
    { "p1967r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r5" , RevList< Rev< 5u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r6" , RevList< Rev< 6u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r7" , RevList< Rev< 7u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r8" , RevList< Rev< 8u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r9" , RevList< Rev< 9u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r10" , RevList< Rev< 10u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r11" , RevList< Rev< 11u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r12" , RevList< Rev< 12u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r13" , RevList< Rev< 13u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1967r14" , RevList< Rev< 14u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed - a scannable, tooling-friendly binary resource inclusion mechanism") >  >() },
    { "p1968r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2230")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p1969r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author266")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p1970r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("Consistency for size() functions") >  >() },
    { "p1970r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("Consistency for size() functions") >  >() },
    { "p1970r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("Consistency for size() functions: Add ranges::ssize") >  >() },
    { "p1971r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1383")) >(), wxS("Core NB Comment Resolutions") >  >() },
    { "p1972r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author175")) >(), wxS("US105 Check satisfaction of constraints for non-templates when forming pointer to function") >  >() },
    { "p1973r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2145")) >(), wxS("Rename _default_init Functions") >  >() },
    { "p1973r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author528")) >(), wxS("Rename _default_init Functions") >  >() },
    { "p1974r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeff Snyder")) >(), wxS("Non-transient constexpr allocation using") >  >() },
    { "p1975r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1568")) >(), wxS("Fixing the wording of parenthesized aggregate-initialization") >  >() },
    { "p1976r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Fixed-size 'span' construction from dynamic-size range") >  >() },
    { "p1976r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Fixed-size 'span' construction from dynamic-size range") >  >() },
    { "p1976r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Fixed-size 'span' construction from dynamic-size range") >  >() },
    { "p1978r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Rename `_default_init` functions and do nothing more") >  >() },
    { "p1979r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mathias Stearn")) >(), wxS("Title87") >  >() },
    { "p1980r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jason Merrill")) >(), wxS("Drafting for CA096: Declaration matching for non-dependent requires-clauses") >  >() },
    { "p1981r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1466")) >(), wxS("Rename leap to leap_second") >  >() },
    { "p1982r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author362")) >(), wxS("Rename link to time_zone_link") >  >() },
    { "p1983r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Wording for GB301, US296, US292, US291, and US283") >  >() },
    { "p1985r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Universal Template Parameters") >  >() },
    { "p1985r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Universal Template Parameters") >  >() },
    { "p1985r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Universal Template Parameters") >  >() },
    { "p1988r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Allow Templates in Local Classes") >  >() },
    { "p1988r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Allow Templates in Local Classes") >  >() },
    { "p1989r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title138") >  >() },
    { "p1989r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title472") >  >() },
    { "p1989r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title161") >  >() },
    { "p1990r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author612")) >(), wxS("Title502") >  >() },
    { "p1990r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author628")) >(), wxS("Title510") >  >() },
    { "p1991r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1534")) >(), wxS("Rod-Belfast-P1991") >  >() },
    { "p1993r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1276")) >(), wxS("Restore factories to bulk_execute | P1993R0") >  >() },
    { "p1993r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1296")) >(), wxS("Restore shared state to bulk_execute | P1993R1") >  >() },
    { "p1994r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("elements_view needs its own sentinel") >  >() },
    { "p1994r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("elements_view needs its own sentinel") >  >() },
    { "p1995r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("P1995R0 Contract Use Cases") >  >() },
    { "p1995r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("P1995R1 Contract Use Cases") >  >() },
    { "p1996r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dmitry Sokolov")) >(), wxS("Title1555") >  >() },
    { "p1997r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Relaxing Restrictions on Arrays") >  >() },
    { "p1997r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Krystian Stasiowski")) >(), wxS("Relaxing Restrictions on Arrays") >  >() },
    { "p1998r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Title616") >  >() },
    { "p1998r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Title1224") >  >() },
    { "p1999r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1690")) >(), wxS("Process proposal: double-check evolutionary material via a Tentatively Ready status") >  >() },
    { "p2000r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1251")) >(), wxS("Title971") >  >() },
    { "p2000r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2100")) >(), wxS("Title1627") >  >() },
    { "p2000r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author281")) >(), wxS("Title232") >  >() },
    { "p2000r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1113")) >(), wxS("P2000r3: Direction for ISO C++") >  >() },
    { "p2000r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1336")) >(), wxS("P2000r4: Direction for ISO C++") >  >() },
    { "p2002r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1889")) >(), wxS("Defaulted comparison specification fixes") >  >() },
    { "p2002r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author549")) >(), wxS("Defaulted comparison specification fixes") >  >() },
    { "p2003r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Fixing Internal and External Linkage Entities in Header Units") >  >() },
    { "p2004r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1100")) >(), wxS("Numbers and their Scopes") >  >() },
    { "p2005r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Berrow")) >(), wxS("2D Graphics: A Brief Review") >  >() },
    { "p2006r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author487")) >(), wxS("Title407") >  >() },
    { "p2006r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Eliminating heap-allocations in sender/receiver with connect()/start() as basis operations") >  >() },
    { "p2007r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("std::from_chars should work with std::string_view") >  >() },
    { "p2008r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Enable variable template template parameters") >  >() },
    { "p2009r0" , RevList< Rev< 0u, Arr64< Hash(wxS("The proposal")) >(), wxS("SG16: Unicode meeting summaries 2019-10-09 through 2019-12-11") >  >() },
    { "p2010r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1956")) >(), wxS("Markdown To PDF") >  >() },
    { "p2011r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Colby Pike")) >(), wxS("A pipeline-rewrite operator") >  >() },
    { "p2011r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Colby Pike")) >(), wxS("A pipeline-rewrite operator") >  >() },
    { "p2012r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1707")) >(), wxS("P2012R0") >  >() },
    { "p2012r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1440")) >(), wxS("Fix the rangebased for loop, Rev1") >  >() },
    { "p2012r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author357")) >(), wxS("Fix the range-based for loop, Rev 2") >  >() },
    { "p2013r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Language: Optional <code>::operator new</code>") >  >() },
    { "p2013r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Language: Optional <code>::operator new</code>") >  >() },
    { "p2013r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Language: Optional <code>::operator new</code>") >  >() },
    { "p2013r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Language: Optional <code>::operator new</code>") >  >() },
    { "p2013r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Language: Optional <code>::operator new</code>") >  >() },
    { "p2013r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Language: Optional <code>::operator new</code>") >  >() },
    { "p2014r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1351")) >(), wxS("Title1046") >  >() },
    { "p2014r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1747")) >(), wxS("Title1354") >  >() },
    { "p2014r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1295")) >(), wxS("Proposed resolution for US061+US063 - aligned allocation of coroutine frames") >  >() },
    { "p2016r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title603") >  >() },
    { "p2017r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Conditionally safe ranges") >  >() },
    { "p2017r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Conditionally borrowed ranges") >  >() },
    { "p2019r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1484") >  >() },
    { "p2019r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title974") >  >() },
    { "p2019r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1568") >  >() },
    { "p2019r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title843") >  >() },
    { "p2019r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1154") >  >() },
    { "p2019r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1529") >  >() },
    { "p2019r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title958") >  >() },
    { "p2019r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title749") >  >() },
    { "p2019r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1215") >  >() },
    { "p2020r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title308") >  >() },
    { "p2021r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Negative zero strikes again") >  >() },
    { "p2022r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("Rangified version of lexicographical_compare_three_way") >  >() },
    { "p2022r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("Rangified version of lexicographical_compare_three_way") >  >() },
    { "p2022r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("Rangified version of lexicographical_compare_three_way") >  >() },
    { "p2022r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alex Dathskovsky")) >(), wxS("P2022R3 - Rangified version of lexicographical_compare_three_way") >  >() },
    { "p2024r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Bloomberg Analysis of Unified Executors") >  >() },
    { "p2025r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anton Zhilin")) >(), wxS("Guaranteed copy elision for named return objects") >  >() },
    { "p2025r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Anton Zhilin")) >(), wxS("Guaranteed copy elision for return variables") >  >() },
    { "p2025r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Anton Zhilin")) >(), wxS("Guaranteed copy elision for return variables") >  >() },
    { "p2026r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Title789") >  >() },
    { "p2027r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1266")) >(), wxS("Title980") >  >() },
    { "p2028r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author575")) >(), wxS("Title465") >  >() },
    { "p2029r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals") >  >() },
    { "p2029r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals") >  >() },
    { "p2029r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals") >  >() },
    { "p2029r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals") >  >() },
    { "p2029r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Proposed resolution for core issues 411, 1656, and 2333; numeric and universalcharacter escapes in character and string literals") >  >() },
    { "p2030r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1395") >  >() },
    { "p2031r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1683") >  >() },
    { "p2032r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("P2032R0 Contract Use Cases") >  >() },
    { "p2033r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author411")) >(), wxS("Title352") >  >() },
    { "p2034r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Title418") >  >() },
    { "p2034r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Title337") >  >() },
    { "p2034r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Title990") >  >() },
    { "p2034r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Partially Mutable Lambda Captures") >  >() },
    { "p2034r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ryan McDougall")) >(), wxS("Partially Mutable Lambda Captures") >  >() },
    { "p2035r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author219")) >(), wxS("Microsoft Word - AP0_value_prop.docx") >  >() },
    { "p2036r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Change scope of lambda trailing-return-type") >  >() },
    { "p2036r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Change scope of lambda *trailing-return-type*") >  >() },
    { "p2036r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Change scope of lambda *trailing-return-type*") >  >() },
    { "p2036r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Change scope of lambda trailing-return-type") >  >() },
    { "p2037r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("P2037R0 String's gratuitous assignment") >  >() },
    { "p2037r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("P2037R1 String's gratuitous assignment") >  >() },
    { "p2038r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("P2038R0 Proposed nomenclature for contract-related proposals") >  >() },
    { "p2039r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Menashe Rosemberg")) >(), wxS("Title934") >  >() },
    { "p2040r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title424") >  >() },
    { "p2041r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Deleting variable templates") >  >() },
    { "p2041r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title647") >  >() },
    { "p2042r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("P2042R0 Alternate names for make_shared_default_init") >  >() },
    { "p2043r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Sankel")) >(), wxS("Don't constexpr All The Things") >  >() },
    { "p2044r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title503") >  >() },
    { "p2044r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title955") >  >() },
    { "p2044r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title152") >  >() },
    { "p2045r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author844")) >(), wxS("Missing Mandates for the standard library") >  >() },
    { "p2045r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author85")) >(), wxS("Missing Mandates for the standard library") >  >() },
    { "p2046r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dan Raviv")) >(), wxS("P1243R3 - Rangify New Algorithms") >  >() },
    { "p2047r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author727")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author624")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author306")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1897")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author2118")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1887")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1718")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2047r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author604")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p2048r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Vittorio Romeo")) >(), wxS("Prohibit zero and NULL from being used as null pointer literals") >  >() },
    { "p2049r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Title292") >  >() },
    { "p2050r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Sutton")) >(), wxS("Title721") >  >() },
    { "p2051r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author369")) >(), wxS("C++ Standard Library Issues to be moved in Prague") >  >() },
    { "p2052r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title678") >  >() },
    { "p2053r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1455")) >(), wxS("Title1134") >  >() },
    { "p2053r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2067")) >(), wxS("Title1601") >  >() },
    { "p2054r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author258")) >(), wxS("Title215") >  >() },
    { "p2054r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author142")) >(), wxS("Title122") >  >() },
    { "p2055r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1118")) >(), wxS("Title892") >  >() },
    { "p2057r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title274") >  >() },
    { "p2058r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Martin HoYeHovsk")) >(), wxS("Title110") >  >() },
    { "p2059r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Martin HoYeHovsk")) >(), wxS("Title456") >  >() },
    { "p2060r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Martin HoYeHovsk")) >(), wxS("Title1130") >  >() },
    { "p2061r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author467")) >(), wxS("Title391") >  >() },
    { "p2062r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Title834") >  >() },
    { "p2064r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1577") >  >() },
    { "p2065r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("naming and aliases") >  >() },
    { "p2066r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael L")) >(), wxS("Suggested draft TS for C++ Extensions for Transaction Memory Light") >  >() },
    { "p2066r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2066r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Suggested draft TS for C++ Extensions for Minimal Transactional Memory") >  >() },
    { "p2067r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title817") >  >() },
    { "p2068r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title207") >  >() },
    { "p2069r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title815") >  >() },
    { "p2070r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Title727") >  >() },
    { "p2071r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Named universal character escapes") >  >() },
    { "p2071r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Named universal character escapes") >  >() },
    { "p2071r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Named universal character escapes") >  >() },
    { "p2072r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marco Foco")) >(), wxS("Title191") >  >() },
    { "p2072r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Marco Foco")) >(), wxS("Title353") >  >() },
    { "p2073r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author30")) >(), wxS("Title24") >  >() },
    { "p2074r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author640")) >(), wxS("Title522") >  >() },
    { "p2075r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pavel Dyakov")) >(), wxS("Title941") >  >() },
    { "p2075r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pavel Dyakov")) >(), wxS("Title917") >  >() },
    { "p2075r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Pavel Dyakov")) >(), wxS("P2075R2.docx") >  >() },
    { "p2075r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P2075R3.docx") >  >() },
    { "p2075r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P2075R4.docx") >  >() },
    { "p2075r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P2075R5.docx") >  >() },
    { "p2075r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("P2075R6.docx") >  >() },
    { "p2076r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1453")) >(), wxS("Previous disagreements on Contracts") >  >() },
    { "p2077r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Boyarinov, Konstantin")) >(), wxS("Title282") >  >() },
    { "p2077r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Heterogeneous erasure overloads for associative containers") >  >() },
    { "p2077r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Heterogeneous erasure overloads for associative containers") >  >() },
    { "p2077r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Heterogeneous erasure overloads for associative containers") >  >() },
    { "p2078r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bob Steagall")) >(), wxS("Add new traits type std::is_complex<T>") >  >() },
    { "p2079r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan")) >(), wxS("Title1330") >  >() },
    { "p2079r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("Parallel Executor") >  >() },
    { "p2079r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("System execution context") >  >() },
    { "p2079r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("System execution context") >  >() },
    { "p2079r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("System execution context") >  >() },
    { "p2079r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("System execution context") >  >() },
    { "p2079r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("System execution context") >  >() },
    { "p2079r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("Parallel scheduler") >  >() },
    { "p2080r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author410")) >(), wxS("Polymorphic allocators: There is no such thing as One True Vocabulary Type") >  >() },
    { "p2081r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1533")) >(), wxS("Rebase the Library Fundamentals v3 TS on C++20") >  >() },
    { "p2081r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author717")) >(), wxS("Rebase the Library Fundamentals v3 TS on C++20") >  >() },
    { "p2082r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author381")) >(), wxS("Title326") >  >() },
    { "p2082r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2097")) >(), wxS("Title1625") >  >() },
    { "p2085r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author914")) >(), wxS("Consistent defaulted comparisons") >  >() },
    { "p2087r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("Reflection Naming: fix reflexpr") >  >() },
    { "p2088r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("Reflection Naming: Reification") >  >() },
    { "p2089r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Function parameter constraints are fragile") >  >() },
    { "p2091r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Issues with range access CPOs") >  >() },
    { "p2092r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daveed Vandevoorde")) >(), wxS("Title373") >  >() },
    { "p2093r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2093r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatted output") >  >() },
    { "p2095r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Resolve lambda init-capture pack grammar (CWG2378)") >  >() },
    { "p2096r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Generalized wording for partial specializations") >  >() },
    { "p2096r1" , RevList< Rev< 1u, Arr64< Hash(wxS("James Touton")) >(), wxS("Generalized wording for partial specializations") >  >() },
    { "p2096r2" , RevList< Rev< 2u, Arr64< Hash(wxS("James Touton")) >(), wxS("Generalized wording for partial specializations") >  >() },
    { "p2098r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author437")) >(), wxS("Proposing std::isspecializationof") >  >() },
    { "p2098r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author517")) >(), wxS("Proposing std::isspecializationof") >  >() },
    { "p2100r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("D2100R0: Keep unhandled_exception of a promise type mandatory - a response to US062 and FR066") >  >() },
    { "p2101r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Models subsumes satisfies (Wording for US298 and US300)") >  >() },
    { "p2102r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Make implicit expression variations more explicit (Wording for US185)") >  >() },
    { "p2103r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1574")) >(), wxS("Core NB Comment Resolutions") >  >() },
    { "p2104r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author962")) >(), wxS("Resolution for GB046 - Disallow changing concept values") >  >() },
    { "p2106r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Alternative wording for GB315 and GB316") >  >() },
    { "p2107r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Core Issue 2436: US064 Copy semantics of coroutine parameters") >  >() },
    { "p2108r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author504")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2109r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author542")) >(), wxS("US084: Disallow \"export import foo\" outside of module interface") >  >() },
    { "p2113r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("Proposed resolution for 2019 comment CA 112") >  >() },
    { "p2114r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("P2114R0 Minimal Contract Use Cases") >  >() },
    { "p2115r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author585")) >(), wxS("US069: Merging of multiple definitionsfor unnamed unscoped enumerations") >  >() },
    { "p2116r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Remove tuple-like protocol support from fixed-extent span") >  >() },
    { "p2117r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1911")) >(), wxS("C++ Standard Library Issues Resolved Directly In Prague") >  >() },
    { "p2119r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jolanta Opara")) >(), wxS("Feedback on P1708: Simple Statistical Functions") >  >() },
    { "p2120r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Simplified structured bindings protocol with pack aliases") >  >() },
    { "p2123r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hal Finkel")) >(), wxS("Extending the Type System to Provide API and ABI Flexibility") >  >() },
    { "p2125r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Titus Winters")) >(), wxS("Title1562") >  >() },
    { "p2126r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author423")) >(), wxS("Microsoft Word - AP1_unleashing.docx") >  >() },
    { "p2127r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author610")) >(), wxS("Title501") >  >() },
    { "p2128r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title101") >  >() },
    { "p2128r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title519") >  >() },
    { "p2128r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title627") >  >() },
    { "p2128r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title664") >  >() },
    { "p2128r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title684") >  >() },
    { "p2128r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title1167") >  >() },
    { "p2128r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Title1525") >  >() },
    { "p2130r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1256")) >(), wxS("P2130-Rod-Prague") >  >() },
    { "p2131r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2089")) >(), wxS("Changes between C++17 and C++20") >  >() },
    { "p2133r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - incu.doc") >  >() },
    { "p2134r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Balog, Pal")) >(), wxS("Microsoft Word - kaizen.doc") >  >() },
    { "p2135r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2068")) >(), wxS("Title1603") >  >() },
    { "p2136r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("invoke<R> - HackMD") >  >() },
    { "p2136r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("invoke_r - HackMD") >  >() },
    { "p2136r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("invoke_r - HackMD") >  >() },
    { "p2136r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("invoke_r - HackMD") >  >() },
    { "p2137r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chandler Carruth")) >(), wxS("Goals and priorities for C++") >  >() },
    { "p2138r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author771")) >(), wxS("Rules of Design<=>Wording engagement") >  >() },
    { "p2138r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1990")) >(), wxS("Rules of Design<=>Wording engagement") >  >() },
    { "p2138r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author804")) >(), wxS("Rules of Design<=>Specification engagement") >  >() },
    { "p2138r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author425")) >(), wxS("Rules of Design<=>Specification engagement") >  >() },
    { "p2138r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author34")) >(), wxS("Rules of Design<=>Specification engagement") >  >() },
    { "p2139r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1329")) >(), wxS("Reviewing Deprecated Facilities of C++20 for C++23") >  >() },
    { "p2139r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1785")) >(), wxS("Reviewing Deprecated Facilities of C++20 for C++23") >  >() },
    { "p2139r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2132")) >(), wxS("Reviewing Deprecated Facilities of C++20 for C++23") >  >() },
    { "p2141r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author28")) >(), wxS("Aggregates are named tuples") >  >() },
    { "p2141r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2210")) >(), wxS("Aggregates are named tuples") >  >() },
    { "p2141r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author514")) >(), wxS("Aggregates are named tuples") >  >() },
    { "p2142r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author970")) >(), wxS("Markdown To PDF") >  >() },
    { "p2145r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Evolving C++ Remotely") >  >() },
    { "p2145r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Evolving C++ Remotely") >  >() },
    { "p2146r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Amanda Kornoushenko")) >(), wxS("Modern std::byte stream IO for C++") >  >() },
    { "p2146r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Amanda Kornoushenko")) >(), wxS("Modern std::byte stream IO for C++") >  >() },
    { "p2146r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Amanda Kornoushenko")) >(), wxS("Modern std::byte stream IO for C++") >  >() },
    { "p2148r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author453")) >(), wxS("Title381") >  >() },
    { "p2149r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title1097") >  >() },
    { "p2150r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author209")) >(), wxS("Down with typename in the Library!") >  >() },
    { "p2152r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Title160") >  >() },
    { "p2152r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Title1157") >  >() },
    { "p2155r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gordon Brown")) >(), wxS("Title238") >  >() },
    { "p2156r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Erich Keane")) >(), wxS("Title709") >  >() },
    { "p2156r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Erich Keane")) >(), wxS("Title754") >  >() },
    { "p2159r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0")) >(), wxS("Unbounded Decimal") >  >() },
    { "p2159r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0")) >(), wxS("P2159R1, A Big Decimal") >  >() },
    { "p2160r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Locks lock lockables") >  >() },
    { "p2160r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Locks lock lockables") >  >() },
    { "p2161r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title1679") >  >() },
    { "p2161r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title1016") >  >() },
    { "p2161r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Title254") >  >() },
    { "p2162r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Inheriting from std::variant") >  >() },
    { "p2162r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Inheriting from `std::variant`") >  >() },
    { "p2162r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Inheriting from `std::variant`") >  >() },
    { "p2163r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author659")) >(), wxS("nativetuple/draft2.md at master accelerated/nativetuple GitHub") >  >() },
    { "p2164r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title245") >  >() },
    { "p2164r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title534") >  >() },
    { "p2164r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1513") >  >() },
    { "p2164r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1563") >  >() },
    { "p2164r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1708") >  >() },
    { "p2164r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title495") >  >() },
    { "p2164r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title499") >  >() },
    { "p2164r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1043") >  >() },
    { "p2164r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1050") >  >() },
    { "p2164r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1199") >  >() },
    { "p2165r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title279") >  >() },
    { "p2165r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title893") >  >() },
    { "p2165r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title851") >  >() },
    { "p2165r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1402") >  >() },
    { "p2165r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title205") >  >() },
    { "p2166r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2161")) >(), wxS("Title1663") >  >() },
    { "p2166r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author960")) >(), wxS("Title779") >  >() },
    { "p2167r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Proposed wording for LWG 2114") >  >() },
    { "p2167r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)") >  >() },
    { "p2167r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)") >  >() },
    { "p2167r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Proposed wording for LWG 2114 (contextually convertible to <tt>bool</tt>)") >  >() },
    { "p2168r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Title1483") >  >() },
    { "p2168r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Title1181") >  >() },
    { "p2168r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Title383") >  >() },
    { "p2168r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Title172") >  >() },
    { "p2169r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1412") >  >() },
    { "p2169r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1039") >  >() },
    { "p2169r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title428") >  >() },
    { "p2169r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title322") >  >() },
    { "p2169r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title520") >  >() },
    { "p2170r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Charles Salvia")) >(), wxS("Feedback on designing the proposed `std::error` type") >  >() },
    { "p2171r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2205")) >(), wxS("Rebasing the Networking TS on C++20") >  >() },
    { "p2171r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1898")) >(), wxS("Rebasing the Networking TS on C++20") >  >() },
    { "p2171r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1963")) >(), wxS("Rebasing the Networking TS on C++20") >  >() },
    { "p2172r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1114") >  >() },
    { "p2173r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Title759") >  >() },
    { "p2173r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Attributes on Lambda-Expressions") >  >() },
    { "p2174r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Compound Literals - HackMD") >  >() },
    { "p2174r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Compound Literals - HackMD") >  >() },
    { "p2175r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Composable cancellation for sender-based async operations") >  >() },
    { "p2176r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("A different take on inexpressible conditions") >  >() },
    { "p2178r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title155") >  >() },
    { "p2178r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1311") >  >() },
    { "p2179r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2020-01-08 through 2020-05-27") >  >() },
    { "p2181r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1154")) >(), wxS("Correcting the Design of Bulk Execution") >  >() },
    { "p2181r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author943")) >(), wxS("Correcting the Design of Bulk Execution") >  >() },
    { "p2182r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract Support: Defining the Minimum Viable Feature Set") >  >() },
    { "p2182r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract Support: Defining the Minimum Viable Feature Set") >  >() },
    { "p2183r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Executors Review: Properties") >  >() },
    { "p2184r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1675")) >(), wxS("Title1301") >  >() },
    { "p2185r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2044")) >(), wxS("Contracts Use Case Categorization - HackMD") >  >() },
    { "p2186r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Removing Garbage Collection Support") >  >() },
    { "p2186r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Removing Garbage Collection Support") >  >() },
    { "p2186r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Removing Garbage Collection Support") >  >() },
    { "p2187r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Title294") >  >() },
    { "p2187r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Title767") >  >() },
    { "p2187r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Title1287") >  >() },
    { "p2187r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Title1527") >  >() },
    { "p2188r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anthony")) >(), wxS("DXXXX: Zap the Zap: Pointers should just be bags of bits") >  >() },
    { "p2188r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Anthony")) >(), wxS("Zap the Zap: Pointers are sometimes just bags of bits") >  >() },
    { "p2191r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2003")) >(), wxS("Modules: ADL & GMFs do not play together well (anymore)") >  >() },
    { "p2192r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author56")) >(), wxS("Title57") >  >() },
    { "p2192r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1405")) >(), wxS("Title1094") >  >() },
    { "p2192r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author429")) >(), wxS("Title368") >  >() },
    { "p2192r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2092")) >(), wxS("Title1623") >  >() },
    { "p2193r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author845")) >(), wxS("Title666") >  >() },
    { "p2193r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author484")) >(), wxS("Title404") >  >() },
    { "p2194r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2050")) >(), wxS("Title1592") >  >() },
    { "p2195r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Electronic Straw Polls") >  >() },
    { "p2195r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author303")) >(), wxS("Electronic Straw Polls") >  >() },
    { "p2195r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Electronic Straw Polls") >  >() },
    { "p2196r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1462")) >(), wxS("P2196R0") >  >() },
    { "p2197r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Tesch")) >(), wxS("Formatting for std::complex") >  >() },
    { "p2198r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2198r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Feature-Test Macros and Implementation-Defined Extensions") >  >() },
    { "p2199r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Isabella Muerte")) >(), wxS("Concepts to Differentiate Types") >  >() },
    { "p2201r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Mixed string literal concatenation") >  >() },
    { "p2201r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Mixed string literal concatenation") >  >() },
    { "p2202r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Executors review Senders and Receivers") >  >() },
    { "p2203r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tomasz KamiDski")) >(), wxS("Title860") >  >() },
    { "p2205r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chris Kohlhoff")) >(), wxS("Executors Review - Polymorphic Executor") >  >() },
    { "p2206r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("Executors Thread Pool review report") >  >() },
    { "p2207r0" , RevList< Rev< 0u, Arr64< Hash(wxS("- name")) >(), wxS("Title1175") >  >() },
    { "p2209r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lee Howes")) >(), wxS("Bulk schedule") >  >() },
    { "p2210r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Superior String Splitting") >  >() },
    { "p2210r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Superior String Splitting") >  >() },
    { "p2210r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Superior String Splitting") >  >() },
    { "p2211r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("Exhaustiveness Checking for Pattern Matching") >  >() },
    { "p2212r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexey Dmitriev")) >(), wxS("Relax Requirements for time_point::clock") >  >() },
    { "p2212r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alexey Dmitriev")) >(), wxS("Relax Requirements for time_point::clock") >  >() },
    { "p2212r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alexey Dmitriev")) >(), wxS("Relax Requirements for time_point::clock") >  >() },
    { "p2213r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Amir Kirsh")) >(), wxS("Title786") >  >() },
    { "p2213r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Amir Kirsh")) >(), wxS("Title1119") >  >() },
    { "p2214r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A Plan for C++23 Ranges") >  >() },
    { "p2214r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A Plan for C++23 Ranges") >  >() },
    { "p2214r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A Plan for C++23 Ranges") >  >() },
    { "p2215r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2189")) >(), wxS("Title1681") >  >() },
    { "p2215r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author741")) >(), wxS("Title597") >  >() },
    { "p2216r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::format improvements") >  >() },
    { "p2216r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::format improvements") >  >() },
    { "p2216r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::format improvements") >  >() },
    { "p2216r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::format improvements") >  >() },
    { "p2217r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2020-06-10 through 2020-08-26") >  >() },
    { "p2218r0" , RevList< Rev< 0u, Arr64< Hash(wxS("value")) >(), wxS("Title1212") >  >() },
    { "p2219r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2053")) >(), wxS("P0433 Executors Issues Needing Resolution | P2219R0") >  >() },
    { "p2220r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("redefine properties in P0443") >  >() },
    { "p2221r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("define P0443 cpos with tag_invoke") >  >() },
    { "p2223r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title410") >  >() },
    { "p2223r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title459") >  >() },
    { "p2223r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title629") >  >() },
    { "p2224r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1812")) >(), wxS("A Better bulk_schedule") >  >() },
    { "p2226r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("A proposal for an idiom to move from an object and reset it to its default constructed state") >  >() },
    { "p2227r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1560")) >(), wxS("Update normative reference to POSIX") >  >() },
    { "p2228r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1267")) >(), wxS("Title982") >  >() },
    { "p2231r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Missing `constexpr` in `std::optional` and `std::variant`") >  >() },
    { "p2231r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Missing `constexpr` in `std::optional` and `std::variant`") >  >() },
    { "p2232r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Emil Dotchevski")) >(), wxS("Zero-Overhead Deterministic Exceptions: Catching Values") >  >() },
    { "p2233r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2020 Fall Library Evolution Polls") >  >() },
    { "p2233r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author59")) >(), wxS("2020 Fall Library Evolution Polls") >  >() },
    { "p2233r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1297")) >(), wxS("D2233R2: 2020 Fall Library Evolution Polls") >  >() },
    { "p2233r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author2109")) >(), wxS("2020 Fall Library Evolution Polls") >  >() },
    { "p2234r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Scott Schurr")) >(), wxS("P2234R0-UB_and_IF-NDR_Audit") >  >() },
    { "p2234r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Scott Schurr")) >(), wxS("P2234R1-UB_and_IF-NDR_Audit") >  >() },
    { "p2235r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1193")) >(), wxS("Disentangling schedulers and executors") >  >() },
    { "p2236r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1316")) >(), wxS("C++ Standard Library Issues to be moved in Virtual Plenary, Nov. 2020") >  >() },
    { "p2237r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author350")) >(), wxS("Title296") >  >() },
    { "p2238r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author355")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p2242r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2221")) >(), wxS("Non-literal variables (and labels and gotos) in constexpr functions") >  >() },
    { "p2242r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author827")) >(), wxS("Non-literal variables (and labels and gotos) in constexpr functions") >  >() },
    { "p2242r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author911")) >(), wxS("Non-literal variables (and labels and gotos) in constexpr functions") >  >() },
    { "p2242r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1199")) >(), wxS("Non-literal variables (and labels and gotos) in constexpr functions") >  >() },
    { "p2244r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1291") >  >() },
    { "p2245r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1554") >  >() },
    { "p2246r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title891") >  >() },
    { "p2246r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title414") >  >() },
    { "p2247r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1504")) >(), wxS("2020 Library Evolution Report") >  >() },
    { "p2247r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2020 Library Evolution Report") >  >() },
    { "p2248r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2248r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Enabling list-initialization for algorithms") >  >() },
    { "p2249r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2249r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2249r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2249r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2249r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2249r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2249r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Mixed comparisons for smart pointers") >  >() },
    { "p2250r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1043")) >(), wxS("Scheduler_Vs_Executor") >  >() },
    { "p2251r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1414") >  >() },
    { "p2251r1" , RevList< Rev< 1u, Arr64< Hash(wxS("1")) >(), wxS("Title1205") >  >() },
    { "p2253r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2020-09-09 through 2020-11-11") >  >() },
    { "p2254r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1527")) >(), wxS("Title1187") >  >() },
    { "p2255r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("A type trait to detect reference binding to temporary") >  >() },
    { "p2255r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("A type trait to detect reference binding to temporary") >  >() },
    { "p2255r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tim Song")) >(), wxS("A type trait to detect reference binding to temporary") >  >() },
    { "p2257r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dalton M")) >(), wxS("Title839") >  >() },
    { "p2259r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Repairing input range adaptors and counted_iterator") >  >() },
    { "p2259r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Repairing input range adaptors and counted_iterator") >  >() },
    { "p2260r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author602")) >(), wxS("Title493") >  >() },
    { "p2262r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2020 Fall Library Evolution Poll Outcomes") >  >() },
    { "p2263r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("A call for a WG21 managed chat service") >  >() },
    { "p2263r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("A call for a WG21 managed chat service") >  >() },
    { "p2264r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2264r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make assert() macro user friendly for C and C++") >  >() },
    { "p2265r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kevlin Henney")) >(), wxS("Title325") >  >() },
    { "p2265r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Kevlin Henney")) >(), wxS("Title1436") >  >() },
    { "p2266r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Simpler implicit move") >  >() },
    { "p2266r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Simpler implicit move") >  >() },
    { "p2266r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Simpler implicit move") >  >() },
    { "p2266r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Simpler implicit move") >  >() },
    { "p2267r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Library Evolution Policies") >  >() },
    { "p2267r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Library Evolution Policies") >  >() },
    { "p2268r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Roadmap") >  >() },
    { "p2272r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1052")) >(), wxS("Title844") >  >() },
    { "p2273r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1423")) >(), wxS("Making std::unique_ptr constexpr") >  >() },
    { "p2273r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1869")) >(), wxS("Making std::unique_ptr constexpr") >  >() },
    { "p2273r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author785")) >(), wxS("Making std::unique_ptr constexpr") >  >() },
    { "p2273r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1019")) >(), wxS("Making std::unique_ptr constexpr") >  >() },
    { "p2274r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title1109") >  >() },
    { "p2276r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2206")) >(), wxS("Fix std::cbegin(), ranges::cbegin, and provide const_iterator support for std::span") >  >() },
    { "p2276r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author285")) >(), wxS("Microsoft Word - P2276R1_fix_cbegin_210909.docx") >  >() },
    { "p2277r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Packs outside of Templates") >  >() },
    { "p2278r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`cbegin` should always return a constant iterator") >  >() },
    { "p2278r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("cbegin should always return a constant iterator") >  >() },
    { "p2278r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("cbegin should always return a constant iterator") >  >() },
    { "p2278r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("cbegin should always return a constant iterator") >  >() },
    { "p2278r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("cbegin should always return a constant iterator") >  >() },
    { "p2279r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("We need a language mechanism for customization points") >  >() },
    { "p2280r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Using unknown references in constant expressions") >  >() },
    { "p2280r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Using unknown references in constant expressions") >  >() },
    { "p2280r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Using unknown pointers and references in constant expressions") >  >() },
    { "p2280r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Using unknown pointers and references in constant expressions") >  >() },
    { "p2280r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Using unknown pointers and references in constant expressions") >  >() },
    { "p2281r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Clarifying range adaptor objects") >  >() },
    { "p2281r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Clarifying range adaptor objects") >  >() },
    { "p2283r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Schellenberger")) >(), wxS("constexpr for specialized memory algorithms") >  >() },
    { "p2283r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Schellenberger")) >(), wxS("constexpr for specialized memory algorithms") >  >() },
    { "p2283r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Schellenberger")) >(), wxS("constexpr for specialized memory algorithms") >  >() },
    { "p2285r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Are default function arguments in the immediate context?") >  >() },
    { "p2286r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2286r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Formatting Ranges") >  >() },
    { "p2287r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Designated-initializers for Base Classes") >  >() },
    { "p2287r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Designated-initializers for Base Classes") >  >() },
    { "p2287r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Designated-initializers for Base Classes") >  >() },
    { "p2287r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Designated-initializers for Base Classes") >  >() },
    { "p2287r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Designated-initializers for Base Classes") >  >() },
    { "p2289r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Winter Library Evolution Polls") >  >() },
    { "p2290r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1357") >  >() },
    { "p2290r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title546") >  >() },
    { "p2290r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1373") >  >() },
    { "p2290r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title444") >  >() },
    { "p2291r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author967")) >(), wxS("Title781") >  >() },
    { "p2291r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniil Goncharov")) >(), wxS("Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header") >  >() },
    { "p2291r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniil Goncharov")) >(), wxS("Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header") >  >() },
    { "p2291r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Daniil Goncharov")) >(), wxS("Add Constexpr Modifiers to Functions to_chars and from_chars for Integral Types in <charconv> Header") >  >() },
    { "p2295r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1351") >  >() },
    { "p2295r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title204") >  >() },
    { "p2295r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1148") >  >() },
    { "p2295r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title466") >  >() },
    { "p2295r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title730") >  >() },
    { "p2295r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1269") >  >() },
    { "p2295r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1401") >  >() },
    { "p2297r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title443") >  >() },
    { "p2299r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("`mdspan` and CTAD") >  >() },
    { "p2299r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("`mdspan` and CTAD") >  >() },
    { "p2299r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("`mdspan` and CTAD") >  >() },
    { "p2299r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("`mdspan`s of All Dynamic Extents") >  >() },
    { "p2299r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("mdspans of All Dynamic Extents") >  >() },
    { "p2300r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2300r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`std::execution`") >  >() },
    { "p2301r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Add a `pmr` alias for `std::stacktrace`") >  >() },
    { "p2301r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Add a `pmr` alias for `std::stacktrace`") >  >() },
    { "p2302r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("Prefer std::ranges::contains over std::basic_string_view::contains") >  >() },
    { "p2302r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`std::ranges::contains`") >  >() },
    { "p2302r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`std::ranges::contains`") >  >() },
    { "p2302r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`std::ranges::contains`") >  >() },
    { "p2302r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`std::ranges::contains`") >  >() },
    { "p2303r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2081")) >(), wxS("Title1613") >  >() },
    { "p2303r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author443")) >(), wxS("Title374") >  >() },
    { "p2303r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author468")) >(), wxS("Title393") >  >() },
    { "p2303r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1515")) >(), wxS("Title1177") >  >() },
    { "p2303r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author607")) >(), wxS("Title497") >  >() },
    { "p2304r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1780")) >(), wxS("Title1382") >  >() },
    { "p2304r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author358")) >(), wxS("Title302") >  >() },
    { "p2304r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author700")) >(), wxS("Title562") >  >() },
    { "p2304r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author485")) >(), wxS("Title405") >  >() },
    { "p2305r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1709")) >(), wxS("Title1320") >  >() },
    { "p2305r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1611")) >(), wxS("Title1246") >  >() },
    { "p2305r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author862")) >(), wxS("Title687") >  >() },
    { "p2305r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author800")) >(), wxS("Title645") >  >() },
    { "p2305r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author166")) >(), wxS("Title143") >  >() },
    { "p2305r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author983")) >(), wxS("Type inference for object definitions") >  >() },
    { "p2306r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author768")) >(), wxS("Title626") >  >() },
    { "p2306r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1024")) >(), wxS("Title818") >  >() },
    { "p2306r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2016")) >(), wxS("Title1556") >  >() },
    { "p2306r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author247")) >(), wxS("Title203") >  >() },
    { "p2307r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author822")) >(), wxS("Title654") >  >() },
    { "p2307r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1197")) >(), wxS("Title938") >  >() },
    { "p2307r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1668")) >(), wxS("Title1297") >  >() },
    { "p2308r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author598")) >(), wxS("Template parameter initialization") >  >() },
    { "p2308r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1244")) >(), wxS("Template parameter initialization") >  >() },
    { "p2309r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author329")) >(), wxS("CORE:202101") >  >() },
    { "p2310r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1278")) >(), wxS("Title989") >  >() },
    { "p2310r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2202")) >(), wxS("Title1687") >  >() },
    { "p2311r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author901")) >(), wxS("Title729") >  >() },
    { "p2311r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2141")) >(), wxS("Title1649") >  >() },
    { "p2311r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1894")) >(), wxS("Title1463") >  >() },
    { "p2312r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2113")) >(), wxS("Title1632") >  >() },
    { "p2312r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1904")) >(), wxS("Title1470") >  >() },
    { "p2313r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2125")) >(), wxS("Core \"tentatively ready\" Issues") >  >() },
    { "p2314r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Character sets and encodings") >  >() },
    { "p2314r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Character sets and encodings") >  >() },
    { "p2314r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Character sets and encodings") >  >() },
    { "p2314r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Character sets and encodings") >  >() },
    { "p2314r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Character sets and encodings") >  >() },
    { "p2315r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author744")) >(), wxS("C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2021") >  >() },
    { "p2316r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title176") >  >() },
    { "p2316r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title72") >  >() },
    { "p2316r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title40") >  >() },
    { "p2317r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1216")) >(), wxS("Title953") >  >() },
    { "p2318r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author198")) >(), wxS("Title167") >  >() },
    { "p2318r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2013")) >(), wxS("Title1553") >  >() },
    { "p2319r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Prevent path presentation problems") >  >() },
    { "p2319r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Prevent path presentation problems") >  >() },
    { "p2319r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Prevent path presentation problems") >  >() },
    { "p2319r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Prevent path presentation problems") >  >() },
    { "p2319r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Prevent path presentation problems") >  >() },
    { "p2320r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author955")) >(), wxS("The Syntax of Static Reflection") >  >() },
    { "p2321r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("zip") >  >() },
    { "p2321r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("zip") >  >() },
    { "p2321r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tim Song")) >(), wxS("zip") >  >() },
    { "p2322r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`ranges::fold`") >  >() },
    { "p2322r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`ranges::fold`") >  >() },
    { "p2322r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`ranges::fold`") >  >() },
    { "p2322r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("`ranges::fold`") >  >() },
    { "p2322r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("ranges::fold") >  >() },
    { "p2322r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("ranges::fold") >  >() },
    { "p2322r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("ranges::fold") >  >() },
    { "p2323r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Martin Uecker")) >(), wxS("Title1121") >  >() },
    { "p2324r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Martin Uecker")) >(), wxS("Title150") >  >() },
    { "p2324r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Martin Uecker")) >(), wxS("Title293") >  >() },
    { "p2324r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Martin Uecker")) >(), wxS("Title964") >  >() },
    { "p2325r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Views should not be required to be default constructible") >  >() },
    { "p2325r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Views should not be required to be default constructible") >  >() },
    { "p2325r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Views should not be required to be default constructible") >  >() },
    { "p2325r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Views should not be required to be default constructible") >  >() },
    { "p2327r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul M")) >(), wxS("Title771") >  >() },
    { "p2327r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Paul M")) >(), wxS("Title240") >  >() },
    { "p2328r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("join_view should join all views of ranges") >  >() },
    { "p2328r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("join_view should join all views of ranges") >  >() },
    { "p2329r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author564")) >(), wxS("Title457") >  >() },
    { "p2330r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1882")) >(), wxS("Title1459") >  >() },
    { "p2331r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author26")) >(), wxS("Title20") >  >() },
    { "p2332r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Establishing std::hive as replacement name for the proposed std::colony container") >  >() },
    { "p2333r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Winter Library Evolution Poll Outcomes") >  >() },
    { "p2334r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Melanie Blower")) >(), wxS("Title1606") >  >() },
    { "p2334r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Melanie Blower")) >(), wxS("Title490") >  >() },
    { "p2337r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1623")) >(), wxS("Title1257") >  >() },
    { "p2338r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Character primitives and the C library") >  >() },
    { "p2338r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Character primitives and the C library") >  >() },
    { "p2338r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Character primitives and the C library") >  >() },
    { "p2338r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Character primitives and the C library") >  >() },
    { "p2338r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: Character primitives and the C library") >  >() },
    { "p2339r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract violation handlers") >  >() },
    { "p2340r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author616")) >(), wxS("Clarifying the status of the C headers") >  >() },
    { "p2340r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1061")) >(), wxS("Clarifying the status of the C headers") >  >() },
    { "p2342r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title71") >  >() },
    { "p2345r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sean Parent")) >(), wxS("Relaxing Requirements of Moved-From Objects") >  >() },
    { "p2347r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1146") >  >() },
    { "p2347r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title362") >  >() },
    { "p2347r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1201") >  >() },
    { "p2348r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title37") >  >() },
    { "p2348r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title516") >  >() },
    { "p2348r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title913") >  >() },
    { "p2348r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title45") >  >() },
    { "p2350r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author71")) >(), wxS("constexpr class") >  >() },
    { "p2350r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author318")) >(), wxS("constexpr class") >  >() },
    { "p2350r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1369")) >(), wxS("constexpr class") >  >() },
    { "p2351r0" , RevList< Rev< 0u, Arr64< Hash(wxS("hana.dusikova@avast.com")) >(), wxS("nodiscard casts") >  >() },
    { "p2352r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2020-12-09 through 2021-03-24") >  >() },
    { "p2353r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Rector")) >(), wxS("Title814") >  >() },
    { "p2355r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author87")) >(), wxS("Postfix fold expressions") >  >() },
    { "p2355r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author903")) >(), wxS("Postfix fold expressions") >  >() },
    { "p2355r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author730")) >(), wxS("Postfix fold expressions") >  >() },
    { "p2356r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1870")) >(), wxS("Title1449") >  >() },
    { "p2358r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Defining Contracts") >  >() },
    { "p2360r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Extend init-statement to allow alias-declaration") >  >() },
    { "p2361r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title688") >  >() },
    { "p2361r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1078") >  >() },
    { "p2361r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1480") >  >() },
    { "p2361r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title349") >  >() },
    { "p2361r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title609") >  >() },
    { "p2361r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title188") >  >() },
    { "p2361r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1653") >  >() },
    { "p2362r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author644")) >(), wxS("Title523") >  >() },
    { "p2362r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author159")) >(), wxS("Title136") >  >() },
    { "p2362r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author207")) >(), wxS("Title171") >  >() },
    { "p2362r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1935")) >(), wxS("Title1495") >  >() },
    { "p2363r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Extending associative containers with the remaining heterogeneous overloads") >  >() },
    { "p2363r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Extending associative containers with the remaining heterogeneous overloads") >  >() },
    { "p2363r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Extending associative containers with the remaining heterogeneous overloads") >  >() },
    { "p2363r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Extending associative containers with the remaining heterogeneous overloads") >  >() },
    { "p2363r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Extending associative containers with the remaining heterogeneous overloads") >  >() },
    { "p2363r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Konstantin Boyarinov")) >(), wxS("Extending associative containers with the remaining heterogeneous overloads") >  >() },
    { "p2367r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Remove misuses of list-initialization from Clause 24") >  >() },
    { "p2368r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Spring Library Evolution Polls") >  >() },
    { "p2368r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Spring Library Evolution Polls") >  >() },
    { "p2370r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2086")) >(), wxS("Stacktrace from exception") >  >() },
    { "p2370r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author16")) >(), wxS("Stacktrace from exception") >  >() },
    { "p2370r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2220")) >(), wxS("Stacktrace from exception") >  >() },
    { "p2372r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fixing locale handling in chrono formatters") >  >() },
    { "p2372r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fixing locale handling in chrono formatters") >  >() },
    { "p2372r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fixing locale handling in chrono formatters") >  >() },
    { "p2372r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fixing locale handling in chrono formatters") >  >() },
    { "p2374r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("XXXXR0: views::cartesian_product") >  >() },
    { "p2374r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("views::cartesian_product") >  >() },
    { "p2374r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("views::cartesian_product") >  >() },
    { "p2374r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("`views::cartesian_product`") >  >() },
    { "p2374r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("`views::cartesian_product`") >  >() },
    { "p2375r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author383")) >(), wxS("Title328") >  >() },
    { "p2375r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author631")) >(), wxS("Title512") >  >() },
    { "p2376r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author462")) >(), wxS("Title388") >  >() },
    { "p2377r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("[[nodiscard]] in the Standard Library: Clause 23 Iterators library") >  >() },
    { "p2378r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author211")) >(), wxS("Title175") >  >() },
    { "p2378r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author690")) >(), wxS("Title556") >  >() },
    { "p2380r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Paper") >  >() },
    { "p2380r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Paper R1") >  >() },
    { "p2381r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jarrad J")) >(), wxS("Pattern Matching with Exception Handling") >  >() },
    { "p2382r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author214")) >(), wxS("Bright Blue") >  >() },
    { "p2384r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Spring Library Evolution Poll Outcomes") >  >() },
    { "p2384r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Spring Library Evolution Poll Outcomes") >  >() },
    { "p2385r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2010")) >(), wxS("C++ Standard Library Issues to be moved in Virtual Plenary, June 2021") >  >() },
    { "p2386r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1352")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2387r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pipe support for user-defined range adaptors") >  >() },
    { "p2387r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pipe support for user-defined range adaptors") >  >() },
    { "p2387r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pipe support for user-defined range adaptors") >  >() },
    { "p2387r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Pipe support for user-defined range adaptors") >  >() },
    { "p2388r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Abort-only contract support") >  >() },
    { "p2388r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Minimum Contract Support: either Ignore or Check_and_abort") >  >() },
    { "p2388r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Minimum Contract Support: either Ignore or Check_and_abort") >  >() },
    { "p2388r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Minimum Contract Support: either No_eval or Eval_and_abort") >  >() },
    { "p2388r4" , RevList< Rev< 4u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Minimum Contract Support: either No_eval or Eval_and_abort") >  >() },
    { "p2389r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("dextents Index Type Parameter") >  >() },
    { "p2389r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("dextents Index Type Parameter") >  >() },
    { "p2389r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("dextents Index Type Parameter") >  >() },
    { "p2390r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1914")) >(), wxS("Title1478") >  >() },
    { "p2390r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1049")) >(), wxS("Title842") >  >() },
    { "p2390r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author208")) >(), wxS("Title173") >  >() },
    { "p2391r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title1541") >  >() },
    { "p2392r0" , RevList< Rev< 0u, Arr64< Hash(wxS("structure_map")) >(), wxS("Title234") >  >() },
    { "p2392r1" , RevList< Rev< 1u, Arr64< Hash(wxS("structure_map")) >(), wxS("Title1256") >  >() },
    { "p2392r2" , RevList< Rev< 2u, Arr64< Hash(wxS("structure_map")) >(), wxS("Title744") >  >() },
    { "p2392r3" , RevList< Rev< 3u, Arr64< Hash(wxS("structure_map")) >(), wxS("Title1091") >  >() },
    { "p2393r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Cleaning up integer-class types") >  >() },
    { "p2393r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Cleaning up integer-class types") >  >() },
    { "p2395r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1929")) >(), wxS("WG21 2021-06 Virtual Meeting Record of Discussion.docx") >  >() },
    { "p2396r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("Concurrency TS 2 fixes") >  >() },
    { "p2396r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("P2396R1") >  >() },
    { "p2397r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2021-04-14 through 2021-05-26") >  >() },
    { "p2400r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Library Evolution Report: 2020-10-27 to 2021-02-16") >  >() },
    { "p2400r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Library Evolution Report: 2021-02-23 to 2021-05-25") >  >() },
    { "p2400r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Library Evolution Report: 2021-06-01 to 2021-09-20") >  >() },
    { "p2400r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Library Evolution Report: 2021-09-28 to 2022-01-25") >  >() },
    { "p2401r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Add a conditional noexcept specification to std::exchange") >  >() },
    { "p2402r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author432")) >(), wxS("PowerPoint Presentation") >  >() },
    { "p2403r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1676")) >(), wxS("Slide 1") >  >() },
    { "p2404r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Justin Bassett")) >(), wxS("Title382") >  >() },
    { "p2404r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Justin Bassett")) >(), wxS("Title1218") >  >() },
    { "p2404r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Justin Bassett")) >(), wxS("Title1238") >  >() },
    { "p2404r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Justin Bassett")) >(), wxS("Title124") >  >() },
    { "p2405r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Justin Bassett")) >(), wxS("Title46") >  >() },
    { "p2406r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Fix `counted_iterator` interaction with input iterators") >  >() },
    { "p2406r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Fix `counted_iterator` interaction with input iterators") >  >() },
    { "p2406r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Add `lazy_counted_iterator`") >  >() },
    { "p2406r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Add `lazy_counted_iterator`") >  >() },
    { "p2406r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Add `lazy_counted_iterator`") >  >() },
    { "p2406r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Yehezkel Bernat")) >(), wxS("Add `lazy_counted_iterator`") >  >() },
    { "p2407r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Emil Meissner")) >(), wxS("Freestanding Library: Partial Classes") >  >() },
    { "p2407r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Emil Meissner")) >(), wxS("Freestanding Library: Partial Classes") >  >() },
    { "p2407r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u2003\u2003Emil Meissner")) >(), wxS("Freestanding Library: Partial Classes") >  >() },
    { "p2407r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u2003\u2003Ben Craig")) >(), wxS("Freestanding Library: Partial Classes") >  >() },
    { "p2407r4" , RevList< Rev< 4u, Arr64< Hash(wxS("\u2003\u2003Ben Craig")) >(), wxS("Freestanding Library: Partial Classes") >  >() },
    { "p2407r5" , RevList< Rev< 5u, Arr64< Hash(wxS("\u2003\u2003Ben Craig")) >(), wxS("Freestanding Library: Partial Classes") >  >() },
    { "p2408r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Ranges views as inputs to non-Ranges algorithms") >  >() },
    { "p2408r1" , RevList< Rev< 1u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Ranges views as inputs to non-Ranges algorithms") >  >() },
    { "p2408r2" , RevList< Rev< 2u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Ranges iterators as inputs to non-Ranges algorithms") >  >() },
    { "p2408r3" , RevList< Rev< 3u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Ranges iterators as inputs to non-Ranges algorithms") >  >() },
    { "p2408r4" , RevList< Rev< 4u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Ranges iterators as inputs to non-Ranges algorithms") >  >() },
    { "p2408r5" , RevList< Rev< 5u, Arr64< Hash(wxS("David Olsen")) >(), wxS("Ranges iterators as inputs to non-Ranges algorithms") >  >() },
    { "p2409r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Requirements for Usage of C++ Modules at Bloomberg") >  >() },
    { "p2410r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1782")) >(), wxS("Title1384") >  >() },
    { "p2411r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author856")) >(), wxS("Title681") >  >() },
    { "p2412r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1536")) >(), wxS("Title1191") >  >() },
    { "p2413r0" , RevList< Rev< 0u, Arr64< Hash(wxS("L\u00E9n\u00E1rd Szolnoki")) >(), wxS("Remove unsafe conversions of unique_ptr<T>") >  >() },
    { "p2413r1" , RevList< Rev< 1u, Arr64< Hash(wxS("L\u00E9n\u00E1rd Szolnoki")) >(), wxS("Remove unsafe conversions of unique_ptr<T>") >  >() },
    { "p2414r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R0 Pointer lifetime-end zap proposed solutions") >  >() },
    { "p2414r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R1 Pointer lifetime-end zap proposed solutions") >  >() },
    { "p2414r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R2 Pointer lifetime-end zap proposed solutions") >  >() },
    { "p2414r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R3 Pointer lifetime-end zap proposed solutions: atomics and volatile") >  >() },
    { "p2414r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R4 Pointer lifetime-end zap proposed solutions: atomics and volatile") >  >() },
    { "p2414r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R5 Pointer lifetime-end zap proposed solutions: atomics and volatile") >  >() },
    { "p2414r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Paul E")) >(), wxS("P2414R6 Pointer lifetime-end zap proposed solutions: atomics and volatile") >  >() },
    { "p2415r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("What is a `view`?") >  >() },
    { "p2415r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("What is a `view`?") >  >() },
    { "p2415r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("What is a view?") >  >() },
    { "p2416r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Title1559") >  >() },
    { "p2416r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Title871") >  >() },
    { "p2416r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Title1659") >  >() },
    { "p2417r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1877")) >(), wxS("Title1453") >  >() },
    { "p2417r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author221")) >(), wxS("Title180") >  >() },
    { "p2417r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1757")) >(), wxS("Title1363") >  >() },
    { "p2418r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Add support for <code>std::generator</code>-like types to <code>std::format</code>") >  >() },
    { "p2418r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Add support for <code>std::generator</code>-like types to <code>std::format</code>") >  >() },
    { "p2418r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Add support for <code>std::generator</code>-like types to <code>std::format</code>") >  >() },
    { "p2419r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Clarify handling of encodings in localized formatting of chrono types") >  >() },
    { "p2419r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Clarify handling of encodings in localized formatting of chrono types") >  >() },
    { "p2419r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Clarify handling of encodings in localized formatting of chrono types") >  >() },
    { "p2420r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Summer Library Evolution Polls") >  >() },
    { "p2422r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author203")) >(), wxS("Remove nodiscard annotations from the standard library specification") >  >() },
    { "p2422r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1831")) >(), wxS("Remove nodiscard annotations from the standard library specification") >  >() },
    { "p2423r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1672")) >(), wxS("C++ Liaison CFP C Summary") >  >() },
    { "p2424r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("Abbreviated Parameters") >  >() },
    { "p2425r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("Expression Function Body") >  >() },
    { "p2428r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2032")) >(), wxS("Title1570") >  >() },
    { "p2429r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1503")) >(), wxS("Title1168") >  >() },
    { "p2430r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("SenderReceiverPartial") >  >() },
    { "p2431r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1258")) >(), wxS("Slide 1") >  >() },
    { "p2432r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author375")) >(), wxS("P2432R0") >  >() },
    { "p2432r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1635")) >(), wxS("Fix istream_view, Rev 1") >  >() },
    { "p2434r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author589")) >(), wxS("Nondeterministic pointer provenance") >  >() },
    { "p2434r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1106")) >(), wxS("Nondeterministic pointer provenance") >  >() },
    { "p2434r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1041")) >(), wxS("Nondeterministic pointer provenance") >  >() },
    { "p2434r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1738")) >(), wxS("Nondeterministic pointer provenance") >  >() },
    { "p2435r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Summer Library Evolution Poll Outcomes") >  >() },
    { "p2435r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 Summer Library Evolution Poll Outcomes") >  >() },
    { "p2436r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 September Library Evolution Polls") >  >() },
    { "p2437r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title705") >  >() },
    { "p2437r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Aaron Ballman")) >(), wxS("Title829") >  >() },
    { "p2438r0" , RevList< Rev< 0u, Arr64< Hash(wxS("federico.kircheis@gmail.com")) >(), wxS("std::string::substr() &&") >  >() },
    { "p2438r1" , RevList< Rev< 1u, Arr64< Hash(wxS("federico.kircheis@gmail.com")) >(), wxS("std::string::substr() &&") >  >() },
    { "p2438r2" , RevList< Rev< 2u, Arr64< Hash(wxS("federico.kircheis@gmail.com")) >(), wxS("std::string::substr() &&") >  >() },
    { "p2439r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("What is a view?") >  >() },
    { "p2440r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("ranges::iota, ranges::shift_left, and ranges::shift_right") >  >() },
    { "p2440r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("ranges::iota, ranges::shift_left, and ranges::shift_right") >  >() },
    { "p2441r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("views::join_with") >  >() },
    { "p2441r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("views::join_with") >  >() },
    { "p2441r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("views::join_with") >  >() },
    { "p2442r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Windowing range adaptors: views::chunk and views::slide") >  >() },
    { "p2442r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Windowing range adaptors: views::chunk and views::slide") >  >() },
    { "p2443r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::chunk_by") >  >() },
    { "p2443r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::chunk_by") >  >() },
    { "p2444r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2052")) >(), wxS("TheAsioAsyncModel") >  >() },
    { "p2445r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("std::forward_like") >  >() },
    { "p2445r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("std::forward_like") >  >() },
    { "p2446r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("views::move") >  >() },
    { "p2446r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("views::all_move") >  >() },
    { "p2446r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("views::as_rvalue") >  >() },
    { "p2447r0" , RevList< Rev< 0u, Arr64< Hash(wxS("federico.kircheis@gmail.com")) >(), wxS("std::span and the missing constructor") >  >() },
    { "p2447r1" , RevList< Rev< 1u, Arr64< Hash(wxS("federico.kircheis@gmail.com")) >(), wxS("std::span and the missing constructor") >  >() },
    { "p2447r2" , RevList< Rev< 2u, Arr64< Hash(wxS("federico.kircheis@gmail.com")) >(), wxS("std::span and the missing constructor") >  >() },
    { "p2447r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("<code>std::span</code> over an initializer list") >  >() },
    { "p2447r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("<code>std::span</code> over an initializer list") >  >() },
    { "p2447r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("<code>std::span</code> over an initializer list") >  >() },
    { "p2447r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("<code>std::span</code> over an initializer list") >  >() },
    { "p2448r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Relaxing some constexpr restrictions") >  >() },
    { "p2448r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Relaxing some constexpr restrictions") >  >() },
    { "p2448r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Relaxing some constexpr restrictions") >  >() },
    { "p2450r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1357")) >(), wxS("C++ Standard Library Issues to be moved in Virtual Plenary, Oct. 2021") >  >() },
    { "p2451r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 September Library Evolution Poll Outcomes") >  >() },
    { "p2452r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 October Library Evolution and Concurrency Polls on Networking and Executors") >  >() },
    { "p2453r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 October Library Evolution and Concurrency Networking and Executors Poll Outcomes") >  >() },
    { "p2454r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 November Library Evolution Polls") >  >() },
    { "p2455r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 November Library Evolution Poll Outcomes") >  >() },
    { "p2456r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 December Library Evolution Polls") >  >() },
    { "p2457r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2021 December Library Evolution Poll Outcomes") >  >() },
    { "p2458r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022 January Library Evolution Polls") >  >() },
    { "p2458r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022 January Library Evolution Polls") >  >() },
    { "p2459r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022 January Library Evolution Poll Outcomes") >  >() },
    { "p2460r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title165") >  >() },
    { "p2460r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1508") >  >() },
    { "p2460r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1") >  >() },
    { "p2461r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Closure-Based Syntax for Contracts") >  >() },
    { "p2461r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Closure-Based Syntax for Contracts") >  >() },
    { "p2462r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author114")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2463r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Kohlhoff")) >(), wxS("AsioAsyncModel") >  >() },
    { "p2464r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author813")) >(), wxS("Ruminations on networking and executors") >  >() },
    { "p2465r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author572")) >(), wxS("Title463") >  >() },
    { "p2465r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author64")) >(), wxS("Title68") >  >() },
    { "p2465r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author239")) >(), wxS("Title199") >  >() },
    { "p2465r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author185")) >(), wxS("Title159") >  >() },
    { "p2466r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("The notes on contract annotations") >  >() },
    { "p2467r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author216")) >(), wxS("Support exclusive mode for fstreams") >  >() },
    { "p2467r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2073")) >(), wxS("Support exclusive mode for fstreams") >  >() },
    { "p2468r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("The Equality Operator You Are Looking For") >  >() },
    { "p2468r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("P2468R1R1: The Equality Operator You Are Looking For") >  >() },
    { "p2468r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("The Equality Operator You Are Looking For") >  >() },
    { "p2469r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jamie Allsop")) >(), wxS("Response to P2464") >  >() },
    { "p2470r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author685")) >(), wxS("Slide 1") >  >() },
    { "p2471r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("NetTS, ASIO and Sender Library Design Comparison") >  >() },
    { "p2471r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("NetTS, ASIO and Sender Library Design Comparison") >  >() },
    { "p2472r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jarrad J")) >(), wxS("make_function_ref: A More Functional function_ref") >  >() },
    { "p2472r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author941")) >(), wxS("make_function_ref_more_functional") >  >() },
    { "p2472r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author342")) >(), wxS("make_function_ref_more_functional") >  >() },
    { "p2472r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1783")) >(), wxS("make function_ref more functional - HackMD") >  >() },
    { "p2473r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel")) >(), wxS("Title1084") >  >() },
    { "p2473r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Distributing C++ Module Libraries") >  >() },
    { "p2474r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`views::repeat`") >  >() },
    { "p2474r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`views::repeat`") >  >() },
    { "p2474r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("`views::repeat`") >  >() },
    { "p2475r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author675")) >(), wxS("WG21 2021-10 Virtual Meeting Record of Discussion.docx") >  >() },
    { "p2477r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Allow programmer to control and detect coroutine elision by static constexpr bool should_elide() and coroutine_handle::elided()") >  >() },
    { "p2477r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Allow programmer to control and detect coroutine elision by static constexpr bool must_elide() and coroutine_handle::elided()") >  >() },
    { "p2477r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Allow programmer to control and detect coroutine elision") >  >() },
    { "p2477r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Allow programmers to control coroutine elision") >  >() },
    { "p2478r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hubert S.K")) >(), wxS("_Thread_local for better C++ interoperability with C") >  >() },
    { "p2479r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author41")) >(), wxS("Title36") >  >() },
    { "p2480r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jamie Allsop")) >(), wxS("Response to P2471") >  >() },
    { "p2481r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Forwarding reference to specific type/template") >  >() },
    { "p2481r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Forwarding reference to specific type/template") >  >() },
    { "p2481r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Forwarding reference to specific type/template") >  >() },
    { "p2483r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("Support Non-copyable Types for `single_view`") >  >() },
    { "p2484r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Smith")) >(), wxS("Extending support for class types as non-type template parameters") >  >() },
    { "p2485r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1214")) >(), wxS("Do not add value_exists and value_or to C++23") >  >() },
    { "p2486r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Structured naming for function object and CPO values") >  >() },
    { "p2486r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("Structured naming for function object and CPO values") >  >() },
    { "p2487r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Attribute-like syntax for contract annotations") >  >() },
    { "p2487r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Is attribute-like syntax adequate for contract annotations?") >  >() },
    { "p2489r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Library Evolution Plan for Completing C++23") >  >() },
    { "p2490r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ed Catmur")) >(), wxS("Zero-overhead exception stacktraces") >  >() },
    { "p2490r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ed Catmur")) >(), wxS("Zero-overhead exception stacktraces") >  >() },
    { "p2491r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Text encodings follow-up") >  >() },
    { "p2492r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author976")) >(), wxS("Attending C++ Standards Committee Meetings During a Pandemic") >  >() },
    { "p2493r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Missing feature test macros for C++20 core papers") >  >() },
    { "p2494r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Relaxing range adaptors to allow for move only types") >  >() },
    { "p2494r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Relaxing range adaptors to allow for move only types") >  >() },
    { "p2494r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Micha\u0142 Dominiak")) >(), wxS("Relaxing range adaptors to allow for move only types") >  >() },
    { "p2495r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1669") >  >() },
    { "p2495r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title366") >  >() },
    { "p2495r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1485") >  >() },
    { "p2495r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1137") >  >() },
    { "p2497r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author109")) >(), wxS("Testing for success or failure of <charconv> functions") >  >() },
    { "p2498r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1367")) >(), wxS("Title1060") >  >() },
    { "p2498r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1976")) >(), wxS("Title1536") >  >() },
    { "p2499r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("`string_view` range constructor should be `explicit`") >  >() },
    { "p2500r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++17 parallel algorithms and P2300") >  >() },
    { "p2500r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel algorithms and P2300") >  >() },
    { "p2500r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel algorithms and P2300") >  >() },
    { "p2501r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author65")) >(), wxS("Undo the rename of views::move and views::as_const") >  >() },
    { "p2502r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Title725") >  >() },
    { "p2502r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Title1163") >  >() },
    { "p2502r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("Title3") >  >() },
    { "p2504r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("Computations as a global solution to concurrency") >  >() },
    { "p2505r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeff Garland")) >(), wxS("P2505R0 Monadic Functions for <code>std::expected</code>") >  >() },
    { "p2505r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jeff Garland")) >(), wxS("P2505R1 Monadic Functions for <code>std::expected</code>") >  >() },
    { "p2505r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jeff Garland")) >(), wxS("P2505R2 Monadic Functions for <code>std::expected</code>") >  >() },
    { "p2505r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jeff Garland")) >(), wxS("P2505R3 Monadic Functions for <code>std::expected</code>") >  >() },
    { "p2505r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Jeff Garland")) >(), wxS("P2505R4 Monadic Functions for <code>std::expected</code>") >  >() },
    { "p2505r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Jeff Garland")) >(), wxS("P2505R5 Monadic Functions for <code>std::expected</code>") >  >() },
    { "p2506r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Casey Carter")) >(), wxS("P2506") >  >() },
    { "p2507r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author438")) >(), wxS("Title371") >  >() },
    { "p2507r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1265")) >(), wxS("Title978") >  >() },
    { "p2508r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Expose std::$basic-format-string$<charT, Args...>") >  >() },
    { "p2508r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Expose std::$basic-format-string$<charT, Args...>") >  >() },
    { "p2508r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Expose std::$basic-format-string$<charT, Args...>") >  >() },
    { "p2509r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("A proposal for a type trait to detect value-preserving conversions") >  >() },
    { "p2510r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark de")) >(), wxS("Title531") >  >() },
    { "p2510r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark de")) >(), wxS("Title1677") >  >() },
    { "p2510r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark de")) >(), wxS("Title336") >  >() },
    { "p2510r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mark de")) >(), wxS("Title1615") >  >() },
    { "p2511r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Beyond operator(): NTTP callables in type-erased call wrappers - HackMD") >  >() },
    { "p2511r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Beyond operator(): NTTP callables in type-erased call wrappers - HackMD") >  >() },
    { "p2511r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Beyond operator(): NTTP callables in type-erased call wrappers - HackMD") >  >() },
    { "p2512r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2021-06-09 through 2021-12-15") >  >() },
    { "p2513r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("char8_t Compatibility and Portability Fixes") >  >() },
    { "p2513r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("char8_t Compatibility and Portability Fix") >  >() },
    { "p2513r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("char8_t Compatibility and Portability Fix") >  >() },
    { "p2513r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("D2513R3: char8_t Compatibility and Portability Fix") >  >() },
    { "p2513r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("char8_t Compatibility and Portability Fix") >  >() },
    { "p2514r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("std::breakpoint") >  >() },
    { "p2515r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("std::is_debugger_present") >  >() },
    { "p2516r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("<code>string_view</code> is implicitly convertible from what?") >  >() },
    { "p2517r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1065")) >(), wxS("Add a conditional noexcept specification to std::apply") >  >() },
    { "p2517r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1377")) >(), wxS("Add a conditional noexcept specification to std::apply") >  >() },
    { "p2520r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("move_iterator<T*> should be a random access iterator") >  >() },
    { "p2521r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract support Working Paper") >  >() },
    { "p2521r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract support Working Paper") >  >() },
    { "p2521r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract support Working Paper") >  >() },
    { "p2521r3" , RevList< Rev< 3u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract support Record of SG21 consensus") >  >() },
    { "p2521r4" , RevList< Rev< 4u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract support Record of SG21 consensus") >  >() },
    { "p2521r5" , RevList< Rev< 5u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract support Record of SG21 consensus") >  >() },
    { "p2523r0" , RevList< Rev< 0u, Arr64< Hash(wxS("This was")) >(), wxS("Request for re-inclusion of std::hive proposal in C++23") >  >() },
    { "p2524r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1102") >  >() },
    { "p2525r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title848") >  >() },
    { "p2527r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("std::variant_alternative_index and std::variant_alternative_index_v") >  >() },
    { "p2527r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("std::variant_alternative_index and std::tuple_element_index") >  >() },
    { "p2527r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("std::variant_alternative_index and std::tuple_element_index") >  >() },
    { "p2527r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alex Christensen")) >(), wxS("std::variant_alternative_index and std::tuple_element_index") >  >() },
    { "p2528r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Reini Urban")) >(), wxS("P2528R0") >  >() },
    { "p2529r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mathias Stearn")) >(), wxS("generator<T> should have T&& reference_type") >  >() },
    { "p2530r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged M")) >(), wxS("Why Hazard Pointers Should be in C++26") >  >() },
    { "p2530r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Maged M")) >(), wxS("Why Hazard Pointers Should be in C++26") >  >() },
    { "p2530r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Maged M")) >(), wxS("Why Hazard Pointers Should be in C++26") >  >() },
    { "p2530r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Maged M")) >(), wxS("Why Hazard Pointers Should be in C++26") >  >() },
    { "p2531r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1546")) >(), wxS("C++ Standard Library Issues to be moved in Virtual Plenary, Feb. 2022") >  >() },
    { "p2532r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Removing exception_ptr from the Receiver Concepts") >  >() },
    { "p2533r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2065")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2534r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author314")) >(), wxS("function_ref in the wild") >  >() },
    { "p2535r0" , RevList< Rev< 0u, Arr64< Hash(wxS("dlustig@nvidia.com, ogiroux@nvidia.com")) >(), wxS("Title458") >  >() },
    { "p2536r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Olga Arkhipova")) >(), wxS("Microsoft Word - Distributing C++ Module Libraries with dependencies json files.docx") >  >() },
    { "p2537r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Relax va_start Requirements to Match C") >  >() },
    { "p2537r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Relax va_start Requirements to Match C") >  >() },
    { "p2537r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("Relax va_start Requirements to Match C") >  >() },
    { "p2538r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("ADL-proof std::projected") >  >() },
    { "p2538r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("ADL-proof std::projected") >  >() },
    { "p2539r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Should the output of std::print to a terminal be synchronized with the underlying stream?") >  >() },
    { "p2539r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Should the output of std::print to a terminal be synchronized with the underlying stream?") >  >() },
    { "p2539r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Should the output of std::print to a terminal be synchronized with the underlying stream?") >  >() },
    { "p2539r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Should the output of std::print to a terminal be synchronized with the underlying stream?") >  >() },
    { "p2539r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Should the output of std::print to a terminal be synchronized with the underlying stream?") >  >() },
    { "p2540r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Empty Product for certain Views") >  >() },
    { "p2540r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Empty Product for certain Views") >  >() },
    { "p2541r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Consider renaming remove_quals.docx") >  >() },
    { "p2542r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2542r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`views::concat`") >  >() },
    { "p2544r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Neumann")) >(), wxS("C++ exceptions are becoming more and more problematic") >  >() },
    { "p2545r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Why RCU Should be in C++26") >  >() },
    { "p2545r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Why RCU Should be in C++26") >  >() },
    { "p2545r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Why RCU Should be in C++26") >  >() },
    { "p2545r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Why RCU Should be in C++26") >  >() },
    { "p2545r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Paul McKenney")) >(), wxS("Read-Copy Update (RCU)") >  >() },
    { "p2546r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Debugging Support") >  >() },
    { "p2546r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Debugging Support") >  >() },
    { "p2546r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Debugging Support") >  >() },
    { "p2546r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Debugging Support") >  >() },
    { "p2546r4" , RevList< Rev< 4u, Arr64< Hash(wxS("1")) >(), wxS("Debugging Support") >  >() },
    { "p2546r5" , RevList< Rev< 5u, Arr64< Hash(wxS("1")) >(), wxS("Debugging Support") >  >() },
    { "p2547r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author99")) >(), wxS("P2547R0 - Language support for customisable functions") >  >() },
    { "p2547r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Language Support for Customisable Functions") >  >() },
    { "p2548r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title528") >  >() },
    { "p2548r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title790") >  >() },
    { "p2548r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1455") >  >() },
    { "p2548r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title48") >  >() },
    { "p2548r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1315") >  >() },
    { "p2548r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1026") >  >() },
    { "p2548r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1034") >  >() },
    { "p2549r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("std::unexpected<E> should have error() as member accessor") >  >() },
    { "p2549r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("std::unexpected<E> should have error() as member accessor") >  >() },
    { "p2550r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("ranges::copy should say output_iterator somewhere") >  >() },
    { "p2551r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Clarify intent of P1841 numeric traits [P2551R0]") >  >() },
    { "p2551r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Clarify intent of P1841 numeric traits [P2551R1]") >  >() },
    { "p2551r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Clarify intent of P1841 numeric traits [P2551R2]") >  >() },
    { "p2552r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1169")) >(), wxS("Title925") >  >() },
    { "p2552r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author733")) >(), wxS("Title590") >  >() },
    { "p2552r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author483")) >(), wxS("Title403") >  >() },
    { "p2552r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author538")) >(), wxS("Title436") >  >() },
    { "p2553r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Make mdspan size_type controllable") >  >() },
    { "p2553r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Make mdspan size_type controllable") >  >() },
    { "p2554r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("C-Array Interoperability of MDSpan") >  >() },
    { "p2555r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("DxxxxR0: Naming improvements for std::execution") >  >() },
    { "p2555r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Naming improvements for std::execution") >  >() },
    { "p2557r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1547")) >(), wxS("WG21 2022-02 Virtual Meeting Record of Discussion.docx") >  >() },
    { "p2558r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Add @, $, and ` to the basic character set") >  >() },
    { "p2558r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Add @, $, and ` to the basic character set") >  >() },
    { "p2558r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Add @, $, and ` to the basic character set") >  >() },
    { "p2559r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Plan for Concurrency Technical Specification Version 2") >  >() },
    { "p2559r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("Plan for Concurrency Technical Specification Version 2") >  >() },
    { "p2560r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author633")) >(), wxS("Title515") >  >() },
    { "p2561r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("operator??") >  >() },
    { "p2561r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("An error propagation operator") >  >() },
    { "p2561r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A control flow operator") >  >() },
    { "p2562r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1758")) >(), wxS("Title1364") >  >() },
    { "p2562r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author220")) >(), wxS("Title179") >  >() },
    { "p2564r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry \u201CPatch\u201D")) >(), wxS("consteval needs to propagate up") >  >() },
    { "p2564r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry \u201CPatch\u201D")) >(), wxS("consteval needs to propagate up") >  >() },
    { "p2564r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry \u201CPatch\u201D")) >(), wxS("consteval needs to propagate up") >  >() },
    { "p2564r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry \u201CPatch\u201D")) >(), wxS("consteval needs to propagate up") >  >() },
    { "p2565r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bret Brown")) >(), wxS("D2565R0_Supporting_User-Defined_Attributes") >  >() },
    { "p2568r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P2568R0 Proposal of std::map::at_ptr") >  >() },
    { "p2569r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1114")) >(), wxS("N2797: *_HAS_SUBNORM==0 implies what?") >  >() },
    { "p2570r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("On side effects in contract annotations") >  >() },
    { "p2570r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract predicates that are not predicates") >  >() },
    { "p2570r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract predicates that are not predicates") >  >() },
    { "p2572r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("std::format() fill character allowances;proposed resolution for LWG issues 3576 and 3639") >  >() },
    { "p2572r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("std::format() fill character allowances;proposed resolution for LWG issues 3576 and 3639") >  >() },
    { "p2573r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("<code>= delete(\"should have a reason\");</code>") >  >() },
    { "p2573r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("= delete(\"should have a reason\");") >  >() },
    { "p2573r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("= delete(\"should have a reason\");") >  >() },
    { "p2574r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-05 Library Evolution Polls") >  >() },
    { "p2575r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-05 Library Evolution Poll Outcomes") >  >() },
    { "p2576r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author446")) >(), wxS("The constexpr specifier for object definitions") >  >() },
    { "p2577r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Discovering C++ modules in pre-built library releases") >  >() },
    { "p2577r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Discovering C++ modules in pre-built library releases") >  >() },
    { "p2577r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Discovering C++ modules in pre-built library releases") >  >() },
    { "p2579r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1599") >  >() },
    { "p2580r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paolo Di")) >(), wxS("Tuple protocol for C-style arrays T[N]") >  >() },
    { "p2581r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Specifying the Interoperability of Binary Module Interface Files") >  >() },
    { "p2581r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Specifying the Interoperability of Built Module Interface Files") >  >() },
    { "p2581r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Specifying the Interoperability of Built Module Interface Files") >  >() },
    { "p2582r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1543")) >(), wxS("Title1196") >  >() },
    { "p2582r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1047")) >(), wxS("Title841") >  >() },
    { "p2584r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1211") >  >() },
    { "p2585r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Improve default container formatting") >  >() },
    { "p2585r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Improve default container formatting") >  >() },
    { "p2586r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title931") >  >() },
    { "p2587r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("<code>to_string</code> or not <code>to_string</code>") >  >() },
    { "p2587r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("D2587R1: <code>to_string</code> or not <code>to_string</code>") >  >() },
    { "p2587r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("<code>to_string</code> or not <code>to_string</code>") >  >() },
    { "p2587r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("<code>to_string</code> or not <code>to_string</code>") >  >() },
    { "p2588r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("barriers phase completion guarantees - HackMD") >  >() },
    { "p2588r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("barriers phase completion guarantees") >  >() },
    { "p2588r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("barriers phase completion guarantees") >  >() },
    { "p2588r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("barriers phase completion guarantees - HackMD") >  >() },
    { "p2589r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1477") >  >() },
    { "p2589r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1633") >  >() },
    { "p2590r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author949")) >(), wxS("Title769") >  >() },
    { "p2590r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author546")) >(), wxS("Title445") >  >() },
    { "p2590r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author621")) >(), wxS("Title506") >  >() },
    { "p2591r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Concatenation of strings and string views") >  >() },
    { "p2591r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Concatenation of strings and string views") >  >() },
    { "p2591r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Concatenation of strings and string views") >  >() },
    { "p2591r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Concatenation of strings and string views") >  >() },
    { "p2591r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Concatenation of strings and string views") >  >() },
    { "p2591r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Concatenation of strings and string views") >  >() },
    { "p2592r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Hashing support for std::chrono value classes") >  >() },
    { "p2592r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Hashing support for std::chrono value classes") >  >() },
    { "p2592r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Hashing support for std::chrono value classes") >  >() },
    { "p2592r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Hashing support for std::chrono value classes") >  >() },
    { "p2593r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Allowing static_assert(false)") >  >() },
    { "p2593r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Allowing static_assert(false)") >  >() },
    { "p2594r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1638")) >(), wxS("Title1270") >  >() },
    { "p2594r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1060")) >(), wxS("Title852") >  >() },
    { "p2596r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Improve std::hive::reshape") >  >() },
    { "p2598r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1509")) >(), wxS("\"Changing scope for lambda trailing-return-type\" (P2036) should not be a DR") >  >() },
    { "p2599r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title480") >  >() },
    { "p2599r1" , RevList< Rev< 1u, Arr64< Hash(wxS("__ 1")) >(), wxS("Title1111") >  >() },
    { "p2599r2" , RevList< Rev< 2u, Arr64< Hash(wxS("__ 1")) >(), wxS("Title1142") >  >() },
    { "p2600r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("A minimal ADL restriction to avoid ill-formed template instantiation [P2600R0]") >  >() },
    { "p2601r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Justin Cooke")) >(), wxS("Title1290") >  >() },
    { "p2601r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Justin Cooke")) >(), wxS("Title295") >  >() },
    { "p2602r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Poison Pills are Too Toxic") >  >() },
    { "p2602r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Poison Pills are Too Toxic") >  >() },
    { "p2602r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Poison Pills are Too Toxic") >  >() },
    { "p2603r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1419")) >(), wxS("member function pointer to function pointer - HackMD") >  >() },
    { "p2603r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1693")) >(), wxS("member function pointer to function pointer - HackMD") >  >() },
    { "p2604r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("mdspan: rename pointer and contiguous") >  >() },
    { "p2605r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2022-01-12 through 2022-06-08") >  >() },
    { "p2607r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author596")) >(), wxS("Title487") >  >() },
    { "p2608r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Justin Cooke")) >(), wxS("Title961") >  >() },
    { "p2609r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Eivind")) >(), wxS("Relaxing Ranges Just A Smidge") >  >() },
    { "p2609r1" , RevList< Rev< 1u, Arr64< Hash(wxS("John Eivind")) >(), wxS("Relaxing Ranges Just A Smidge") >  >() },
    { "p2609r2" , RevList< Rev< 2u, Arr64< Hash(wxS("John Eivind")) >(), wxS("Relaxing Ranges Just A Smidge") >  >() },
    { "p2609r3" , RevList< Rev< 3u, Arr64< Hash(wxS("John Eivind")) >(), wxS("Relaxing Ranges Just A Smidge") >  >() },
    { "p2610r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-07 Library Evolution Polls") >  >() },
    { "p2611r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-07 Library Evolution Poll Outcomes") >  >() },
    { "p2613r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("Add the missing empty to mdspan") >  >() },
    { "p2613r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("Add the missing empty to mdspan") >  >() },
    { "p2614r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Deprecate numeric_limits::has_denorm [P2614R0]") >  >() },
    { "p2614r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Deprecate numeric_limits::has_denorm [P2614R1]") >  >() },
    { "p2614r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Deprecate numeric_limits::has_denorm [P2614R2]") >  >() },
    { "p2615r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1845")) >(), wxS("Meaningful exports") >  >() },
    { "p2615r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1126")) >(), wxS("Meaningful exports") >  >() },
    { "p2616r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author846")) >(), wxS("Making std::atomic notification/wait operations usable in more situations") >  >() },
    { "p2616r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author893")) >(), wxS("Revision History") >  >() },
    { "p2616r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author630")) >(), wxS("Making std::atomic notification/wait operations usable in more situations") >  >() },
    { "p2616r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author62")) >(), wxS("Making std::atomic notification/wait operations usable in more situations") >  >() },
    { "p2616r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author77")) >(), wxS("Making std::atomic notification/wait operations usable in more situations") >  >() },
    { "p2617r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jens Maurer")) >(), wxS("Responses to NB comments on DTS 12907 \"Extensions to C++ forTransactional Memory Version 2\"") >  >() },
    { "p2618r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1010")) >(), wxS("C++ Standard Library Issues to be moved in Virtual Plenary, Jul. 2022") >  >() },
    { "p2620r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1318") >  >() },
    { "p2620r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1519") >  >() },
    { "p2620r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1035") >  >() },
    { "p2621r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1467") >  >() },
    { "p2621r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title355") >  >() },
    { "p2621r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1045") >  >() },
    { "p2621r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title249") >  >() },
    { "p2622r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1800")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2623r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1210")) >(), wxS("implicit constant initialization - HackMD") >  >() },
    { "p2623r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2173")) >(), wxS("implicit constant initialization - HackMD") >  >() },
    { "p2623r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1022")) >(), wxS("implicit constant initialization - HackMD") >  >() },
    { "p2624r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Justin Cooke")) >(), wxS("Title220") >  >() },
    { "p2625r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2154")) >(), wxS("Life without operator()") >  >() },
    { "p2626r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1173") >  >() },
    { "p2627r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1401")) >(), wxS("P2627 WG21 2022-07 Virtual Meeting Record of Discussion.docx") >  >() },
    { "p2628r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Extend barrier APIs with memory_order") >  >() },
    { "p2629r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("barrier token-less split arrive/wait") >  >() },
    { "p2630r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Submdspan") >  >() },
    { "p2630r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Submdspan") >  >() },
    { "p2630r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Submdspan") >  >() },
    { "p2630r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Submdspan") >  >() },
    { "p2630r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Submdspan") >  >() },
    { "p2631r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1438")) >(), wxS("Publish TS Library Fundamentals 3 Now!") >  >() },
    { "p2632r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title792") >  >() },
    { "p2633r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Justin Cooke")) >(), wxS("Title230") >  >() },
    { "p2634r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author447")) >(), wxS("Title376") >  >() },
    { "p2635r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1803")) >(), wxS("Title1399") >  >() },
    { "p2636r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("References to ranges should always be viewable") >  >() },
    { "p2636r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("References to ranges should always be viewable") >  >() },
    { "p2636r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hannes Hauswedell")) >(), wxS("References to ranges should always be viewable") >  >() },
    { "p2637r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Member visit and apply") >  >() },
    { "p2637r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Member visit") >  >() },
    { "p2637r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Member visit") >  >() },
    { "p2637r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Member visit") >  >() },
    { "p2638r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1842")) >(), wxS("Title1430") >  >() },
    { "p2639r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Torben Thaysen")) >(), wxS("Title1158") >  >() },
    { "p2640r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author913")) >(), wxS("Modules: Inner-scope Namespace Entities: Exported or Not?") >  >() },
    { "p2640r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author789")) >(), wxS("Modules: Inner-scope Namespace Entities: Exported or Not?") >  >() },
    { "p2640r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1772")) >(), wxS("Modules: Inner-scope Namespace Entities: Exported or Not?") >  >() },
    { "p2641r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Checking if a union alternative is active") >  >() },
    { "p2641r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Checking if a union alternative is active") >  >() },
    { "p2641r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Checking if a union alternative is active") >  >() },
    { "p2641r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Checking if a union alternative is active") >  >() },
    { "p2641r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Checking if a union alternative is active") >  >() },
    { "p2642r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Padded mdspan layouts") >  >() },
    { "p2642r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Padded mdspan layouts") >  >() },
    { "p2642r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Padded mdspan layouts") >  >() },
    { "p2642r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Padded mdspan layouts") >  >() },
    { "p2642r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Padded mdspan layouts") >  >() },
    { "p2642r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Padded mdspan layouts") >  >() },
    { "p2642r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Title1619") >  >() },
    { "p2643r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Improving C++ concurrency features") >  >() },
    { "p2643r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Improving C++ concurrency features") >  >() },
    { "p2643r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Improving C++ concurrency features") >  >() },
    { "p2644r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Final Fix of Broken Range-based for Loop") >  >() },
    { "p2644r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Final Fix of Broken Range-Based for Loop") >  >() },
    { "p2645r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("path_view: a design that took a wrong turn") >  >() },
    { "p2645r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("path_view: a design that took a wrong turn") >  >() },
    { "p2646r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Parsa Amini")) >(), wxS("Title624") >  >() },
    { "p2647r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Permitting static constexpr variables in constexpr functions") >  >() },
    { "p2647r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Permitting static constexpr variables in constexpr functions") >  >() },
    { "p2648r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-10 Library Evolution Polls") >  >() },
    { "p2649r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-10 Library Evolution Poll Outcomes") >  >() },
    { "p2650r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2022-11 Library Evolution Polls") >  >() },
    { "p2652r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2009")) >(), wxS("Disallow user specialization of allocator_traits") >  >() },
    { "p2652r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author190")) >(), wxS("Disallow User Specialization of allocator_traits") >  >() },
    { "p2652r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author61")) >(), wxS("Disallow User Specialization of allocator_traits") >  >() },
    { "p2653r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2048")) >(), wxS("Title1589") >  >() },
    { "p2653r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1881")) >(), wxS("Title1458") >  >() },
    { "p2654r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Macros And Standard Library Modules") >  >() },
    { "p2654r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Macros And Standard Library Modules") >  >() },
    { "p2655r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`common_reference_t` of `reference_wrapper` Should Be a Reference Type") >  >() },
    { "p2655r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`common_reference_t` of `reference_wrapper` Should Be a Reference Type") >  >() },
    { "p2655r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`common_reference_t` of `reference_wrapper` Should Be aReference Type") >  >() },
    { "p2655r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`common_reference_t` of `reference_wrapper` Should Be aReference Type") >  >() },
    { "p2656r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("C++ Ecosystem International Standard") >  >() },
    { "p2656r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("C++ Ecosystem International Standard") >  >() },
    { "p2656r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("C++ Ecosystem International Standard") >  >() },
    { "p2656r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("C++ Ecosystem International Standard") >  >() },
    { "p2656r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("WITHDRAWN: C++ Ecosystem International Standard") >  >() },
    { "p2657r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author101")) >(), wxS("C++ is the next C++ - HackMD") >  >() },
    { "p2657r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1")) >(), wxS("C++ is the next C++ - HackMD") >  >() },
    { "p2658r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1042")) >(), wxS("temporary storage class specifiers - HackMD") >  >() },
    { "p2658r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1095")) >(), wxS("temporary storage class specifiers - HackMD") >  >() },
    { "p2659r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1545")) >(), wxS("A Proposal to Publish a Technical Specification for Contracts") >  >() },
    { "p2659r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author444")) >(), wxS("A Proposal to Publish a Technical Specificationfor Contracts") >  >() },
    { "p2659r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author471")) >(), wxS("A Proposal to Publish a Technical Specificationfor Contracts") >  >() },
    { "p2660r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author909")) >(), wxS("C++ Information technology Extensions for contracts") >  >() },
    { "p2661r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author206")) >(), wxS("Miscellaneous amendments to the Contracts TS") >  >() },
    { "p2662r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title933") >  >() },
    { "p2662r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title113") >  >() },
    { "p2662r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title235") >  >() },
    { "p2662r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1450") >  >() },
    { "p2663r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author83")) >(), wxS("Title") >  >() },
    { "p2663r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author107")) >(), wxS("Title") >  >() },
    { "p2663r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Interleaved complex values support in std::simd") >  >() },
    { "p2663r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Interleaved complex values support in std::simd") >  >() },
    { "p2663r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Interleaved complex values support in std::simd") >  >() },
    { "p2663r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Interleaved complex values support in std::simd") >  >() },
    { "p2663r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Interleaved complex values support in std::simd") >  >() },
    { "p2663r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Interleaved complex values support in std::simd") >  >() },
    { "p2664r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author149")) >(), wxS("Title") >  >() },
    { "p2664r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1391")) >(), wxS("Title") >  >() },
    { "p2664r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend std::simd with permutation API") >  >() },
    { "p2664r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend std::simd with permutation API") >  >() },
    { "p2664r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend std::simd with permutation API") >  >() },
    { "p2664r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend std::simd with permutation API") >  >() },
    { "p2664r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend std::simd with permutation API") >  >() },
    { "p2664r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend std::simd with permutation API") >  >() },
    { "p2664r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend std::simd with permutation API") >  >() },
    { "p2664r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend std::simd with permutation API") >  >() },
    { "p2665r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Title364") >  >() },
    { "p2666r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Title740") >  >() },
    { "p2667r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Title1326") >  >() },
    { "p2668r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Title485") >  >() },
    { "p2669r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Title518") >  >() },
    { "p2670r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Non-transient constexpr allocation") >  >() },
    { "p2670r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Non-transient constexpr allocation") >  >() },
    { "p2671r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Syntax Choices for Generalized Pack Declaration and Usage") >  >() },
    { "p2672r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Exploring the Design Space for a Pipeline Operator") >  >() },
    { "p2673r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author713")) >(), wxS("Title575") >  >() },
    { "p2674r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2057")) >(), wxS("Title1595") >  >() },
    { "p2674r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1480")) >(), wxS("Title1151") >  >() },
    { "p2675r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1607")) >(), wxS("LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)") >  >() },
    { "p2675r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author674")) >(), wxS("LWG3780: The Paper (format's width estimation is too approximate and not forward compatible)") >  >() },
    { "p2676r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dave Abrahams")) >(), wxS("The Val Object Model") >  >() },
    { "p2677r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Title701") >  >() },
    { "p2677r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Title957") >  >() },
    { "p2678r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2022-06-22 through 2022-09-28") >  >() },
    { "p2679r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1456")) >(), wxS("Title1135") >  >() },
    { "p2679r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author135")) >(), wxS("Title116") >  >() },
    { "p2679r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1125")) >(), wxS("Title898") >  >() },
    { "p2680r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title1248") >  >() },
    { "p2680r1" , RevList< Rev< 1u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title870") >  >() },
    { "p2681r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title1286") >  >() },
    { "p2681r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Richard Dosselmann")) >(), wxS("Title170") >  >() },
    { "p2682r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title489") >  >() },
    { "p2683r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title649") >  >() },
    { "p2684r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1451") >  >() },
    { "p2685r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1778")) >(), wxS("Language Support For Scoped Allocators") >  >() },
    { "p2685r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Language Support For Scoped Objects") >  >() },
    { "p2686r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title39") >  >() },
    { "p2686r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title935") >  >() },
    { "p2686r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title707") >  >() },
    { "p2686r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1143") >  >() },
    { "p2686r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1048") >  >() },
    { "p2686r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title746") >  >() },
    { "p2687r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1630")) >(), wxS("Title1263") >  >() },
    { "p2688r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Park")) >(), wxS("Pattern Matching Discussion for Kona 2022") >  >() },
    { "p2688r1" , RevList< Rev< 1u, Arr64< Hash(wxS("structure_map")) >(), wxS("Pattern Matching: Expression") >  >() },
    { "p2688r2" , RevList< Rev< 2u, Arr64< Hash(wxS("structure_map")) >(), wxS("Pattern Matching: `match` Expression") >  >() },
    { "p2688r3" , RevList< Rev< 3u, Arr64< Hash(wxS("structure_map")) >(), wxS("Pattern Matching: `match` Expression") >  >() },
    { "p2688r4" , RevList< Rev< 4u, Arr64< Hash(wxS("structure_map")) >(), wxS("Pattern Matching: `match` Expression") >  >() },
    { "p2688r5" , RevList< Rev< 5u, Arr64< Hash(wxS("structure_map")) >(), wxS("Pattern Matching: `match` Expression") >  >() },
    { "p2689r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("atomic_accessor") >  >() },
    { "p2689r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Atomic Refs Bounded to Memory Orderings & Atomic Accessors") >  >() },
    { "p2689r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Atomic Refs Bound to Memory Orderings & Atomic Accessors") >  >() },
    { "p2689r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Atomic Refs Bound to Memory Orderings & Atomic Accessors") >  >() },
    { "p2690r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++17 parallel algorithms and P2300") >  >() },
    { "p2690r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1988")) >(), wxS("Corporate PowerPoint Template Use Intel Clear For All Text (General Employee Usage)") >  >() },
    { "p2691r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author284")) >(), wxS("Title236") >  >() },
    { "p2692r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("Generic Programming is just Programming") >  >() },
    { "p2693r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1186") >  >() },
    { "p2693r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title765") >  >() },
    { "p2695r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author160")) >(), wxS("A proposed plan for contracts in C++") >  >() },
    { "p2695r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author580")) >(), wxS("A proposed plan for contracts in C++") >  >() },
    { "p2696r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("Introduce Cpp17Swappable as additional convenience requirements") >  >() },
    { "p2697r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1305") >  >() },
    { "p2697r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("Title1162") >  >() },
    { "p2698r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2131")) >(), wxS("Title1644") >  >() },
    { "p2700r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1893")) >(), wxS("Questions on P2680 Contracts for C++: Prioritizing Safety") >  >() },
    { "p2700r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author431")) >(), wxS("Questions on P2680 Contracts for C++: Prioritizing Safety") >  >() },
    { "p2701r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Translating Linker Input Files to Module Metadata Files") >  >() },
    { "p2702r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Specifying Importable Headers") >  >() },
    { "p2703r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1810")) >(), wxS("C++ Standard Library Issues to be moved in Kona") >  >() },
    { "p2704r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author560")) >(), wxS("C++ Standard Library Immediate Issues to be moved in Kona, Nov. 2022") >  >() },
    { "p2705r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1359")) >(), wxS("C++ Library Fundamentals TS Issues to be moved in Kona") >  >() },
    { "p2706r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author857")) >(), wxS("Drafting for US 26-061") >  >() },
    { "p2708r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1734")) >(), wxS("No Further Fundamentals TSes") >  >() },
    { "p2708r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author501")) >(), wxS("No Further Fundamentals TSes") >  >() },
    { "p2709r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author80")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2710r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1876")) >(), wxS("Core \"NB\" Issues") >  >() },
    { "p2711r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author267")) >(), wxS("Making multi-param (and other converting) constructors of views explicit") >  >() },
    { "p2711r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author731")) >(), wxS("Making multi-param constructors of views explicit") >  >() },
    { "p2712r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title665") >  >() },
    { "p2713r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Escaping improvements in std::format") >  >() },
    { "p2713r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Escaping improvements in std::format") >  >() },
    { "p2714r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Bind front and back to NTTP callables - HackMD") >  >() },
    { "p2714r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Bind front and back to NTTP callables - HackMD") >  >() },
    { "p2717r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Tool Introspection") >  >() },
    { "p2717r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Tool Introspection") >  >() },
    { "p2717r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Tool Introspection") >  >() },
    { "p2717r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Tool Introspection") >  >() },
    { "p2717r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Tool Introspection") >  >() },
    { "p2717r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Tool Introspection") >  >() },
    { "p2717r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("WITHDRAWN: Tool Introspection") >  >() },
    { "p2718r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nicolai Josuttis")) >(), wxS("D2718R0: Wording for P2644R1 Fix for Range-based for Loop") >  >() },
    { "p2719r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Type-aware allocation and deallocation functions") >  >() },
    { "p2719r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Type-aware allocation and deallocation functions") >  >() },
    { "p2719r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Type-aware allocation and deallocation functions") >  >() },
    { "p2719r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Type-aware allocation and deallocation functions") >  >() },
    { "p2719r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Type-aware allocation and deallocation functions") >  >() },
    { "p2721r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("P2721R0") >  >() },
    { "p2722r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author14")) >(), wxS("Beyond operator()") >  >() },
    { "p2723r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Zero-initialize objects of automatic storage duration") >  >() },
    { "p2723r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Zero-initialize objects of automatic storage duration") >  >() },
    { "p2724r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author629")) >(), wxS("constant dangling - HackMD") >  >() },
    { "p2724r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2008")) >(), wxS("constant dangling - HackMD") >  >() },
    { "p2725r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::integral_constant` Literals") >  >() },
    { "p2725r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::integral_constant` Literals") >  >() },
    { "p2726r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Better `std::tuple` Indexing") >  >() },
    { "p2727r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::iterator_interface`") >  >() },
    { "p2727r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::iterator_interface`") >  >() },
    { "p2727r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::iterator_interface`") >  >() },
    { "p2727r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::iterator_interface`") >  >() },
    { "p2727r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("`std::iterator_interface`") >  >() },
    { "p2728r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2728r7" , RevList< Rev< 7u, Arr64< Hash(wxS("1")) >(), wxS("Unicode in the Library, Part 1: UTF Transcoding") >  >() },
    { "p2729r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Unicode in the Library, Part 2: Normalization") >  >() },
    { "p2730r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author692")) >(), wxS("variable scope - HackMD") >  >() },
    { "p2730r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author119")) >(), wxS("variable scope - HackMD") >  >() },
    { "p2732r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1648")) >(), wxS("P2732 WG21 2022-11 Kona Record of Discussion.docx") >  >() },
    { "p2733r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix handling of empty specifiers in std::format") >  >() },
    { "p2733r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix handling of empty specifiers in std::format") >  >() },
    { "p2733r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix handling of empty specifiers in std::format") >  >() },
    { "p2733r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix handling of empty specifiers in std::format") >  >() },
    { "p2734r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc Mutz")) >(), wxS("Title140") >  >() },
    { "p2735r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author775")) >(), wxS("Title632") >  >() },
    { "p2736r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title78") >  >() },
    { "p2736r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title464") >  >() },
    { "p2737r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Proposal of Condition-centric Contracts Syntax") >  >() },
    { "p2738r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title638") >  >() },
    { "p2738r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title135") >  >() },
    { "p2739r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author583")) >(), wxS("Title476") >  >() },
    { "p2740r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author693")) >(), wxS("Simpler implicit dangling resolution - HackMD") >  >() },
    { "p2740r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author552")) >(), wxS("Simpler implicit dangling resolution - HackMD") >  >() },
    { "p2740r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2196")) >(), wxS("Simpler implicit dangling resolution - HackMD") >  >() },
    { "p2741r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title863") >  >() },
    { "p2741r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title416") >  >() },
    { "p2741r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1197") >  >() },
    { "p2741r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title149") >  >() },
    { "p2742r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author327")) >(), wxS("indirect dangling identification - HackMD") >  >() },
    { "p2742r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author427")) >(), wxS("indirect dangling identification - HackMD") >  >() },
    { "p2742r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1228")) >(), wxS("indirect dangling identification - HackMD") >  >() },
    { "p2743r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1055")) >(), wxS("Contracts for C++: Priorotizing Safety") >  >() },
    { "p2746r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author981")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author968")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1176")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1957")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author512")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1135")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1655")) >(), wxS("Fenv rounding") >  >() },
    { "p2746r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1467")) >(), wxS("Fenv rounding") >  >() },
    { "p2747r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Limited support for constexpr void*") >  >() },
    { "p2747r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("constexpr placement new") >  >() },
    { "p2747r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("constexpr placement new") >  >() },
    { "p2748r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Disallow Binding a Returned glvalue to a Temporary") >  >() },
    { "p2748r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Disallow Binding a Returned Glvalue to a Temporary") >  >() },
    { "p2748r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Disallow Binding a Returned Glvalue to a Temporary") >  >() },
    { "p2748r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Disallow Binding a Returned Glvalue to a Temporary") >  >() },
    { "p2748r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Disallow Binding a Returned Glvalue to a Temporary") >  >() },
    { "p2748r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Disallow Binding a Returned Glvalue to a Temporary") >  >() },
    { "p2749r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1686") >  >() },
    { "p2750r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1361")) >(), wxS("C Dangling Reduction - HackMD") >  >() },
    { "p2750r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2055")) >(), wxS("C Dangling Reduction - HackMD") >  >() },
    { "p2750r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1642")) >(), wxS("C Dangling Reduction - HackMD") >  >() },
    { "p2751r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title620") >  >() },
    { "p2751r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1638") >  >() },
    { "p2752r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Static storage for braced initializers") >  >() },
    { "p2752r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Static storage for braced initializers") >  >() },
    { "p2752r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Static storage for braced initializers") >  >() },
    { "p2752r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Static storage for braced initializers") >  >() },
    { "p2754r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jake Fevold")) >(), wxS("Deconstructing the Avoidance of Uninitialized Reads of AutoVariables") >  >() },
    { "p2755r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1282") >  >() },
    { "p2755r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title309") >  >() },
    { "p2756r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("D2756R0 Proposal of Simple Contract Side Effect Semantics") >  >() },
    { "p2757r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Type-checking format args") >  >() },
    { "p2757r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Type-checking format args") >  >() },
    { "p2757r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Type-checking format args") >  >() },
    { "p2757r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Type-checking format args") >  >() },
    { "p2758r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Emitting messages at compile time") >  >() },
    { "p2758r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Emitting messages at compile time") >  >() },
    { "p2758r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Emitting messages at compile time") >  >() },
    { "p2758r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Emitting messages at compile time") >  >() },
    { "p2758r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Emitting messages at compile time") >  >() },
    { "p2758r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Emitting messages at compile time") >  >() },
    { "p2759r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author818")) >(), wxS("D2759R0: DG Opinion on Safety for ISO C++") >  >() },
    { "p2759r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1843")) >(), wxS("DG Opinion on Safety for ISO C++") >  >() },
    { "p2760r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A Plan for C++26 Ranges") >  >() },
    { "p2760r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A Plan for C++26 Ranges") >  >() },
    { "p2761r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author996")) >(), wxS("If structured binding") >  >() },
    { "p2761r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1631")) >(), wxS("If structured binding") >  >() },
    { "p2761r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1552")) >(), wxS("Evaluating structured binding as a condition") >  >() },
    { "p2761r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1287")) >(), wxS("Title998") >  >() },
    { "p2762r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Sender/Receiver Interface For Networking") >  >() },
    { "p2762r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Sender/Receiver Interface For Networking") >  >() },
    { "p2762r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Sender/Receiver Interface For Networking") >  >() },
    { "p2763r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("layout_stride static extents default constructor fix") >  >() },
    { "p2763r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("layout_stride static extents default constructor fix") >  >() },
    { "p2764r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1593") >  >() },
    { "p2765r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Title1342") >  >() },
    { "p2766r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2022-10-12 through 2022-12-14") >  >() },
    { "p2767r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("flat_map/flat_set omnibus") >  >() },
    { "p2767r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("flat_map/flat_set omnibus") >  >() },
    { "p2767r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("flat_map/flat_set omnibus") >  >() },
    { "p2769r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("get_element customization point object") >  >() },
    { "p2769r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("get_element customization point object") >  >() },
    { "p2769r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("get_element customization point object") >  >() },
    { "p2769r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("get_element customization point object") >  >() },
    { "p2770r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Stashing stashing iterators for proper flattening") >  >() },
    { "p2771r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Neumann")) >(), wxS("Towards memory safety in C++") >  >() },
    { "p2771r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Thomas Neumann")) >(), wxS("R2771R1: Towards memory safety in C++") >  >() },
    { "p2772r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::integral_constant literals do not suffice constexpr_t? [P2772R0]") >  >() },
    { "p2773r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1068") >  >() },
    { "p2774r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("D2774 - Scoped thread-local storage") >  >() },
    { "p2774r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("D2774 - Concurrent object pool") >  >() },
    { "p2775r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2023-05 Library Evolution Polls") >  >() },
    { "p2776r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("2023-05 Library Evolution Poll Outcomes") >  >() },
    { "p2779r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Make basic_string_views range construction conditionally explicit") >  >() },
    { "p2779r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("D2779R1: Make basic_string_views range construction conditionally explicit") >  >() },
    { "p2780r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author990")) >(), wxS("Caller-side precondition checking, and Eval_and_throw") >  >() },
    { "p2781r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("`std::constexpr_v`") >  >() },
    { "p2781r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("`std::constexpr_v`") >  >() },
    { "p2781r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("`std::constexpr_v`") >  >() },
    { "p2781r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("`std::constant_wrapper`") >  >() },
    { "p2781r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("`std::constant_wrapper`") >  >() },
    { "p2781r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("`std::constant_wrapper`") >  >() },
    { "p2781r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("`std::constant_wrapper`") >  >() },
    { "p2781r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("`std::constant_wrapper`") >  >() },
    { "p2782r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("A proposal for a type trait to detect if value initialization can be achieved by zero-filling") >  >() },
    { "p2784r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Not halting the program after detected contract violation") >  >() },
    { "p2785r0" , RevList< Rev< 0u, Arr64< Hash(wxS("S\u00E9bastien Bini")) >(), wxS("D2785R1: Relocating prvalues") >  >() },
    { "p2785r1" , RevList< Rev< 1u, Arr64< Hash(wxS("S\u00E9bastien Bini")) >(), wxS("Relocating prvalues") >  >() },
    { "p2785r2" , RevList< Rev< 2u, Arr64< Hash(wxS("S\u00E9bastien Bini")) >(), wxS("D2785R2: Relocating prvalues") >  >() },
    { "p2785r3" , RevList< Rev< 3u, Arr64< Hash(wxS("S\u00E9bastien Bini")) >(), wxS("Relocating prvalues") >  >() },
    { "p2786r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial relocatability options") >  >() },
    { "p2786r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial relocatability options") >  >() },
    { "p2786r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial relocatability options") >  >() },
    { "p2786r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2786r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Trivial Relocatability For C++26") >  >() },
    { "p2787r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1679")) >(), wxS("Title1304") >  >() },
    { "p2787r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author619")) >(), wxS("Title505") >  >() },
    { "p2788r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author835")) >(), wxS("Linkage for modular constants") >  >() },
    { "p2789r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1858")) >(), wxS("C++ Standard Library Issues to be moved in Issaquah, Feb. 2023") >  >() },
    { "p2790r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author686")) >(), wxS("C++ Standard Library Immediate Issues to be moved in Issaquah, Feb. 2023") >  >() },
    { "p2791r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("P2791R0") >  >() },
    { "p2795r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1344")) >(), wxS("Correct and incorrect code, and erroneous behaviour") >  >() },
    { "p2795r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author963")) >(), wxS("Erroneous behaviour for uninitialized reads") >  >() },
    { "p2795r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1417")) >(), wxS("Erroneous behaviour for uninitialized reads") >  >() },
    { "p2795r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author363")) >(), wxS("Erroneous behaviour for uninitialized reads") >  >() },
    { "p2795r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author53")) >(), wxS("Erroneous behaviour for uninitialized reads") >  >() },
    { "p2795r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author158")) >(), wxS("Erroneous behaviour for uninitialized reads") >  >() },
    { "p2796r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author719")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2797r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Proposed resolution for CWG2692 Static and explicit objectmember functions with the same parameter-type-lists") >  >() },
    { "p2798r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christian Trott")) >(), wxS("Fix layout mappings all static extent default constructor") >  >() },
    { "p2799r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Closed ranges may be a problem; breaking counted_iterator is not the solution") >  >() },
    { "p2800r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1124")) >(), wxS("Dependency flag soup needs some fiber") >  >() },
    { "p2802r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("P1385R7") >  >() },
    { "p2803r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1779")) >(), wxS("std::simd") >  >() },
    { "p2805r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author671")) >(), wxS("Slide 1") >  >() },
    { "p2806r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("do expressions") >  >() },
    { "p2806r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("do expressions") >  >() },
    { "p2806r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("do expressions") >  >() },
    { "p2806r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("do expressions") >  >() },
    { "p2807r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author8")) >(), wxS("Title9") >  >() },
    { "p2808r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author118")) >(), wxS("Internal linkage in the global module") >  >() },
    { "p2809r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Trivial infinite loops are not Undefined Behavior") >  >() },
    { "p2809r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Trivial infinite loops are not Undefined Behavior") >  >() },
    { "p2809r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Trivial infinite loops are not Undefined Behavior") >  >() },
    { "p2809r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("Trivial infinite loops are not Undefined Behavior") >  >() },
    { "p2810r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("is_debugger_present is_replaceable") >  >() },
    { "p2810r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("is_debugger_present is_replaceable") >  >() },
    { "p2810r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("is_debugger_present is_replaceable") >  >() },
    { "p2810r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("is_debugger_present is_replaceable") >  >() },
    { "p2810r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("is_debugger_present is_replaceable") >  >() },
    { "p2811r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title471") >  >() },
    { "p2811r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title623") >  >() },
    { "p2811r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title141") >  >() },
    { "p2811r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title134") >  >() },
    { "p2811r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title412") >  >() },
    { "p2811r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title975") >  >() },
    { "p2811r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title248") >  >() },
    { "p2811r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title268") >  >() },
    { "p2812r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("P2812: P1673R11 LEWG presentation") >  >() },
    { "p2814r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability Comparing P1144 with P2786") >  >() },
    { "p2814r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Trivial Relocatability Comparing P1144 with P2786") >  >() },
    { "p2815r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2029")) >(), wxS("Pointers are sometimes just bags of bits") >  >() },
    { "p2816r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author810")) >(), wxS("Upcoming Changes to C++") >  >() },
    { "p2817r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("The idea behind the contracts MVP") >  >() },
    { "p2818r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Uniform Call Syntax for explicit-object memberfunctions") >  >() },
    { "p2819r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("D2819 - Add tuple protocol to complex") >  >() },
    { "p2819r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("D2819 - Add tuple protocol to complex") >  >() },
    { "p2819r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("D2819 - Add tuple protocol to complex") >  >() },
    { "p2821r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1235")) >(), wxS("span.at() - HackMD") >  >() },
    { "p2821r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1103")) >(), wxS("span.at() - HackMD") >  >() },
    { "p2821r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1116")) >(), wxS("span.at() - HackMD") >  >() },
    { "p2821r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author535")) >(), wxS("span.at() - HackMD") >  >() },
    { "p2821r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author304")) >(), wxS("span.at() - HackMD") >  >() },
    { "p2821r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author2192")) >(), wxS("span.at() - HackMD") >  >() },
    { "p2822r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author184")) >(), wxS("Providing user control of associated entities of class types") >  >() },
    { "p2822r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1402")) >(), wxS("Providing user control of associated entities of class types") >  >() },
    { "p2822r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author274")) >(), wxS("Providing user control of associated entities of class types") >  >() },
    { "p2824r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author200")) >(), wxS("P2824 WG21 2023-02 Issaquah Record of Discussion.docx") >  >() },
    { "p2825r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("calltarget(unevaluated-call-expression)") >  >() },
    { "p2825r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("declcall(unevaluated-postfix-expression)") >  >() },
    { "p2825r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("declcall(unevaluated-postfix-expression)") >  >() },
    { "p2825r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Overload resolution hook: declcall( unevaluated-call-expression)") >  >() },
    { "p2825r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Overload resolution hook: declcall( unevaluated-call-expression)") >  >() },
    { "p2825r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Overload resolution hook: declcall( unevaluated-call-expression)") >  >() },
    { "p2826r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Replacement function") >  >() },
    { "p2826r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Replacement function") >  >() },
    { "p2826r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ga\u0161per A\u017Eman")) >(), wxS("Replacement function") >  >() },
    { "p2827r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Floating-point overflow and underflow in from_chars (LWG 3081) - HackMD") >  >() },
    { "p2827r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Floating-point overflow and underflow in `from_chars` (LWG 3081) - HackMD") >  >() },
    { "p2828r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author653")) >(), wxS("Copy elision for direct-initialization with a conversion function (Coreissue 2327)") >  >() },
    { "p2828r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author466")) >(), wxS("Copy elision for direct-initialization with a conversion function (Coreissue 2327)") >  >() },
    { "p2828r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author994")) >(), wxS("Copy elision for direct-initialization with a conversion function (Coreissue 2327)") >  >() },
    { "p2829r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("Proposal of Contracts Supporting Const-On-Definition Style") >  >() },
    { "p2830r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Type Ordering") >  >() },
    { "p2830r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Type Ordering") >  >() },
    { "p2830r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Standardized Constexpr Type Ordering") >  >() },
    { "p2830r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Nate Nichols")) >(), wxS("Constexpr Type Ordering") >  >() },
    { "p2831r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author756")) >(), wxS("Title613") >  >() },
    { "p2833r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: inout expected span") >  >() },
    { "p2833r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: inout expected span") >  >() },
    { "p2833r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: inout expected span") >  >() },
    { "p2834r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1362") >  >() },
    { "p2834r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1454") >  >() },
    { "p2835r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose std::atomic_ref 's object address") >  >() },
    { "p2835r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2835r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2835r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2835r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2835r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2835r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2835r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Expose `std::atomic_ref` 's object address") >  >() },
    { "p2836r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`std::const_iterator` often produces an unexpected type") >  >() },
    { "p2836r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("`std::basic_const_iterator` should follow its underlying type'sconvertibility") >  >() },
    { "p2837r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Planning to Revisit the Lakos Rule") >  >() },
    { "p2838r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author699")) >(), wxS("Unconditional contract violation handling of any kind is a serious problem") >  >() },
    { "p2839r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Nontrivial Relocation via a New *owning reference* Type") >  >() },
    { "p2841r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1505") >  >() },
    { "p2841r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1179") >  >() },
    { "p2841r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1128") >  >() },
    { "p2841r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title831") >  >() },
    { "p2841r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title585") >  >() },
    { "p2841r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title446") >  >() },
    { "p2841r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1552") >  >() },
    { "p2841r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1003") >  >() },
    { "p2842r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Destructor Semantics Do Not Affect Constructible Traits") >  >() },
    { "p2843r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Preprocessing is never undefined") >  >() },
    { "p2843r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Preprocessing is never undefined") >  >() },
    { "p2843r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Preprocessing is never undefined") >  >() },
    { "p2845r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("D2845R4: Formatting of std::filesystem::path") >  >() },
    { "p2845r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2845r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::filesystem::path") >  >() },
    { "p2846r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title237") >  >() },
    { "p2846r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title312") >  >() },
    { "p2846r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1345") >  >() },
    { "p2846r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1376") >  >() },
    { "p2846r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title365") >  >() },
    { "p2846r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title981") >  >() },
    { "p2846r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title5") >  >() },
    { "p2848r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_uniqued") >  >() },
    { "p2848r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("std::is_uniqued") >  >() },
    { "p2849r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("async-object - aka async-RAII") >  >() },
    { "p2850r0" , RevList< Rev< 0u, Arr64< Hash(wxS("2.6")) >(), wxS("Title104") >  >() },
    { "p2852r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Contract violation handling semantics for the contracts MVP") >  >() },
    { "p2853r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P2853R0 Proposal of std::contract_violation") >  >() },
    { "p2855r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author884")) >(), wxS("Member customization points for Senders and Receivers") >  >() },
    { "p2855r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1387")) >(), wxS("Member customization points for Senders and Receivers") >  >() },
    { "p2857r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Improve std::hive::reshape") >  >() },
    { "p2858r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Noexcept vs contract violations") >  >() },
    { "p2861r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1766")) >(), wxS("Title1370") >  >() },
    { "p2862r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("text_encoding::name() should never return null values") >  >() },
    { "p2862r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Kr\u00FCgler")) >(), wxS("text_encoding::name() should never return null values") >  >() },
    { "p2863r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2863r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Review Annex D for C++26") >  >() },
    { "p2864r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Arithmetic Conversion on Enumerations From C++26") >  >() },
    { "p2864r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Arithmetic Conversion on Enumerations From C++26") >  >() },
    { "p2864r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Arithmetic Conversion on Enumerations From C++26") >  >() },
    { "p2865r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2865r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2865r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2865r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2865r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2865r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2865r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Array Comparisons from C++26") >  >() },
    { "p2866r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Volatile Features From C++26") >  >() },
    { "p2866r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Volatile Features From C++26") >  >() },
    { "p2866r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Volatile Features from C++26") >  >() },
    { "p2866r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Volatile Features from C++26") >  >() },
    { "p2866r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Volatile Features from C++26") >  >() },
    { "p2866r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Volatile Features from C++26") >  >() },
    { "p2867r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated strstreams From C++26") >  >() },
    { "p2867r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated strstreams From C++26") >  >() },
    { "p2867r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated strstreams From C++26") >  >() },
    { "p2868r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Typedef From C++26") >  >() },
    { "p2868r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Typedef From C++26") >  >() },
    { "p2868r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Typedef From C++26") >  >() },
    { "p2868r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Typedef From C++26") >  >() },
    { "p2869r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Access APIs From C++26") >  >() },
    { "p2869r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Access APIs From C++26") >  >() },
    { "p2869r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Access APIs From C++26") >  >() },
    { "p2869r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Access APIs from C++26") >  >() },
    { "p2869r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Access APIs from C++26") >  >() },
    { "p2870r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2870r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2870r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2870r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2871r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Unicode Conversion Facets From C++26") >  >() },
    { "p2871r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Unicode Conversion Facets From C++26") >  >() },
    { "p2871r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Unicode Conversion Facets from C++26") >  >() },
    { "p2871r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Unicode Conversion Facets from C++26") >  >() },
    { "p2872r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2872r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2872r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2872r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove From C++26") >  >() },
    { "p2873r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Locale Category Facets For Unicode from C++26") >  >() },
    { "p2873r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Locale Category Facets For Unicode from C++26") >  >() },
    { "p2873r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Locale-Category Facets for Unicode from C++26") >  >() },
    { "p2873r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Locale-Category Facets for Unicode from C++26") >  >() },
    { "p2874r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Mandating Annex D") >  >() },
    { "p2874r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Mandating Annex D") >  >() },
    { "p2874r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Mandating Annex D") >  >() },
    { "p2875r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Undeprecate For C++26") >  >() },
    { "p2875r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Undeprecate `polymorphic_allocator::destroy` For C++26") >  >() },
    { "p2875r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Undeprecate for C++26") >  >() },
    { "p2875r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Undeprecate for C++26") >  >() },
    { "p2875r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Undeprecate for C++26") >  >() },
    { "p2876r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("D2876R0: Proposal to extend <code>std::simd</code> with more constructors and accessors") >  >() },
    { "p2876r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend <code>std::simd</code> with more constructors and accessors") >  >() },
    { "p2876r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend <code>std::simd</code> with more constructors and accessors") >  >() },
    { "p2877r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1610") >  >() },
    { "p2878r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author582")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2878r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1180")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2878r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1212")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2878r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author637")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2878r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author1016")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2878r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author814")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2878r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author2034")) >(), wxS("Reference checking - HackMD") >  >() },
    { "p2879r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P2879R0 Proposal of std::dump") >  >() },
    { "p2880r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ilya Burylov")) >(), wxS("Algorithm-like vs std::simd based RNG API") >  >() },
    { "p2881r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("Generator-based for loop") >  >() },
    { "p2882r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1033")) >(), wxS("An Event Model for C++ Executors") >  >() },
    { "p2883r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Should Be A Keyword In C++26") >  >() },
    { "p2883r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Should Be a Keyword in C++26") >  >() },
    { "p2884r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Should Be A Keyword In C++26") >  >() },
    { "p2885r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2025")) >(), wxS("Requirements for a Contracts syntax") >  >() },
    { "p2885r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1673")) >(), wxS("Requirements for a Contracts syntax") >  >() },
    { "p2885r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author60")) >(), wxS("Requirements for a Contracts syntax") >  >() },
    { "p2885r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1938")) >(), wxS("Requirements for a Contracts syntax") >  >() },
    { "p2886r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("p2886r0: concurrency ts2 editor's report") >  >() },
    { "p2887r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("P2887r0.docx") >  >() },
    { "p2888r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("P2888r0.docx") >  >() },
    { "p2889r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("Distributed Arrays") >  >() },
    { "p2890r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1284")) >(), wxS("Title995") >  >() },
    { "p2890r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author667")) >(), wxS("Title540") >  >() },
    { "p2890r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author308")) >(), wxS("Title260") >  >() },
    { "p2891r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2023-01-11 through 2023-05-10") >  >() },
    { "p2892r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joe Jevnik")) >(), wxS("Types Should be Regular") >  >() },
    { "p2893r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jody Hagins")) >(), wxS("Variadic Friends") >  >() },
    { "p2893r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1051")) >(), wxS("Untitled") >  >() },
    { "p2893r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jody Hagins")) >(), wxS("Variadic friends") >  >() },
    { "p2893r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jody Hagins")) >(), wxS("Variadic friends") >  >() },
    { "p2894r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author46")) >(), wxS("Title44") >  >() },
    { "p2894r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author595")) >(), wxS("Title486") >  >() },
    { "p2894r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1310")) >(), wxS("Title1015") >  >() },
    { "p2895r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sebastian Theophil")) >(), wxS("noncopyable and nonmovable utility classes") >  >() },
    { "p2896r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2099")) >(), wxS("Outstanding design questions for the Contracts MVP") >  >() },
    { "p2897r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer overalignment") >  >() },
    { "p2897r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer overalignment") >  >() },
    { "p2897r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer overalignment") >  >() },
    { "p2897r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer overalignment") >  >() },
    { "p2897r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer overalignment") >  >() },
    { "p2897r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer overalignment") >  >() },
    { "p2897r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer over-alignment") >  >() },
    { "p2897r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("aligned_accessor: An mdspan accessor expressing pointer over-alignment") >  >() },
    { "p2898r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Importable Headers are Not Universally Implementable") >  >() },
    { "p2898r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Build System Requirements for Importable Headers") >  >() },
    { "p2899r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title644") >  >() },
    { "p2899r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title696") >  >() },
    { "p2900r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1415") >  >() },
    { "p2900r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1674") >  >() },
    { "p2900r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title390") >  >() },
    { "p2900r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1389") >  >() },
    { "p2900r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title474") >  >() },
    { "p2900r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title911") >  >() },
    { "p2900r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1147") >  >() },
    { "p2900r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1028") >  >() },
    { "p2900r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1253") >  >() },
    { "p2900r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1535") >  >() },
    { "p2900r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1302") >  >() },
    { "p2900r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1406") >  >() },
    { "p2900r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title130") >  >() },
    { "p2900r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title357") >  >() },
    { "p2900r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1549") >  >() },
    { "p2901r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Extending Linear Algebra Support to Batched Operations") >  >() },
    { "p2902r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1653")) >(), wxS("Title1285") >  >() },
    { "p2902r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author891")) >(), wxS("Title720") >  >() },
    { "p2904r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anoop Rana")) >(), wxS("Title731") >  >() },
    { "p2905r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Runtime format strings") >  >() },
    { "p2905r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Runtime format strings") >  >() },
    { "p2905r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Runtime format strings") >  >() },
    { "p2906r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bernhard Manfred")) >(), wxS("Structured bindings for <code>std::extents</code>") >  >() },
    { "p2909r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Dude, wheres my char?") >  >() },
    { "p2909r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix formatting of code units as integers<br>(Dude, wheres my char?)") >  >() },
    { "p2909r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix formatting of code units as integers<br>(Dude, wheres my char?)") >  >() },
    { "p2909r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix formatting of code units as integers<br>(Dude, wheres my char?)") >  >() },
    { "p2909r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix formatting of code units as integers<br>(Dude, wheres my char?)") >  >() },
    { "p2910r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author532")) >(), wxS("C++ Standard Library Issues to be moved in Varna 2023") >  >() },
    { "p2911r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Title661") >  >() },
    { "p2911r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1303")) >(), wxS("Title1007") >  >() },
    { "p2912r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1242")) >(), wxS("p2912r0: Concurrent queues and sender/receivers") >  >() },
    { "p2915r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1660")) >(), wxS("Proposed resolution to CWG1223") >  >() },
    { "p2917r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2096")) >(), wxS("An in-line defaulted destructor should keep the copy- and move-operations") >  >() },
    { "p2917r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author836")) >(), wxS("An in-line defaulted destructor should keep the copy- and move-operations") >  >() },
    { "p2918r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Runtime format strings II") >  >() },
    { "p2918r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Runtime format strings II") >  >() },
    { "p2918r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Runtime format strings II") >  >() },
    { "p2920r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author543")) >(), wxS("2023_06__iso_cpp_varna__library_evolution_leadership_understanding_of_narrow_noexcept_policy_history__r4") >  >() },
    { "p2921r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1774")) >(), wxS("p2921r0: Exploring std::expected based API alternatives for buffer_queue") >  >() },
    { "p2922r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author505")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p2925r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1447")) >(), wxS("inplace_vector D0843R7") >  >() },
    { "p2926r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author586")) >(), wxS("Title477") >  >() },
    { "p2927r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author36")) >(), wxS("Inspecting exception_ptr") >  >() },
    { "p2927r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1584")) >(), wxS("Inspecting exception_ptr") >  >() },
    { "p2927r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author665")) >(), wxS("Inspecting exception_ptr") >  >() },
    { "p2929r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to add simd_invoke to std::simd") >  >() },
    { "p2930r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark de")) >(), wxS("Formatter specializations for the standard library") >  >() },
    { "p2931r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author460")) >(), wxS("P2931 WG21 2023-06 Varna Record of Discussion.docx") >  >() },
    { "p2932r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title920") >  >() },
    { "p2932r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title674") >  >() },
    { "p2932r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title544") >  >() },
    { "p2932r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title589") >  >() },
    { "p2933r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to allow simd overloads for standard C++ <bit> header") >  >() },
    { "p2933r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend <code><bit></code> header function with overloads for <code>std::simd</code>") >  >() },
    { "p2933r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend <code><bit></code> header function with overloads for <code>std::simd</code>") >  >() },
    { "p2933r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend <code><bit></code> header function with overloads for <code>std::simd</code>") >  >() },
    { "p2933r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Extend <bit> header function with overloads for std::simd") >  >() },
    { "p2935r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title788") >  >() },
    { "p2935r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1475") >  >() },
    { "p2935r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1145") >  >() },
    { "p2935r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1081") >  >() },
    { "p2935r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1278") >  >() },
    { "p2937r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u2003\u2003Ben Craig")) >(), wxS("Freestanding: Remove <code>strtok</code>") >  >() },
    { "p2940r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("switch for Pattern Matching") >  >() },
    { "p2941r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mihail Naydenov")) >(), wxS("Identifiers for Pattern Matching") >  >() },
    { "p2944r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Comparisons for reference_wrapper") >  >() },
    { "p2944r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Comparisons for reference_wrapper") >  >() },
    { "p2944r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Comparisons for reference_wrapper") >  >() },
    { "p2944r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Comparisons for reference_wrapper") >  >() },
    { "p2945r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Additional format specifiers for time_point") >  >() },
    { "p2945r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Additional format specifiers for time_point") >  >() },
    { "p2946r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author912")) >(), wxS("A Flexible Solution to the Problems of noexcept") >  >() },
    { "p2946r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1928")) >(), wxS("A Flexible Solution to the Problems of noexcept") >  >() },
    { "p2947r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrei Zissu")) >(), wxS("D2947R0") >  >() },
    { "p2949r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Lakos")) >(), wxS("Microsoft Word - PxxxxR0.docx") >  >() },
    { "p2950r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Christopher Di")) >(), wxS("P2836R1 Slides") >  >() },
    { "p2951r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author138")) >(), wxS("Shadowing is good for safety - HackMD") >  >() },
    { "p2951r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author556")) >(), wxS("Shadowing is good for safety - HackMD") >  >() },
    { "p2951r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author2152")) >(), wxS("Shadowing is good for safety - HackMD") >  >() },
    { "p2951r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author1769")) >(), wxS("Shadowing is good for safety - HackMD") >  >() },
    { "p2952r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("auto& operator=(X&&) = default") >  >() },
    { "p2952r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("auto& operator=(X&&) = default") >  >() },
    { "p2952r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("auto& operator=(X&&) = default") >  >() },
    { "p2953r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Forbid defaulting operator=(X&&) &&") >  >() },
    { "p2953r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Forbid defaulting operator=(X&&) &&") >  >() },
    { "p2954r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1451")) >(), wxS("Contracts and virtual functions for the Contracts MVP") >  >() },
    { "p2955r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author998")) >(), wxS("Safer Range Access - HackMD") >  >() },
    { "p2955r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2108")) >(), wxS("Safer Range Access - HackMD") >  >() },
    { "p2956r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Allow <code>std::simd</code> overloads for saturating operations") >  >() },
    { "p2957r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contracts and coroutines") >  >() },
    { "p2957r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contracts and coroutines") >  >() },
    { "p2957r2" , RevList< Rev< 2u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contracts and coroutines") >  >() },
    { "p2958r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("typeof and typeof_unqual for C++") >  >() },
    { "p2959r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Relocation Within Containers") >  >() },
    { "p2960r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("P2960R0 Concurrency TS2 Editors report for N4953") >  >() },
    { "p2961r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author791")) >(), wxS("Title641") >  >() },
    { "p2961r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1859")) >(), wxS("Title1441") >  >() },
    { "p2961r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author687")) >(), wxS("Title552") >  >() },
    { "p2962r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Communicating the Baseline Compile Command for C++ Modules support") >  >() },
    { "p2963r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title250") >  >() },
    { "p2963r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title475") >  >() },
    { "p2963r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1664") >  >() },
    { "p2963r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title979") >  >() },
    { "p2964r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Adding support for user-defined element types in std::simd") >  >() },
    { "p2964r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Adding support for user-defined element types (UDT) in <code>std::simd</code>") >  >() },
    { "p2966r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Patrice Roy")) >(), wxS("Title960") >  >() },
    { "p2966r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Patrice Roy")) >(), wxS("Title940") >  >() },
    { "p2967r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Relocation Has A Library Interface") >  >() },
    { "p2967r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Relocation Has A Library Interface") >  >() },
    { "p2968r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make std::ignore a first-class object") >  >() },
    { "p2968r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make std::ignore a first-class object") >  >() },
    { "p2968r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Peter Sommerlad")) >(), wxS("Make std::ignore a first-class object") >  >() },
    { "p2969r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1698")) >(), wxS("Title1316") >  >() },
    { "p2971r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2165")) >(), wxS("Implication for C++") >  >() },
    { "p2971r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author729")) >(), wxS("Implication for C++") >  >() },
    { "p2971r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1067")) >(), wxS("Implication for C++") >  >() },
    { "p2971r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author215")) >(), wxS("Implication for C++") >  >() },
    { "p2972r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2023-09 Library Evolution Polls") >  >() },
    { "p2973r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2198")) >(), wxS("Erroneous behaviour for missing return from assignment") >  >() },
    { "p2976r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: algorithm, numeric, and random") >  >() },
    { "p2976r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding Library: algorithm, numeric, and random") >  >() },
    { "p2977r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1972")) >(), wxS("Module configuration files") >  >() },
    { "p2977r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author223")) >(), wxS("Build database files") >  >() },
    { "p2977r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author620")) >(), wxS("Build database files") >  >() },
    { "p2978r0" , RevList< Rev< 0u, Arr64< Hash(wxS("HassanSajjad")) >(), wxS("A New Approach For Compiling C++") >  >() },
    { "p2979r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("The Need for Design Policies in WG21") >  >() },
    { "p2980r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("A motivation, scope, and plan for a physical quantities andunits library") >  >() },
    { "p2980r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("A motivation, scope, and plan for a quantities and unitslibrary") >  >() },
    { "p2981r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Improving our safety with a physical quantities and unitslibrary") >  >() },
    { "p2981r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Improving our safety with a physical quantities and unitslibrary") >  >() },
    { "p2982r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::quantity` as a numeric type") >  >() },
    { "p2982r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::quantity` as a numeric type") >  >() },
    { "p2984r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Reconsider Redeclaring static constexpr Data Members") >  >() },
    { "p2984r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Reconsider Redeclaring static constexpr Data Members") >  >() },
    { "p2985r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("A type trait for detecting virtual base classes") >  >() },
    { "p2986r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("Generic Function Pointer") >  >() },
    { "p2988r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("std::optional<T&>") >  >() },
    { "p2988r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2020")) >(), wxS("Title1561") >  >() },
    { "p2988r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author839")) >(), wxS("Title663") >  >() },
    { "p2988r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author958")) >(), wxS("Title777") >  >() },
    { "p2988r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author715")) >(), wxS("Title577") >  >() },
    { "p2988r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author319")) >(), wxS("Title269") >  >() },
    { "p2988r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author1162")) >(), wxS("Title922") >  >() },
    { "p2988r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author1505")) >(), wxS("Title1169") >  >() },
    { "p2988r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author474")) >(), wxS("Title397") >  >() },
    { "p2988r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author1092")) >(), wxS("Title879") >  >() },
    { "p2988r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author261")) >(), wxS("Title219") >  >() },
    { "p2988r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Author35")) >(), wxS("Title31") >  >() },
    { "p2988r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Author778")) >(), wxS("Title634") >  >() },
    { "p2989r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title596") >  >() },
    { "p2989r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1323") >  >() },
    { "p2989r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title34") >  >() },
    { "p2990r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("C++ Modules Roadmap") >  >() },
    { "p2991r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Stop Forcing `std::move` to Pessimize") >  >() },
    { "p2992r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Attribute [[discard]] and attributes on expressions") >  >() },
    { "p2992r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Attribute [[discard(\"reason\")]]") >  >() },
    { "p2993r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Luke Valenty")) >(), wxS("Constrained Numbers") >  >() },
    { "p2994r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("On the Naming of Packs") >  >() },
    { "p2994r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("On the Naming of Packs") >  >() },
    { "p2995r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2023-05-24 through 2023-09-27") >  >() },
    { "p2996r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2996r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Reflection for C++26") >  >() },
    { "p2997r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Removing the common reference requirement from the indirectly invocable concepts") >  >() },
    { "p2997r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Removing the common reference requirement from the indirectly invocable concepts") >  >() },
    { "p2998r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Deducing function parameter types using alias templateCTAD") >  >() },
    { "p2999r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Sender Algorithm Customization") >  >() },
    { "p2999r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Sender Algorithm Customization") >  >() },
    { "p2999r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Sender Algorithm Customization") >  >() },
    { "p2999r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Sender Algorithm Customization") >  >() },
    { "p3001r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("std::hive and containers like it are not a good fit for thestandard library") >  >() },
    { "p3002r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1231")) >(), wxS("Guidelines for Allocators in New Library Classes") >  >() },
    { "p3002r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Policies for Using Allocators in Library Classes") >  >() },
    { "p3003r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1987")) >(), wxS("P3003R0 The design of a library of number concepts") >  >() },
    { "p3004r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Lakos")) >(), wxS("Principled Design for WG21") >  >() },
    { "p3005r0" , RevList< Rev< 0u, Arr64< Hash(wxS("John Lakos")) >(), wxS("Memorializing Principled-Design Policies for WG21") >  >() },
    { "p3006r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author799")) >(), wxS("Launder less") >  >() },
    { "p3006r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1680")) >(), wxS("Launder less") >  >() },
    { "p3007r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1274")) >(), wxS("Title987") >  >() },
    { "p3008r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1781")) >(), wxS("Atomic floating-point min/max semantics") >  >() },
    { "p3008r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1191")) >(), wxS("Atomic floating-point min/max semantics") >  >() },
    { "p3008r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author555")) >(), wxS("Atomic floating-point min/max semantics") >  >() },
    { "p3008r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author233")) >(), wxS("Atomic floating-point min/max") >  >() },
    { "p3008r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author851")) >(), wxS("Atomic floating-point min/max") >  >() },
    { "p3009r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joe Jevnik")) >(), wxS("Injected class name in the base specifier list") >  >() },
    { "p3010r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dan Katz")) >(), wxS("P3010R0 - Using Reflection to Replace a Metalanguage for Generating JS Bindings") >  >() },
    { "p3011r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Title1385") >  >() },
    { "p3012r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Bentley")) >(), wxS("Title1530") >  >() },
    { "p3014r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("Customizing std::expected's exception") >  >() },
    { "p3015r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Howard E")) >(), wxS("Rebuttal to Additional format specifiers for time_point") >  >() },
    { "p3016r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for <code>valarray</code> and braced initializer lists") >  >() },
    { "p3016r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for <code>valarray</code> and braced initializer lists") >  >() },
    { "p3016r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for valarray and braced initializer lists") >  >() },
    { "p3016r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for valarray and braced initializer lists") >  >() },
    { "p3016r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for valarray and braced initializer lists") >  >() },
    { "p3016r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for valarray and braced initializer lists") >  >() },
    { "p3016r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve inconsistencies in begin/end for valarray and braced initializer lists") >  >() },
    { "p3018r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andreas Weis")) >(), wxS("Title945") >  >() },
    { "p3019r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2026")) >(), wxS("Title1567") >  >() },
    { "p3019r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author347")) >(), wxS("Title290") >  >() },
    { "p3019r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author366")) >(), wxS("Title311") >  >() },
    { "p3019r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author743")) >(), wxS("Title601") >  >() },
    { "p3019r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author420")) >(), wxS("Title360") >  >() },
    { "p3019r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author691")) >(), wxS("Title557") >  >() },
    { "p3019r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Author115")) >(), wxS("Title102") >  >() },
    { "p3019r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Author991")) >(), wxS("Title802") >  >() },
    { "p3019r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Author1847")) >(), wxS("Title1432") >  >() },
    { "p3019r9" , RevList< Rev< 9u, Arr64< Hash(wxS("Author2085")) >(), wxS("Title1617") >  >() },
    { "p3019r10" , RevList< Rev< 10u, Arr64< Hash(wxS("Author259")) >(), wxS("Title216") >  >() },
    { "p3019r11" , RevList< Rev< 11u, Arr64< Hash(wxS("Author1973")) >(), wxS("Title1534") >  >() },
    { "p3019r12" , RevList< Rev< 12u, Arr64< Hash(wxS("Author6")) >(), wxS("Title4") >  >() },
    { "p3019r13" , RevList< Rev< 13u, Arr64< Hash(wxS("Author1461")) >(), wxS("Title1139") >  >() },
    { "p3019r14" , RevList< Rev< 14u, Arr64< Hash(wxS("Author1636")) >(), wxS("Title1265") >  >() },
    { "p3020r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2023-09 Library Evolution Poll Outcomes") >  >() },
    { "p3021r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title690") >  >() },
    { "p3022r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author495")) >(), wxS("A Boring Thread Attributes Interface - HackMD") >  >() },
    { "p3022r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Darius Neau")) >(), wxS("A Boring Thread Attributes Interface") >  >() },
    { "p3023r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author24")) >(), wxS("C++ Should Be C++ - HackMD") >  >() },
    { "p3023r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2112")) >(), wxS("C++ Should Be C++ - HackMD") >  >() },
    { "p3024r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1009")) >(), wxS("Title809") >  >() },
    { "p3025r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("P3025R0.docx") >  >() },
    { "p3026r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("P3026R0.docx") >  >() },
    { "p3027r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author349")) >(), wxS("UFCS is a breaking change, of the absolutely worst kind") >  >() },
    { "p3028r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1075") >  >() },
    { "p3029r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author189")) >(), wxS("Better <code>mdspan</code>'s CTAD") >  >() },
    { "p3029r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1208")) >(), wxS("Better <code>mdspan</code>'s CTAD") >  >() },
    { "p3031r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Resolve CWG2561, conversion function for lambda with explicit object parameter") >  >() },
    { "p3032r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Less transient constexpr allocation") >  >() },
    { "p3032r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Less transient constexpr allocation") >  >() },
    { "p3032r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Less transient constexpr allocation (and more constevalrelaxation)") >  >() },
    { "p3033r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Should we import function bodies to get the better optimizations?") >  >() },
    { "p3034r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Module Declarations Shouldnt be Macros") >  >() },
    { "p3034r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Module Declarations Shouldnt be Macros") >  >() },
    { "p3037r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul Keir")) >(), wxS("Title427") >  >() },
    { "p3037r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Paul Keir")) >(), wxS("Title739") >  >() },
    { "p3037r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Paul Keir")) >(), wxS("Title62") >  >() },
    { "p3037r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Paul Keir")) >(), wxS("Title202") >  >() },
    { "p3037r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Paul Keir")) >(), wxS("Title1594") >  >() },
    { "p3037r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Paul Keir")) >(), wxS("Title15") >  >() },
    { "p3038r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1820")) >(), wxS("Title1407") >  >() },
    { "p3039r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Stone")) >(), wxS("Title1088") >  >() },
    { "p3040r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author391")) >(), wxS("C++ Standard Library Issues to be moved in Kona, Nov. 2023") >  >() },
    { "p3041r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com")) >(), wxS("Title1684") >  >() },
    { "p3042r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author39")) >(), wxS("Title35") >  >() },
    { "p3043r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2209")) >(), wxS("Using variable template template without meta programming") >  >() },
    { "p3044r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("P3044R0") >  >() },
    { "p3044r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("P3044R1") >  >() },
    { "p3045r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Quantities and units library") >  >() },
    { "p3045r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Quantities and units library") >  >() },
    { "p3045r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Quantities and units library") >  >() },
    { "p3045r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Quantities and units library") >  >() },
    { "p3045r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Quantities and units library") >  >() },
    { "p3045r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("Quantities and units library") >  >() },
    { "p3046r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author361")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p3047r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Namespace relops From C++26") >  >() },
    { "p3049r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("P3049R0") >  >() },
    { "p3049r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("P3049R1") >  >() },
    { "p3050r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Optimize linalg::conjugated for noncomplex value types") >  >() },
    { "p3050r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by optimizing linalg::conjugated for noncomplex value types") >  >() },
    { "p3050r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by optimizing linalg::conjugated for noncomplex value types") >  >() },
    { "p3050r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by optimizing linalg::conjugated for noncomplex value types") >  >() },
    { "p3051r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Response Files") >  >() },
    { "p3051r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Response Files") >  >() },
    { "p3051r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Response Files") >  >() },
    { "p3051r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("WITHDRAWN: Structured Response Files") >  >() },
    { "p3052r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1748")) >(), wxS("<code>view_interface::at</code>") >  >() },
    { "p3052r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1472")) >(), wxS("<code>view_interface::at</code>") >  >() },
    { "p3053r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2023-12 Library Evolution Polls") >  >() },
    { "p3054r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2023-12 Library Evolution Poll Outcomes") >  >() },
    { "p3055r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Relax wording to permit relocation optimizations in the STL") >  >() },
    { "p3055r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Relax wording to permit relocation optimizations in the STL") >  >() },
    { "p3056r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1891")) >(), wxS("what ostream exception - HackMD") >  >() },
    { "p3057r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Two finer-grained compilation model for named modules") >  >() },
    { "p3059r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2159")) >(), wxS("Making user-defined constructors of view iterators/sentinels private") >  >() },
    { "p3059r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1716")) >(), wxS("Making user-defined constructors of view iterators/sentinels private") >  >() },
    { "p3060r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Weile Wei")) >(), wxS("std::ranges::upto(n) - HackMD") >  >() },
    { "p3060r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Weile Wei")) >(), wxS("Add std::views::upto(n) - HackMD") >  >() },
    { "p3060r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Weile Wei")) >(), wxS("Add std::views::indices(n) - HackMD") >  >() },
    { "p3061r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1682")) >(), wxS("P3061 WG21 2023-11 Kona Record of Discussion.docx") >  >() },
    { "p3062r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1952")) >(), wxS("Title1514") >  >() },
    { "p3064r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author323")) >(), wxS("Title273") >  >() },
    { "p3064r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2045")) >(), wxS("Title1584") >  >() },
    { "p3064r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author860")) >(), wxS("Title685") >  >() },
    { "p3066r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1143")) >(), wxS("Title910") >  >() },
    { "p3067r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Named permutation functions for `std::simd`") >  >() },
    { "p3068r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr-throw") >  >() },
    { "p3068r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr-throw R2") >  >() },
    { "p3068r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("Allowing exception throwing in constant-evaluation") >  >() },
    { "p3068r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("Allowing exception throwing in constant-evaluation") >  >() },
    { "p3068r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("Allowing exception throwing in constant-evaluation") >  >() },
    { "p3068r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("D3068R5: Allowing exception throwing in constant-evaluation") >  >() },
    { "p3068r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("Allowing exception throwing in constant-evaluation") >  >() },
    { "p3070r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting enums") >  >() },
    { "p3070r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting enums") >  >() },
    { "p3070r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting enums") >  >() },
    { "p3070r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting enums") >  >() },
    { "p3071r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1348")) >(), wxS("Protection against modifications in contracts") >  >() },
    { "p3071r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1550")) >(), wxS("Protection against modifications in contracts") >  >() },
    { "p3072r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Hassle-free thread attributes - HackMD") >  >() },
    { "p3072r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Hassle-free thread attributes - HackMD") >  >() },
    { "p3072r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Hassle-free thread attributes - HackMD") >  >() },
    { "p3073r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1286")) >(), wxS("Title997") >  >() },
    { "p3074r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("constexpr union lifetime") >  >() },
    { "p3074r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("std::uninitialized<T>") >  >() },
    { "p3074r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("std::uninitialized<T>") >  >() },
    { "p3074r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("trivial union (was std::uninitialized<T>)") >  >() },
    { "p3074r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("trivial unions (was std::uninitialized<T>)") >  >() },
    { "p3074r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("trivial unions (was std::uninitialized<T>)") >  >() },
    { "p3074r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("trivial unions (was std::uninitialized<T>)") >  >() },
    { "p3074r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("trivial unions (was std::uninitialized<T>)") >  >() },
    { "p3075r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Shafik Yaghmour")) >(), wxS("Title775") >  >() },
    { "p3079r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1564")) >(), wxS("Should ignore and observe exist for constant evaluation of contracts?") >  >() },
    { "p3081r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title187") >  >() },
    { "p3081r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1061") >  >() },
    { "p3081r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1317") >  >() },
    { "p3084r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author180")) >(), wxS("Title153") >  >() },
    { "p3085r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("noexcept policy for SD-9 (throws nothing)") >  >() },
    { "p3085r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("noexcept policy for SD-9 (throws nothing)") >  >() },
    { "p3085r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("noexcept policy for SD-9 (throws nothing)") >  >() },
    { "p3085r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("noexcept policy for SD-9 (throws nothing)") >  >() },
    { "p3086r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title525") >  >() },
    { "p3086r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title177") >  >() },
    { "p3086r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title903") >  >() },
    { "p3086r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title1523") >  >() },
    { "p3087r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Make direct-initialization for enumeration types at least as permissive as direct-list-initialization") >  >() },
    { "p3087r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Make direct-initialization for enumeration types at least as permissive as direct-list-initialization") >  >() },
    { "p3088r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author148")) >(), wxS("Title127") >  >() },
    { "p3088r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author455")) >(), wxS("Title384") >  >() },
    { "p3090r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("std::execution Introduction") >  >() },
    { "p3091r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Better lookups for `map` and `unordered_map`") >  >() },
    { "p3091r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Better Lookups for `map` and `unordered_map`") >  >() },
    { "p3091r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Better Lookups for `map` and `unordered_map`") >  >() },
    { "p3091r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("Better Lookups for `map` and `unordered_map`") >  >() },
    { "p3092r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Modules ABI Requirement") >  >() },
    { "p3093r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Attributes on expressions") >  >() },
    { "p3094r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3094r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3094r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3094r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3094r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3094r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3094r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Mateusz Pusz")) >(), wxS("`std::basic_fixed_string`") >  >() },
    { "p3095r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Saksham Sharma")) >(), wxS("P3095R0") >  >() },
    { "p3096r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3096r8" , RevList< Rev< 8u, Arr64< Hash(wxS("Adam Lach")) >(), wxS("Function Parameter Reflection in Reflection for C++26") >  >() },
    { "p3097r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Timur Doumler")) >(), wxS("Title1468") >  >() },
    { "p3098r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author709")) >(), wxS("Contracts for C++: Postcondition captures") >  >() },
    { "p3098r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author553")) >(), wxS("Contracts for C++: Postcondition captures") >  >() },
    { "p3100r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1381")) >(), wxS("Title1073") >  >() },
    { "p3100r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author480")) >(), wxS("Title399") >  >() },
    { "p3101r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("Differentiating potentially throwing and non throwing violation handlers") >  >() },
    { "p3102r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title86") >  >() },
    { "p3103r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("More bitset operations") >  >() },
    { "p3103r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("More bitset operations") >  >() },
    { "p3103r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("More bitset operations") >  >() },
    { "p3104r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Bit permutations") >  >() },
    { "p3104r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Bit permutations") >  >() },
    { "p3104r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Bit permutations") >  >() },
    { "p3104r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Bit permutations") >  >() },
    { "p3105r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("constexpr std::uncaught_exceptions()") >  >() },
    { "p3105r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("constexpr std::uncaught_exceptions()") >  >() },
    { "p3105r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("constexpr std::uncaught_exceptions()") >  >() },
    { "p3106r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Clarifying rules for brace elision in aggregateinitialization") >  >() },
    { "p3106r1" , RevList< Rev< 1u, Arr64< Hash(wxS("James Touton")) >(), wxS("Clarifying rules for brace elision in aggregateinitialization") >  >() },
    { "p3107r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Permit an efficient implementation of std::print") >  >() },
    { "p3107r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Permit an efficient implementation of std::print") >  >() },
    { "p3107r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Permit an efficient implementation of std::print") >  >() },
    { "p3107r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Permit an efficient implementation of std::print") >  >() },
    { "p3107r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Permit an efficient implementation of std::print") >  >() },
    { "p3107r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Permit an efficient implementation of std::print") >  >() },
    { "p3109r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1289")) >(), wxS("Title1000") >  >() },
    { "p3110r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Array element initialization via pattern expansion") >  >() },
    { "p3111r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1492")) >(), wxS("Atomic Reduction Operations") >  >() },
    { "p3111r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1238")) >(), wxS("Atomic Reduction Operations") >  >() },
    { "p3111r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author372")) >(), wxS("Atomic Reduction Operations") >  >() },
    { "p3111r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author393")) >(), wxS("Atomic Reduction Operations") >  >() },
    { "p3111r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Author330")) >(), wxS("Atomic Reduction Operations") >  >() },
    { "p3111r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Author1977")) >(), wxS("Atomic Reduction Operations") >  >() },
    { "p3112r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Specify Constructor of `std::nullopt_t`") >  >() },
    { "p3113r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author761")) >(), wxS("2024-02-01 telecon") >  >() },
    { "p3114r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1599")) >(), wxS("dwdwedwed") >  >() },
    { "p3115r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title838") >  >() },
    { "p3116r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Policy for `explicit`") >  >() },
    { "p3117r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Extending Conditionally Borrowed") >  >() },
    { "p3117r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Extending Conditionally Borrowed") >  >() },
    { "p3119r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1037") >  >() },
    { "p3119r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1408") >  >() },
    { "p3122r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author421")) >(), wxS("Using [[nodiscard]] should be Recommended Practice") >  >() },
    { "p3122r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author320")) >(), wxS("Using [[nodiscard]] should be Recommended Practice") >  >() },
    { "p3123r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-02 Library Evolution Polls") >  >() },
    { "p3124r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-02 Library Evolution Poll Outcomes") >  >() },
    { "p3125r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("D3125R0: Pointer Tagging") >  >() },
    { "p3125r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr pointer tagging") >  >() },
    { "p3125r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr pointer tagging") >  >() },
    { "p3125r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr pointer tagging") >  >() },
    { "p3126r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3126r0") >  >() },
    { "p3126r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3126r1") >  >() },
    { "p3126r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3126r2") >  >() },
    { "p3126r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3126r3") >  >() },
    { "p3127r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3127r0") >  >() },
    { "p3127r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3127r1") >  >() },
    { "p3128r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3128r0") >  >() },
    { "p3128r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3128r1") >  >() },
    { "p3128r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3128r2") >  >() },
    { "p3128r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3128r3") >  >() },
    { "p3129r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3129r0") >  >() },
    { "p3129r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3129r2") >  >() },
    { "p3130r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3130r0") >  >() },
    { "p3130r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3130r1") >  >() },
    { "p3130r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3130r2") >  >() },
    { "p3130r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3130r3") >  >() },
    { "p3131r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3131r0") >  >() },
    { "p3131r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3131r1") >  >() },
    { "p3131r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3131r2") >  >() },
    { "p3131r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Phil Ratzloff")) >(), wxS("Test document for P3131r3") >  >() },
    { "p3133r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chip Hogg")) >(), wxS("Fast first-factor finding function") >  >() },
    { "p3135r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointer Extensions") >  >() },
    { "p3135r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointer Extensions") >  >() },
    { "p3136r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Retiring niebloids") >  >() },
    { "p3136r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("Retiring niebloids") >  >() },
    { "p3137r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::to_input") >  >() },
    { "p3137r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::to_input") >  >() },
    { "p3137r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::to_input") >  >() },
    { "p3137r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::to_input") >  >() },
    { "p3138r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::cache_last") >  >() },
    { "p3138r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::cache_last") >  >() },
    { "p3138r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::cache_last") >  >() },
    { "p3138r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::cache_latest") >  >() },
    { "p3138r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::cache_latest") >  >() },
    { "p3138r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Tim Song")) >(), wxS("views::cache_latest") >  >() },
    { "p3139r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Pointer cast for unique_ptr - HackMD") >  >() },
    { "p3139r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Zhihao Yuan")) >(), wxS("Pointer cast for unique_ptr - HackMD") >  >() },
    { "p3140r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("std::int_least128_t") >  >() },
    { "p3142r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1166")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p3143r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1888")) >(), wxS("An in-depth walk-through of the example in P3090R0") >  >() },
    { "p3144r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Deprecate Delete of a Pointer to an Incomplete Type") >  >() },
    { "p3144r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Deprecate Delete of a Pointer to an Incomplete Type") >  >() },
    { "p3144r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Deleting a Pointer to an Incomplete Type Should be Ill-formed") >  >() },
    { "p3146r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Clarifying std::variant converting construction") >  >() },
    { "p3146r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Clarifying std::variant converting construction") >  >() },
    { "p3146r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Clarifying std::variant converting construction") >  >() },
    { "p3147r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1577")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p3147r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1926")) >(), wxS("A Direction for Vector") >  >() },
    { "p3148r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author312")) >(), wxS("Some Proposed Improvements to the Presentation of Requirements for Functions") >  >() },
    { "p3148r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1848")) >(), wxS("Formatting of chrono Time Values") >  >() },
    { "p3149r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ian Petersen")) >(), wxS("Creating scopes for non-sequential concurrency") >  >() },
    { "p3149r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ian Petersen")) >(), wxS("Creating scopes for non-sequential concurrency") >  >() },
    { "p3149r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ian Petersen")) >(), wxS("Creating scopes for non-sequential concurrency") >  >() },
    { "p3149r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ian Petersen")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3149r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ian Petersen")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3149r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ian Petersen")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3149r6" , RevList< Rev< 6u, Arr64< Hash(wxS("2")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3149r7" , RevList< Rev< 7u, Arr64< Hash(wxS("2")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3149r8" , RevList< Rev< 8u, Arr64< Hash(wxS("2")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3149r9" , RevList< Rev< 9u, Arr64< Hash(wxS("2")) >(), wxS("`async_scope` -- Creating scopes for non-sequentialconcurrency") >  >() },
    { "p3150r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG14 2024/02/15 P3150R0.docx") >  >() },
    { "p3151r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG19 2024/02/15 P3151R0.docx") >  >() },
    { "p3152r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author781")) >(), wxS("Title635") >  >() },
    { "p3152r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1138")) >(), wxS("Title905") >  >() },
    { "p3153r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1119")) >(), wxS("An allocator-aware optional type") >  >() },
    { "p3154r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Deprecating signed character types in iostreams") >  >() },
    { "p3154r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Deprecating signed character types in iostreams") >  >() },
    { "p3155r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1371")) >(), wxS("Title1063") >  >() },
    { "p3156r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author122")) >(), wxS("<tt>empty_checkable_range</tt>") >  >() },
    { "p3157r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1924")) >(), wxS("Title1488") >  >() },
    { "p3157r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrei Alexandrescu")) >(), wxS("Generative Extensions for Reflection") >  >() },
    { "p3158r0" , RevList< Rev< 0u, Arr64< Hash(wxS("James Touton")) >(), wxS("Headless Template Template Parameters") >  >() },
    { "p3159r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("C++ Range Adaptors and Parallel Algorithms") >  >() },
    { "p3160r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("An Allocator-aware `inplace_vector`") >  >() },
    { "p3160r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("An Allocator-Aware `inplace_vector`") >  >() },
    { "p3160r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("An Allocator-Aware `inplace_vector`") >  >() },
    { "p3161r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tiago Freire")) >(), wxS("P3161R0 - Unified integer overflow arithmetic") >  >() },
    { "p3161r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Tiago Freire")) >(), wxS("D3161R1 - Unified integer overflow arithmetic") >  >() },
    { "p3161r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Tiago Freire")) >(), wxS("R3161R2 - Unified integer overflow arithmetic") >  >() },
    { "p3161r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Tiago Freire")) >(), wxS("R3161R3 - Unified integer overflow arithmetic") >  >() },
    { "p3161r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Tiago Freire")) >(), wxS("R3161R4 - Unified integer overflow arithmetic") >  >() },
    { "p3162r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1397")) >(), wxS("LEWG [[nodiscard]] policy - HackMD") >  >() },
    { "p3164r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Improving diagnostics for sender expressions") >  >() },
    { "p3164r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Improving diagnostics for sender expressions") >  >() },
    { "p3164r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Improving diagnostics for sender expressions") >  >() },
    { "p3164r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Early Diagnostics for Sender Expressions") >  >() },
    { "p3165r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1640")) >(), wxS("Contracts on virtual functions for the Contracts MVP") >  >() },
    { "p3166r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lewis Baker")) >(), wxS("Static Exception Specifications") >  >() },
    { "p3167r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Attributes for the result name in a postcondition assertion") >  >() },
    { "p3168r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author788")) >(), wxS("Give std::optional range support - HackMD") >  >() },
    { "p3168r1" , RevList< Rev< 1u, Arr64< Hash(wxS("4")) >(), wxS("Give std::optional range support - HackMD") >  >() },
    { "p3168r2" , RevList< Rev< 2u, Arr64< Hash(wxS("4")) >(), wxS("Give std::optional range support - HackMD") >  >() },
    { "p3169r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonas Persson")) >(), wxS("Inherited contracts") >  >() },
    { "p3170r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author566")) >(), wxS("sinkable exception error message - HackMD") >  >() },
    { "p3171r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Peter Dimov")) >(), wxS("Adding functionality to placeholder types") >  >() },
    { "p3172r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Using `this` in constructor preconditions") >  >() },
    { "p3173r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title1434") >  >() },
    { "p3174r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2023-10-11 through 2024-02-21") >  >() },
    { "p3175r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Reconsidering the std::execution::on algorithm") >  >() },
    { "p3175r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Reconsidering the std::execution::on algorithm") >  >() },
    { "p3175r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Reconsidering the std::execution::on algorithm") >  >() },
    { "p3175r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Reconsidering the std::execution::on algorithm") >  >() },
    { "p3176r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("The Oxford variadic comma") >  >() },
    { "p3176r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("The Oxford variadic comma") >  >() },
    { "p3177r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("const prvalues in the conditional operator") >  >() },
    { "p3178r0" , RevList< Rev< 0u, Arr64< Hash(wxS("TPK Healy")) >(), wxS("PxxxxR0: std::exception_typeid") >  >() },
    { "p3178r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Thomas PK")) >(), wxS("Retrieval of Exception Information") >  >() },
    { "p3179r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r6" , RevList< Rev< 6u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3179r7" , RevList< Rev< 7u, Arr64< Hash(wxS("Ruslan Arutyunyan")) >(), wxS("C++ parallel range algorithms") >  >() },
    { "p3180r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1482")) >(), wxS("C++ Standard Library Issues to be moved in Tokyo, Mar. 2024") >  >() },
    { "p3181r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hans Boehm")) >(), wxS("Atomic stores and object lifetimes") >  >() },
    { "p3182r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Add `pop_value` methods to container adaptors") >  >() },
    { "p3182r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Add container pop methods that return the popped value") >  >() },
    { "p3183r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Contract testing support") >  >() },
    { "p3183r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Contract testing support") >  >() },
    { "p3185r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("A proposed direction for C++ Standard Networking based on IETF TAPS") >  >() },
    { "p3187r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Kirk Shoop")) >(), wxS("remove ensure_started and start_detached from P2300") >  >() },
    { "p3188r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author121")) >(), wxS("Proxy: A Pointer-Semantics-Based Polymorphism Library") >  >() },
    { "p3189r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1750")) >(), wxS("P3189R0") >  >() },
    { "p3190r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2139")) >(), wxS("talk_ewg") >  >() },
    { "p3191r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Feedback on the scalability of contract violation handlers in P2900") >  >() },
    { "p3192r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("PowerPoint-Prsentation") >  >() },
    { "p3194r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("PowerPoint-Prsentation") >  >() },
    { "p3196r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author971")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p3197r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1102")) >(), wxS("A response to the Tokyo EWG polls on the Contracts MVP") >  >() },
    { "p3198r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("A takeaway from the Tokyo LEWG meeting on Contracts MVP") >  >() },
    { "p3199r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Choices for ~make_optional~ and ~value_or()~") >  >() },
    { "p3201r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author69")) >(), wxS("LEWG [[nodiscard]] policy - HackMD") >  >() },
    { "p3201r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1970")) >(), wxS("LEWG [[nodiscard]] policy - HackMD") >  >() },
    { "p3203r0" , RevList< Rev< 0u, Arr64< Hash(wxS("name")) >(), wxS("Title640") >  >() },
    { "p3204r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title332") >  >() },
    { "p3205r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gaaper A~man")) >(), wxS("Throwing from a function should be a contract violation.") >  >() },
    { "p3206r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maikel Nadolski")) >(), wxS("A sender query for completion behaviour") >  >() },
    { "p3207r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1178")) >(), wxS("More & like - HackMD") >  >() },
    { "p3208r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sunghyun Min")) >(), wxS("Title1671") >  >() },
    { "p3210r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P3210R0 A Postcondition *is* a Pattern Match") >  >() },
    { "p3210r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P3210R1 A Postcondition *is* a Pattern Match") >  >() },
    { "p3210r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P3210R2 A Postcondition *is* a Pattern Match") >  >() },
    { "p3211r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author648")) >(), wxS("<code>views::transform_join</code>") >  >() },
    { "p3212r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("The contract of sort()") >  >() },
    { "p3213r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-04 Library Evolution Polls") >  >() },
    { "p3214r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-04 Library Evolution Poll Outcomes") >  >() },
    { "p3215r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1699")) >(), wxS("Using variable template template without meta programming") >  >() },
    { "p3216r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author144")) >(), wxS("<code>views::slice</code>") >  >() },
    { "p3217r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Adjoints to \"Enabling list-initialization for algorithms\": find_last") >  >() },
    { "p3218r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1062")) >(), wxS("const references to constexpr variables - HackMD") >  >() },
    { "p3220r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1756")) >(), wxS("<code>views::delimit</code>") >  >() },
    { "p3221r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonas Persson")) >(), wxS("Disable pointers to contracted functions") >  >() },
    { "p3222r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by adding transposed special cases for P2642 layouts") >  >() },
    { "p3222r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by adding transposed special cases for P2642 layouts") >  >() },
    { "p3223r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1496")) >(), wxS("Making std::basic_istream::ignore less surprising") >  >() },
    { "p3223r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1021")) >(), wxS("Making std::istream::ignore less surprising") >  >() },
    { "p3224r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("PowerPoint-Prsentation") >  >() },
    { "p3225r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("PowerPoint-Prsentation") >  >() },
    { "p3226r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1818")) >(), wxS("Title1405") >  >() },
    { "p3227r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1186")) >(), wxS("Fixing the library API for contract violation handling") >  >() },
    { "p3227r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1415")) >(), wxS("Fixing the library API for contract violation handling") >  >() },
    { "p3228r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2080")) >(), wxS("Title1612") >  >() },
    { "p3228r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2094")) >(), wxS("Title1624") >  >() },
    { "p3229r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1347")) >(), wxS("Title1042") >  >() },
    { "p3229r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1645")) >(), wxS("Title1274") >  >() },
    { "p3230r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2018")) >(), wxS("<code>views::(take|drop)_exactly</code>") >  >() },
    { "p3230r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1874")) >(), wxS("<code>views::unchecked_(take|drop)</code>") >  >() },
    { "p3230r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author365")) >(), wxS("<code>views::unchecked_(take|drop)</code>") >  >() },
    { "p3232r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author155")) >(), wxS("User-defined erroneous behaviour") >  >() },
    { "p3232r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1443")) >(), wxS("User-defined erroneous behaviour") >  >() },
    { "p3233r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Issues with P2786 (\"Trivial Relocatability For C++26\")") >  >() },
    { "p3234r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("Utility to check if a pointer is in a given range") >  >() },
    { "p3234r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Glen Joseph")) >(), wxS("Utility to check if a pointer is in a given range") >  >() },
    { "p3235r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::print more types faster with less memory") >  >() },
    { "p3235r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::print more types faster with less memory") >  >() },
    { "p3235r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::print more types faster with less memory") >  >() },
    { "p3235r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("std::print more types faster with less memory") >  >() },
    { "p3236r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alan de")) >(), wxS("Please reject P2786 and adopt P1144") >  >() },
    { "p3236r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alan de")) >(), wxS("Please reject P2786 and adopt P1144") >  >() },
    { "p3237r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrei Zissu")) >(), wxS("Matrix Representation of Contract Semantics") >  >() },
    { "p3237r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrei Zissu")) >(), wxS("P3237 - Matrix Representation of Contract Semantics") >  >() },
    { "p3237r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Andrei Zissu")) >(), wxS("P3237 - Matrix Representation of Contract Semantics") >  >() },
    { "p3238r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author518")) >(), wxS("An alternate proposal for naming contract semantics") >  >() },
    { "p3239r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("A Relocating Swap") >  >() },
    { "p3240r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1902")) >(), wxS("p3240") >  >() },
    { "p3241r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1200")) >(), wxS("P3241") >  >() },
    { "p3242r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nicolas Morales")) >(), wxS("Copy and fill for mdspan") >  >() },
    { "p3242r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nicolas Morales")) >(), wxS("Copy and fill for mdspan") >  >() },
    { "p3243r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1294")) >(), wxS("Give <code>std::optional</code> Range Support") >  >() },
    { "p3244r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author269")) >(), wxS("<code>[[nodiscard]]</code> Policy") >  >() },
    { "p3245r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Xavier Bonaventura")) >(), wxS("Allow `[[nodiscard]]` in type alias declarations") >  >() },
    { "p3245r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Xavier Bonaventura")) >(), wxS("Allow `[[nodiscard]]` in type alias declarations") >  >() },
    { "p3245r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Xavier Bonaventura")) >(), wxS("Allow `[[nodiscard]]` in type alias declarations") >  >() },
    { "p3247r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1872")) >(), wxS("Deprecate the notion of trivial types") >  >() },
    { "p3247r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author188")) >(), wxS("Deprecate the notion of trivial types") >  >() },
    { "p3247r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1696")) >(), wxS("Deprecate the notion of trivial types") >  >() },
    { "p3248r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Require [u]intptr_t") >  >() },
    { "p3248r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Require [u]intptr_t") >  >() },
    { "p3248r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Require [u]intptr_t") >  >() },
    { "p3248r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("Require [u]intptr_t") >  >() },
    { "p3249r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("P3249R0 - unified pattern matching and contracts syntax") >  >() },
    { "p3250r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author642")) >(), wxS("C++ contracts with regards to function pointers") >  >() },
    { "p3251r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1906")) >(), wxS("C++ Contracts and Coroutines") >  >() },
    { "p3253r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Distinguishing between member and free coroutines") >  >() },
    { "p3254r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Reserve identifiers preceded by `@` for non-ignorableannotation tokens") >  >() },
    { "p3255r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Expose whether atomic notifying operations are lockfree") >  >() },
    { "p3255r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Expose whether atomic notifying operations are lockfree") >  >() },
    { "p3257r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1691")) >(), wxS("Make the predicate of <TT>contract_assert</TT> more regular") >  >() },
    { "p3258r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title402") >  >() },
    { "p3259r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2187")) >(), wxS("const by default - HackMD") >  >() },
    { "p3261r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title114") >  >() },
    { "p3261r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title606") >  >() },
    { "p3261r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1580") >  >() },
    { "p3263r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tiago Freire")) >(), wxS("P3263R0 - Encoding annotated char") >  >() },
    { "p3264r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author701")) >(), wxS("Double-evaluation of preconditions") >  >() },
    { "p3264r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author953")) >(), wxS("Double-evaluation of preconditions") >  >() },
    { "p3265r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1392")) >(), wxS("Ship Contracts in a TS") >  >() },
    { "p3265r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author124")) >(), wxS("Ship Contracts in a TS") >  >() },
    { "p3265r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author491")) >(), wxS("Ship Contracts in a TS") >  >() },
    { "p3265r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Author645")) >(), wxS("Ship Contracts in a TS") >  >() },
    { "p3266r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author817")) >(), wxS("non referenceable types - HackMD") >  >() },
    { "p3267r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author477")) >(), wxS("C++ contracts implementation strategies") >  >() },
    { "p3267r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author964")) >(), wxS("C++ contracts implementation strategies") >  >() },
    { "p3268r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1867")) >(), wxS("C++ Contracts Constification Challenges Concerning Current Code") >  >() },
    { "p3269r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author228")) >(), wxS("Do Not Ship Contracts as a TS") >  >() },
    { "p3270r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1036") >  >() },
    { "p3271r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title60") >  >() },
    { "p3271r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lisa Lippincott")) >(), wxS("Title1284") >  >() },
    { "p3273r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Introspection of Closure Types") >  >() },
    { "p3274r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1692")) >(), wxS("Title1313") >  >() },
    { "p3275r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Replace simd operator[] with getter and setter functions or not [P3275R0]") >  >() },
    { "p3276r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title59") >  >() },
    { "p3278r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nina Ranns")) >(), wxS("P3278R0") >  >() },
    { "p3279r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("CWG2463: What \"trivially fooable\" should mean") >  >() },
    { "p3281r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author545")) >(), wxS("Contract Checks Should be Regular C++") >  >() },
    { "p3282r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Detlef Vollmann")) >(), wxS("Static Storage for C++ Concurrent <tt>bounded_queue</tt>") >  >() },
    { "p3283r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1824")) >(), wxS("P3283. Adding .first() and .last() to strings") >  >() },
    { "p3284r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("`finally`, `write_env`, and `unstoppable` SenderAdaptors") >  >() },
    { "p3284r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("`finally`, `write_env`, and `unstoppable` SenderAdaptors") >  >() },
    { "p3284r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("`write_env` and `unstoppable` Sender Adaptors") >  >() },
    { "p3284r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("`write_env` and `unstoppable` Sender Adaptors") >  >() },
    { "p3285r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title108") >  >() },
    { "p3286r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Module Metadata Distributed With Pre-Built Libraries") >  >() },
    { "p3287r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Exploration of namespaces for std::simd [P3287R0]") >  >() },
    { "p3287r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Exploration of namespaces for std::simd [P3287R1]") >  >() },
    { "p3287r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Exploration of namespaces for std::simd [P3287R2]") >  >() },
    { "p3287r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Exploration of namespaces for std::simd [P3287R3]") >  >() },
    { "p3288r0" , RevList< Rev< 0u, Arr64< Hash(wxS("TPK Healy")) >(), wxS("std::elide") >  >() },
    { "p3288r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Thomas PK")) >(), wxS("std::elide") >  >() },
    { "p3288r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Thomas PK")) >(), wxS("std::elide") >  >() },
    { "p3288r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Thomas PK")) >(), wxS("std::elide") >  >() },
    { "p3289r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("consteval blocks") >  >() },
    { "p3289r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("consteval blocks") >  >() },
    { "p3290r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title192") >  >() },
    { "p3290r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1334") >  >() },
    { "p3290r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1072") >  >() },
    { "p3292r0" , RevList< Rev< 0u, Arr64< Hash(wxS("David Goldblatt")) >(), wxS("P3292R0R0: Provenance and Concurrency") >  >() },
    { "p3293r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Peter Dimov")) >(), wxS("Splicing a base class subobject") >  >() },
    { "p3293r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Peter Dimov")) >(), wxS("Splicing a base class subobject") >  >() },
    { "p3294r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrei Alexandrescu")) >(), wxS("Code Injection with Token Sequences") >  >() },
    { "p3294r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Andrei Alexandrescu")) >(), wxS("Code Injection with Token Sequences") >  >() },
    { "p3294r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Andrei Alexandrescu")) >(), wxS("Code Injection with Token Sequences") >  >() },
    { "p3295r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding constexpr containers and constexpr exception types") >  >() },
    { "p3295r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding constexpr containers and constexpr exception types") >  >() },
    { "p3295r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding constexpr containers and constexpr exception types") >  >() },
    { "p3295r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Freestanding constexpr containers and constexpr exception types") >  >() },
    { "p3296r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Anthony Williams")) >(), wxS("let_async_scope.html") >  >() },
    { "p3296r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Anthony Williams")) >(), wxS("let_async_scope.html") >  >() },
    { "p3296r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Anthony Williams")) >(), wxS("let_async_scope.html") >  >() },
    { "p3296r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Anthony Williams")) >(), wxS("let_async_scope.html") >  >() },
    { "p3296r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Anthony Williams")) >(), wxS("let_async_scope.html") >  >() },
    { "p3297r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1236")) >(), wxS("C++26 Needs Contract Checking") >  >() },
    { "p3297r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1481")) >(), wxS("C++26 Needs Contract Checking") >  >() },
    { "p3298r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Implicit user-defined conversion functions as operator.()") >  >() },
    { "p3298r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Implicit user-defined conversion functions as operator.()") >  >() },
    { "p3299r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend <code>std::simd</code> with range constructors") >  >() },
    { "p3299r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend <code>std::simd</code> with range constructors") >  >() },
    { "p3299r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend <code>std::simd</code> with range constructors") >  >() },
    { "p3299r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Proposal to extend std::simd with range constructors") >  >() },
    { "p3300r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bryce Adelstein")) >(), wxS("C++ Asynchronous Parallel Algorithms") >  >() },
    { "p3301r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("inplace_stoppable_base") >  >() },
    { "p3302r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("SG16: Unicode meeting summaries 2024-03-13 through 2024-05-08") >  >() },
    { "p3303r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Fixing Lazy Sender Algorithm Customization") >  >() },
    { "p3303r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("Fixing Lazy Sender Algorithm Customization") >  >() },
    { "p3304r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG14 2024/02/15 P3304R0.docx") >  >() },
    { "p3305r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG19 2024/05/22 P3305R0.docx") >  >() },
    { "p3306r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2049")) >(), wxS("Atomic Read-Modify-Write Improvements") >  >() },
    { "p3307r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1871")) >(), wxS("Floating-Point Maximum/Minimum Function Objects") >  >() },
    { "p3308r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("mdarray design questions and answers") >  >() },
    { "p3309r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr atomic<T> and atomic_ref<T>") >  >() },
    { "p3309r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr atomic<T> and atomic_ref<T>") >  >() },
    { "p3309r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr atomic<T> and atomic_ref<T>") >  >() },
    { "p3309r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("atomic<T> and atomic_ref<T>") >  >() },
    { "p3310r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Solving partial ordering issues introduced by P0522R0") >  >() },
    { "p3310r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Solving partial ordering issues introduced by P0522R0") >  >() },
    { "p3310r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Solving partial ordering issues introduced by P0522R0") >  >() },
    { "p3310r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Solving partial ordering issues introduced by P0522R0") >  >() },
    { "p3310r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Solving issues introduced by P0522R0") >  >() },
    { "p3310r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Solving issues introduced by relaxed template templateparameter matching") >  >() },
    { "p3311r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("An opt-in approach for integration of traditional assert facilities in C++ contracts") >  >() },
    { "p3312r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Overload Set Types") >  >() },
    { "p3312r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("Overload Set Types") >  >() },
    { "p3313r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Khalil Estell")) >(), wxS("Impacts of noexept on ARM table based exception metadata") >  >() },
    { "p3314r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-07 Library Evolution Polls") >  >() },
    { "p3315r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-07 Library Evolution Poll Outcomes") >  >() },
    { "p3316r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonas Persson")) >(), wxS("A more predictable unchecked semantic") >  >() },
    { "p3317r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonas Persson")) >(), wxS("Compile time resolved contracts") >  >() },
    { "p3318r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author529")) >(), wxS("Throwing violation handlers, from an application programming perspective") >  >() },
    { "p3319r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Add an iota object for simd (and more) [P3319R0]") >  >() },
    { "p3319r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Add an iota object for simd (and more) [P3319R1]") >  >() },
    { "p3319r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Add an iota object for simd (and more) [P3319R2]") >  >() },
    { "p3319r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Add an iota object for simd (and more) [P3319R3]") >  >() },
    { "p3319r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Add an iota object for simd (and more) [P3319R4]") >  >() },
    { "p3319r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Add an iota object for simd (and more) [P3319R5]") >  >() },
    { "p3320r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1444")) >(), wxS("DeleteIfIncomplete") >  >() },
    { "p3321r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title89") >  >() },
    { "p3323r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("cv-qualified types in atomic and atomic_ref") >  >() },
    { "p3323r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Gonzalo Brito")) >(), wxS("cv-qualified types in atomic and atomic_ref") >  >() },
    { "p3324r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tom Honermann")) >(), wxS("Attributes for namespace aliases, template parameters, and lambda captures") >  >() },
    { "p3325r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("A Utility for Creating Execution Environments") >  >() },
    { "p3325r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("A Utility for Creating Execution Environments") >  >() },
    { "p3325r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("A Utility for Creating Execution Environments") >  >() },
    { "p3325r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("A Utility for Creating Execution Environments") >  >() },
    { "p3325r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("A Utility for Creating Execution Environments") >  >() },
    { "p3325r5" , RevList< Rev< 5u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("A Utility for Creating Execution Environments") >  >() },
    { "p3326r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1684")) >(), wxS("favor ease of use - HackMD") >  >() },
    { "p3327r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1073")) >(), wxS("Title864") >  >() },
    { "p3328r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title756") >  >() },
    { "p3329r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Audience")) >(), wxS("P3329R0 Healing the Filter View") >  >() },
    { "p3330r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author222")) >(), wxS("User-defined Atomic Read-Modify-Write Operations") >  >() },
    { "p3331r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author819")) >(), wxS("Title652") >  >() },
    { "p3331r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1358")) >(), wxS("Title1054") >  >() },
    { "p3332r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1923")) >(), wxS("Title1487") >  >() },
    { "p3334r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Coral Kashri")) >(), wxS("Cross Static Variables") >  >() },
    { "p3335r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Core Options") >  >() },
    { "p3335r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Core Options") >  >() },
    { "p3335r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Core Options") >  >() },
    { "p3335r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("Structured Core Options") >  >() },
    { "p3335r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("WITHDRAWN: Structured Core Options") >  >() },
    { "p3336r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title992") >  >() },
    { "p3338r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author516")) >(), wxS("Observe and ignore semantics in constant evaluation") >  >() },
    { "p3339r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("C++ Ecosystem IS Open License") >  >() },
    { "p3339r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("WITHDRAWN: C++ Ecosystem IS Open License") >  >() },
    { "p3340r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("A Consistent Grammar for Sequences") >  >() },
    { "p3341r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1657")) >(), wxS("C++ Standard Library Issues to be moved in St. Louis") >  >() },
    { "p3342r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1063")) >(), wxS("C++ Ecosystem Working Draft") >  >() },
    { "p3342r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author812")) >(), wxS("C++ Ecosystem Working Draft") >  >() },
    { "p3342r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Ren\u00E9 Ferdinand")) >(), wxS("WITHDRAWN: Working Draft, Standard for C++ Ecosystem") >  >() },
    { "p3343r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1909")) >(), wxS("Contracts: What we are doing here - P3343R0") >  >() },
    { "p3344r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1879")) >(), wxS("Contracts on Virtual Functions - P3343R0 - Presentation on P3097R0") >  >() },
    { "p3345r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1721")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p3346r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nat Goodspeed")) >(), wxS("threadlocalmeansfiber-specific") >  >() },
    { "p3347r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Paul E")) >(), wxS("P3347R0 Pointer lifetime-end zap proposed solutions: Tighten IDB for invalid and prospective pointers") >  >() },
    { "p3347r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Paul E")) >(), wxS("P3347R1 Pointer lifetime-end zap proposed solutions: Tighten IDB for invalid and prospective pointers") >  >() },
    { "p3348r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("C++26 should refer to C23 not C17") >  >() },
    { "p3348r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Title884") >  >() },
    { "p3348r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Title64") >  >() },
    { "p3348r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Jonathan Wakely")) >(), wxS("Title1127") >  >() },
    { "p3349r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author277")) >(), wxS("Converting contiguous iterators to pointers") >  >() },
    { "p3349r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author197")) >(), wxS("Converting contiguous iterators to pointers") >  >() },
    { "p3351r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("views::scan") >  >() },
    { "p3351r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("views::scan") >  >() },
    { "p3351r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("views::scan") >  >() },
    { "p3352r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("P3352R0 Taming the Demons (C++ version) Undefined Behavior and Partial Program Correctness") >  >() },
    { "p3354r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1226")) >(), wxS("Issues with P2786 (\"Trivial Relocatability For C++26\")") >  >() },
    { "p3355r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix submdspan for C++26") >  >() },
    { "p3355r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix submdspan for C++26") >  >() },
    { "p3355r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix submdspan for C++26") >  >() },
    { "p3356r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1163")) >(), wxS("non_invalidating_vector - HackMD") >  >() },
    { "p3357r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas PK")) >(), wxS("NRVO with factory and after_factory") >  >() },
    { "p3358r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sy Brand")) >(), wxS("SARIF for Structured Diagnostics") >  >() },
    { "p3359r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author293")) >(), wxS("P2667R0++") >  >() },
    { "p3360r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1151")) >(), wxS("P2667R0++") >  >() },
    { "p3361r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1844")) >(), wxS("contracts.dvi") >  >() },
    { "p3361r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1020")) >(), wxS("contracts.dvi") >  >() },
    { "p3362r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author94")) >(), wxS("Static analysis and 'safety' of Contracts, P2900 vs. P2680/P3285") >  >() },
    { "p3364r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated u8path overloads From C++26") >  >() },
    { "p3365r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove the Deprecated Class Template from C++26") >  >() },
    { "p3365r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove the Deprecated Class Template from C++26") >  >() },
    { "p3366r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Initialization API from C++26") >  >() },
    { "p3366r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Remove Deprecated Atomic Initialization API from C++26") >  >() },
    { "p3367r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr coroutines") >  >() },
    { "p3367r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr coroutines") >  >() },
    { "p3367r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr coroutines") >  >() },
    { "p3367r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr coroutines") >  >() },
    { "p3367r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr coroutines") >  >() },
    { "p3369r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("constexpr for uninitialized_default_construct") >  >() },
    { "p3370r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1475")) >(), wxS("Add new library headers from C23") >  >() },
    { "p3370r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1018")) >(), wxS("Add new library headers from C23") >  >() },
    { "p3371r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by making the symmetric and Hermitian rank-k and rank-2k updates consistent with the BLAS") >  >() },
    { "p3371r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS") >  >() },
    { "p3371r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS") >  >() },
    { "p3371r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS") >  >() },
    { "p3371r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Fix C++26 by making the rank-1, rank-2, rank-k, and rank-2k updates consistent with the BLAS") >  >() },
    { "p3372r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr containers") >  >() },
    { "p3372r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr containers") >  >() },
    { "p3372r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr containers") >  >() },
    { "p3372r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr containers") >  >() },
    { "p3373r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Paper") >  >() },
    { "p3373r1" , RevList< Rev< 1u, Arr64< Hash(wxS("1")) >(), wxS("Paper R1") >  >() },
    { "p3374r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Liang Jiaming")) >(), wxS("Adding formatter for fpos<mbstate_t>") >  >() },
    { "p3374r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Liang Jiaming")) >(), wxS("Adding formatter for fpos<mbstate_t>") >  >() },
    { "p3375r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("Reproducible floating-point results") >  >() },
    { "p3375r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("Reproducible floating-point results") >  >() },
    { "p3375r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Guy Davidson")) >(), wxS("Reproducible floating-point results") >  >() },
    { "p3376r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Contract assertions versus static analysis and 'safety'") >  >() },
    { "p3378r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr exception types") >  >() },
    { "p3378r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr exception types") >  >() },
    { "p3378r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr exception types") >  >() },
    { "p3379r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author684")) >(), wxS("Constrain std::expected equality operators") >  >() },
    { "p3380r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Extending support for class types as non-type templateparameters") >  >() },
    { "p3380r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Extending support for class types as non-type templateparameters") >  >() },
    { "p3381r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Syntax for Reflection") >  >() },
    { "p3382r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1866")) >(), wxS("Coarse clocks and resolutions") >  >() },
    { "p3383r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Stephan Lachnit")) >(), wxS("mdspan.at()") >  >() },
    { "p3383r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Stephan Lachnit")) >(), wxS("mdspan.at()") >  >() },
    { "p3383r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Stephan Lachnit")) >(), wxS("mdspan.at()") >  >() },
    { "p3384r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeremy Rifkin")) >(), wxS("__COUNTER__") >  >() },
    { "p3385r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Aurelien Cassagnes")) >(), wxS("Attributes reflection") >  >() },
    { "p3385r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Aurelien Cassagnes")) >(), wxS("Attributes reflection") >  >() },
    { "p3385r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Aurelien Cassagnes")) >(), wxS("Attributes reflection") >  >() },
    { "p3385r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Aurelien Cassagnes")) >(), wxS("Attributes reflection") >  >() },
    { "p3385r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Aurelien Cassagnes")) >(), wxS("Attributes reflection") >  >() },
    { "p3386r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title708") >  >() },
    { "p3386r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1193") >  >() },
    { "p3387r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author174")) >(), wxS("Title148") >  >() },
    { "p3388r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Robert Leahy")) >(), wxS("Paper") >  >() },
    { "p3388r1" , RevList< Rev< 1u, Arr64< Hash(wxS("1 Authors")) >(), wxS("Paper R1") >  >() },
    { "p3388r2" , RevList< Rev< 2u, Arr64< Hash(wxS("1")) >(), wxS("Paper R2") >  >() },
    { "p3389r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author750")) >(), wxS("Slides") >  >() },
    { "p3390r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sean Baxter")) >(), wxS("Safe C++") >  >() },
    { "p3391r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("constexpr std::format") >  >() },
    { "p3391r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("constexpr std::format") >  >() },
    { "p3392r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Do not promise support for function syntax of operators") >  >() },
    { "p3394r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Annotations for Reflection") >  >() },
    { "p3394r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Annotations for Reflection") >  >() },
    { "p3394r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("Annotations for Reflection") >  >() },
    { "p3395r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Formatting of std::error_code") >  >() },
    { "p3395r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix encoding issues and add a formatter for std::error_code") >  >() },
    { "p3395r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix encoding issues and add a formatter for std::error_code") >  >() },
    { "p3395r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix encoding issues and add a formatter for std::error_code") >  >() },
    { "p3396r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2183")) >(), wxS("Title1678") >  >() },
    { "p3396r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1731")) >(), wxS("Title1337") >  >() },
    { "p3397r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2007")) >(), wxS("Clarify requirements on extended floating point types") >  >() },
    { "p3398r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("User specified type decay") >  >() },
    { "p3399r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("Title1090") >  >() },
    { "p3400r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title628") >  >() },
    { "p3400r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title210") >  >() },
    { "p3401r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tian Liao")) >(), wxS("Title69") >  >() },
    { "p3402r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Marc-Andr\u00E9 Laverdi\u00E8re")) >(), wxS("A Safety Profile Verifying Class Initialization") >  >() },
    { "p3402r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Marc-Andr\u00E9 Laverdi\u00E8re")) >(), wxS("A Safety Profile Verifying Class Initialization") >  >() },
    { "p3402r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Marc-Andr\u00E9 Laverdi\u00E8re")) >(), wxS("A Safety Profile Verifying Initialization") >  >() },
    { "p3403r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andrew Tomazos")) >(), wxS("The Undefined Behavior Question") >  >() },
    { "p3404r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andre Kostur")) >(), wxS("std::at : Range-checked accesses to arbitrary containers") >  >() },
    { "p3405r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Elias Kosunen")) >(), wxS("Out-of-order designated initializers") >  >() },
    { "p3406r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author861")) >(), wxS("Title686") >  >() },
    { "p3407r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Make idiomatic usage of `offsetof` well-defined") >  >() },
    { "p3407r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Make idiomatic usage of `offsetof` well-defined") >  >() },
    { "p3409r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1795")) >(), wxS("Enabling more efficient stop-token based cancellation of senders") >  >() },
    { "p3409r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1452")) >(), wxS("Enabling more efficient stop-token based cancellation of senders") >  >() },
    { "p3411r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`any_view`") >  >() },
    { "p3411r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("`any_view`") >  >() },
    { "p3412r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("String interpolation") >  >() },
    { "p3412r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Bengt Gustafsson")) >(), wxS("String interpolation") >  >() },
    { "p3413r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1596") >  >() },
    { "p3415r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Range interface in std::optional breaks code!") >  >() },
    { "p3416r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author561")) >(), wxS("exception_ptr_cast: Add && = delete overload") >  >() },
    { "p3417r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2014")) >(), wxS("Improve the handling of exceptions thrown from contract predicates") >  >() },
    { "p3417r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author354")) >(), wxS("Improve the handling of exceptions thrown from contract predicates") >  >() },
    { "p3419r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Levine")) >(), wxS("Reflection Syntax Options Summary") >  >() },
    { "p3420r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Reflection of Templates") >  >() },
    { "p3420r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Reflection of Templates") >  >() },
    { "p3421r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ben Craig")) >(), wxS("Consteval destructors") >  >() },
    { "p3422r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Allow main function in named modules") >  >() },
    { "p3422r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Chuanqi Xu")) >(), wxS("Allow main function in named modules") >  >() },
    { "p3423r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("Extending User-Generated Diagnostic Messages") >  >() },
    { "p3423r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Yihe Li")) >(), wxS("Extending User-Generated Diagnostic Messages") >  >() },
    { "p3424r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Define Delete With Throwing Exception Specification") >  >() },
    { "p3425r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1985")) >(), wxS("Reducing operation-state sizes for subobject child operations") >  >() },
    { "p3425r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1494")) >(), wxS("D3425R1: Reducing operation-state sizes for subobject child operations") >  >() },
    { "p3427r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointer Synchronous Reclamation") >  >() },
    { "p3427r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointer Synchronous Reclamation") >  >() },
    { "p3428r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointer Batches") >  >() },
    { "p3428r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Maged M")) >(), wxS("Hazard Pointer Batches") >  >() },
    { "p3429r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("<meta> should minimize standard librarydependencies") >  >() },
    { "p3429r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("<meta> should minimize standard librarydependencies") >  >() },
    { "p3430r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R0]") >  >() },
    { "p3430r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R1]") >  >() },
    { "p3430r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R2]") >  >() },
    { "p3430r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("simd issues: explicit, unsequenced, identity-element position, and members of disabled simd [P3430R3]") >  >() },
    { "p3431r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("Deprecate `const`-qualifier on begin/end of views") >  >() },
    { "p3433r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Allocator Support for Operation States") >  >() },
    { "p3435r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jean-Baptiste VALLON")) >(), wxS("Reflection and meta-programming") >  >() },
    { "p3436r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title837") >  >() },
    { "p3436r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1319") >  >() },
    { "p3437r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title770") >  >() },
    { "p3437r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title246") >  >() },
    { "p3438r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Andreas Fertig")) >(), wxS("Make integral overloads of std::to_string constexpr") >  >() },
    { "p3439r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1611") >  >() },
    { "p3439r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title109") >  >() },
    { "p3440r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Add n_elements named constructor to std::simd") >  >() },
    { "p3441r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Rename <code>simd_split</code> to <code>simd_chunk</code>") >  >() },
    { "p3441r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Rename <code>simd_split</code> to <code>simd_chunk</code>") >  >() },
    { "p3441r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Rename <code>simd_split</code> to <code>simd_chunk</code>") >  >() },
    { "p3442r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author796")) >(), wxS("Title643") >  >() },
    { "p3442r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author738")) >(), wxS("Title595") >  >() },
    { "p3443r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Ran Regev")) >(), wxS("P3443R0 - Reflection on SG21s 2024 Process") >  >() },
    { "p3444r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Sean Baxter")) >(), wxS("Memory Safety without Lifetime Parameters") >  >() },
    { "p3445r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Towner")) >(), wxS("Add utilities for easier type/bit casting in std::simd") >  >() },
    { "p3446r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1497")) >(), wxS("Title1164") >  >() },
    { "p3447r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author335")) >(), wxS("Title284") >  >() },
    { "p3449r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr std::generator") >  >() },
    { "p3449r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr generator") >  >() },
    { "p3450r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Extend std::is_within_lifetime") >  >() },
    { "p3451r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("A Suggestion for Reflection Access Control") >  >() },
    { "p3454r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("Revising Atomic Max/Min Operations") >  >() },
    { "p3455r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG14 2024/05/22 P3455R0.docx") >  >() },
    { "p3456r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1968")) >(), wxS("system_scheduler on Win32, Darwin and Linux") >  >() },
    { "p3457r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG19 2024/10/15 P3457R0.docx") >  >() },
    { "p3460r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author658")) >(), wxS("Implementors Notes") >  >() },
    { "p3465r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title874") >  >() },
    { "p3466r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title1518") >  >() },
    { "p3466r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Herb Sutter")) >(), wxS("Title751") >  >() },
    { "p3467r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("P3467R0R0: 2024-10 Library Evolution Polls") >  >() },
    { "p3468r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Inbal Levi")) >(), wxS("2024-10 Library Evolution Poll Outcomes") >  >() },
    { "p3469r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mike Spertus")) >(), wxS("Virtual deducing") >  >() },
    { "p3470r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daniel Ruoso")) >(), wxS("Interface-Unit-Only Module Library Support") >  >() },
    { "p3471r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Konstantin Varlamov")) >(), wxS("Standard library hardening") >  >() },
    { "p3471r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Konstantin Varlamov")) >(), wxS("Standard library hardening") >  >() },
    { "p3471r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Konstantin Varlamov")) >(), wxS("Standard library hardening") >  >() },
    { "p3471r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Konstantin Varlamov")) >(), wxS("Standard library hardening") >  >() },
    { "p3471r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Konstantin Varlamov")) >(), wxS("Standard library hardening") >  >() },
    { "p3472r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Make fiber_context::can_resume() const") >  >() },
    { "p3472r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Make fiber_context::can_resume() const") >  >() },
    { "p3473r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("Splicing Should Respect Access Control") >  >() },
    { "p3474r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeremy Rifkin")) >(), wxS("std::arguments") >  >() },
    { "p3475r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2038")) >(), wxS("Defang and deprecate memory_order::consume") >  >() },
    { "p3475r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1081")) >(), wxS("Defang and deprecate memory_order::consume") >  >() },
    { "p3475r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1000")) >(), wxS("Defang and deprecate memory_order::consume") >  >() },
    { "p3476r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author163")) >(), wxS("p2688r2") >  >() },
    { "p3477r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("There are exactly 8 bits in a byte") >  >() },
    { "p3477r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("There are exactly 8 bits in a byte") >  >() },
    { "p3477r2" , RevList< Rev< 2u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("There are exactly 8 bits in a byte") >  >() },
    { "p3477r3" , RevList< Rev< 3u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("There are exactly 8 bits in a byte") >  >() },
    { "p3477r4" , RevList< Rev< 4u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("There are exactly 8 bits in a byte") >  >() },
    { "p3477r5" , RevList< Rev< 5u, Arr64< Hash(wxS("JF Bastien")) >(), wxS("There are exactly 8 bits in a byte") >  >() },
    { "p3478r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1860")) >(), wxS("p3478r0") >  >() },
    { "p3479r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Cranmer")) >(), wxS("Enabling C pragma support in C++") >  >() },
    { "p3480r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd is a range [P3480R0]") >  >() },
    { "p3480r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd is a range [P3480R1]") >  >() },
    { "p3480r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd is a range [P3480R2]") >  >() },
    { "p3480r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd is a range [P3480R3]") >  >() },
    { "p3480r4" , RevList< Rev< 4u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("std::simd is a range [P3480R4]") >  >() },
    { "p3481r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1907")) >(), wxS("Title1471") >  >() },
    { "p3481r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("std::execution::bulk() issues") >  >() },
    { "p3481r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("std::execution::bulk() issues") >  >() },
    { "p3481r3" , RevList< Rev< 3u, Arr64< Hash(wxS("Lucian Radu")) >(), wxS("std::execution::bulk() issues") >  >() },
    { "p3482r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("Design for C++ networking based on IETF TAPS") >  >() },
    { "p3482r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Thomas Rodgers")) >(), wxS("Design for C++ networking based on IETF TAPS") >  >() },
    { "p3483r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1213")) >(), wxS("Title951") >  >() },
    { "p3483r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2231")) >(), wxS("Title1707") >  >() },
    { "p3484r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1384")) >(), wxS("Title1076") >  >() },
    { "p3484r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author865")) >(), wxS("Title691") >  >() },
    { "p3484r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author870")) >(), wxS("Title695") >  >() },
    { "p3485r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Grouping using declarations with braces") >  >() },
    { "p3487r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1786")) >(), wxS("Title1386") >  >() },
    { "p3488r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Floating-Point Excess Precision [P3488R0]") >  >() },
    { "p3488r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matthias Kretz")) >(), wxS("Floating-Point Excess Precision [P3488R1]") >  >() },
    { "p3489r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1895")) >(), wxS("Title1465") >  >() },
    { "p3490r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alexey Kukanov")) >(), wxS("Justification for ranges as the output of parallel rangealgorithms") >  >() },
    { "p3491r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("define_static_{string,object,array}") >  >() },
    { "p3491r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("define_static_{string,object,array}") >  >() },
    { "p3491r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Wyatt Childers")) >(), wxS("define_static_{string,object,array}") >  >() },
    { "p3492r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("Sized deallocation for placement new") >  >() },
    { "p3492r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("Sized deallocation for placement new") >  >() },
    { "p3492r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("Sized deallocation for placement new") >  >() },
    { "p3493r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1414")) >(), wxS("Ruminations on reflection and access") >  >() },
    { "p3495r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1147")) >(), wxS("Title912") >  >() },
    { "p3496r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Immediate-Escalating Expressions") >  >() },
    { "p3497r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Wilmans")) >(), wxS("Title1394") >  >() },
    { "p3498r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title335") >  >() },
    { "p3499r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1573")) >(), wxS("Title1220") >  >() },
    { "p3499r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author338")) >(), wxS("Title285") >  >() },
    { "p3500r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author105")) >(), wxS("P3500 v2") >  >() },
    { "p3500r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author241")) >(), wxS("P3500 Are Contracts \"safe\"?") >  >() },
    { "p3501r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2031")) >(), wxS("The ad-dressing of cats") >  >() },
    { "p3502r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author488")) >(), wxS("p3502r0") >  >() },
    { "p3503r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nicolas Morales")) >(), wxS("Make type-erased allocator use in promise and packaged_taskconsistent") >  >() },
    { "p3503r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nicolas Morales")) >(), wxS("Make type-erased allocator use in `promise` and `packaged_task`consistent") >  >() },
    { "p3503r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Nicolas Morales")) >(), wxS("Make type-erased allocator use in `promise` and `packaged_task`consistent") >  >() },
    { "p3504r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author172")) >(), wxS("C++ Standard Library Issues to be moved in Wrocaw, Nov. 2024") >  >() },
    { "p3505r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Victor Zverovich")) >(), wxS("Fix the default floating-point representation in std::format") >  >() },
    { "p3506r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title583") >  >() },
    { "p3508r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Giuseppe D'Angelo")) >(), wxS("Wording for \"constexpr for specialized memory algorithms\"") >  >() },
    { "p3510r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Leftover properties of `this` in constructorpreconditions") >  >() },
    { "p3510r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Leftover properties of `this` in constructorpreconditions") >  >() },
    { "p3510r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Nathan Myers")) >(), wxS("Leftover properties of `this` in constructorpreconditions") >  >() },
    { "p3514r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Steve Downey")) >(), wxS("\"RFC 3514: The Security Flag\" for C++") >  >() },
    { "p3516r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Uninitialized algorithms for relocation") >  >() },
    { "p3516r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Louis Dionne")) >(), wxS("Uninitialized algorithms for relocation") >  >() },
    { "p3517r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1368")) >(), wxS("P3517R0") >  >() },
    { "p3518r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1479")) >(), wxS("constexpr type ordering (P2830R4)") >  >() },
    { "p3519r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1343")) >(), wxS("P3425 Reducing operation-state sizes for sub-object child operations") >  >() },
    { "p3520r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1353")) >(), wxS("Title1047") >  >() },
    { "p3521r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Park")) >(), wxS("Pattern Matching: Customization Point for Open SumTypes") >  >() },
    { "p3524r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author774")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p3525r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Explicit Implicit Template Regions") >  >() },
    { "p3526r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1096")) >(), wxS("Container truncation") >  >() },
    { "p3527r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Park")) >(), wxS("Pattern Matching: *variant-like* and `std::expected`") >  >() },
    { "p3527r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Michael Park")) >(), wxS("Pattern Matching: *variant-like* and `std::expected`") >  >() },
    { "p3530r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Boleyn Su")) >(), wxS("Intrinsic for reading uninitialized memory") >  >() },
    { "p3533r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr virtual inheritance") >  >() },
    { "p3533r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr virtual inheritance") >  >() },
    { "p3533r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Hana Dusikova")) >(), wxS("constexpr virtual inheritance") >  >() },
    { "p3534r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Avoid UB When Compiling Code That Violates Library Specification") >  >() },
    { "p3537r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2191")) >(), wxS("Concurrent Queues API - P0260R13") >  >() },
    { "p3537r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1237")) >(), wxS("Concurrent Queues API - P0260R15 / P3537R1") >  >() },
    { "p3539r1" , RevList< Rev< 1u, Arr64< Hash(wxS("PaweB Benetkiewicz")) >(), wxS("Consistent Function Label Naming for Sections") >  >() },
    { "p3540r0" , RevList< Rev< 0u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed offset parameter") >  >() },
    { "p3540r1" , RevList< Rev< 1u, Arr64< Hash(wxS("JeanHeyd Meneide")) >(), wxS("#embed offset parameter") >  >() },
    { "p3541r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Violation handlers vs `noexcept`") >  >() },
    { "p3541r1" , RevList< Rev< 1u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Violation handlers vs `noexcept`") >  >() },
    { "p3542r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1356")) >(), wxS("Abolish the term \"converting constructor\"") >  >() },
    { "p3543r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mungo Gill")) >(), wxS("Response to Core Safety Profiles (P3081)") >  >() },
    { "p3544r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author436")) >(), wxS("<code>ranges::to<view></code>") >  >() },
    { "p3546r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1306")) >(), wxS("Title1010") >  >() },
    { "p3547r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dan Katz")) >(), wxS("Modeling Access Control With Reflection") >  >() },
    { "p3547r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Dan Katz")) >(), wxS("Modeling Access Control With Reflection") >  >() },
    { "p3548r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Niall Douglas")) >(), wxS("Title876") >  >() },
    { "p3549r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bruno Cardoso")) >(), wxS("Diverging Expressions") >  >() },
    { "p3550r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Imports cannot &") >  >() },
    { "p3552r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Add a Coroutine Lazy Type") >  >() },
    { "p3552r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Dietmar Khl")) >(), wxS("Add a Coroutine Task Type") >  >() },
    { "p3554r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Non-transient allocation with std::vector andstd::basic_string") >  >() },
    { "p3555r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonathan M\u00FCller")) >(), wxS("An infinite range concept") >  >() },
    { "p3556r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("Input Files Are Source Files") >  >() },
    { "p3557r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("High-Quality Sender Diagnostics with ConstexprExceptions") >  >() },
    { "p3557r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Eric Niebler")) >(), wxS("High-Quality Sender Diagnostics with ConstexprExceptions") >  >() },
    { "p3558r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1213") >  >() },
    { "p3558r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title217") >  >() },
    { "p3559r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("is_trivially_relocatable: One trait or two?") >  >() },
    { "p3560r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Peter Dimov")) >(), wxS("Error Handling in Reflection") >  >() },
    { "p3561r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author622")) >(), wxS("coproducts.dvi") >  >() },
    { "p3561r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2200")) >(), wxS("coproducts.dvi") >  >() },
    { "p3561r2" , RevList< Rev< 2u, Arr64< Hash(wxS("Author1198")) >(), wxS("coproducts.dvi") >  >() },
    { "p3564r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Make the concurrent forward progress guarantee usable in bulk") >  >() },
    { "p3565r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2177")) >(), wxS("Virtual floating-point values") >  >() },
    { "p3566r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author256")) >(), wxS("P3566R0 - You shall not pass `char*` - Google Docs") >  >() },
    { "p3567r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Hui Xie")) >(), wxS("flat_meow Fixes") >  >() },
    { "p3568r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("break label; and continue label;") >  >() },
    { "p3568r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("break label; and continue label;") >  >() },
    { "p3569r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Shafik Yaghmour")) >(), wxS("SplitOutDefineAggregate") >  >() },
    { "p3570r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Fabio Fracassi")) >(), wxS("optional variants in sender/receiver") >  >() },
    { "p3572r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bjarne Stroustrup")) >(), wxS("Title1521") >  >() },
    { "p3573r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Hava")) >(), wxS("Title894") >  >() },
    { "p3574r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1724")) >(), wxS("Title1329") >  >() },
    { "p3575r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG14 2025/01/13 P3575R0.docx") >  >() },
    { "p3576r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Wong")) >(), wxS("SG19 2025/1/13 P3576R0.docx") >  >() },
    { "p3577r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1133")) >(), wxS("Title902") >  >() },
    { "p3578r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1525")) >(), wxS("The \"Grandma Safety\" Paper") >  >() },
    { "p3579r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Fix matching of non-type template parameters when matchingtemplate template parameters") >  >() },
    { "p3579r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Matheus Izvekov")) >(), wxS("Fix matching of non-type template parameters when matchingtemplate template parameters") >  >() },
    { "p3580r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1857")) >(), wxS("The Naming of Things") >  >() },
    { "p3581r0" , RevList< Rev< 0u, Arr64< Hash(wxS("1")) >(), wxS("Title1025") >  >() },
    { "p3582r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Observed a contract violation? Skip subsequent assertions!") >  >() },
    { "p3583r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonas Persson")) >(), wxS("Contracts, Types & Functions") >  >() },
    { "p3584r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mingxin Wang")) >(), wxS("Title375") >  >() },
    { "p3585r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Pablo Halpern")) >(), wxS("`allocator_traits::is_internally_relocatable`") >  >() },
    { "p3586r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("The Plethora of Problems With Profiles") >  >() },
    { "p3587r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Lauri Vasama")) >(), wxS("Reconsider reflection access for C++26") >  >() },
    { "p3588r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Brian Bi")) >(), wxS("Allow static data members in local and unnamed classes") >  >() },
    { "p3589r0" , RevList< Rev< 0u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title1579") >  >() },
    { "p3589r1" , RevList< Rev< 1u, Arr64< Hash(wxS("gdr@microsoft.com Audience")) >(), wxS("Title181") >  >() },
    { "p3590r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Daveed Vandevoorde")) >(), wxS("Constexpr Coroutine Burdens") >  >() },
    { "p3591r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title339") >  >() },
    { "p3592r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title1452") >  >() },
    { "p3599r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Joshua Berne")) >(), wxS("Title900") >  >() },
    { "p3603r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Barry Revzin")) >(), wxS("Consteval-only Values and Consteval Variables") >  >() },
    { "p3605r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1131")) >(), wxS("Title901") >  >() },
    { "p3606r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("On Overload Resolution, Exact Matches, and CleverImplementations") >  >() },
    { "p3608r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1980")) >(), wxS("Contracts and profiles: what can we reasonably ship in C++26") >  >() },
    { "p3611r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2180")) >(), wxS("Title1675") >  >() },
    { "p3613r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Tim Song")) >(), wxS("On the beating of horses, and other matters") >  >() },
    { "p3614r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author231")) >(), wxS("Do not remove nor postpone access_context::unchecked") >  >() },
    { "p3615r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1722")) >(), wxS("C++ Standard Library Issues to be moved in Hagenberg, Feb. 2025") >  >() },
    { "p3616r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1759")) >(), wxS("Remove contracts on virtual functions for now") >  >() },
    { "p3618r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Spencer")) >(), wxS("Allow attaching main to the global module") >  >() },
    { "p3619r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2030")) >(), wxS("Counter-examples for P2688R5") >  >() },
    { "p3619r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author246")) >(), wxS("Counter-examples for P2688R5") >  >() },
    { "p3620r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1953")) >(), wxS("Title1516") >  >() },
    { "p3623r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Arthur O'Dwyer")) >(), wxS("Add noexcept to [iterator.range] (LWG 3537)") >  >() },
    { "p3625r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Michael Florian")) >(), wxS("D3625 - either neither") >  >() },
    { "p3626r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author388")) >(), wxS("Title331") >  >() },
    { "p3627r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author125")) >(), wxS("RCE-defense security profiles for existing C++ code") >  >() },
    { "p3628r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("break label; and continue label;, tl; dr") >  >() },
    { "p3630r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("PowerPoint-Prsentation") >  >() },
    { "p3632r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1136")) >(), wxS("Title904") >  >() },
    { "p3632r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author2218")) >(), wxS("Title1698") >  >() },
    { "p3633r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1107")) >(), wxS("A Byte is a Byte") >  >() },
    { "p3635r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Nevin ")) >(), wxS("Title1469") >  >() },
    { "p3636r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author268")) >(), wxS("P3636 No, inplace_vector shouldn't have an Allocator") >  >() },
    { "p3637r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2114")) >(), wxS("Inherit std::meta::exception from std::exception - Google Docs") >  >() },
    { "p3638r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author541")) >(), wxS("Core \"ready\" Issues") >  >() },
    { "p3639r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("The _BitInt Debate") >  >() },
    { "p3640r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jonas Persson")) >(), wxS("Make contracts reliable by default") >  >() },
    { "p3641r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Rename std::observable to std::observable_checkpoint, and add a feature-test macro") >  >() },
    { "p3642r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("Carry-less product: std::clmul") >  >() },
    { "p3643r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jan Schultke")) >(), wxS("std::to_signed and std::to_unsigned") >  >() },
    { "p3650r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bjarne Stroustrup")) >(), wxS("Title1307") >  >() },
    { "p3651r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Bjarne Stroustrup")) >(), wxS("Title697") >  >() },
    { "p3652r0" , RevList< Rev< 0u, Arr64< Hash(wxS("L\u00E9n\u00E1rd Szolnoki")) >(), wxS("Constexpr floating-point <charconv> functions") >  >() },
    { "p3652r1" , RevList< Rev< 1u, Arr64< Hash(wxS("L\u00E9n\u00E1rd Szolnoki")) >(), wxS("Constexpr floating-point <charconv> functions") >  >() },
    { "p3654r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author2111")) >(), wxS("Title1630") >  >() },
    { "p3655r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1418")) >(), wxS("std::zstring_view") >  >() },
    { "p3656r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author1078")) >(), wxS("Title868") >  >() },
    { "p3656r1" , RevList< Rev< 1u, Arr64< Hash(wxS("Author1054")) >(), wxS("Title845") >  >() },
    { "p3657r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Alisdair Meredith")) >(), wxS("A Grammar for Whitespace Characters") >  >() },
    { "p3658r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author376")) >(), wxS("Title318") >  >() },
    { "p3660r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeremy Rifkin")) >(), wxS("Improve reference_wrapper Ergonomics") >  >() },
    { "p3661r0" , RevList< Rev< 0u, Arr64< Hash(wxS("\u00A0\u00A0")) >(), wxS("Attributes, annotations, labels") >  >() },
    { "p3662r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeremy Rifkin")) >(), wxS("Improve Increment and Decrement Operator Syntax") >  >() },
    { "p3663r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Mark Hoemmen")) >(), wxS("Future-proof submdspan_mapping?") >  >() },
    { "p3664r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Zach Laine")) >(), wxS("Make `variant_size` SFINAE friendly") >  >() },
    { "p3665r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Jeremy Rifkin")) >(), wxS("Vertical Text Processing") >  >() },
    { "p3667r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author317")) >(), wxS("Title267") >  >() },
    { "p3668r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Matthew Taylor")) >(), wxS("Defaulting Postfix Increment and Decrement Operations") >  >() },
    { "p3669r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Detlef Vollmann")) >(), wxS("Non-Blocking Support for `std::execution`") >  >() },
    { "p3670r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1489") >  >() },
    { "p3671r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1358") >  >() },
    { "p3672r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Corentin Jabot")) >(), wxS("Title1509") >  >() },
    { "p4000r0" , RevList< Rev< 0u, Arr64< Hash(wxS("Author623")) >(), wxS("TS or not TS") >  >() },
}
